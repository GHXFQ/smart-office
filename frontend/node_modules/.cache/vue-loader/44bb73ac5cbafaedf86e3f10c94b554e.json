{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue?vue&type=style&index=2&id=f042b266&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue","mtime":1748848837702},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5vcGVud2VidWktbWQtdGFibGUgewogIHdpZHRoOiAxMDAlOwogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgbWFyZ2luOiA4cHggMDsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIGZvbnQtc2l6ZTogMTVweDsKfQoub3BlbndlYnVpLW1kLXRhYmxlIHRoLCAub3BlbndlYnVpLW1kLXRhYmxlIHRkIHsKICBib3JkZXI6IDFweCBzb2xpZCAjZDRkN2UxOwogIHBhZGRpbmc6IDZweCAxMnB4OwogIHRleHQtYWxpZ246IGxlZnQ7Cn0KLm9wZW53ZWJ1aS1tZC10YWJsZSB0aCB7CiAgYmFja2dyb3VuZDogI2YwZjJmNTsKICBmb250LXdlaWdodDogNjAwOwp9Cg=="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue"],"names":[],"mappings":";AAg1DA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/dashboard/Index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"openwebui-chat-root\">\n    <div class=\"openwebui-chat-window\">\n      <div class=\"openwebui-chat-header\">\n        <span class=\"openwebui-title\">Open WebUI AI ÂØπËØù</span>\n        <el-button type=\"text\" size=\"small\" @click=\"clearChat\" class=\"clear-chat-btn\">\n          <el-icon><Delete /></el-icon> Êñ∞ÂØπËØù\n        </el-button>\n      </div>\n      \n      <!-- ‰∏ä‰∏ãÊñáÁä∂ÊÄÅÊù° -->\n      <div v-if=\"showContextBar\" class=\"openwebui-context-bar\">\n        <div class=\"context-info\">\n          <el-icon class=\"context-icon\"><Connection /></el-icon>\n          <span>‰∏ä‰∏ãÊñáÂØπËØùÊ®°Âºè (Áî±LangChainÊèê‰æõÊîØÊåÅ)</span>\n        </div>\n        <el-tag size=\"small\" effect=\"plain\" type=\"info\">ID: {{ chatId }}</el-tag>\n      </div>\n      \n      <div class=\"openwebui-chat-body\" ref=\"chatBody\">\n        <div v-for=\"(msg, idx) in messages\" :key=\"idx\" :class=\"['openwebui-msg', msg.role]\">\n          <template v-if=\"msg.role==='assistant'\">\n            <div class=\"openwebui-avatar ai-avatar left-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#2f54eb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">ü§ñ</text></svg>\n            </div>\n          </template>\n          <template v-if=\"msg.role==='user'\">\n            <div class=\"openwebui-avatar user-avatar right-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#bbb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">üßë</text></svg>\n            </div>\n          </template>\n          <div class=\"openwebui-msg-bubble\">\n            <template v-if=\"msg.type === 'text'\">\n              <span v-if=\"msg.role==='user'\">{{ msg.content }}</span>\n              <span v-else v-html=\"msg.content\"></span>\n              <span v-if=\"msg.streaming\" class=\"openwebui-cursor\"></span>\n            </template>\n            <template v-else-if=\"msg.type === 'file'\">\n              <div class=\"file-bubble-nest file-bubble-vertical\">\n                <div v-for=\"file in msg.files\" :key=\"file.name + file.size\" class=\"file-message-card\">\n                  <div class=\"file-icon-area\">\n                    <img v-if=\"file.ext==='csv'\" src=\"https://cdn.jsdelivr.net/gh/file-icons/icons/svg/csv.svg\" class=\"file-icon-img\" />\n                    <el-icon v-else><Document /></el-icon>\n                  </div>\n                  <div class=\"file-info-area\">\n                    <div class=\"file-name\">{{ file.name }}</div>\n                    <div class=\"file-meta\">{{ file.ext.toUpperCase() }} ¬∑ {{ file.size }}</div>\n                  </div>\n                </div>\n                <div class=\"file-desc-text\" v-if=\"msg.content\">{{ msg.content }}</div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div class=\"openwebui-chat-footer\">\n        <!-- È¢ÑËßàÂå∫ÊîæÂú®footerÈ°∂ÈÉ® -->\n        <div v-if=\"selectedFiles.length\" class=\"openwebui-file-preview-bar\">\n          <div v-for=\"(file, idx) in selectedFiles\" :key=\"file.id\" class=\"openwebui-file-card\">\n            <div class=\"openwebui-file-thumb\">\n              <img v-if=\"file.type.startsWith('image/')\" :src=\"file.url\" class=\"openwebui-file-img\" />\n              <div v-else class=\"openwebui-file-icon\" :style=\"{background: file.bg}\">\n                <el-icon v-if=\"file.ext==='pdf'\"><Document /></el-icon>\n                <el-icon v-else-if=\"file.ext==='csv' || file.ext==='xls' || file.ext==='xlsx'\"><Document /></el-icon>\n                <el-icon v-else><Document /></el-icon>\n              </div>\n            </div>\n            <div class=\"openwebui-file-info\">\n              <div class=\"openwebui-file-name\" :title=\"file.name\">{{ file.name }}</div>\n              <div class=\"openwebui-file-meta\">{{ file.label }} ¬∑ {{ file.size }}</div>\n              <!-- Ê∑ªÂä†ËøõÂ∫¶Êù°ÊòæÁ§∫ -->\n              <el-progress \n                v-if=\"file.status !== 'completed'\" \n                :percentage=\"file.progress\" \n                :status=\"file.status === 'failed' ? 'exception' : ''\" \n                :stroke-width=\"4\"\n                class=\"openwebui-file-progress\" />\n              <div v-else class=\"openwebui-file-status completed\">\n                <el-icon><Check /></el-icon> Â§ÑÁêÜÂÆåÊàê\n              </div>\n            </div>\n            <el-icon class=\"openwebui-file-remove\" @click=\"removeFile(idx)\"><Close /></el-icon>\n          </div>\n        </div>\n        <!-- ËæìÂÖ•Âå∫ -->\n        <div class=\"openwebui-input-area\">\n          <input type=\"file\" ref=\"fileInput\" style=\"display:none\" @change=\"handleFileUpload\" multiple />\n          <el-button class=\"openwebui-upload-btn\" @click=\"triggerFileInput\" title=\"‰∏ä‰º†Êñá‰ª∂/ÂõæÁâá\" :disabled=\"loading\">\n            <el-icon><UploadFilled /></el-icon>\n          </el-button>\n          <el-input\n            v-model=\"input\"\n            placeholder=\"ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...\"\n            @keyup.enter=\"sendMsg\"\n            class=\"openwebui-input\"\n            :disabled=\"loading || processingFiles\"\n          />\n          <el-button type=\"primary\" @click=\"sendMsg\" class=\"openwebui-send-btn\" :loading=\"loading\" :disabled=\"processingFiles\">\n            {{ loading ? 'ÁîüÊàê‰∏≠' : (processingFiles ? 'Â§ÑÁêÜ‰∏≠' : 'ÂèëÈÄÅ') }}\n          </el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, computed, onMounted } from 'vue'\nimport { UploadFilled, Document, Close, Check, Delete, Connection } from '@element-plus/icons-vue'\nimport request from '@/utils/request'\nimport { marked } from 'marked'\n\nfunction formatSize(size) {\n  if (size < 1024) return size + 'B';\n  if (size < 1024*1024) return (size/1024).toFixed(1) + 'KB';\n  return (size/1024/1024).toFixed(1) + 'MB';\n}\nfunction getExt(name) {\n  const arr = name.split('.');\n  return arr.length > 1 ? arr[arr.length-1].toLowerCase() : '';\n}\nfunction getFileLabel(type, ext) {\n  if (type.startsWith('image/')) return 'Image';\n  if (ext==='pdf') return 'PDF';\n  if (['csv','xls','xlsx'].includes(ext)) return 'CSV';\n  return ext.toUpperCase();\n}\nfunction getFileBg(ext) {\n  if (ext==='pdf') return '#f87171';\n  if (['csv','xls','xlsx'].includes(ext)) return '#34d399';\n  return '#a5b4fc';\n}\nexport default {\n  name: 'Dashboard',\n  components: { UploadFilled, Document, Close, Check, Delete, Connection },\n  setup() {\n    const input = ref('')\n    const messages = ref([\n      { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n    ])\n    const chatBody = ref(null)\n    const fileInput = ref(null)\n    const selectedFiles = ref([])\n    const loading = ref(false)\n    const processingFiles = computed(() => {\n      return selectedFiles.value.some(file => file.status !== 'completed' && file.status !== 'failed');\n    })\n    const chatId = ref(null) // Â≠òÂÇ®ÂΩìÂâçËÅäÂ§©IDÔºåÁî®‰∫éÁª¥ÊåÅÂØπËØù‰∏ä‰∏ãÊñá\n    const showContextBar = computed(() => chatId.value !== null)\n    \n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (chatBody.value) chatBody.value.scrollTop = chatBody.value.scrollHeight\n      })\n    }\n    \n    const uploadFileAndGetId = async (file) => {\n      const formData = new FormData()\n      formData.append('file', file.rawFile)\n      try {\n        // Ê†áËÆ∞Êñá‰ª∂‰∏∫‰∏ä‰º†‰∏≠\n        file.progress = 0;\n        file.status = 'pending';\n        let smoothTimer = null;\n        let lastProgress = 0;\n        let uploadFinished = false;\n        const res = await request({\n          url: '/api/ai/documents/upload/',\n          method: 'post',\n          data: formData,\n          onUploadProgress: (progressEvent) => {\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            if (percentCompleted < 100) {\n              file.progress = percentCompleted;\n              lastProgress = percentCompleted;\n            } else {\n              // ‰∏ä‰º†Áû¨Èó¥ÂÆåÊàêÔºåÂπ≥ÊªëÈÄíÂ¢ûÂà∞95%\n              if (!uploadFinished) {\n                uploadFinished = true;\n                let fakeProgress = lastProgress;\n                smoothTimer = setInterval(() => {\n                  fakeProgress += 3;\n                  if (fakeProgress >= 95) {\n                    fakeProgress = 95;\n                    clearInterval(smoothTimer);\n                  }\n                  file.progress = fakeProgress;\n                }, 20);\n              }\n            }\n          }\n        })\n        // ‰∏ä‰º†ÂÆåÊàêÂêéÔºåÁä∂ÊÄÅÊîπ‰∏∫Â§ÑÁêÜ‰∏≠Ôºå‰∏çÈáçÁΩÆËøõÂ∫¶Êù°\n        if (smoothTimer) clearInterval(smoothTimer);\n        if (file.progress < 95) file.progress = 95;\n        file.status = 'processing';\n        file.documentId = res.data.id;\n        pollDocumentStatus(file);\n        return res.data.id;\n      } catch (error) {\n        file.status = 'failed';\n        console.error('Êñá‰ª∂‰∏ä‰º†Â§±Ë¥•:', error);\n        throw new Error(`‰∏ä‰º†Êñá‰ª∂ ${file.name} Â§±Ë¥•: ${error.message || 'ÊúçÂä°Âô®ÈîôËØØ'}`);\n      }\n    }\n    \n    // ËΩÆËØ¢ÊñáÊ°£Â§ÑÁêÜÁä∂ÊÄÅ\n    const pollDocumentStatus = async (file, interval = 1000) => {\n      if (!file.documentId) return;\n      \n      try {\n        const res = await request({\n          url: `/api/ai/documents/${file.documentId}/`,\n          method: 'get'\n        });\n        \n        if (res.data.status === 'completed') {\n          file.progress = 100;\n          file.status = 'completed';\n          return;\n        } else if (res.data.status === 'failed') {\n          file.status = 'failed';\n          file.progress = 0;\n          return;\n        } else if (res.data.status === 'processing') {\n          // Â§ÑÁêÜ‰∏≠ÔºåÂ¢ûÂä†ËøõÂ∫¶Ôºà‰ªÖÂú®Â∞è‰∫é95Êó∂ÈÄíÂ¢ûÔºâ\n          if (file.progress < 95) {\n            file.progress = Math.min(file.progress + 5, 95);\n          }\n        }\n        \n        // ÁªßÁª≠ËΩÆËØ¢\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      } catch (e) {\n        // Âá∫ÈîôÊó∂ÔºåÁªßÁª≠ËΩÆËØ¢Ôºå‰ΩÜ‰∏çÊõ¥Êñ∞ËøõÂ∫¶\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      }\n    }\n    \n    // Êñ∞Â¢ûÔºöÊµÅÂºèfetch AIÂõûÂ§ç\n    async function fetchAIStream(data, onChunk) {\n      const response = await fetch('/api/ai/chat-with-documents/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n        },\n        body: JSON.stringify(data)\n      });\n      \n      // Ê£ÄÊü•ÂìçÂ∫îÂ§¥‰∏≠ÁöÑËÅäÂ§©ID\n      const headerChatId = response.headers.get('X-Chat-ID');\n      if (headerChatId) {\n        console.log('‰ªéÂìçÂ∫îÂ§¥Ëé∑ÂèñËÅäÂ§©ID:', headerChatId);\n        chatId.value = headerChatId;\n      }\n      \n      const reader = response.body.getReader();\n      let decoder = new TextDecoder();\n      let buffer = '';\n      let done = false;\n      while (!done) {\n        const result = await reader.read();\n        done = result.done;\n        if (done) break;\n        buffer += decoder.decode(result.value, { stream: true });\n        onChunk(buffer);\n      }\n    }\n    \n    const clearChat = () => {\n      // Ê∏ÖÁ©∫ÂØπËØùÂéÜÂè≤ÔºåÂºÄÂßãÊñ∞ÁöÑÂØπËØù\n      chatId.value = null;\n      messages.value = [\n        { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n      ];\n      // Ê∏ÖÁ©∫ÈÄâÊã©ÁöÑÊñá‰ª∂\n      selectedFiles.value = [];\n    }\n    \n    const sendMsg = async () => {\n      if ((!input.value.trim() && !selectedFiles.value.length) || loading.value || processingFiles.value) return\n      \n      loading.value = true\n      let documentIds = []\n      \n      // Â¶ÇÊûúÊ≤°ÊúâËæìÂÖ•ÊñáÊú¨‰ΩÜÊúâÈÄâÊã©Êñá‰ª∂ÔºåÂÖàÊ∑ªÂä†Âç†‰ΩçÊ∂àÊÅØ\n      if (!input.value.trim() && selectedFiles.value.length) {\n        messages.value.push({ role: 'user', content: 'Êàë‰∏ä‰º†‰∫Ü‰∏Ä‰∫õÊñá‰ª∂ÔºåËØ∑ÂàÜÊûêÂÖ∂‰∏≠ÂÜÖÂÆπ„ÄÇ', type: 'text' })\n      }\n      \n      // Ê∑ªÂä†Êñá‰ª∂‰∏éÊñáÊú¨ÂµåÂ•óÊ∂àÊÅØ\n      if (selectedFiles.value.length > 0) {\n        // ÂêàÂπ∂ÊâÄÊúâÊñá‰ª∂‰ø°ÊÅØ\n        const filesArr = selectedFiles.value.map(file => ({\n          url: file.url,\n          name: file.name,\n          ext: file.ext,\n          size: file.size,\n          label: file.label,\n          bg: file.bg,\n          desc: file.desc\n        }))\n        messages.value.push({\n          role: 'user',\n          type: 'file',\n          files: filesArr,\n          content: input.value.trim() || '',\n        })\n      } else if (input.value.trim()) {\n        // ‰ªÖÊñáÊú¨\n        messages.value.push({ role: 'user', content: input.value, type: 'text' })\n      }\n      \n      // ÊªöÂä®Âà∞Â∫ïÈÉ®ÊòæÁ§∫Áî®Êà∑Ê∂àÊÅØ\n      scrollToBottom()\n      \n      // ÂàõÂª∫AIÂõûÂ§çÁöÑÂç†‰ΩçÊ∂àÊÅØ\n      const assistantMsgIndex = messages.value.length\n      messages.value.push({ \n        role: 'assistant', \n        content: '', \n        type: 'text', \n        streaming: true \n      })\n      \n      try {\n        // Ëé∑ÂèñÊâÄÊúâÂ§ÑÁêÜÂÆåÊàêÊñá‰ª∂ÁöÑÊñáÊ°£ID\n        documentIds = selectedFiles.value\n          .filter(file => file.status === 'completed')\n          .map(file => file.documentId)\n        \n        console.log('Â∑≤Â§ÑÁêÜÂÆåÊàêÁöÑÊñáÊ°£IDs:', documentIds)\n        \n        // Ë∞ÉÁî®ÂêéÁ´ØAIËÅäÂ§©APIÔºàÊµÅÂºèÔºâ\n        const userInput = input.value.trim()\n        await fetchAIStream({\n          message: userInput || 'ËØ∑ÂàÜÊûêÊàë‰∏ä‰º†ÁöÑÊñá‰ª∂',\n          document_ids: documentIds.length > 0 ? documentIds : undefined,\n          chat_id: chatId.value // ‰º†ÈÄíËÅäÂ§©ID‰ª•Áª¥ÊåÅ‰∏ä‰∏ãÊñá\n        }, (buffer) => {\n          messages.value[assistantMsgIndex].content = marked.parse(buffer)\n          scrollToBottom()\n        })\n        \n        messages.value[assistantMsgIndex].streaming = false\n        \n        // Áé∞Âú®chatIdÂ∑≤ÁªèÂú®fetchAIStream‰∏≠Êõ¥Êñ∞ÔºåËøôÈáåÁõ¥Êé•Âà§Êñ≠\n        if (chatId.value) {\n          console.log('ÂØπËØùID:', chatId.value);\n        }\n        \n        loading.value = false\n        scrollToBottom()\n        \n      } catch (e) {\n        console.error('AIËÅäÂ§©ËØ∑Ê±ÇÈîôËØØ:', e)\n        messages.value[assistantMsgIndex].content = `AIÊúçÂä°ÊöÇ‰∏çÂèØÁî®: ${e.message || 'Êú™Áü•ÈîôËØØ'}`\n        messages.value[assistantMsgIndex].streaming = false\n        loading.value = false\n        scrollToBottom()\n      }\n      \n      input.value = ''\n      // ÂèëÈÄÅÂêé‰∏çÊ∏ÖÁ©∫Êñá‰ª∂ÂàóË°®Ôºå‰ΩÜÊääÂ∑≤Â§ÑÁêÜÂ§±Ë¥•ÁöÑÊñá‰ª∂Ê∏ÖÈô§\n      selectedFiles.value = selectedFiles.value.filter(file => file.status !== 'failed')\n    }\n    \n    const triggerFileInput = () => {\n      if (fileInput.value) fileInput.value.value = '';\n      fileInput.value && fileInput.value.click()\n    }\n    \n    const handleFileUpload = (e) => {\n      const files = e.target.files\n      if (!files || !files.length) return\n      // Êñ∞Â¢ûÔºöÂâçÁ´ØÊ†°È™åÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã\n      const allowedTypes = [\n        'application/pdf', 'text/plain',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'text/csv', 'application/csv',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.ms-excel',\n        'image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'image/webp'\n      ];\n      Array.from(files).forEach(file => {\n        if (!allowedTypes.includes(file.type)) {\n          alert('‰∏çÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã: ' + file.name)\n          return\n        }\n        const ext = getExt(file.name)\n        const id = file.name + '_' + file.size + '_' + Date.now() + Math.random()\n        if (file.type.startsWith('image/')) {\n          const reader = new FileReader()\n          reader.onload = (ev) => {\n            selectedFiles.value.push({\n              id,\n              name: file.name,\n              type: file.type,\n              url: ev.target.result,\n              size: formatSize(file.size),\n              ext,\n              label: getFileLabel(file.type, ext),\n              bg: getFileBg(ext),\n              rawFile: file,\n              progress: 0,\n              status: 'ready'\n            })\n            // Ëá™Âä®‰∏ä‰º†\n            uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n          }\n          reader.readAsDataURL(file)\n        } else {\n          const url = URL.createObjectURL(file)\n          selectedFiles.value.push({\n            id,\n            name: file.name,\n            type: file.type,\n            url,\n            size: formatSize(file.size),\n            ext,\n            label: getFileLabel(file.type, ext),\n            bg: getFileBg(ext),\n            rawFile: file,\n            progress: 0,\n            status: 'ready'\n          })\n          // Ëá™Âä®‰∏ä‰º†\n          uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n        }\n      })\n    }\n    \n    const removeFile = (idx) => {\n      selectedFiles.value.splice(idx, 1)\n    }\n\n    // markedÈÖçÁΩÆÔºöË°®Ê†ºÂ∏¶ËæπÊ°Ü + ‰ª£Á†ÅÂùóÁæéÂåñ+Â§çÂà∂\n    const renderer = new marked.Renderer();\n    renderer.table = function(header, body) {\n      return `<table class=\"openwebui-md-table\"><thead>${header}</thead><tbody>${body}</tbody></table>`;\n    };\n    renderer.code = function(code, infostring) {\n      const lang = infostring ? `language-${infostring}` : '';\n      // Áî®data-codeÂ≠òÂÇ®ÂéüÂßã‰ª£Á†ÅÔºåÊ≥®ÊÑèËΩ¨‰πâ\n      const escaped = code.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      return `\n        <div class=\"openwebui-code-block\">\n          <div class=\"openwebui-code-toolbar\">\n            <button class=\"openwebui-copy-btn\" data-code=\"${encodeURIComponent(code)}\">Â§çÂà∂</button>\n          </div>\n          <pre><code class=\"${lang}\">${escaped}</code></pre>\n        </div>\n      `;\n    };\n    marked.setOptions({\n      breaks: true,\n      gfm: true,\n      headerIds: false,\n      mangle: false,\n      renderer\n    })\n\n    // ‰ª£Á†ÅÂ§çÂà∂‰∫ã‰ª∂‰ª£ÁêÜ\n    onMounted(() => {\n      const chatBodyEl = document.querySelector('.openwebui-chat-body');\n      if (chatBodyEl) {\n        chatBodyEl.addEventListener('click', function(e) {\n          const target = e.target;\n          if (target.classList.contains('openwebui-copy-btn')) {\n            const code = decodeURIComponent(target.getAttribute('data-code'));\n            navigator.clipboard.writeText(code).then(() => {\n              target.innerText = 'Â∑≤Â§çÂà∂';\n              setTimeout(() => { target.innerText = 'Â§çÂà∂'; }, 1200);\n            });\n          }\n        });\n      }\n    });\n\n    return {\n      input, \n      messages, \n      sendMsg, \n      chatBody, \n      fileInput, \n      triggerFileInput, \n      handleFileUpload, \n      selectedFiles, \n      removeFile, \n      UploadFilled, \n      Document, \n      Close, \n      Check,\n      loading, \n      processingFiles,\n      clearChat,\n      showContextBar,\n      chatId\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nhtml, body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-root {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  min-width: 0;\n  background: #f5f6fa;\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-window {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  background: #fff;\n  border-radius: 0;\n  box-shadow: none;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0;\n}\n.openwebui-chat-header {\n  height: 56px;\n  background: #f0f2f5;\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  border-bottom: 1px solid #ececec;\n  flex-shrink: 0;\n  justify-content: space-between;\n}\n.openwebui-title {\n  color: #2f54eb;\n}\n.clear-chat-btn {\n  color: #888;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 14px;\n  font-weight: normal;\n}\n.clear-chat-btn:hover {\n  color: #2f54eb;\n}\n.openwebui-file-preview-bar {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 12px;\n  padding: 12px 0 8px 0;\n  background: transparent;\n  border-bottom: none;\n  overflow-x: auto;\n  min-height: 64px;\n  z-index: 3;\n}\n.openwebui-file-card {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: #f7f8fa;\n  border-radius: 14px;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n  padding: 8px 16px 8px 8px;\n  min-width: 160px;\n  max-width: 240px;\n  position: relative;\n}\n.openwebui-file-thumb {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background: #e6e6e6;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  margin-right: 10px;\n}\n.openwebui-file-img {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n.openwebui-file-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-size: 22px;\n}\n.openwebui-file-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.openwebui-file-name {\n  font-size: 14px;\n  color: #222;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 120px;\n}\n.openwebui-file-meta {\n  font-size: 12px;\n  color: #888;\n  margin-top: 2px;\n}\n.openwebui-file-progress {\n  margin-top: 4px;\n  width: 100%;\n}\n.openwebui-file-status {\n  font-size: 12px;\n  margin-top: 3px;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  \n  &.completed {\n    color: #10b981;\n  }\n  \n  &.failed {\n    color: #f87171;\n  }\n}\n.openwebui-file-remove {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  color: #bbb;\n  font-size: 16px;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n.openwebui-file-remove:hover {\n  color: #f87171;\n}\n.openwebui-chat-body {\n  flex: 1 1 0%;\n  overflow-y: auto;\n  padding: 0 16px 12px 16px;\n  background: #f9fafb;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  max-height: calc(100vh - 200px);\n  height: calc(100vh - 200px);\n  flex-shrink: 1;\n  overflow-y: auto;\n  scrollbar-width: thin;\n}\n.openwebui-msg {\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 16px;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.openwebui-msg.user {\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin-left: auto;\n  margin-right: 0;\n}\n.openwebui-msg.assistant {\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  margin-right: auto;\n  margin-left: 0;\n}\n.openwebui-msg-bubble {\n  max-width: 70%;\n  padding: 12px 18px;\n  border-radius: 16px;\n  font-size: 15px;\n  line-height: 1.7;\n  background: #e6f0ff;\n  color: #222;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n  position: relative;\n  word-break: break-all;\n  overflow-wrap: break-word;\n  margin-top: 4px;\n  margin-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n}\n.openwebui-msg.user .openwebui-msg-bubble {\n  background: #2f54eb;\n  color: #fff;\n  border-bottom-right-radius: 4px;\n  margin-right: 8px;\n  margin-left: 0;\n  margin-right: 8px;\n  margin-left: auto;\n}\n.openwebui-msg.assistant .openwebui-msg-bubble {\n  background: #f0f2f5;\n  color: #222;\n  border-bottom-left-radius: 4px;\n  margin-left: 8px;\n  margin-right: 0;\n  margin-left: 8px;\n  margin-right: auto;\n}\n.openwebui-avatar {\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  margin-bottom: auto;\n}\n.left-avatar {\n  margin-right: 8px;\n}\n.right-avatar {\n  margin-left: 8px;\n}\n.openwebui-user-label {\n  font-weight: bold;\n  margin-right: 4px;\n}\n.openwebui-ai-label {\n  font-weight: bold;\n  color: #2f54eb;\n  margin-right: 4px;\n}\n.openwebui-chat-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0 16px 12px 16px;\n  background: #fff;\n  border-top: 1px solid #ececec;\n  margin: 0;\n  flex-shrink: 0;\n  box-shadow: 0 -2px 16px 0 rgba(47,84,235,0.03);\n  z-index: 2;\n}\n.openwebui-input-area {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n.openwebui-input {\n  flex: 1;\n  margin-right: 12px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n}\n.openwebui-send-btn {\n  min-width: 72px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 8px;\n}\n.openwebui-upload-btn {\n  margin-right: 8px;\n  font-size: 20px;\n  background: #fff;\n  border: 1px solid #e6e6e6;\n  color: #2f54eb;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: border 0.2s, box-shadow 0.2s;\n}\n.openwebui-upload-btn:hover {\n  border: 1.5px solid #2f54eb;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.08);\n}\n.openwebui-img-preview {\n  max-width: 180px;\n  max-height: 120px;\n  border-radius: 8px;\n  display: block;\n  margin: 4px 0;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.08);\n}\n.openwebui-file-link {\n  color: #2f54eb;\n  text-decoration: underline;\n  word-break: break-all;\n}\n.openwebui-cursor {\n  display: inline-block;\n  width: 8px;\n  height: 16px;\n  background: #2f54eb;\n  margin-left: 2px;\n  vertical-align: middle;\n  animation: blink 0.8s infinite;\n}\n\n@keyframes blink {\n  0% { opacity: 1; }\n  50% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n.file-bubble-nest {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.file-bubble-vertical {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.file-message-card {\n  display: flex;\n  align-items: center;\n  background: #f7f8fa;\n  border-radius: 12px;\n  padding: 8px 16px;\n  margin-bottom: 0;\n  min-width: 180px;\n  max-width: 320px;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n}\n.file-icon-area {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n}\n.file-icon-img {\n  width: 32px;\n  height: 32px;\n}\n.file-info-area {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-name {\n  font-size: 15px;\n  font-weight: 500;\n  color: #222;\n  margin-bottom: 2px;\n  word-break: break-all;\n}\n.file-meta {\n  font-size: 12px;\n  color: #888;\n}\n.file-desc-text {\n  margin-top: 8px;\n  font-size: 15px;\n  color: #222;\n  background: transparent;\n  border-radius: 8px;\n  padding: 0 2px;\n  display: inline-block;\n  word-break: break-all;\n}\n.openwebui-context-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 24px;\n  background-color: #f5f8ff;\n  border-bottom: 1px solid #e6effb;\n  font-size: 14px;\n  color: #555;\n}\n.context-info {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n.context-icon {\n  color: #2f54eb;\n  font-size: 16px;\n}\n</style>\n\n<style>\n.openwebui-md-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 8px 0;\n  background: #fff;\n  font-size: 15px;\n}\n.openwebui-md-table th, .openwebui-md-table td {\n  border: 1px solid #d4d7e1;\n  padding: 6px 12px;\n  text-align: left;\n}\n.openwebui-md-table th {\n  background: #f0f2f5;\n  font-weight: 600;\n}\n\n/* ‰ª£Á†ÅÂùóÁæéÂåñÂèäÂ§çÂà∂ÊåâÈíÆ */\n.openwebui-code-block {\n  position: relative;\n  background: #181c27;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.06);\n  margin: 16px 0;\n  overflow: auto;\n}\n.openwebui-code-toolbar {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 6px 12px 0 0;\n}\n.openwebui-copy-btn {\n  background: #23283a;\n  color: #fff;\n  border: none;\n  border-radius: 6px;\n  padding: 2px 12px;\n  font-size: 13px;\n  cursor: pointer;\n  transition: background 0.2s;\n  margin-bottom: 2px;\n}\n.openwebui-copy-btn:hover {\n  background: #2f54eb;\n  color: #fff;\n}\n.openwebui-code-block pre {\n  margin: 0;\n  padding: 14px 18px 14px 18px;\n  background: transparent;\n  color: #e6e6e6;\n  font-size: 15px;\n  overflow-x: auto;\n  border-radius: 0 0 10px 10px;\n}\n.openwebui-code-block code {\n  background: none;\n  color: inherit;\n  font-family: 'Fira Mono', 'Consolas', 'Menlo', 'Monaco', monospace;\n  font-size: 15px;\n  line-height: 1.7;\n<template>\n  <div class=\"openwebui-chat-root\">\n    <div class=\"openwebui-chat-window\">\n      <div class=\"openwebui-chat-header\">\n        <span class=\"openwebui-title\">Open WebUI AI ÂØπËØù</span>\n        <el-button type=\"text\" size=\"small\" @click=\"clearChat\" class=\"clear-chat-btn\">\n          <el-icon><Delete /></el-icon> Êñ∞ÂØπËØù\n        </el-button>\n      </div>\n      \n      <!-- ‰∏ä‰∏ãÊñáÁä∂ÊÄÅÊù° -->\n      <div v-if=\"showContextBar\" class=\"openwebui-context-bar\">\n        <div class=\"context-info\">\n          <el-icon class=\"context-icon\"><Connection /></el-icon>\n          <span>‰∏ä‰∏ãÊñáÂØπËØùÊ®°Âºè (Áî±LangChainÊèê‰æõÊîØÊåÅ)</span>\n        </div>\n        <el-tag size=\"small\" effect=\"plain\" type=\"info\">ID: {{ chatId }}</el-tag>\n      </div>\n      \n      <div class=\"openwebui-chat-body\" ref=\"chatBody\">\n        <div v-for=\"(msg, idx) in messages\" :key=\"idx\" :class=\"['openwebui-msg', msg.role]\">\n          <template v-if=\"msg.role==='assistant'\">\n            <div class=\"openwebui-avatar ai-avatar left-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#2f54eb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">ü§ñ</text></svg>\n            </div>\n          </template>\n          <template v-if=\"msg.role==='user'\">\n            <div class=\"openwebui-avatar user-avatar right-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#bbb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">üßë</text></svg>\n            </div>\n          </template>\n          <div class=\"openwebui-msg-bubble\">\n            <template v-if=\"msg.type === 'text'\">\n              <span v-if=\"msg.role==='user'\">{{ msg.content }}</span>\n              <span v-else v-html=\"msg.content\"></span>\n              <span v-if=\"msg.streaming\" class=\"openwebui-cursor\"></span>\n            </template>\n            <template v-else-if=\"msg.type === 'file'\">\n              <div class=\"file-bubble-nest file-bubble-vertical\">\n                <div v-for=\"file in msg.files\" :key=\"file.name + file.size\" class=\"file-message-card\">\n                  <div class=\"file-icon-area\">\n                    <img v-if=\"file.ext==='csv'\" src=\"https://cdn.jsdelivr.net/gh/file-icons/icons/svg/csv.svg\" class=\"file-icon-img\" />\n                    <el-icon v-else><Document /></el-icon>\n                  </div>\n                  <div class=\"file-info-area\">\n                    <div class=\"file-name\">{{ file.name }}</div>\n                    <div class=\"file-meta\">{{ file.ext.toUpperCase() }} ¬∑ {{ file.size }}</div>\n                  </div>\n                </div>\n                <div class=\"file-desc-text\" v-if=\"msg.content\">{{ msg.content }}</div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div class=\"openwebui-chat-footer\">\n        <!-- È¢ÑËßàÂå∫ÊîæÂú®footerÈ°∂ÈÉ® -->\n        <div v-if=\"selectedFiles.length\" class=\"openwebui-file-preview-bar\">\n          <div v-for=\"(file, idx) in selectedFiles\" :key=\"file.id\" class=\"openwebui-file-card\">\n            <div class=\"openwebui-file-thumb\">\n              <img v-if=\"file.type.startsWith('image/')\" :src=\"file.url\" class=\"openwebui-file-img\" />\n              <div v-else class=\"openwebui-file-icon\" :style=\"{background: file.bg}\">\n                <el-icon v-if=\"file.ext==='pdf'\"><Document /></el-icon>\n                <el-icon v-else-if=\"file.ext==='csv' || file.ext==='xls' || file.ext==='xlsx'\"><Document /></el-icon>\n                <el-icon v-else><Document /></el-icon>\n              </div>\n            </div>\n            <div class=\"openwebui-file-info\">\n              <div class=\"openwebui-file-name\" :title=\"file.name\">{{ file.name }}</div>\n              <div class=\"openwebui-file-meta\">{{ file.label }} ¬∑ {{ file.size }}</div>\n              <!-- Ê∑ªÂä†ËøõÂ∫¶Êù°ÊòæÁ§∫ -->\n              <el-progress \n                v-if=\"file.status !== 'completed'\" \n                :percentage=\"file.progress\" \n                :status=\"file.status === 'failed' ? 'exception' : ''\" \n                :stroke-width=\"4\"\n                class=\"openwebui-file-progress\" />\n              <div v-else class=\"openwebui-file-status completed\">\n                <el-icon><Check /></el-icon> Â§ÑÁêÜÂÆåÊàê\n              </div>\n            </div>\n            <el-icon class=\"openwebui-file-remove\" @click=\"removeFile(idx)\"><Close /></el-icon>\n          </div>\n        </div>\n        <!-- ËæìÂÖ•Âå∫ -->\n        <div class=\"openwebui-input-area\">\n          <input type=\"file\" ref=\"fileInput\" style=\"display:none\" @change=\"handleFileUpload\" multiple />\n          <el-button class=\"openwebui-upload-btn\" @click=\"triggerFileInput\" title=\"‰∏ä‰º†Êñá‰ª∂/ÂõæÁâá\" :disabled=\"loading\">\n            <el-icon><UploadFilled /></el-icon>\n          </el-button>\n          <el-input\n            v-model=\"input\"\n            placeholder=\"ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...\"\n            @keyup.enter=\"sendMsg\"\n            class=\"openwebui-input\"\n            :disabled=\"loading || processingFiles\"\n          />\n          <el-button type=\"primary\" @click=\"sendMsg\" class=\"openwebui-send-btn\" :loading=\"loading\" :disabled=\"processingFiles\">\n            {{ loading ? 'ÁîüÊàê‰∏≠' : (processingFiles ? 'Â§ÑÁêÜ‰∏≠' : 'ÂèëÈÄÅ') }}\n          </el-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, computed } from 'vue'\nimport { UploadFilled, Document, Close, Check, Delete, Connection } from '@element-plus/icons-vue'\nimport request from '@/utils/request'\nimport { marked } from 'marked'\n\nfunction formatSize(size) {\n  if (size < 1024) return size + 'B';\n  if (size < 1024*1024) return (size/1024).toFixed(1) + 'KB';\n  return (size/1024/1024).toFixed(1) + 'MB';\n}\nfunction getExt(name) {\n  const arr = name.split('.');\n  return arr.length > 1 ? arr[arr.length-1].toLowerCase() : '';\n}\nfunction getFileLabel(type, ext) {\n  if (type.startsWith('image/')) return 'Image';\n  if (ext==='pdf') return 'PDF';\n  if (['csv','xls','xlsx'].includes(ext)) return 'CSV';\n  return ext.toUpperCase();\n}\nfunction getFileBg(ext) {\n  if (ext==='pdf') return '#f87171';\n  if (['csv','xls','xlsx'].includes(ext)) return '#34d399';\n  return '#a5b4fc';\n}\nexport default {\n  name: 'Dashboard',\n  components: { UploadFilled, Document, Close, Check, Delete, Connection },\n  setup() {\n    const input = ref('')\n    const messages = ref([\n      { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n    ])\n    const chatBody = ref(null)\n    const fileInput = ref(null)\n    const selectedFiles = ref([])\n    const loading = ref(false)\n    const processingFiles = computed(() => {\n      return selectedFiles.value.some(file => file.status !== 'completed' && file.status !== 'failed');\n    })\n    const chatId = ref(null) // Â≠òÂÇ®ÂΩìÂâçËÅäÂ§©IDÔºåÁî®‰∫éÁª¥ÊåÅÂØπËØù‰∏ä‰∏ãÊñá\n    const showContextBar = computed(() => chatId.value !== null)\n    \n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (chatBody.value) chatBody.value.scrollTop = chatBody.value.scrollHeight\n      })\n    }\n    \n    const uploadFileAndGetId = async (file) => {\n      const formData = new FormData()\n      formData.append('file', file.rawFile)\n      try {\n        // Ê†áËÆ∞Êñá‰ª∂‰∏∫‰∏ä‰º†‰∏≠\n        file.progress = 0;\n        file.status = 'pending';\n        let smoothTimer = null;\n        let lastProgress = 0;\n        let uploadFinished = false;\n        const res = await request({\n          url: '/api/ai/documents/upload/',\n          method: 'post',\n          data: formData,\n          onUploadProgress: (progressEvent) => {\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            if (percentCompleted < 100) {\n              file.progress = percentCompleted;\n              lastProgress = percentCompleted;\n            } else {\n              // ‰∏ä‰º†Áû¨Èó¥ÂÆåÊàêÔºåÂπ≥ÊªëÈÄíÂ¢ûÂà∞95%\n              if (!uploadFinished) {\n                uploadFinished = true;\n                let fakeProgress = lastProgress;\n                smoothTimer = setInterval(() => {\n                  fakeProgress += 3;\n                  if (fakeProgress >= 95) {\n                    fakeProgress = 95;\n                    clearInterval(smoothTimer);\n                  }\n                  file.progress = fakeProgress;\n                }, 20);\n              }\n            }\n          }\n        })\n        // ‰∏ä‰º†ÂÆåÊàêÂêéÔºåÁä∂ÊÄÅÊîπ‰∏∫Â§ÑÁêÜ‰∏≠Ôºå‰∏çÈáçÁΩÆËøõÂ∫¶Êù°\n        if (smoothTimer) clearInterval(smoothTimer);\n        if (file.progress < 95) file.progress = 95;\n        file.status = 'processing';\n        file.documentId = res.data.id;\n        pollDocumentStatus(file);\n        return res.data.id;\n      } catch (error) {\n        file.status = 'failed';\n        console.error('Êñá‰ª∂‰∏ä‰º†Â§±Ë¥•:', error);\n        throw new Error(`‰∏ä‰º†Êñá‰ª∂ ${file.name} Â§±Ë¥•: ${error.message || 'ÊúçÂä°Âô®ÈîôËØØ'}`);\n      }\n    }\n    \n    // ËΩÆËØ¢ÊñáÊ°£Â§ÑÁêÜÁä∂ÊÄÅ\n    const pollDocumentStatus = async (file, interval = 1000) => {\n      if (!file.documentId) return;\n      \n      try {\n        const res = await request({\n          url: `/api/ai/documents/${file.documentId}/`,\n          method: 'get'\n        });\n        \n        if (res.data.status === 'completed') {\n          file.progress = 100;\n          file.status = 'completed';\n          return;\n        } else if (res.data.status === 'failed') {\n          file.status = 'failed';\n          file.progress = 0;\n          return;\n        } else if (res.data.status === 'processing') {\n          // Â§ÑÁêÜ‰∏≠ÔºåÂ¢ûÂä†ËøõÂ∫¶Ôºà‰ªÖÂú®Â∞è‰∫é95Êó∂ÈÄíÂ¢ûÔºâ\n          if (file.progress < 95) {\n            file.progress = Math.min(file.progress + 5, 95);\n          }\n        }\n        \n        // ÁªßÁª≠ËΩÆËØ¢\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      } catch (e) {\n        // Âá∫ÈîôÊó∂ÔºåÁªßÁª≠ËΩÆËØ¢Ôºå‰ΩÜ‰∏çÊõ¥Êñ∞ËøõÂ∫¶\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      }\n    }\n    \n    // Êñ∞Â¢ûÔºöÊµÅÂºèfetch AIÂõûÂ§ç\n    async function fetchAIStream(data, onChunk) {\n      const response = await fetch('/api/ai/chat-with-documents/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n        },\n        body: JSON.stringify(data)\n      });\n      \n      // Ê£ÄÊü•ÂìçÂ∫îÂ§¥‰∏≠ÁöÑËÅäÂ§©ID\n      const headerChatId = response.headers.get('X-Chat-ID');\n      if (headerChatId) {\n        console.log('‰ªéÂìçÂ∫îÂ§¥Ëé∑ÂèñËÅäÂ§©ID:', headerChatId);\n        chatId.value = headerChatId;\n      }\n      \n      const reader = response.body.getReader();\n      let decoder = new TextDecoder();\n      let buffer = '';\n      let done = false;\n      while (!done) {\n        const result = await reader.read();\n        done = result.done;\n        if (done) break;\n        buffer += decoder.decode(result.value, { stream: true });\n        onChunk(buffer);\n      }\n    }\n    \n    const clearChat = () => {\n      // Ê∏ÖÁ©∫ÂØπËØùÂéÜÂè≤ÔºåÂºÄÂßãÊñ∞ÁöÑÂØπËØù\n      chatId.value = null;\n      messages.value = [\n        { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n      ];\n      // Ê∏ÖÁ©∫ÈÄâÊã©ÁöÑÊñá‰ª∂\n      selectedFiles.value = [];\n    }\n    \n    const sendMsg = async () => {\n      if ((!input.value.trim() && !selectedFiles.value.length) || loading.value || processingFiles.value) return\n      \n      loading.value = true\n      let documentIds = []\n      \n      // Â¶ÇÊûúÊ≤°ÊúâËæìÂÖ•ÊñáÊú¨‰ΩÜÊúâÈÄâÊã©Êñá‰ª∂ÔºåÂÖàÊ∑ªÂä†Âç†‰ΩçÊ∂àÊÅØ\n      if (!input.value.trim() && selectedFiles.value.length) {\n        messages.value.push({ role: 'user', content: 'Êàë‰∏ä‰º†‰∫Ü‰∏Ä‰∫õÊñá‰ª∂ÔºåËØ∑ÂàÜÊûêÂÖ∂‰∏≠ÂÜÖÂÆπ„ÄÇ', type: 'text' })\n      }\n      \n      // Ê∑ªÂä†Êñá‰ª∂‰∏éÊñáÊú¨ÂµåÂ•óÊ∂àÊÅØ\n      if (selectedFiles.value.length > 0) {\n        // ÂêàÂπ∂ÊâÄÊúâÊñá‰ª∂‰ø°ÊÅØ\n        const filesArr = selectedFiles.value.map(file => ({\n          url: file.url,\n          name: file.name,\n          ext: file.ext,\n          size: file.size,\n          label: file.label,\n          bg: file.bg,\n          desc: file.desc\n        }))\n        messages.value.push({\n          role: 'user',\n          type: 'file',\n          files: filesArr,\n          content: input.value.trim() || '',\n        })\n      } else if (input.value.trim()) {\n        // ‰ªÖÊñáÊú¨\n        messages.value.push({ role: 'user', content: input.value, type: 'text' })\n      }\n      \n      // ÊªöÂä®Âà∞Â∫ïÈÉ®ÊòæÁ§∫Áî®Êà∑Ê∂àÊÅØ\n      scrollToBottom()\n      \n      // ÂàõÂª∫AIÂõûÂ§çÁöÑÂç†‰ΩçÊ∂àÊÅØ\n      const assistantMsgIndex = messages.value.length\n      messages.value.push({ \n        role: 'assistant', \n        content: '', \n        type: 'text', \n        streaming: true \n      })\n      \n      try {\n        // Ëé∑ÂèñÊâÄÊúâÂ§ÑÁêÜÂÆåÊàêÊñá‰ª∂ÁöÑÊñáÊ°£ID\n        documentIds = selectedFiles.value\n          .filter(file => file.status === 'completed')\n          .map(file => file.documentId)\n        \n        console.log('Â∑≤Â§ÑÁêÜÂÆåÊàêÁöÑÊñáÊ°£IDs:', documentIds)\n        \n        // Ë∞ÉÁî®ÂêéÁ´ØAIËÅäÂ§©APIÔºàÊµÅÂºèÔºâ\n        const userInput = input.value.trim()\n        await fetchAIStream({\n          message: userInput || 'ËØ∑ÂàÜÊûêÊàë‰∏ä‰º†ÁöÑÊñá‰ª∂',\n          document_ids: documentIds.length > 0 ? documentIds : undefined,\n          chat_id: chatId.value // ‰º†ÈÄíËÅäÂ§©ID‰ª•Áª¥ÊåÅ‰∏ä‰∏ãÊñá\n        }, (buffer) => {\n          messages.value[assistantMsgIndex].content = marked.parse(buffer)\n          scrollToBottom()\n        })\n        \n        messages.value[assistantMsgIndex].streaming = false\n        \n        // Áé∞Âú®chatIdÂ∑≤ÁªèÂú®fetchAIStream‰∏≠Êõ¥Êñ∞ÔºåËøôÈáåÁõ¥Êé•Âà§Êñ≠\n        if (chatId.value) {\n          console.log('ÂØπËØùID:', chatId.value);\n        }\n        \n        loading.value = false\n        scrollToBottom()\n        \n      } catch (e) {\n        console.error('AIËÅäÂ§©ËØ∑Ê±ÇÈîôËØØ:', e)\n        messages.value[assistantMsgIndex].content = `AIÊúçÂä°ÊöÇ‰∏çÂèØÁî®: ${e.message || 'Êú™Áü•ÈîôËØØ'}`\n        messages.value[assistantMsgIndex].streaming = false\n        loading.value = false\n        scrollToBottom()\n      }\n      \n      input.value = ''\n      // ÂèëÈÄÅÂêé‰∏çÊ∏ÖÁ©∫Êñá‰ª∂ÂàóË°®Ôºå‰ΩÜÊääÂ∑≤Â§ÑÁêÜÂ§±Ë¥•ÁöÑÊñá‰ª∂Ê∏ÖÈô§\n      selectedFiles.value = selectedFiles.value.filter(file => file.status !== 'failed')\n    }\n    \n    const triggerFileInput = () => {\n      if (fileInput.value) fileInput.value.value = '';\n      fileInput.value && fileInput.value.click()\n    }\n    \n    const handleFileUpload = (e) => {\n      const files = e.target.files\n      if (!files || !files.length) return\n      // Êñ∞Â¢ûÔºöÂâçÁ´ØÊ†°È™åÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã\n      const allowedTypes = [\n        'application/pdf', 'text/plain',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'text/csv', 'application/csv',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.ms-excel',\n        'image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'image/webp'\n      ];\n      Array.from(files).forEach(file => {\n        if (!allowedTypes.includes(file.type)) {\n          alert('‰∏çÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã: ' + file.name)\n          return\n        }\n        const ext = getExt(file.name)\n        const id = file.name + '_' + file.size + '_' + Date.now() + Math.random()\n        if (file.type.startsWith('image/')) {\n          const reader = new FileReader()\n          reader.onload = (ev) => {\n            selectedFiles.value.push({\n              id,\n              name: file.name,\n              type: file.type,\n              url: ev.target.result,\n              size: formatSize(file.size),\n              ext,\n              label: getFileLabel(file.type, ext),\n              bg: getFileBg(ext),\n              rawFile: file,\n              progress: 0,\n              status: 'ready'\n            })\n            // Ëá™Âä®‰∏ä‰º†\n            uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n          }\n          reader.readAsDataURL(file)\n        } else {\n          const url = URL.createObjectURL(file)\n          selectedFiles.value.push({\n            id,\n            name: file.name,\n            type: file.type,\n            url,\n            size: formatSize(file.size),\n            ext,\n            label: getFileLabel(file.type, ext),\n            bg: getFileBg(ext),\n            rawFile: file,\n            progress: 0,\n            status: 'ready'\n          })\n          // Ëá™Âä®‰∏ä‰º†\n          uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n        }\n      })\n    }\n    \n    const removeFile = (idx) => {\n      selectedFiles.value.splice(idx, 1)\n    }\n\n    // markedÈÖçÁΩÆÔºöË°®Ê†ºÂ∏¶ËæπÊ°Ü\n    const renderer = new marked.Renderer();\n    renderer.table = function(header, body) {\n      return `<table class=\"openwebui-md-table\"><thead>${header}</thead><tbody>${body}</tbody></table>`;\n    };\n    marked.setOptions({\n      breaks: true,\n      gfm: true,\n      headerIds: false,\n      mangle: false,\n      renderer\n    })\n\n    return {\n      input, \n      messages, \n      sendMsg, \n      chatBody, \n      fileInput, \n      triggerFileInput, \n      handleFileUpload, \n      selectedFiles, \n      removeFile, \n      UploadFilled, \n      Document, \n      Close, \n      Check,\n      loading, \n      processingFiles,\n      clearChat,\n      showContextBar,\n      chatId\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nhtml, body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-root {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  min-width: 0;\n  background: #f5f6fa;\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-window {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  background: #fff;\n  border-radius: 0;\n  box-shadow: none;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0;\n}\n.openwebui-chat-header {\n  height: 56px;\n  background: #f0f2f5;\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  border-bottom: 1px solid #ececec;\n  flex-shrink: 0;\n  justify-content: space-between;\n}\n.openwebui-title {\n  color: #2f54eb;\n}\n.clear-chat-btn {\n  color: #888;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 14px;\n  font-weight: normal;\n}\n.clear-chat-btn:hover {\n  color: #2f54eb;\n}\n.openwebui-file-preview-bar {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 12px;\n  padding: 12px 0 8px 0;\n  background: transparent;\n  border-bottom: none;\n  overflow-x: auto;\n  min-height: 64px;\n  z-index: 3;\n}\n.openwebui-file-card {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: #f7f8fa;\n  border-radius: 14px;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n  padding: 8px 16px 8px 8px;\n  min-width: 160px;\n  max-width: 240px;\n  position: relative;\n}\n.openwebui-file-thumb {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background: #e6e6e6;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  margin-right: 10px;\n}\n.openwebui-file-img {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n.openwebui-file-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-size: 22px;\n}\n.openwebui-file-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.openwebui-file-name {\n  font-size: 14px;\n  color: #222;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 120px;\n}\n.openwebui-file-meta {\n  font-size: 12px;\n  color: #888;\n  margin-top: 2px;\n}\n.openwebui-file-progress {\n  margin-top: 4px;\n  width: 100%;\n}\n.openwebui-file-status {\n  font-size: 12px;\n  margin-top: 3px;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  \n  &.completed {\n    color: #10b981;\n  }\n  \n  &.failed {\n    color: #f87171;\n  }\n}\n.openwebui-file-remove {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  color: #bbb;\n  font-size: 16px;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n.openwebui-file-remove:hover {\n  color: #f87171;\n}\n.openwebui-chat-body {\n  flex: 1 1 0%;\n  overflow-y: auto;\n  padding: 0 16px 12px 16px;\n  background: #f9fafb;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  max-height: calc(100vh - 200px);\n  height: calc(100vh - 200px);\n  flex-shrink: 1;\n  overflow-y: auto;\n  scrollbar-width: thin;\n}\n.openwebui-msg {\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 16px;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.openwebui-msg.user {\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin-left: auto;\n  margin-right: 0;\n}\n.openwebui-msg.assistant {\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  margin-right: auto;\n  margin-left: 0;\n}\n.openwebui-msg-bubble {\n  max-width: 70%;\n  padding: 12px 18px;\n  border-radius: 16px;\n  font-size: 15px;\n  line-height: 1.7;\n  background: #e6f0ff;\n  color: #222;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n  position: relative;\n  word-break: break-all;\n  overflow-wrap: break-word;\n  margin-top: 4px;\n  margin-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n}\n.openwebui-msg.user .openwebui-msg-bubble {\n  background: #2f54eb;\n  color: #fff;\n  border-bottom-right-radius: 4px;\n  margin-right: 8px;\n  margin-left: 0;\n  margin-right: 8px;\n  margin-left: auto;\n}\n.openwebui-msg.assistant .openwebui-msg-bubble {\n  background: #f0f2f5;\n  color: #222;\n  border-bottom-left-radius: 4px;\n  margin-left: 8px;\n  margin-right: 0;\n  margin-left: 8px;\n  margin-right: auto;\n}\n.openwebui-avatar {\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  margin-bottom: auto;\n}\n.left-avatar {\n  margin-right: 8px;\n}\n.right-avatar {\n  margin-left: 8px;\n}\n.openwebui-user-label {\n  font-weight: bold;\n  margin-right: 4px;\n}\n.openwebui-ai-label {\n  font-weight: bold;\n  color: #2f54eb;\n  margin-right: 4px;\n}\n.openwebui-chat-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0 16px 12px 16px;\n  background: #fff;\n  border-top: 1px solid #ececec;\n  margin: 0;\n  flex-shrink: 0;\n  box-shadow: 0 -2px 16px 0 rgba(47,84,235,0.03);\n  z-index: 2;\n}\n.openwebui-input-area {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n.openwebui-input {\n  flex: 1;\n  margin-right: 12px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n}\n.openwebui-send-btn {\n  min-width: 72px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 8px;\n}\n.openwebui-upload-btn {\n  margin-right: 8px;\n  font-size: 20px;\n  background: #fff;\n  border: 1px solid #e6e6e6;\n  color: #2f54eb;\n  cursor: pointer;\n  border-radius: 8px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: border 0.2s, box-shadow 0.2s;\n}\n.openwebui-upload-btn:hover {\n  border: 1.5px solid #2f54eb;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.08);\n}\n.openwebui-img-preview {\n  max-width: 180px;\n  max-height: 120px;\n  border-radius: 8px;\n  display: block;\n  margin: 4px 0;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.08);\n}\n.openwebui-file-link {\n  color: #2f54eb;\n  text-decoration: underline;\n  word-break: break-all;\n}\n.openwebui-cursor {\n  display: inline-block;\n  width: 8px;\n  height: 16px;\n  background: #2f54eb;\n  margin-left: 2px;\n  vertical-align: middle;\n  animation: blink 0.8s infinite;\n}\n\n@keyframes blink {\n  0% { opacity: 1; }\n  50% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n.file-bubble-nest {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.file-bubble-vertical {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.file-message-card {\n  display: flex;\n  align-items: center;\n  background: #f7f8fa;\n  border-radius: 12px;\n  padding: 8px 16px;\n  margin-bottom: 0;\n  min-width: 180px;\n  max-width: 320px;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.04);\n}\n.file-icon-area {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n}\n.file-icon-img {\n  width: 32px;\n  height: 32px;\n}\n.file-info-area {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-name {\n  font-size: 15px;\n  font-weight: 500;\n  color: #222;\n  margin-bottom: 2px;\n  word-break: break-all;\n}\n.file-meta {\n  font-size: 12px;\n  color: #888;\n}\n.file-desc-text {\n  margin-top: 8px;\n  font-size: 15px;\n  color: #222;\n  background: transparent;\n  border-radius: 8px;\n  padding: 0 2px;\n  display: inline-block;\n  word-break: break-all;\n}\n.openwebui-context-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 24px;\n  background-color: #f5f8ff;\n  border-bottom: 1px solid #e6effb;\n  font-size: 14px;\n  color: #555;\n}\n.context-info {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n.context-icon {\n  color: #2f54eb;\n  font-size: 16px;\n}\n</style>\n\n<style>\n.openwebui-md-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 8px 0;\n  background: #fff;\n  font-size: 15px;\n}\n.openwebui-md-table th, .openwebui-md-table td {\n  border: 1px solid #d4d7e1;\n  padding: 6px 12px;\n  text-align: left;\n}\n.openwebui-md-table th {\n  background: #f0f2f5;\n  font-weight: 600;\n}\n</style> "]}]}