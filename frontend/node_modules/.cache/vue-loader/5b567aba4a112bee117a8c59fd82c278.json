{"remainingRequest":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=style&index=0&id=6ea7d8d9&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1747046910104},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217446},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218792},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217377},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWN0LWNvbnRhaW5lciB7CiAgcGFkZGluZzogMjBweDsKfQoKLmNhcmQtaGVhZGVyLWZsZXggewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi5jb250YWN0cy1uYXYtY2FyZCwKLmNvbnRhY3RzLW5hdiB7CiAgaGVpZ2h0OiA3MDBweDsKfQoKLmNvbnRhY3RzLWxpc3QtY2FyZCwKLmNvbnRhY3RzLWxpc3QgewogIGhlaWdodDogNzAwcHg7Cn0KCi5jb250YWN0cy1uYXYsCi5jb250YWN0cy1saXN0IHsKICBvdmVyZmxvdy15OiBhdXRvOwp9CgouZGVwdC1pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgcGFkZGluZzogMTBweCAxNXB4OwogIGNvbG9yOiAjNDk1MDU3OwogIHRyYW5zaXRpb246IGFsbCAwLjJzOwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9CgouZGVwdC1pdGVtOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhOwogIGNvbG9yOiAjMDA3YmZmOwp9CgouZGVwdC1pdGVtLmFjdGl2ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZjRmZjsKICBjb2xvcjogIzAwN2JmZjsKICBmb250LXdlaWdodDogNTAwOwp9CgouZGVwdC1pdGVtIGkgewogIG1hcmdpbi1yaWdodDogMTBweDsKICBmb250LXNpemU6IDE4cHg7CiAgd2lkdGg6IDI0cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgouZGVwdC1pdGVtIC5iYWRnZSB7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDsKICBjb2xvcjogd2hpdGU7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBwYWRkaW5nOiA0cHggOHB4OwogIGJvcmRlci1yYWRpdXM6IDEwcHg7Cn0KCi5jb250YWN0LWl0ZW0gewogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMGYwZjA7CiAgY3Vyc29yOiBwb2ludGVyOwogIHRyYW5zaXRpb246IGFsbCAwLjJzOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmNvbnRhY3QtaXRlbTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTsKfQoKLmNvbnRhY3QtaXRlbS5hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6ICNlOWY0ZmY7CiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjMDA3YmZmOwp9CgouY29udGFjdC1hdmF0YXIgewogIHdpZHRoOiA0MHB4OwogIGhlaWdodDogNDBweDsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWNlZjsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgbWFyZ2luLXJpZ2h0OiAxNXB4OwogIGZvbnQtc2l6ZTogMTZweDsKICBmb250LXdlaWdodDogNTAwOwogIGNvbG9yOiAjNmM3NTdkOwp9CgouY29udGFjdC1pbmZvIHsKICBmbGV4LWdyb3c6IDE7Cn0KCi5jb250YWN0LW5hbWUgewogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgY29sb3I6ICMzNDNhNDA7CiAgbWFyZ2luLWJvdHRvbTogM3B4Owp9CgouY29udGFjdC1wb3NpdGlvbiB7CiAgY29sb3I6ICM2Yzc1N2Q7CiAgZm9udC1zaXplOiAxM3B4Owp9CgouY29udGFjdC1kZXRhaWwtY2FyZCB7CiAgbWluLWhlaWdodDogNzAwcHg7Cn0KCi5jb250YWN0LWhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5kZXRhaWwtYXZhdGFyIHsKICB3aWR0aDogODBweDsKICBoZWlnaHQ6IDgwcHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIG1hcmdpbi1yaWdodDogMjBweDsKICBmb250LXNpemU6IDMwcHg7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzZjNzU3ZDsKfQoKLmRldGFpbC1pbmZvIHsKICBmbGV4LWdyb3c6IDE7Cn0KCi5kZXRhaWwtbmFtZSB7CiAgZm9udC1zaXplOiAyNHB4OwogIGZvbnQtd2VpZ2h0OiA2MDA7CiAgY29sb3I6ICMzNDNhNDA7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9CgouZGV0YWlsLXBvc2l0aW9uIHsKICBmb250LXNpemU6IDE2cHg7CiAgY29sb3I6ICM2Yzc1N2Q7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9CgouZGV0YWlsLWRlcGFydG1lbnQgewogIGZvbnQtc2l6ZTogMTRweDsKICBjb2xvcjogIzZjNzU3ZDsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgouY29udGFjdC1hY3Rpb25zIHsKICBkaXNwbGF5OiBmbGV4Owp9CgouY29udGFjdC1hY3Rpb25zIC5lbC1idXR0b24gewogIG1hcmdpbi1yaWdodDogMTBweDsKfQoKLmNvbnRhY3Qtc2VjdGlvbiB7CiAgbWFyZ2luLWJvdHRvbTogMjVweDsKfQoKLnNlY3Rpb24tdGl0bGUgewogIGZvbnQtc2l6ZTogMTZweDsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiAjMzQzYTQwOwogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgcGFkZGluZy1ib3R0b206IDEwcHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMGYwZjA7Cn0KCi5jb250YWN0LXJvdyB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW4tYm90dG9tOiAxMnB4Owp9CgouY29udGFjdC1sYWJlbCB7CiAgd2lkdGg6IDEwMHB4OwogIGNvbG9yOiAjNmM3NTdkOwogIGZvbnQtd2VpZ2h0OiA1MDA7Cn0KCi5jb250YWN0LXZhbHVlIHsKICBjb2xvcjogIzM0M2E0MDsKfQoKLnNlYXJjaC1ib3ggewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLnNlYXJjaC1pbnB1dCB7CiAgcGFkZGluZy1sZWZ0OiAzNXB4Owp9Cgouc2VhcmNoLWljb24gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAxMHB4OwogIHRvcDogMTBweDsKICBjb2xvcjogIzZjNzU3ZDsKICB6LWluZGV4OiAyOwp9Cgouc2tpbGxzLXRhZ3MgLmVsLXRhZyB7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7CiAgbWFyZ2luLWJvdHRvbTogOHB4Owp9Cgouc2VhcmNoLWluZm8gewogIHBhZGRpbmc6IDhweCAxNXB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgZm9udC1zaXplOiAxM3B4OwogIGNvbG9yOiAjNmM3NTdkOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLnNlYXJjaC1pbmZvIGkgewogIG1hcmdpbi1yaWdodDogNXB4OwogIGZvbnQtc2l6ZTogMTRweDsKICBjb2xvcjogIzE3YTJiODsKfQo="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"names":[],"mappings":"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","file":"C:/Users/18083/Desktop/offic_ai/office/smart-office/frontend/src/views/contact/Index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"row\">\n      <!-- 左侧部门导航 -->\n      <div class=\"col-md-2\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\">\n          <div class=\"search-box mb-3\">\n            <i class=\"bi bi-search search-icon\"></i>\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索全公司联系人...\"\n              clearable\n              class=\"search-input\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <i :class=\"dept.icon\"></i>\n              <span>{{ dept.name }}</span>\n              <span class=\"badge\">{{ dept.count }}</span>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"col-md-4\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span>{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"col-md-6\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\">{{ getInitials(contacts[selectedContact].name) }}</div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <i class=\"bi bi-chat-dots\"></i> 发送消息\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-envelope\"></i> 发送邮件\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-telephone\"></i> 电话联系\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider></el-divider>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">联系方式</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">手机号码</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].mobile }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">工作电话</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].phone }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">电子邮箱</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].email }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">办公地点</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].office }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">个人信息</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">员工编号</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].employee_id }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">入职日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].join_date }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">出生日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].birthday }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">直系领导</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].manager }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">技能专长</div>\n            <div class=\"skills-tags\">\n              <el-tag \n                v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                :key=\"index\"\n                class=\"mr-2 mb-2\"\n              >\n                {{ skill }}\n              </el-tag>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">管理项目</div>\n            <el-table :data=\"contacts[selectedContact].projects || []\" style=\"width: 100%\">\n              <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\">\n                <template #default=\"scope\">\n                  <el-tag \n                    :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                  >\n                    {{ scope.row.status }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'Contact',\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        if (res.success) {\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          \n          if (!companyId.value) {\n            console.error('当前用户没有关联公司信息:', res.data)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n          return res.data\n        } else {\n          console.error('获取用户信息响应格式错误:', res)\n          ElMessage.error('获取用户信息失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        if (res.success) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset'\n          }\n          \n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count\n          }))\n          \n          departments.value = [...allDepts, ...formattedDepts]\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败')\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) return 0\n        \n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        return res.success ? res.data.length : 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          ElMessage.warning('未找到当前用户所属公司')\n          loading.value.contacts = false\n          return\n        }\n        \n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          params.department = departments.value[selectedDept.value].id\n        }\n        \n        const res = await request(url, { params })\n        if (res.success) {\n          contacts.value = res.data\n          // 打印第一个联系人数据以查看结构\n          if (res.data && res.data.length > 0) {\n            console.log('联系人数据结构示例:', res.data[0])\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败')\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      // 先获取当前用户信息\n      await fetchCurrentUser()\n      \n      // 再加载部门列表\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n      await fetchContacts()\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 获取联系人详细信息\n        const response = await axios.get(`/api/auth/contacts/${contact.id}/`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        console.log('获取联系人详细信息:', response.data)\n        \n        if (!response.data || !response.data.data) {\n          ElMessage.error('获取联系人信息失败')\n          return\n        }\n          \n        const contactData = response.data.data\n        console.log('联系人详细数据:', contactData)\n        \n        // 检查联系人是否有关联用户\n        if (!contactData.user) {\n          console.log('联系人没有关联用户:', contactData)\n          ElMessage.error('该联系人没有关联的用户账号，无法发起聊天')\n          return\n        }\n        \n        // 使用用户ID创建聊天会话\n        const userId = parseInt(contactData.user)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contactData.user)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        console.log('将使用用户ID:', userId)\n        console.log('userId类型:', typeof userId)\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        try {\n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: `与${contactData.name}的聊天`\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat\n    }\n  }\n}\n</script>\n\n<style scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.contacts-nav-card,\n.contacts-nav {\n  height: 700px;\n}\n\n.contacts-list-card,\n.contacts-list {\n  height: 700px;\n}\n\n.contacts-nav,\n.contacts-list {\n  overflow-y: auto;\n}\n\n.dept-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  color: #495057;\n  transition: all 0.2s;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-bottom: 5px;\n}\n\n.dept-item:hover {\n  background-color: #f8f9fa;\n  color: #007bff;\n}\n\n.dept-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n}\n\n.dept-item i {\n  margin-right: 10px;\n  font-size: 18px;\n  width: 24px;\n  text-align: center;\n}\n\n.dept-item .badge {\n  margin-left: auto;\n  background-color: #6c757d;\n  color: white;\n  font-weight: 500;\n  padding: 4px 8px;\n  border-radius: 10px;\n}\n\n.contact-item {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n}\n\n.contact-item:hover {\n  background-color: #f8f9fa;\n}\n\n.contact-item.active {\n  background-color: #e9f4ff;\n  border-left: 3px solid #007bff;\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.contact-info {\n  flex-grow: 1;\n}\n\n.contact-name {\n  font-weight: 500;\n  color: #343a40;\n  margin-bottom: 3px;\n}\n\n.contact-position {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.contact-detail-card {\n  min-height: 700px;\n}\n\n.contact-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.detail-avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  font-size: 30px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.detail-info {\n  flex-grow: 1;\n}\n\n.detail-name {\n  font-size: 24px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 5px;\n}\n\n.detail-position {\n  font-size: 16px;\n  color: #6c757d;\n  margin-bottom: 5px;\n}\n\n.detail-department {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.contact-actions {\n  display: flex;\n}\n\n.contact-actions .el-button {\n  margin-right: 10px;\n}\n\n.contact-section {\n  margin-bottom: 25px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.contact-row {\n  display: flex;\n  margin-bottom: 12px;\n}\n\n.contact-label {\n  width: 100px;\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.contact-value {\n  color: #343a40;\n}\n\n.search-box {\n  position: relative;\n}\n\n.search-input {\n  padding-left: 35px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  color: #6c757d;\n  z-index: 2;\n}\n\n.skills-tags .el-tag {\n  margin-right: 8px;\n  margin-bottom: 8px;\n}\n\n.search-info {\n  padding: 8px 15px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 13px;\n  color: #6c757d;\n  display: flex;\n  align-items: center;\n}\n\n.search-info i {\n  margin-right: 5px;\n  font-size: 14px;\n  color: #17a2b8;\n}\n</style> "]}]}