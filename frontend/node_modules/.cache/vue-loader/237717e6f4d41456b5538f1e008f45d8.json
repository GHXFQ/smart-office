{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Index.vue?vue&type=style&index=0&id=b01c68e2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Index.vue","mtime":1747639653128},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250cmFjdC1jb250YWluZXIgewogIHBhZGRpbmc6IDIwcHg7Cn0KCi5jYXJkLWhlYWRlci1mbGV4IHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouY29udHJhY3QtbGlzdC1jYXJkIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KCi5jb250cmFjdC1saXN0IHsKICBmbGV4OiAxOwogIG92ZXJmbG93LXk6IGF1dG87CiAgbWF4LWhlaWdodDogNjUwcHg7Cn0KCi5jb250cmFjdC1pdGVtIHsKICBwYWRkaW5nOiAxNXB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjBmMGYwOwogIGN1cnNvcjogcG9pbnRlcjsKICB0cmFuc2l0aW9uOiBhbGwgMC4yczsKfQoKLmNvbnRyYWN0LWl0ZW06aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7Cn0KCi5jb250cmFjdC1pdGVtLmFjdGl2ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZjRmZjsKICBib3JkZXItbGVmdDogM3B4IHNvbGlkICMwMDdiZmY7Cn0KCi5jb250cmFjdC10aXRsZSB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzM0M2E0MDsKICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmNvbnRyYWN0LWluZm8gewogIGNvbG9yOiAjNmM3NTdkOwogIGZvbnQtc2l6ZTogMTNweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBtYXJnaW4tdG9wOiA1cHg7Cn0KCi5jb250cmFjdC1zdGF0dXMgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAycHggOHB4OwogIGJvcmRlci1yYWRpdXM6IDEycHg7CiAgZm9udC1zaXplOiAxMnB4Owp9Cgouc3RhdHVzLWRyYWZ0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEwOCwgMTE3LCAxMjUsIDAuMSk7CiAgY29sb3I6ICM2Yzc1N2Q7Cn0KCi5zdGF0dXMtcGVuZGluZyB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDE5MywgNywgMC4xKTsKICBjb2xvcjogI2ZmYzEwNzsKfQoKLnN0YXR1cy1zaWduZWQgewogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDAsIDE2NywgNjksIDAuMSk7CiAgY29sb3I6ICMyOGE3NDU7Cn0KCi5zdGF0dXMtZXhwaXJlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMjAsIDUzLCA2OSwgMC4xKTsKICBjb2xvcjogI2RjMzU0NTsKfQoKLnN0YXR1cy1yZWplY3RlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMDgsIDExNywgMTI1LCAwLjEpOwogIGNvbG9yOiAjNmM3NTdkOwp9CgoubWUtMiB7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7Cn0KCi5tdC0xIHsKICBtYXJnaW4tdG9wOiA0cHg7Cn0KCi5tYi0zIHsKICBtYXJnaW4tYm90dG9tOiAxNnB4Owp9CgoucGFnaW5hdGlvbi1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgbWFyZ2luLXRvcDogMjBweDsKICBwYWRkaW5nOiAxMHB4IDA7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlYmVlZjU7Cn0KCi50ZW1wbGF0ZS1saXN0IHsKICBoZWlnaHQ6IDE1MHB4OwogIG92ZXJmbG93LXk6IGF1dG87CiAgYm9yZGVyOiAxcHggc29saWQgI2ViZWVmNTsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KCi50ZW1wbGF0ZS1pdGVtIHsKICBwYWRkaW5nOiAxMHB4IDE1cHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlYmVlZjU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoudGVtcGxhdGUtaXRlbTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsKfQoKLnRlbXBsYXRlLWl0ZW0uYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZmMmZmOwogIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzQwOWVmZjsKfQoKLnRlbXBsYXRlLW5hbWUgewogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgY29sb3I6ICMzNDNhNDA7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9CgoudGVtcGxhdGUtaW5mbyB7CiAgY29sb3I6ICM2Yzc1N2Q7CiAgZm9udC1zaXplOiAxM3B4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIG1hcmdpbi10b3A6IDVweDsKfQoKLnRlbXBsYXRlLWRlc2MgewogIGNvbG9yOiAjNmM3NTdkOwogIGZvbnQtc2l6ZTogMTJweDsKICBtYXJnaW4tdG9wOiA1cHg7Cn0KCi50ZW1wbGF0ZS1oaW50IHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICM2Yzc1N2Q7CiAgZm9udC1zaXplOiAxMnB4OwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi8qIERpYWxvZyAmIEZvcm0gU3R5bGVzICovCi5kaWFsb2ctZm9vdGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgd2lkdGg6IDEwMCU7CiAgZ2FwOiAxMHB4Owp9Cg=="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Index.vue"],"names":[],"mappings":"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","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/contract/Index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"contract-container\">\n    <div class=\"row\">\n      <!-- 合同列表 -->\n      <div class=\"col-lg-12\">\n        <el-card class=\"contract-list-card\" v-loading=\"isLoading\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span>合同列表</span>\n              <div class=\"d-flex align-items-center ms-auto me-3\"> \n            <el-input \n              v-model=\"searchQuery\" \n                  placeholder=\"搜索标题或编号...\" \n              clearable\n              :prefix-icon=\"Search\"\n                  class=\"me-2\"\n                  style=\"width: 200px;\"\n                  @clear=\"handleFilterChange\"\n                  @keyup.enter=\"handleFilterChange\"\n            ></el-input>\n            <el-select \n              v-model=\"filterStatus\" \n                  placeholder=\"所有状态\" \n              clearable\n                  class=\"me-2\"\n                  style=\"width: 150px;\"\n                  @change=\"handleFilterChange\"\n            >\n                  <el-option label=\"所有状态\" value=\"\"></el-option>\n              <el-option label=\"草稿\" value=\"draft\"></el-option>\n              <el-option label=\"待审批\" value=\"pending\"></el-option>\n              <el-option label=\"已签署\" value=\"signed\"></el-option>\n              <el-option label=\"已过期\" value=\"expired\"></el-option>\n                  <el-option label=\"已驳回\" value=\"rejected\"></el-option>\n                </el-select>\n                <el-select \n                  v-model=\"sortBy\" \n                  placeholder=\"默认排序\" \n                  class=\"me-2\"\n                  style=\"width: 150px;\"\n                  @change=\"handleFilterChange\"\n                >\n                  <el-option label=\"默认排序\" value=\"default\"></el-option>\n                  <el-option label=\"合同标题\" value=\"title\"></el-option>\n                  <el-option label=\"创建时间\" value=\"created_at\"></el-option>\n                  <el-option label=\"合同金额\" value=\"amount\"></el-option>\n                </el-select>\n                <el-select \n                  v-model=\"sortOrder\" \n                  style=\"width: 100px;\"\n                  @change=\"handleFilterChange\"\n                >\n                  <el-option label=\"升序\" value=\"asc\"></el-option>\n                  <el-option label=\"降序\" value=\"desc\"></el-option>\n            </el-select>\n          </div>\n              <el-button type=\"primary\" size=\"small\" @click=\"openContractDialog\">\n                <el-icon class=\"mr-1\"><Plus /></el-icon> 新建合同\n              </el-button>\n            </div>\n          </template>\n          \n          <div class=\"contract-list\">\n            <div \n              v-for=\"(contract, index) in filteredContracts\" \n              :key=\"index\"\n              class=\"contract-item\"\n              :class=\"{'active': selectedContract === index}\"\n              @click=\"viewContractDetail(contract, index)\"\n            >\n              <div class=\"contract-title\">\n                {{ contract.title }}\n                <span class=\"contract-status\" :class=\"'status-' + contract.status\">\n                  {{ getStatusText(contract.status) }}\n                </span>\n              </div>\n              <div class=\"contract-info\">\n                <span>合同编号: {{ contract.number }}</span>\n                <span>创建时间: {{ contract.createdAt }}</span>\n              </div>\n              <div class=\"contract-info mt-1\">\n                <span>{{ contract.company }}</span>\n                <span>金额: {{ contract.amount }}</span>\n              </div>\n            </div>\n            \n            <el-empty \n              v-if=\"filteredContracts.length === 0\" \n              description=\"没有找到匹配的合同\"\n            ></el-empty>\n          </div>\n          \n          <!-- 添加分页组件 -->\n          <div class=\"pagination-container\">\n            <el-pagination\n              v-model:current-page=\"currentPage\"\n              v-model:page-size=\"pageSize\"\n              :page-sizes=\"[10, 20, 30, 50]\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"totalItems\"\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n            />\n          </div>\n        </el-card>\n      </div>\n      </div>\n      \n    <!-- 创建合同模态框 -->\n    <el-dialog\n      v-model=\"showNewContractDialog\"\n      title=\"新建合同\"\n      width=\"70%\"\n                >\n      <!-- 创建方式 -->\n      <div class=\"mb-3\">\n        <label class=\"form-label fw-bold\">创建方式:</label>\n        <div>\n          <el-radio-group v-model=\"creationMode\">\n            <el-radio label=\"manual\">手动创建</el-radio>\n            <el-radio label=\"template\">使用模板</el-radio>\n            <el-radio label=\"ai\">AI 生成</el-radio>\n          </el-radio-group>\n              </div>\n            </div>\n      <el-divider />\n          \n      <!-- 手动创建部分 -->\n      <div v-if=\"creationMode === 'manual'\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <el-form-item label=\"合同名称\" required>\n              <el-input v-model=\"newContract.title\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"合同类型\" required>\n              <el-select \n                v-model=\"newContract.type\" \n                placeholder=\"请选择...\" \n                style=\"width: 100%\"\n                filterable\n                allow-create\n                default-first-option\n                @change=\"handleContractTypeChange\"\n              >\n                <el-option label=\"采购合同\" value=\"采购合同\"></el-option>\n                <el-option label=\"销售合同\" value=\"销售合同\"></el-option>\n                <el-option label=\"服务合同\" value=\"服务合同\"></el-option>\n                <el-option label=\"合作协议\" value=\"合作协议\"></el-option>\n                <el-option label=\"租赁合同\" value=\"租赁合同\"></el-option>\n                <el-option label=\"其他\" value=\"其他\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"签约对方\" required>\n              <el-input v-model=\"newContract.company\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"合同金额\" required>\n              <el-input v-model=\"newContract.amount\" prefix=\"¥\"></el-input>\n            </el-form-item>\n                  </div>\n          <div class=\"col-md-6\">\n            <el-form-item label=\"签约日期\">\n              <el-date-picker \n                v-model=\"newContract.signDate\" \n                type=\"date\" \n                placeholder=\"选择日期\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n            <el-form-item label=\"生效日期\">\n              <el-date-picker \n                v-model=\"newContract.startDate\" \n                type=\"date\" \n                placeholder=\"选择日期\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n            <el-form-item label=\"到期日期\">\n              <el-date-picker \n                v-model=\"newContract.expireDate\" \n                type=\"date\" \n                placeholder=\"选择日期\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n                  </div>\n                  </div>\n        <el-form-item label=\"备注\">\n          <el-input \n            v-model=\"newContract.remark\" \n            type=\"textarea\" \n            :rows=\"3\"\n          ></el-input>\n        </el-form-item>\n                </div>\n\n      <!-- 模板选择部分 -->\n      <div v-if=\"creationMode === 'template'\">\n        <div class=\"row\">\n          <div class=\"col-md-4 mb-3\">\n            <el-form-item label=\"合同类型\">\n              <el-select v-model=\"templateForm.contractType\" placeholder=\"请选择...\" style=\"width: 100%\">\n                <el-option label=\"采购合同\" value=\"采购合同\"></el-option>\n                <el-option label=\"销售合同\" value=\"销售合同\"></el-option>\n                <el-option label=\"租赁合同\" value=\"租赁合同\"></el-option>\n                <el-option label=\"服务协议\" value=\"服务协议\"></el-option>\n                <el-option label=\"劳动合同\" value=\"劳动合同\"></el-option>\n                <el-option label=\"保密协议\" value=\"保密协议\"></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <div class=\"col-md-4 mb-3\">\n            <el-form-item label=\"行业领域\">\n              <el-select v-model=\"templateForm.industry\" placeholder=\"请选择...\" style=\"width: 100%\">\n                <el-option label=\"信息技术\" value=\"信息技术\"></el-option>\n                <el-option label=\"制造业\" value=\"制造业\"></el-option>\n                <el-option label=\"零售与电商\" value=\"零售与电商\"></el-option>\n                <el-option label=\"金融服务\" value=\"金融服务\"></el-option>\n                <el-option label=\"医疗健康\" value=\"医疗健康\"></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n          <div class=\"col-md-4 mb-3\">\n            <el-form-item label=\"交易场景\">\n              <el-select v-model=\"templateForm.scene\" placeholder=\"请选择...\" style=\"width: 100%\">\n                <el-option label=\"国内贸易\" value=\"国内贸易\"></el-option>\n                <el-option label=\"跨境交易\" value=\"跨境交易\"></el-option>\n                <el-option label=\"股权融资\" value=\"股权融资\"></el-option>\n                <el-option label=\"知识产权转让\" value=\"知识产权转让\"></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n        </div>\n              \n        <div class=\"mb-3\">\n          <label class=\"form-label\">推荐模板:</label>\n          <div class=\"template-list\" v-loading=\"isLoadingTemplates\">\n            <div \n              v-for=\"(template, idx) in availableTemplates\" \n              :key=\"idx\"\n              class=\"template-item\"\n              :class=\"{'active': selectedTemplate === idx}\"\n              @click=\"handleTemplateSelect(idx)\"\n            >\n              <div class=\"template-name\">{{ template.name }}</div>\n              <div class=\"template-info\">\n                <span class=\"template-type\">{{ template.contract_type }}</span>\n                <span class=\"template-industry\" v-if=\"template.industry\">{{ template.industry }}</span>\n              </div>\n              <div class=\"template-desc\" v-if=\"template.description\">{{ template.description }}</div>\n            </div>\n            \n            <el-empty \n              v-if=\"!isLoadingTemplates && availableTemplates.length === 0 && (templateForm.contractType || templateForm.industry || templateForm.scene)\"\n              description=\"没有找到匹配的模板\"\n              :image-size=\"100\"\n            ></el-empty>\n            \n            <div class=\"template-hint\" v-if=\"!templateForm.contractType && !templateForm.industry && !templateForm.scene\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>请选择合同类型、行业或场景以获取推荐模板</span>\n            </div>\n          </div>\n        </div>\n                  \n        <div class=\"row\">\n          <div class=\"col-md-6 mb-3\">\n            <el-form-item label=\"合同名称\" required>\n              <el-input v-model=\"templateForm.title\" placeholder=\"请输入合同名称\"></el-input>\n            </el-form-item>\n          </div>\n          <div class=\"col-md-6 mb-3\">\n            <el-form-item label=\"签约对方\" required>\n              <el-input v-model=\"templateForm.company\" placeholder=\"请输入签约对方名称\"></el-input>\n            </el-form-item>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col-md-6 mb-3\">\n            <el-form-item label=\"合同金额\">\n              <el-input v-model=\"templateForm.amount\" placeholder=\"请输入金额\" prefix=\"¥\"></el-input>\n            </el-form-item>\n          </div>\n        </div>\n              \n        <el-form-item label=\"备注\">\n          <el-input\n            v-model=\"templateForm.remark\" \n            type=\"textarea\"\n            :rows=\"2\"\n          ></el-input>\n        </el-form-item>\n      </div>\n\n      <!-- AI生成部分 -->\n      <div v-if=\"creationMode === 'ai'\">\n        <el-form-item label=\"一句话描述合同需求\" required>\n          <el-input \n            v-model=\"aiForm.coreElements\" \n            type=\"textarea\" \n            :rows=\"4\"\n            placeholder=\"例如：帮我生成一份甲方为XX科技公司，乙方为XX物流公司的物流运输合同，主要包含运输货物、时间、费用和付款方式等关键信息。\"\n          ></el-input>\n        </el-form-item>\n              </div>\n\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"showNewContractDialog = false\">取消</el-button>\n          <el-button type=\"info\" @click=\"saveAsDraft\">保存草稿</el-button>\n          <el-button type=\"primary\" @click=\"submitContract\">\n            {{ getSubmitButtonText() }}\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, watch } from 'vue'\nimport { \n  Plus, Search, InfoFilled\n} from '@element-plus/icons-vue'\nimport { ElMessage, ElLoading } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport { \n  getContractList, createContract as createContractAPI,\n  getRecommendedTemplates, createContractFromTemplate \n} from '@/api/contract'\nimport store from '@/store'\n\n// 格式化日期为YYYY-MM-DD\nfunction formatDate(date) {\n  if (!date) return null;\n  if (typeof date === 'string') return date;\n  return date.toISOString().split('T')[0];\n}\n\nexport default {\n  name: 'Contract',\n  setup() {\n    const router = useRouter()\n    const searchQuery = ref('')\n    const filterStatus = ref('')\n    const sortBy = ref('default')\n    const sortOrder = ref('desc')\n    const selectedContract = ref(0)\n    const showNewContractDialog = ref(false)\n    const creationMode = ref('manual')\n    const selectedTemplate = ref(null)\n    const isLoading = ref(false)\n    \n    // 分页相关状态\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const totalItems = ref(0)\n    \n    // 新合同表单\n    const newContract = reactive({\n      title: '',\n      type: '',\n      company: '',\n      amount: '',\n        signDate: '',\n      startDate: '',\n      expireDate: '',\n      remark: ''\n    })\n\n    // 模板表单\n    const templateForm = reactive({\n      contractType: '',\n      industry: '',\n      scene: '',\n      title: '',\n      company: '',\n      amount: '',\n      remark: ''\n    })\n\n    // AI表单\n    const aiForm = reactive({\n      coreElements: ''\n    })\n\n    // 可用模板列表\n    const availableTemplates = ref([])\n    const isLoadingTemplates = ref(false)\n    \n    // 合同列表 - 从API获取\n    const contracts = ref([])\n    \n    // 监听模板筛选条件变化，加载推荐模板\n    watch(\n      () => [templateForm.contractType, templateForm.industry, templateForm.scene],\n      async () => {\n        await loadRecommendedTemplates()\n      }\n    )\n    \n    // 加载推荐的合同模板\n    const loadRecommendedTemplates = async () => {\n      if (!templateForm.contractType && !templateForm.industry && !templateForm.scene) {\n        availableTemplates.value = []\n        return\n      }\n      \n      try {\n        isLoadingTemplates.value = true\n        selectedTemplate.value = null\n        \n        const params = {\n          contract_type: templateForm.contractType,\n          industry: templateForm.industry,\n          scene: templateForm.scene\n        }\n        \n        const response = await getRecommendedTemplates(params)\n        console.log('获取到的模板数据:', response)  // 添加调试信息\n        availableTemplates.value = response\n        \n        // 如果只有一个模板，自动选择\n        if (availableTemplates.value.length === 1) {\n          selectedTemplate.value = 0\n        }\n      } catch (error) {\n        console.error('加载推荐模板失败:', error)\n        ElMessage.error('获取推荐模板失败，请稍后重试')\n      } finally {\n        isLoadingTemplates.value = false\n      }\n    }\n\n    // 当选择一个模板时\n    const handleTemplateSelect = (index) => {\n      selectedTemplate.value = index\n      const template = availableTemplates.value[index]\n      \n      // 根据模板填充表单\n      if (template) {\n        // 自动生成标题建议\n        const currentDate = new Date().toLocaleDateString('zh-CN')\n        templateForm.title = `${template.contract_type}(${currentDate})`\n      }\n    }\n    \n    // 加载合同列表数据\n    const loadContracts = async () => {\n      try {\n        isLoading.value = true\n        const response = await getContractList({\n          search: searchQuery.value,\n          status: filterStatus.value,\n          ordering: sortOrder.value === 'desc' ? `-${sortBy.value}` : sortBy.value,\n          page: currentPage.value,\n          page_size: pageSize.value\n        })\n        \n        // 格式化后端返回的数据\n        const formattedContracts = response.results.map(contract => ({\n          id: contract.id,\n          title: contract.title,\n          number: contract.number,\n          status: contract.status,\n          expireDate: contract.expire_date || '未设置',\n          company: contract.company,\n          createdAt: contract.created_at,\n          amount: `￥${contract.amount}`\n        }))\n        \n        contracts.value = formattedContracts\n        totalItems.value = response.count\n      } catch (error) {\n        console.error('加载合同列表失败:', error)\n        ElMessage.error('加载合同列表失败，请稍后重试')\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // 根据筛选条件过滤合同\n    const filteredContracts = computed(() => {\n      // 因为我们现在在API层面做了筛选，这里只是展示返回的数据\n      return contracts.value\n    })\n    \n    // 获取状态文本\n    const getStatusText = (status) => {\n      const statusMap = {\n        'draft': '草稿',\n        'pending': '待审批',\n        'signed': '已签署',\n        'expired': '已过期',\n        'rejected': '已驳回'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 创建合同\n    const openContractDialog = () => {\n      resetForms()\n      showNewContractDialog.value = true\n    }\n    \n    // 重置表单\n    const resetForms = () => {\n      Object.keys(newContract).forEach(key => {\n        newContract[key] = ''\n      })\n      Object.keys(templateForm).forEach(key => {\n        templateForm[key] = ''\n      })\n      aiForm.coreElements = ''\n      creationMode.value = 'manual'\n      selectedTemplate.value = null\n    }\n    \n    // 获取提交按钮文本\n    const getSubmitButtonText = () => {\n      switch (creationMode.value) {\n        case 'template':\n          return '使用模板创建'\n        case 'ai':\n          return 'AI 生成合同'\n        default:\n          return '提交审批'\n      }\n    }\n    \n    // 保存为草稿\n    const saveAsDraft = async () => {\n      try {\n        const loading = ElLoading.service({\n          lock: true,\n          text: '正在保存...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n        \n        // 从Vuex中获取当前用户ID\n        const userId = store.getters.user?.id\n        if (!userId) {\n          ElMessage.error('用户未登录或无法获取用户ID')\n          loading.close()\n          return\n        }\n        \n        // 根据不同的创建模式，构建合同数据\n        let contractData = {}\n        \n        if (creationMode.value === 'manual') {\n          // 验证必填字段\n          if (!newContract.title || !newContract.type || !newContract.company) {\n            ElMessage.error('请填写必填字段：合同名称、合同类型和签约对方')\n            loading.close()\n            return\n          }\n          \n          contractData = {\n            title: newContract.title,\n            type: newContract.type,\n            company: newContract.company,\n            amount: newContract.amount ? Number(newContract.amount.replace(/[^\\d.]/g, '')) : 0,\n            sign_date: formatDate(newContract.signDate),\n            start_date: formatDate(newContract.startDate),\n            expire_date: formatDate(newContract.expireDate),\n            remark: newContract.remark || '',\n            status: 'draft'\n          }\n        } else if (creationMode.value === 'template') {\n          // 验证必填字段\n          if (!templateForm.title || !templateForm.contractType || !templateForm.company) {\n            ElMessage.error('请填写必填字段：合同名称、合同类型和签约对方')\n            loading.close()\n            return\n          }\n          \n          contractData = {\n            title: templateForm.title,\n            type: templateForm.contractType,\n            company: templateForm.company,\n            amount: 0, // 默认值\n            remark: templateForm.remark || '',\n            status: 'draft'\n          }\n        } else if (creationMode.value === 'ai') {\n          // 验证必填字段\n          if (!aiForm.coreElements) {\n            ElMessage.error('请填写合同需求描述')\n            loading.close()\n            return\n          }\n          \n          contractData = {\n            description: aiForm.coreElements,\n            use_ai_agent: true,\n            status: 'draft'\n          }\n        }\n        \n        // 调用API创建合同\n        console.log('提交合同数据:', JSON.stringify(contractData));\n        await createContractAPI(contractData)\n        \n        ElMessage.success('合同已保存为草稿')\n        showNewContractDialog.value = false\n        \n        // 重新加载合同列表\n        await loadContracts()\n        \n        loading.close()\n      } catch (error) {\n        console.error('保存草稿失败:', error)\n        let errorMsg = '保存草稿失败，请检查输入内容'\n        \n        // 尝试提取更详细的错误信息\n        if (error.response && error.response.data) {\n          if (typeof error.response.data === 'string') {\n            errorMsg = error.response.data\n          } else if (typeof error.response.data === 'object') {\n            try {\n              const errorDetails = Object.entries(error.response.data)\n                .map(([key, value]) => `${key}: ${Array.isArray(value) ? value.join(', ') : value}`)\n                .join('; ')\n              errorMsg = `保存失败: ${errorDetails}`\n            } catch (e) {\n              console.error('解析错误详情失败:', e)\n            }\n          }\n        }\n        \n        ElMessage.error(errorMsg)\n      }\n    }\n    \n    // 提交合同\n    const submitContract = async () => {\n      // 验证必填字段\n      if (creationMode.value === 'template' && selectedTemplate.value === null) {\n        ElMessage.error('请选择一个模板')\n        return\n      }\n      \n      // 启动全屏加载\n      const loading = ElLoading.service({\n        lock: true,\n        text: '提交中...',\n        background: 'rgba(0, 0, 0, 0.7)'\n      })\n      \n      try {\n        let contractData = {}\n        let response = null\n        \n        // 根据不同的创建模式处理数据\n        if (creationMode.value === 'manual') {\n          // 验证必填字段\n          if (!newContract.title || !newContract.type || !newContract.company) {\n            ElMessage.error('请填写必填字段：合同名称、合同类型和签约对方')\n            loading.close()\n            return\n          }\n          \n          contractData = {\n            title: newContract.title,\n            type: newContract.type,\n            company: newContract.company,\n            amount: newContract.amount ? Number(newContract.amount.replace(/[^\\d.]/g, '')) : 0,\n            sign_date: formatDate(newContract.signDate),\n            start_date: formatDate(newContract.startDate),\n            expire_date: formatDate(newContract.expireDate),\n            remark: newContract.remark || '',\n            status: 'pending'\n          }\n        } else if (creationMode.value === 'template') {\n          // 使用模板创建合同\n          if (selectedTemplate.value === null) {\n            ElMessage.error('请选择一个模板')\n            loading.close()\n            return\n          }\n          \n          // 验证必填字段\n          if (!templateForm.title) {\n            ElMessage.error('请填写合同标题')\n            loading.close()\n            return\n          }\n          \n          if (!templateForm.company) {\n            ElMessage.error('请填写签约对方')\n            loading.close()\n            return\n          }\n          \n          // 获取选择的模板\n          const template = availableTemplates.value[selectedTemplate.value]\n          \n          try {\n            // 使用API创建合同\n            response = await createContractFromTemplate(template.id, {\n              title: templateForm.title,\n              company: templateForm.company,\n              type: template.contract_type,\n              amount: templateForm.amount || 0,\n              remark: templateForm.remark\n            })\n            \n            // 成功创建后直接显示成功信息并返回\n            const actionText = getSubmitButtonText()\n            ElMessage.success(actionText + '请求已提交')\n            showNewContractDialog.value = false\n            \n            // 如果有响应且包含合同ID，跳转到详情页面\n            if (response && response.id) {\n              // 给后端一些处理时间\n              loading.text = '合同创建完成，正在跳转...'\n              await new Promise(resolve => setTimeout(resolve, 1000))\n              \n              router.push({\n                name: 'ContractDetail',\n                params: { id: response.id }\n              })\n            } else {\n              // 重新加载合同列表\n              await loadContracts()\n            }\n            \n            loading.close()\n            return\n          } catch (error) {\n            console.error('使用模板创建合同失败:', error)\n            throw error  // 重新抛出错误，会被外层catch捕获\n          }\n        } else if (creationMode.value === 'ai') {\n          // 验证必填字段\n          if (!aiForm.coreElements) {\n            ElMessage.error('请填写合同需求描述')\n            loading.close()\n            return\n          }\n          \n          contractData = {\n            description: aiForm.coreElements,\n            use_ai_agent: true,\n            status: 'pending'\n          }\n        }\n        \n        // 调用API创建合同 - 添加重试逻辑\n        console.log('提交合同数据:', JSON.stringify(contractData))\n        let retryCount = 0\n        const maxRetries = 3\n        \n        while (retryCount < maxRetries) {\n          try {\n            // 对AI生成设置更长的超时时间\n            const timeout = creationMode.value === 'ai' ? 180000 : 60000 // AI生成3分钟，其他1分钟\n            \n            loading.text = creationMode.value === 'ai' \n              ? '正在使用AI生成合同，这可能需要一些时间...'\n              : '正在提交...'\n            \n            // 创建一个可以取消的请求\n            const controller = new AbortController()\n            const timeoutId = setTimeout(() => {\n              controller.abort()\n            }, timeout)\n            \n            // 发送请求\n            response = await createContractAPI({ \n              ...contractData,\n              signal: controller.signal\n            })\n            \n            // 清除超时计时器\n            clearTimeout(timeoutId)\n            \n            // 成功获取响应，跳出循环\n            break\n          } catch (apiError) {\n            retryCount++\n            console.error(`API调用失败(${retryCount}/${maxRetries}):`, apiError)\n            \n            // 检查是否是超时或网络错误\n            const isNetworkError = !apiError.response && apiError.message && \n                                  (apiError.message.includes('Network Error') ||\n                                   apiError.message.includes('timeout') ||\n                                   apiError.message.includes('aborted'))\n            \n            if (isNetworkError && retryCount < maxRetries) {\n              // 网络错误可以重试\n              loading.text = `连接失败，正在进行第${retryCount}次重试...`\n              \n              // 等待一段时间后重试\n              const retryDelay = 3000 * retryCount  // 递增延迟：3秒，6秒，9秒...\n              await new Promise(resolve => setTimeout(resolve, retryDelay))\n            } else if (retryCount >= maxRetries) {\n              // 达到最大重试次数，抛出最后的错误\n              throw apiError\n            } else {\n              // 其他类型的错误，直接抛出\n              throw apiError\n            }\n          }\n        }\n        \n        const actionText = getSubmitButtonText()\n        ElMessage.success(actionText + '请求已提交')\n        showNewContractDialog.value = false\n        \n        // AI生成情况下直接跳转到合同详情页面\n        if (creationMode.value === 'ai' && response && response.id) {\n          // 给后端一些处理时间\n          loading.text = '合同生成完成，正在跳转...'\n          await new Promise(resolve => setTimeout(resolve, 1000))\n          \n          router.push({\n            name: 'ContractDetail',\n            params: { id: response.id }\n          })\n        } else {\n          // 重新加载合同列表\n          await loadContracts()\n        }\n        \n        loading.close()\n      } catch (error) {\n        console.error('提交合同失败:', error)\n        let errorMsg = '提交合同失败，请检查输入内容'\n        \n        // 检查特定的网络错误\n        if (!error.response && error.message) {\n          if (error.message.includes('Network Error')) {\n            errorMsg = '网络连接错误，请确保后端服务正常运行并稍后重试'\n          } else if (error.message.includes('timeout')) {\n            errorMsg = '请求超时，AI生成合同可能需要较长时间，请稍后重试'\n          } else if (error.message.includes('aborted')) {\n            errorMsg = '请求被中断，请稍后重试'\n          }\n        } else if (error.response && error.response.data) {\n          if (typeof error.response.data === 'string') {\n            errorMsg = error.response.data\n          } else if (typeof error.response.data === 'object') {\n            try {\n              if (error.response.data.error) {\n                // 直接使用后端返回的错误消息\n                errorMsg = error.response.data.error\n              } else {\n                const errorDetails = Object.entries(error.response.data)\n                  .map(([key, value]) => `${key}: ${Array.isArray(value) ? value.join(', ') : value}`)\n                  .join('; ')\n                errorMsg = `提交失败: ${errorDetails}`\n              }\n            } catch (e) {\n              console.error('解析错误详情失败:', e)\n            }\n          }\n        }\n        \n        ElMessage.error(errorMsg)\n        console.log('关闭加载框...')\n        ElLoading.service().close()  // 确保加载框关闭\n      }\n    }\n    \n    // 查看合同详情\n    const viewContractDetail = (contract, index) => {\n      selectedContract.value = index\n      router.push({\n        name: 'ContractDetail',\n        params: { id: contract.id }\n      })\n    }\n    \n    // 筛选和排序变化时重新加载数据\n    const handleFilterChange = () => {\n      currentPage.value = 1 // 重置到第一页\n      loadContracts()\n    }\n    \n    // 在 script setup 部分添加处理函数\n    const handleContractTypeChange = (value) => {\n      // 如果用户选择了\"其他\"，清空当前值以允许输入\n      if (value === '其他') {\n        newContract.type = ''\n      }\n    }\n    \n    // 处理分页大小变化\n    const handleSizeChange = (newSize) => {\n      pageSize.value = newSize\n      currentPage.value = 1 // 重置到第一页\n      loadContracts()\n    }\n    \n    // 处理页码变化\n    const handleCurrentChange = (newPage) => {\n      currentPage.value = newPage\n      loadContracts()\n    }\n    \n    // 初始化加载数据\n    onMounted(() => {\n      loadContracts()\n    })\n    \n    return {\n      searchQuery,\n      filterStatus,\n      sortBy,\n      sortOrder,\n      selectedContract,\n      contracts,\n      filteredContracts,\n      showNewContractDialog,\n      creationMode,\n      newContract,\n      templateForm,\n      aiForm,\n      selectedTemplate,\n      availableTemplates,\n      isLoading,\n      isLoadingTemplates,\n      // 分页相关\n      currentPage,\n      pageSize,\n      totalItems,\n      // 图标\n      Plus,\n      Search,\n      InfoFilled,\n      // 方法\n      getStatusText,\n      openContractDialog,\n      getSubmitButtonText,\n      saveAsDraft,\n      submitContract,\n      viewContractDetail,\n      handleFilterChange,\n      handleContractTypeChange,\n      handleTemplateSelect,\n      handleSizeChange,\n      handleCurrentChange\n    }\n  }\n}\n</script>\n\n<style scoped>\n.contract-container {\n  padding: 20px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.contract-list-card {\n  display: flex;\n  flex-direction: column;\n}\n\n.contract-list {\n  flex: 1;\n  overflow-y: auto;\n  max-height: 650px;\n}\n\n.contract-item {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.contract-item:hover {\n  background-color: #f8f9fa;\n}\n\n.contract-item.active {\n  background-color: #e9f4ff;\n  border-left: 3px solid #007bff;\n}\n\n.contract-title {\n  font-weight: 500;\n  color: #343a40;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.contract-info {\n  color: #6c757d;\n  font-size: 13px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 5px;\n}\n\n.contract-status {\n  display: inline-block;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n}\n\n.status-draft {\n  background-color: rgba(108, 117, 125, 0.1);\n  color: #6c757d;\n}\n\n.status-pending {\n  background-color: rgba(255, 193, 7, 0.1);\n  color: #ffc107;\n}\n\n.status-signed {\n  background-color: rgba(40, 167, 69, 0.1);\n  color: #28a745;\n}\n\n.status-expired {\n  background-color: rgba(220, 53, 69, 0.1);\n  color: #dc3545;\n}\n\n.status-rejected {\n  background-color: rgba(108, 117, 125, 0.1);\n  color: #6c757d;\n}\n\n.me-2 {\n  margin-right: 8px;\n}\n\n.mt-1 {\n  margin-top: 4px;\n}\n\n.mb-3 {\n  margin-bottom: 16px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  padding: 10px 0;\n  border-top: 1px solid #ebeef5;\n}\n\n.template-list {\n  height: 150px;\n  overflow-y: auto;\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n}\n\n.template-item {\n  padding: 10px 15px;\n  border-bottom: 1px solid #ebeef5;\n  cursor: pointer;\n}\n\n.template-item:hover {\n  background-color: #f5f7fa;\n}\n\n.template-item.active {\n  background-color: #e6f2ff;\n  border-left: 2px solid #409eff;\n}\n\n.template-name {\n  font-weight: 500;\n  color: #343a40;\n  margin-bottom: 5px;\n}\n\n.template-info {\n  color: #6c757d;\n  font-size: 13px;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 5px;\n}\n\n.template-desc {\n  color: #6c757d;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.template-hint {\n  text-align: center;\n  color: #6c757d;\n  font-size: 12px;\n  margin-top: 10px;\n}\n\n/* Dialog & Form Styles */\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  gap: 10px;\n}\n</style> "]}]}