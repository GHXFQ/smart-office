{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\ProjectDetail.vue?vue&type=style&index=0&id=0ef4aeec&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\ProjectDetail.vue","mtime":1748431622208},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2Jvb3RzdHJhcEA1LjMuMC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcycpOwpAaW1wb3J0IHVybCgnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9ib290c3RyYXAtaWNvbnNAMS4xMC4wL2ZvbnQvYm9vdHN0cmFwLWljb25zLmNzcycpOwoubWFpbi1jb250YWluZXIgewogIG1pbi1oZWlnaHQ6IDEwMHZoOwogIGJhY2tncm91bmQ6ICNmNWY3ZmE7CiAgcGFkZGluZy10b3A6IDA7Cn0KLnBhZ2UtaGVhZGVyIHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIHBhZGRpbmc6IDIwcHg7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsMCwwLDAuMDUpOwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgbWFyZ2luLXRvcDogMDsKfQoubmF2LXRhYnMtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIHBhZGRpbmc6IDAgMjBweDsKICBib3JkZXItcmFkaXVzOiA4cHg7CiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4wNSk7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoubmF2LXRhYnMgewogIGJvcmRlci1ib3R0b206IG5vbmU7Cn0KLm5hdi1saW5rIHsKICBjb2xvcjogIzZjNzU3ZDsKICBwYWRkaW5nOiAxNXB4IDIwcHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogOHB4OwogIGJvcmRlcjogbm9uZTsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7Cn0KLm5hdi1saW5rLmFjdGl2ZSB7CiAgY29sb3I6ICMwZDZlZmQ7CiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwZDZlZmQ7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7Cn0KLmNvbnRlbnQtYXJlYSB7CiAgcGFkZGluZzogMjBweDsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIGJvcmRlci1yYWRpdXM6IDhweDsKICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjA1KTsKfQouYmctcHJpbWFyeSB7IGJhY2tncm91bmQ6ICMwZDZlZmQhaW1wb3J0YW50OyB9Ci5iZy1zdWNjZXNzIHsgYmFja2dyb3VuZDogIzE5ODc1NCFpbXBvcnRhbnQ7IH0KLmJnLXdhcm5pbmcgeyBiYWNrZ3JvdW5kOiAjZmZjMTA3IWltcG9ydGFudDsgfQouYmctc2Vjb25kYXJ5IHsgYmFja2dyb3VuZDogIzZjNzU3ZCFpbXBvcnRhbnQ7IH0KLmJnLWluZm8geyBiYWNrZ3JvdW5kOiAjMGRjYWYwIWltcG9ydGFudDsgfQouYmFkZ2UgewogIGZvbnQtd2VpZ2h0OiA1MDA7CiAgcGFkZGluZzogNnB4IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGNvbG9yOiAjZmZmOwp9Ci8qIOWmguaenOacieWFqOWxgOagt+W8j+WvvOiHtOepuueZve+8jOWPr+W8uuWItuimhuebliAqLwo6ZGVlcCguZWwtbWFpbikgewogIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\ProjectDetail.vue"],"names":[],"mappings":"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","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/project/ProjectDetail.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"main-container\">\n    <!-- 页面头部 -->\n    <div class=\"page-header\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n          <h4>{{ project ? project.name : '项目详情' }}</h4>\n          <div class=\"d-flex align-items-center\">\n            <span class=\"badge\" :class=\"project?.statusClass\">{{ project?.statusText }}</span>\n            <span class=\"ms-3 text-muted\">\n              <i class=\"bi bi-calendar me-1\"></i> \n              {{ project?.start ? formatDate(project.start) : '未设置' }} - \n              {{ project?.end ? formatDate(project.end) : '未设置' }}\n            </span>\n          </div>\n        </div>\n        <div>\n          <el-button type=\"primary\" size=\"small\" plain @click=\"goBack\">\n            <i class=\"bi bi-arrow-left me-1\"></i> 返回列表\n          </el-button>\n          <el-button type=\"primary\" size=\"small\" class=\"ms-2\" @click=\"showSetting = true\">\n            <i class=\"bi bi-gear me-1\"></i> 项目设置\n          </el-button>\n        </div>\n      </div>\n    </div>\n    <!-- 设置弹窗 -->\n    <el-dialog v-model=\"showSetting\" title=\"项目设置\" width=\"500px\">\n      <el-form label-width=\"80px\">\n        <el-form-item label=\"项目名称\"><el-input v-model=\"editProject.name\" /></el-form-item>\n        <el-form-item label=\"项目描述\"><el-input v-model=\"editProject.desc\" type=\"textarea\" /></el-form-item>\n        <el-form-item label=\"开始日期\"><el-date-picker v-model=\"editProject.start\" /></el-form-item>\n        <el-form-item label=\"结束日期\"><el-date-picker v-model=\"editProject.end\" /></el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"showSetting=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveSetting\">保存</el-button>\n      </template>\n    </el-dialog>\n    <!-- 导航栏 -->\n    <div class=\"nav-tabs-container\">\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\" v-for=\"item in navItems\" :key=\"item.view\">\n          <a class=\"nav-link\" :class=\"{active: activeView === item.view}\" href=\"#\" @click.prevent=\"activeView = item.view\">\n            <el-icon :size=\"16\"><component :is=\"item.icon\" /></el-icon>\n            {{ item.label }}\n          </a>\n        </li>\n      </ul>\n    </div>\n    <!-- 内容区 -->\n    <div class=\"content-area\">\n      <!-- 内容模块 -->\n      <div v-if=\"activeView === 'dashboard'\">\n        <DashboardView :project=\"project\" :tasks=\"tasks\" :documents=\"documents\" :requirements=\"requirements\" />\n      </div>\n      <div v-else-if=\"activeView === 'tasks'\">\n        <TasksView :project=\"project\" :members=\"projectMembers\" />\n      </div>\n      <div v-else-if=\"activeView === 'documents'\">\n        <DocumentsView :project=\"project\" />\n      </div>\n      <div v-else-if=\"activeView === 'requirements'\">\n        <RequirementsView :project=\"project\" />\n      </div>\n      <div v-else-if=\"activeView === 'reports'\">\n        <ReportsView :project=\"project\" :tasks=\"tasks\" :documents=\"documents\" :requirements=\"requirements\" />\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { Grid, List, Document, Lightning, DataAnalysis } from '@element-plus/icons-vue'\nimport DashboardView from './components/DashboardView.vue'\nimport TasksView from './components/TasksView.vue'\nimport DocumentsView from './components/DocumentsView.vue'\nimport RequirementsView from './components/RequirementsView.vue'\nimport ReportsView from './components/ReportsView.vue'\nimport request from '@/utils/request'\n\nconst route = useRoute()\nconst router = useRouter()\nconst activeView = ref('dashboard')\nconst project = ref(null)\nconst showSetting = ref(false)\nconst editProject = ref({ name: '', desc: '', start: '', end: '' })\nconst projectMembers = ref([])\n\n// 新增：统一管理任务、文档、需求数据\nconst tasks = ref([])\nconst documents = ref([])\nconst requirements = ref([])\n\n// 新增：是否正在加载数据\nconst isLoading = ref(false)\n\nconst navItems = [\n  { label: '工作台', view: 'dashboard', icon: Grid },\n  { label: '任务管理', view: 'tasks', icon: List },\n  { label: '文档管理', view: 'documents', icon: Document },\n  { label: '需求管理', view: 'requirements', icon: Lightning },\n  { label: '项目报表', view: 'reports', icon: DataAnalysis }\n]\n\nonMounted(() => {\n  loadProject()\n})\n\nwatch(showSetting, (val) => {\n  if (val && project.value) {\n    editProject.value = { ...project.value }\n  }\n})\n\n// 监听视图切换，切换到工作台时刷新数据\nwatch(activeView, (newView) => {\n  if (newView === 'dashboard' && project.value?.id) {\n    refreshData()\n  }\n})\n\nfunction loadProject() {\n  const id = Number(route.params.id)\n  if (isNaN(id)) {\n    router.push({ name: 'Project' })\n    return\n  }\n  request.get(`/api/projects/${id}/`).then(res => {\n    project.value = res.data\n    if (project.value.status === 'doing') {\n      project.value.statusText = '进行中'\n      project.value.statusClass = 'bg-primary'\n    } else if (project.value.status === 'done') {\n      project.value.statusText = '已完成'\n      project.value.statusClass = 'bg-success'\n    } else {\n      project.value.statusText = project.value.status || '未知'\n      project.value.statusClass = 'bg-secondary'\n    }\n    \n    // 加载项目成员\n    loadProjectMembers(id)\n    // 新增：加载任务、文档、需求\n    loadTasks(id)\n    loadDocuments(id)\n    loadRequirements(id)\n  }).catch(() => {\n    router.push({ name: 'Project' })\n  })\n}\n\n// 新增：加载项目成员\nfunction loadProjectMembers(projectId) {\n  if (!projectId) return\n  \n  console.log('ProjectDetail: 加载项目成员，项目ID:', projectId)\n  \n  // 获取公司所有用户作为候选\n  const userInfo = JSON.parse(localStorage.getItem('user') || '{}')\n  const companyId = userInfo.company_id || userInfo.company\n  \n  if (companyId) {\n    request.get(`/api/auth/companies/${companyId}/users/`).then(res => {\n      let users = []\n      if (Array.isArray(res.data)) {\n        users = res.data\n      } else if (res.data && Array.isArray(res.data.data)) {\n        users = res.data.data\n      }\n      \n      if (users.length > 0) {\n        // 默认将所有公司用户添加为项目成员\n        projectMembers.value = users.map(user => ({\n          id: user.id,\n          name: user.name || user.username || user.email || `用户${user.id}`\n        }))\n        console.log('ProjectDetail: 已加载公司用户作为项目成员:', projectMembers.value)\n        \n        // 自动将成员 ID 添加到项目的 members 字段并保存\n        const memberIds = projectMembers.value.map(m => m.id)\n        if (project.value && project.value.id) {\n          // 确保包含 company_id 字段\n          const payload = { \n            ...project.value, \n            members: memberIds,\n            company_id: project.value.company_id || companyId  // 确保有 company_id\n          }\n          \n          console.log('准备更新项目成员，数据:', payload)\n          \n          request.put(`/api/projects/${project.value.id}/`, payload).then(res => {\n            console.log('自动更新项目成员成功:', res.data)\n            Object.assign(project.value, res.data)\n          }).catch(err => {\n            console.error('自动更新项目成员失败:', err)\n            // 如果是 company_id 缺失导致的错误，尝试再次获取项目详情\n            request.get(`/api/projects/${project.value.id}/`).then(res => {\n              if (res.data && res.data.company_id) {\n                const newPayload = {\n                  ...res.data,\n                  members: memberIds\n                }\n                // 再次尝试更新\n                request.put(`/api/projects/${project.value.id}/`, newPayload).then(updateRes => {\n                  console.log('二次尝试更新项目成员成功:', updateRes.data)\n                  Object.assign(project.value, updateRes.data)\n                }).catch(updateErr => {\n                  console.error('二次尝试更新项目成员失败:', updateErr)\n                })\n              }\n            })\n          })\n        }\n      }\n    }).catch(err => {\n      console.error('获取公司用户失败', err)\n    })\n  }\n}\n\n// 加载任务数据\nfunction loadTasks(projectId) {\n  if (!projectId) return\n  request.get(`/api/tasks/?project=${projectId}`).then(res => {\n    // 修复：兼容多种后端响应结构\n    let tasksData = []\n    if (res.data && Array.isArray(res.data.results)) {\n      // 分页结构 { results: [...] }\n      tasksData = res.data.results\n    } else if (Array.isArray(res.data)) {\n      // 数组结构 [...]\n      tasksData = res.data\n    } else if (res.data && Array.isArray(res.data.data)) {\n      // 嵌套结构 { data: [...] }\n      tasksData = res.data.data\n    }\n    \n    // 标准化任务状态，确保前端统一处理\n    tasks.value = tasksData.map(task => ({\n      ...task,\n      status: task.status === '已完成' ? 'done' : \n              task.status === '进行中' ? 'in-progress' : \n              task.status === '待处理' ? 'todo' : \n              task.status || 'todo',\n      due_date: task.due_date || task.dueDate || '' // 确保 due_date 字段存在\n    }))\n    \n    console.log('加载任务数据成功:', tasks.value.length, '条')\n  }).catch(err => {\n    console.error('加载任务失败:', err)\n    tasks.value = []\n  })\n}\n\n// 加载文档数据\nfunction loadDocuments(projectId) {\n  if (!projectId) return\n  request.get(`/api/project-documents/?project=${projectId}`).then(res => {\n    // 修复：兼容多种后端响应结构\n    if (res.data && Array.isArray(res.data.results)) {\n      documents.value = res.data.results\n    } else if (Array.isArray(res.data)) {\n      documents.value = res.data\n    } else if (res.data && Array.isArray(res.data.data)) {\n      documents.value = res.data.data\n    } else {\n      documents.value = []\n    }\n    console.log('加载文档数据成功:', documents.value.length, '条')\n  }).catch(err => {\n    console.error('加载文档失败:', err)\n    documents.value = []\n  })\n}\n\n// 加载需求数据\nfunction loadRequirements(projectId) {\n  if (!projectId) return\n  request.get(`/api/requirements/?project=${projectId}`).then(res => {\n    // 修复：兼容多种后端响应结构\n    if (res.data && Array.isArray(res.data.results)) {\n      requirements.value = res.data.results\n    } else if (Array.isArray(res.data)) {\n      requirements.value = res.data\n    } else if (res.data && Array.isArray(res.data.data)) {\n      requirements.value = res.data.data\n    } else {\n      requirements.value = []\n    }\n    console.log('加载需求数据成功:', requirements.value.length, '条')\n  }).catch(err => {\n    console.error('加载需求失败:', err)\n    requirements.value = []\n  })\n}\n\n// 新增：刷新所有数据\nfunction refreshData() {\n  if (!project.value?.id) return\n  \n  isLoading.value = true\n  console.log('刷新项目数据...')\n  \n  // 并行加载所有数据\n  Promise.all([\n    loadTasksAsync(project.value.id),\n    loadDocumentsAsync(project.value.id),\n    loadRequirementsAsync(project.value.id)\n  ]).finally(() => {\n    isLoading.value = false\n    console.log('数据刷新完成')\n  })\n}\n\n// 新增：异步加载任务数据\nfunction loadTasksAsync(projectId) {\n  return new Promise((resolve) => {\n    loadTasks(projectId)\n    resolve()\n  })\n}\n\n// 新增：异步加载文档数据\nfunction loadDocumentsAsync(projectId) {\n  return new Promise((resolve) => {\n    loadDocuments(projectId)\n    resolve()\n  })\n}\n\n// 新增：异步加载需求数据\nfunction loadRequirementsAsync(projectId) {\n  return new Promise((resolve) => {\n    loadRequirements(projectId)\n    resolve()\n  })\n}\n\nfunction formatDate(dateStr) {\n  if (!dateStr) return '未设置'\n  const date = new Date(dateStr)\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n}\n\nfunction goBack() {\n  router.push({ name: 'Project' })\n}\n\nfunction saveSetting() {\n  if (!project.value?.id) return\n  const members = projectMembers.value.map(m => m.id)\n  const payload = { ...editProject.value, members }\n  request.put(`/api/projects/${project.value.id}/`, payload).then(res => {\n    Object.assign(project.value, res.data)\n    showSetting.value = false\n  })\n}\n</script>\n<style scoped>\n@import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css');\n@import url('https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css');\n.main-container {\n  min-height: 100vh;\n  background: #f5f7fa;\n  padding-top: 0;\n}\n.page-header {\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  margin-bottom: 20px;\n  margin-top: 0;\n}\n.nav-tabs-container {\n  background: #fff;\n  padding: 0 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  margin-bottom: 20px;\n}\n.nav-tabs {\n  border-bottom: none;\n}\n.nav-link {\n  color: #6c757d;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  border: none;\n  border-bottom: 2px solid transparent;\n}\n.nav-link.active {\n  color: #0d6efd;\n  border-bottom: 2px solid #0d6efd;\n  background: transparent;\n}\n.content-area {\n  padding: 20px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n.bg-primary { background: #0d6efd!important; }\n.bg-success { background: #198754!important; }\n.bg-warning { background: #ffc107!important; }\n.bg-secondary { background: #6c757d!important; }\n.bg-info { background: #0dcaf0!important; }\n.badge {\n  font-weight: 500;\n  padding: 6px 10px;\n  border-radius: 6px;\n  color: #fff;\n}\n/* 如果有全局样式导致空白，可强制覆盖 */\n:deep(.el-main) {\n  padding-top: 0 !important;\n}\n</style> "]}]}