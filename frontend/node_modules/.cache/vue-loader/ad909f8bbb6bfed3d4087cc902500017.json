{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue?vue&type=style&index=4&id=f042b266&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue","mtime":1749474457886},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lcnJvci1tZXNzYWdlIHsKICBjb2xvcjogI2ZmNGQ0ZjsKICBwYWRkaW5nOiAxMHB4IDE1cHg7CiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDc3LCA3OSwgMC4xKTsKICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNmZjRkNGY7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIG1hcmdpbjogNXB4IDA7CiAgZm9udC13ZWlnaHQ6IDUwMDsKfQo="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\dashboard\\Index.vue"],"names":[],"mappings":";AA8wCA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/dashboard/Index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"openwebui-chat-root\">\n    <div class=\"openwebui-chat-window\">\n      <div class=\"openwebui-chat-header\">\n        <span class=\"openwebui-title\">Open WebUI AI ÂØπËØù</span>\n        <el-button type=\"text\" size=\"small\" @click=\"clearChat\" class=\"clear-chat-btn\">\n          <el-icon><Delete /></el-icon> Êñ∞ÂØπËØù\n        </el-button>\n      </div>\n      \n      <!-- ‰∏ä‰∏ãÊñáÁä∂ÊÄÅÊù° -->\n      <div v-if=\"showContextBar\" class=\"openwebui-context-bar\">\n        <div class=\"context-info\">\n          <el-icon class=\"context-icon\"><Connection /></el-icon>\n          <span>‰∏ä‰∏ãÊñáÂØπËØùÊ®°Âºè (Áî±LangChainÊèê‰æõÊîØÊåÅ)</span>\n        </div>\n        <el-tag size=\"small\" effect=\"plain\" type=\"info\">ID: {{ chatId }}</el-tag>\n      </div>\n      \n      <div class=\"openwebui-chat-body\" ref=\"chatBody\">\n        <div v-for=\"(msg, idx) in messages\" :key=\"idx\" :class=\"['openwebui-msg', msg.role]\">\n          <template v-if=\"msg.role==='assistant'\">\n            <div class=\"openwebui-avatar ai-avatar left-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#2f54eb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">ü§ñ</text></svg>\n            </div>\n          </template>\n          <template v-if=\"msg.role==='user'\">\n            <div class=\"openwebui-avatar user-avatar right-avatar\">\n              <svg viewBox=\"0 0 40 40\" width=\"36\" height=\"36\"><circle cx=\"20\" cy=\"20\" r=\"20\" fill=\"#bbb\"/><text x=\"50%\" y=\"55%\" text-anchor=\"middle\" fill=\"#fff\" font-size=\"20\" font-family=\"Arial\" dy=\".3em\">üßë</text></svg>\n            </div>\n          </template>\n          <div class=\"openwebui-msg-bubble\">\n            <template v-if=\"msg.type === 'text'\">\n              <span v-if=\"msg.role==='user'\">{{ msg.content }}</span>\n              <span v-else v-html=\"msg.content\"></span>\n              <span v-if=\"msg.streaming\" class=\"openwebui-cursor\"></span>\n            </template>\n            <template v-else-if=\"msg.type === 'file'\">\n              <div class=\"file-bubble-nest file-bubble-vertical\">\n                <div v-for=\"file in msg.files\" :key=\"file.name + file.size\" class=\"file-message-card\">\n                  <div class=\"file-icon-area\">\n                    <img v-if=\"file.ext==='csv'\" src=\"https://cdn.jsdelivr.net/gh/file-icons/icons/svg/csv.svg\" class=\"file-icon-img\" />\n                    <el-icon v-else><Document /></el-icon>\n                  </div>\n                  <div class=\"file-info-area\">\n                    <div class=\"file-name\">{{ file.name }}</div>\n                    <div class=\"file-meta\">{{ file.ext.toUpperCase() }} ¬∑ {{ file.size }}</div>\n                  </div>\n                </div>\n                <div class=\"file-desc-text\" v-if=\"msg.content\">{{ msg.content }}</div>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n      <div class=\"openwebui-chat-footer\">\n        <!-- È¢ÑËßàÂå∫ÊîæÂú®footerÈ°∂ÈÉ® -->\n        <div v-if=\"selectedFiles.length\" class=\"openwebui-file-preview-bar\">\n          <div v-for=\"(file, idx) in selectedFiles\" :key=\"file.id\" class=\"openwebui-file-card\">\n            <div class=\"openwebui-file-thumb\">\n              <img v-if=\"file.type.startsWith('image/')\" :src=\"file.url\" class=\"openwebui-file-img\" />\n              <div v-else class=\"openwebui-file-icon\" :style=\"{background: file.bg}\">\n                <el-icon v-if=\"file.ext==='pdf'\"><Document /></el-icon>\n                <el-icon v-else-if=\"file.ext==='csv' || file.ext==='xls' || file.ext==='xlsx'\"><Document /></el-icon>\n                <el-icon v-else><Document /></el-icon>\n              </div>\n            </div>\n            <div class=\"openwebui-file-info\">\n              <div class=\"openwebui-file-name\" :title=\"file.name\">{{ file.name }}</div>\n              <div class=\"openwebui-file-meta\">{{ file.label }} ¬∑ {{ file.size }}</div>\n              <!-- Ê∑ªÂä†ËøõÂ∫¶Êù°ÊòæÁ§∫ -->\n              <el-progress \n                v-if=\"file.status !== 'completed'\" \n                :percentage=\"file.progress\" \n                :status=\"file.status === 'failed' ? 'exception' : ''\" \n                :stroke-width=\"4\"\n                class=\"openwebui-file-progress\" />\n              <div v-else class=\"openwebui-file-status completed\">\n                <el-icon><Check /></el-icon> Â§ÑÁêÜÂÆåÊàê\n              </div>\n            </div>\n            <el-icon class=\"openwebui-file-remove\" @click=\"removeFile(idx)\"><Close /></el-icon>\n          </div>\n        </div>\n        <!-- ËæìÂÖ•Âå∫ -->\n        <div class=\"openwebui-input-area\">\n          <input type=\"file\" ref=\"fileInput\" style=\"display:none\" @change=\"handleFileUpload\" multiple \n               accept=\".txt,.pdf,.doc,.docx,.md,.xls,.xlsx,.csv,.jpg,.jpeg,.png,.gif,.bmp,.webp,.svg,.tiff\" />\n          <el-tooltip\n            content=\"ÊñáÊ°£: txt, pdf, doc, docx, md&#10;Ë°®Ê†º: xls, xlsx, csv&#10;ÂõæÁâá: jpg, jpeg, png, gif, bmp, webp, svg, tiff\"\n            placement=\"top\"\n            popper-class=\"openwebui-upload-tooltip\"\n            :open-delay=\"200\"\n          >\n            <el-button class=\"openwebui-upload-btn\" @click=\"triggerFileInput\" title=\"‰∏ä‰º†Êñá‰ª∂/ÂõæÁâá\" :disabled=\"loading\">\n              <el-icon><UploadFilled /></el-icon>\n            </el-button>\n          </el-tooltip>\n          <el-input\n            v-model=\"input\"\n            placeholder=\"ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÈóÆÈ¢ò...\"\n            @keyup.enter=\"sendMsg\"\n            class=\"openwebui-input\"\n            :disabled=\"loading || processingFiles\"\n          />\n          <el-button type=\"primary\" @click=\"sendMsg\" class=\"openwebui-send-btn\" :loading=\"loading\" :disabled=\"processingFiles\">\n            {{ loading ? 'ÁîüÊàê‰∏≠' : (processingFiles ? 'Â§ÑÁêÜ‰∏≠' : 'ÂèëÈÄÅ') }}\n          </el-button>\n        </div>\n        <div class=\"openwebui-footer-hint\">\n          ÊîØÊåÅÊñáÊ°£„ÄÅË°®Ê†º„ÄÅÂõæÁâáÁ≠âÂ§öÁßçÊ†ºÂºèÊñá‰ª∂\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick, computed, onMounted } from 'vue'\nimport { UploadFilled, Document, Close, Check, Delete, Connection } from '@element-plus/icons-vue'\nimport request from '@/utils/request'\nimport { marked } from 'marked'\nimport { ElMessage, ElTooltip } from 'element-plus'\n\nfunction formatSize(size) {\n  if (size < 1024) return size + 'B';\n  if (size < 1024*1024) return (size/1024).toFixed(1) + 'KB';\n  return (size/1024/1024).toFixed(1) + 'MB';\n}\nfunction getExt(name) {\n  const arr = name.split('.');\n  return arr.length > 1 ? arr[arr.length-1].toLowerCase() : '';\n}\nfunction getFileLabel(type, ext) {\n  const ext_lower = ext.toLowerCase();\n  if (type.startsWith('image/')) return 'ÂõæÁâá';\n  if (ext_lower === 'pdf') return 'PDF';\n  if (['csv','xls','xlsx'].includes(ext_lower)) return 'Ë°®Ê†º';\n  if (['doc','docx'].includes(ext_lower)) return 'ÊñáÊ°£';\n  if (ext_lower === 'md') return 'Markdown';\n  if (ext_lower === 'txt') return 'ÊñáÊú¨';\n  return ext_lower.toUpperCase();\n}\nfunction getFileBg(ext) {\n  const ext_lower = ext.toLowerCase();\n  if (ext_lower === 'pdf') return '#f87171'; // Á∫¢Ëâ≤\n  if (['csv','xls','xlsx'].includes(ext_lower)) return '#34d399'; // ÁªøËâ≤\n  if (['doc','docx'].includes(ext_lower)) return '#60a5fa'; // ËìùËâ≤\n  if (ext_lower === 'md') return '#a78bfa'; // Á¥´Ëâ≤\n  if (ext_lower === 'txt') return '#fbbf24'; // ÈªÑËâ≤\n  return '#a5b4fc'; // ÈªòËÆ§Ê∑°Á¥´Ëâ≤\n}\nfunction escapeHtml(html) {\n  return html.replace(/[&<>\"']/g, function(m) {\n    return ({\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;'\n    })[m];\n  });\n}\nexport default {\n  name: 'Dashboard',\n  components: { UploadFilled, Document, Close, Check, Delete, Connection, ElTooltip },\n  setup() {\n    const input = ref('')\n    const messages = ref([\n      { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n    ])\n    const chatBody = ref(null)\n    const fileInput = ref(null)\n    const selectedFiles = ref([])\n    const loading = ref(false)\n    const processingFiles = computed(() => {\n      return selectedFiles.value.some(file => file.status !== 'completed' && file.status !== 'failed');\n    })\n    const chatId = ref(null) // Â≠òÂÇ®ÂΩìÂâçËÅäÂ§©IDÔºåÁî®‰∫éÁª¥ÊåÅÂØπËØù‰∏ä‰∏ãÊñá\n    const showContextBar = computed(() => chatId.value !== null)\n    \n    const scrollToBottom = () => {\n      nextTick(() => {\n        if (chatBody.value) chatBody.value.scrollTop = chatBody.value.scrollHeight\n      })\n    }\n    \n    const uploadFileAndGetId = async (file) => {\n      // Ê£ÄÊü•Êñá‰ª∂Â§ßÂ∞èÔºåÈôêÂà∂‰∏∫20MB\n      const MAX_FILE_SIZE = 20 * 1024 * 1024; // 20MB\n      if (file.rawFile.size > MAX_FILE_SIZE) {\n        file.status = 'failed';\n        ElMessage.error(`Êñá‰ª∂ ${file.name} Ë∂ÖËøá20MBÂ§ßÂ∞èÈôêÂà∂`);\n        console.error(`Êñá‰ª∂ËøáÂ§ß: ${file.name}, Â§ßÂ∞è: ${formatSize(file.rawFile.size)}`);\n        return null;\n      }\n\n      // Ê£ÄÊü•Êñá‰ª∂Á±ªÂûãÔºåÈ¢ùÂ§ñÂ§ÑÁêÜmarkdownÊñá‰ª∂\n      const isMarkdown = file.ext.toLowerCase() === 'md';\n      if (isMarkdown && file.rawFile.type !== 'text/markdown') {\n        // Â∞ùËØï‰øÆÊ≠£markdownÊñá‰ª∂ÁöÑmimeÁ±ªÂûã\n        console.log(`‰øÆÊ≠£MarkdownÊñá‰ª∂ÁöÑMIMEÁ±ªÂûã: ${file.rawFile.type} -> text/markdown`);\n        // ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑFileÂØπË±°ÔºåÂº∫Âà∂ËÆæÁΩÆMIMEÁ±ªÂûã\n        try {\n          const reader = new FileReader();\n          return new Promise((resolve, reject) => {\n            reader.onload = async (e) => {\n              try {\n                const content = e.target.result;\n                // ÂàõÂª∫Blob‰ª•Ê≠£Á°ÆÁöÑMIMEÁ±ªÂûã\n                const blob = new Blob([content], { type: 'text/markdown' });\n                const correctedFile = new File([blob], file.rawFile.name, { \n                  type: 'text/markdown',\n                  lastModified: file.rawFile.lastModified\n                });\n                \n                // ‰ΩøÁî®‰øÆÊ≠£ÂêéÁöÑÊñá‰ª∂ÊâßË°å‰∏ä‰º†\n                file.rawFile = correctedFile;\n                const docId = await doUpload(file);\n                resolve(docId);\n              } catch (err) {\n                console.error('Â§ÑÁêÜMarkdownÊñá‰ª∂Â§±Ë¥•:', err);\n                file.status = 'failed';\n                reject(err);\n              }\n            };\n            reader.onerror = () => {\n              file.status = 'failed';\n              reject(new Error('ËØªÂèñÊñá‰ª∂Â§±Ë¥•'));\n            };\n            reader.readAsText(file.rawFile);\n          });\n        } catch (err) {\n          console.error('‰øÆÊ≠£MarkdownÊñá‰ª∂Á±ªÂûãÂ§±Ë¥•:', err);\n          // Â¶ÇÊûú‰øÆÊ≠£Â§±Ë¥•Ôºå‰ªçÂ∞ùËØïÂéüÂßã‰∏ä‰º†\n        }\n      }\n\n      return doUpload(file);\n    }\n    \n    // ÂÆûÈôÖÊâßË°å‰∏ä‰º†ÁöÑÂáΩÊï∞\n    const doUpload = async (file) => {\n      const formData = new FormData();\n      formData.append('file', file.rawFile);\n      \n      try {\n        // Ê†áËÆ∞Êñá‰ª∂‰∏∫‰∏ä‰º†‰∏≠\n        file.progress = 0;\n        file.status = 'pending';\n        let smoothTimer = null;\n        let lastProgress = 0;\n        let uploadFinished = false;\n        \n        console.log(`ÂºÄÂßã‰∏ä‰º†Êñá‰ª∂: ${file.name}, Á±ªÂûã: ${file.rawFile.type}, Â§ßÂ∞è: ${formatSize(file.rawFile.size)}`);\n        \n        // ‰ΩøÁî®fetch APIËøõË°åÊñá‰ª∂‰∏ä‰º†ÔºåÈÅøÂÖçaxiosÁöÑÂ§çÊùÇÂ∞ÅË£Ö\n        const token = localStorage.getItem('token');\n        const headers = {\n          'X-File-Type': file.rawFile.type || 'application/octet-stream'\n        };\n        \n        // Ê∑ªÂä†ËÆ§ËØÅÂ§¥\n        if (token) {\n          headers['Authorization'] = `Bearer ${token}`;\n        }\n        \n        // ‰∏ä‰º†ÂâçÂÖàÊòæÁ§∫ËøõÂ∫¶Êù°Âä®Áîª\n        let fakeProgressTimer = setInterval(() => {\n          if (file.progress < 40) {\n            file.progress += 1;\n          }\n        }, 100);\n        \n        try {\n          const response = await fetch('/api/ai/documents/upload/', {\n            method: 'POST',\n            headers: headers,\n            body: formData\n          });\n          \n          // Ê∏ÖÈô§ÂÅáËøõÂ∫¶Êù°\n          clearInterval(fakeProgressTimer);\n          \n          // Ê£ÄÊü•ÂìçÂ∫îÁä∂ÊÄÅ\n          if (!response.ok) {\n            const errorText = await response.text().catch(() => 'Êó†Ê≥ïËé∑ÂèñÈîôËØØËØ¶ÊÉÖ');\n            throw new Error(`ÊúçÂä°Âô®ËøîÂõûÈîôËØØ: ${response.status} ${response.statusText} - ${errorText}`);\n          }\n          \n          // ËØªÂèñÂìçÂ∫îÂÜÖÂÆπ\n          const result = await response.json();\n          \n          // ‰∏ä‰º†ÂÆåÊàêÂêéÔºåÁä∂ÊÄÅÊîπ‰∏∫Â§ÑÁêÜ‰∏≠\n          file.progress = 95;\n          file.status = 'processing';\n          console.log(`Êñá‰ª∂‰∏ä‰º†ÊàêÂäü: ${file.name}, ÊñáÊ°£ID: ${result?.id || 'Êú™Áü•'}`);\n          \n          if (!result?.id) {\n            throw new Error('ÊúçÂä°Âô®Êú™ËøîÂõûÊúâÊïàÁöÑÊñáÊ°£ID');\n          }\n          \n          file.documentId = result.id;\n          pollDocumentStatus(file);\n          return result.id;\n        } catch (fetchError) {\n          clearInterval(fakeProgressTimer);\n          throw fetchError;\n        }\n      } catch (error) {\n        file.status = 'failed';\n        console.error(`Êñá‰ª∂ ${file.name} ‰∏ä‰º†Â§±Ë¥•:`, error);\n        ElMessage.error(`Êñá‰ª∂ ${file.name} ‰∏ä‰º†Â§±Ë¥•: ${error.message || 'ÊúçÂä°Âô®ÈîôËØØ'}`);\n        // ‰∏çÂÜçÊäõÂá∫ÂºÇÂ∏∏ÔºåËÄåÊòØËøîÂõûnull\n        return null;\n      }\n    }\n    \n    // ËΩÆËØ¢ÊñáÊ°£Â§ÑÁêÜÁä∂ÊÄÅ\n    const pollDocumentStatus = async (file, interval = 1000) => {\n      if (!file.documentId) return;\n      \n      try {\n        const res = await request({\n          url: `/api/ai/documents/${file.documentId}/`,\n          method: 'get'\n        });\n        \n        if (res.data.status === 'completed') {\n          file.progress = 100;\n          file.status = 'completed';\n          return;\n        } else if (res.data.status === 'failed') {\n          file.status = 'failed';\n          file.progress = 0;\n          return;\n        } else if (res.data.status === 'processing') {\n          // Â§ÑÁêÜ‰∏≠ÔºåÂ¢ûÂä†ËøõÂ∫¶Ôºà‰ªÖÂú®Â∞è‰∫é95Êó∂ÈÄíÂ¢ûÔºâ\n          if (file.progress < 95) {\n            file.progress = Math.min(file.progress + 5, 95);\n          }\n        }\n        \n        // ÁªßÁª≠ËΩÆËØ¢\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      } catch (e) {\n        // Âá∫ÈîôÊó∂ÔºåÁªßÁª≠ËΩÆËØ¢Ôºå‰ΩÜ‰∏çÊõ¥Êñ∞ËøõÂ∫¶\n        setTimeout(() => pollDocumentStatus(file, interval), interval);\n      }\n    }\n    \n    // Êñ∞Â¢ûÔºöÊµÅÂºèfetch AIÂõûÂ§ç - ‰ΩøÁî®Áé∞‰ª£API\n    async function fetchAIStream(data, onChunk) {\n      try {\n        console.log('ÂèëÈÄÅAIËÅäÂ§©ËØ∑Ê±Ç', data);\n        const response = await fetch('/api/ai/chat-with-documents/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n          },\n          body: JSON.stringify(data)\n        });\n        \n        // Ê£ÄÊü•ÂìçÂ∫îÁä∂ÊÄÅ\n        if (!response.ok) {\n          const errorText = await response.text().catch(() => 'Êó†Ê≥ïËé∑ÂèñÈîôËØØËØ¶ÊÉÖ');\n          throw new Error(`AIÊúçÂä°ËøîÂõûÈîôËØØ: ${response.status} ${response.statusText} - ${errorText}`);\n        }\n        \n        // Ê£ÄÊü•ÂìçÂ∫îÂ§¥‰∏≠ÁöÑËÅäÂ§©ID\n        const headerChatId = response.headers.get('X-Chat-ID');\n        if (headerChatId) {\n          console.log('‰ªéÂìçÂ∫îÂ§¥Ëé∑ÂèñËÅäÂ§©ID:', headerChatId);\n          chatId.value = headerChatId;\n        }\n        \n        // ‰ΩøÁî®Êõ¥Áé∞‰ª£ÁöÑÊµÅÂºèAPIÂ§ÑÁêÜ\n        if (response.body) {\n          const reader = response.body.getReader();\n          const decoder = new TextDecoder('utf-8');\n          let buffer = '';\n          \n          try {\n            // ÂºÄÂßãËØªÂèñÊµÅ\n            let streamActive = true;\n            while (streamActive) {\n              const { done, value } = await reader.read();\n              \n              if (done) {\n                console.log('ÊµÅËØªÂèñÂÆåÊàê');\n                streamActive = false;\n                break;\n              }\n              \n              // Ëß£Á†ÅÂΩìÂâçÂùóÂπ∂Ê∑ªÂä†Âà∞ÁºìÂÜ≤Âå∫\n              const chunk = decoder.decode(value, { stream: true });\n              buffer += chunk;\n              \n              // Â∞ÜÂΩìÂâçÊï¥‰∏™ÁºìÂÜ≤Âå∫‰º†ÁªôÂõûË∞É\n              onChunk(buffer);\n            }\n            \n            // ÊúÄÂêé‰∏ÄÊ¨°Ëß£Á†ÅÁ°Æ‰øùÊâÄÊúâÂâ©‰ΩôÊï∞ÊçÆË¢´Â§ÑÁêÜ\n            if (buffer) {\n              const finalChunk = decoder.decode(); // ‰∏çÂ∏¶ÂèÇÊï∞Ë°®Á§∫ÁªìÊùüÊµÅ\n              if (finalChunk) {\n                buffer += finalChunk;\n                onChunk(buffer);\n              }\n            }\n          } catch (readError) {\n            console.error('ËØªÂèñÊµÅÊó∂ÂèëÁîüÈîôËØØ:', readError);\n            throw new Error(`ÊµÅËØªÂèñÈîôËØØ: ${readError.message}`);\n          }\n        } else {\n          throw new Error('ÊúçÂä°Âô®ÂìçÂ∫îÊ≤°ÊúâÂèØËØªÂèñÁöÑÊµÅ');\n        }\n      } catch (error) {\n        console.error('AIËÅäÂ§©ËØ∑Ê±ÇÂ§±Ë¥•:', error);\n        throw error;\n      }\n    }\n    \n    const clearChat = () => {\n      // Ê∏ÖÁ©∫ÂØπËØùÂéÜÂè≤ÔºåÂºÄÂßãÊñ∞ÁöÑÂØπËØù\n      chatId.value = null;\n      messages.value = [\n        { role: 'assistant', content: 'ÊÇ®Â•ΩÔºåÊàëÊòØÊÇ®ÁöÑAIÂä©ÊâãÔºåÊúâ‰ªÄ‰πàÂèØ‰ª•Â∏ÆÊÇ®Ôºü', type: 'text' }\n      ];\n      // Ê∏ÖÁ©∫ÈÄâÊã©ÁöÑÊñá‰ª∂\n      selectedFiles.value = [];\n    }\n    \n    const sendMsg = async () => {\n      // Ê£ÄÊü•ÊòØÂê¶ÊúâÊñáÊú¨ËæìÂÖ•ÊàñÊúâÊïàÊñá‰ª∂\n      const hasText = input.value.trim().length > 0;\n      const hasValidFiles = selectedFiles.value.filter(f => f.status === 'completed' || f.status === 'ready' || f.status === 'processing').length > 0;\n      \n      if ((!hasText && !hasValidFiles) || loading.value || processingFiles.value) {\n        if (!hasText && !hasValidFiles) {\n          ElMessage.warning('ËØ∑ËæìÂÖ•ÈóÆÈ¢òÊàñ‰∏ä‰º†Êñá‰ª∂');\n        }\n        return;\n      }\n      \n      loading.value = true;\n      let documentIds = [];\n      \n      // ÂÖà‰ªéÈÄâÊã©ÁöÑÊñá‰ª∂‰∏≠Ëé∑ÂèñÂ∑≤ÁªèÂ§ÑÁêÜÂÆåÊàêÁöÑÊñáÊ°£ID\n      const completedFiles = selectedFiles.value.filter(file => file.status === 'completed' && file.documentId);\n      documentIds = completedFiles.map(file => file.documentId);\n      \n      try {\n        // Â¶ÇÊûúÊ≤°ÊúâËæìÂÖ•ÊñáÊú¨‰ΩÜÊúâÈÄâÊã©Êñá‰ª∂ÔºåÂÖàÊ∑ªÂä†Âç†‰ΩçÊ∂àÊÅØ\n        if (!input.value.trim() && hasValidFiles) {\n          messages.value.push({ role: 'user', content: 'Êàë‰∏ä‰º†‰∫Ü‰∏Ä‰∫õÊñá‰ª∂ÔºåËØ∑ÂàÜÊûêÂÖ∂‰∏≠ÂÜÖÂÆπ„ÄÇ', type: 'text' })\n        }\n        \n        // Ê∑ªÂä†Êñá‰ª∂‰∏éÊñáÊú¨ÂµåÂ•óÊ∂àÊÅØ\n        if (selectedFiles.value.length > 0) {\n          // Âè™ÂåÖÂê´ÊúâÊïàÁöÑÊñá‰ª∂‰ø°ÊÅØ\n          const validFiles = selectedFiles.value.filter(\n            f => f.status === 'completed' || f.status === 'processing' || f.status === 'ready'\n          );\n          \n          // ÂêàÂπ∂ÊâÄÊúâÊñá‰ª∂‰ø°ÊÅØ\n          const filesArr = validFiles.map(file => ({\n            url: file.url,\n            name: file.name,\n            ext: file.ext,\n            size: file.size,\n            label: file.label,\n            bg: file.bg,\n            desc: file.desc\n          }));\n          \n          // Âè™Âú®ÊúâÊúâÊïàÊñá‰ª∂Êó∂Ê∑ªÂä†Êñá‰ª∂Ê∂àÊÅØ\n          if (filesArr.length > 0) {\n            messages.value.push({\n              role: 'user',\n              type: 'file',\n              files: filesArr,\n              content: input.value.trim() || '',\n            });\n          } else if (input.value.trim()) {\n            // Â¶ÇÊûúÊ≤°ÊúâÊúâÊïàÊñá‰ª∂‰ΩÜÊúâÊñáÊú¨ÔºåÊ∑ªÂä†Á∫ØÊñáÊú¨Ê∂àÊÅØ\n            messages.value.push({ role: 'user', content: input.value, type: 'text' });\n          }\n        } else if (input.value.trim()) {\n          // ‰ªÖÊñáÊú¨\n          messages.value.push({ role: 'user', content: input.value, type: 'text' });\n        }\n        \n        // ÊªöÂä®Âà∞Â∫ïÈÉ®ÊòæÁ§∫Áî®Êà∑Ê∂àÊÅØ\n        scrollToBottom();\n        \n        // ÂàõÂª∫AIÂõûÂ§çÁöÑÂç†‰ΩçÊ∂àÊÅØ\n        const assistantMsgIndex = messages.value.length;\n        messages.value.push({ \n          role: 'assistant', \n          content: '', \n          type: 'text', \n          streaming: true \n        });\n        \n        // ËÆ∞ÂΩïÊñáÊ°£ID‰ª•‰æøÊó•ÂøóËÆ∞ÂΩï\n        console.log('Â∑≤Â§ÑÁêÜÂÆåÊàêÁöÑÊñáÊ°£IDs:', documentIds);\n        \n        // Ë∞ÉÁî®ÂêéÁ´ØAIËÅäÂ§©APIÔºàÊµÅÂºèÔºâ\n        const userInput = input.value.trim();\n        const requestData = {\n          message: userInput || 'ËØ∑ÂàÜÊûêÊàë‰∏ä‰º†ÁöÑÊñá‰ª∂',\n          chat_id: chatId.value // ‰º†ÈÄíËÅäÂ§©ID‰ª•Áª¥ÊåÅ‰∏ä‰∏ãÊñá\n        };\n        \n        // Âè™ÊúâÂú®ÊúâÊñáÊ°£IDÊó∂ÊâçÊ∑ªÂä†Âà∞ËØ∑Ê±Ç‰∏≠\n        if (documentIds.length > 0) {\n          requestData.document_ids = documentIds;\n        }\n        \n        // ‰ΩøÁî®Áé∞‰ª£ÁöÑmarked APIËøõË°åËß£Êûê\n        await fetchAIStream(requestData, (buffer) => {\n          try {\n            // ‰ΩøÁî®markedËß£ÊûêÂìçÂ∫îÊñáÊú¨\n            const parsedContent = marked.parse(buffer);\n            messages.value[assistantMsgIndex].content = parsedContent;\n          } catch (parseError) {\n            console.error('MarkdownËß£ÊûêÈîôËØØ:', parseError);\n            // ÈôçÁ∫ßÂ§ÑÁêÜÔºöÂ¶ÇÊûúËß£ÊûêÂ§±Ë¥•ÔºåÁõ¥Êé•ÊòæÁ§∫Á∫ØÊñáÊú¨\n            messages.value[assistantMsgIndex].content = escapeHtml(buffer);\n          }\n          scrollToBottom();\n        });\n        \n        // Ê†áËÆ∞ÊµÅÂºè‰º†ËæìÂÆåÊàê\n        messages.value[assistantMsgIndex].streaming = false;\n        \n        // ËÆ∞ÂΩï‰ºöËØùID\n        if (chatId.value) {\n          console.log('ÂØπËØùIDÂ∑≤Êõ¥Êñ∞:', chatId.value);\n        }\n        \n        // Ê∏ÖÁêÜËæìÂÖ•Ê°Ü\n        input.value = '';\n        \n        // ÈáçÁΩÆÂä†ËΩΩÁä∂ÊÄÅ\n        loading.value = false;\n        \n        // Á°Æ‰øùÊªöÂä®Âà∞ÊúÄÊñ∞Ê∂àÊÅØ\n        scrollToBottom();\n        \n      } catch (e) {\n        console.error('AIËÅäÂ§©ËØ∑Ê±ÇÈîôËØØ:', e);\n        \n        // Á°Æ‰øùÊúâ‰∏Ä‰∏™Âç†‰ΩçÊ∂àÊÅØ\n        const errorMsgIndex = messages.value.findIndex(msg => \n          msg.role === 'assistant' && msg.streaming === true\n        );\n        \n        if (errorMsgIndex !== -1) {\n          // Êõ¥Êñ∞Áé∞ÊúâÁöÑÂç†‰ΩçÊ∂àÊÅØ\n          messages.value[errorMsgIndex].content = `<div class=\"error-message\">AIÊúçÂä°ÊöÇ‰∏çÂèØÁî®: ${e.message || 'Êú™Áü•ÈîôËØØ'}</div>`;\n          messages.value[errorMsgIndex].streaming = false;\n        } else {\n          // Ê∑ªÂä†‰∏Ä‰∏™Êñ∞ÁöÑÈîôËØØÊ∂àÊÅØ\n          messages.value.push({\n            role: 'assistant',\n            content: `<div class=\"error-message\">AIÊúçÂä°ÊöÇ‰∏çÂèØÁî®: ${e.message || 'Êú™Áü•ÈîôËØØ'}</div>`,\n            type: 'text',\n            streaming: false\n          });\n        }\n        \n        // ÈáçÁΩÆÂä†ËΩΩÁä∂ÊÄÅ\n        loading.value = false;\n        \n        // Á°Æ‰øùÊªöÂä®Âà∞ÊúÄÊñ∞Ê∂àÊÅØ\n        scrollToBottom();\n      } finally {\n        // Ê∏ÖÁ©∫ËæìÂÖ•\n        input.value = '';\n        \n        // ÁßªÈô§Â§±Ë¥•ÁöÑÊñá‰ª∂Ôºå‰øùÁïôÊúâÊïàÊñá‰ª∂‰ª•‰æøÂÜçÊ¨°Â∞ùËØï\n        selectedFiles.value = selectedFiles.value.filter(file => \n          file.status !== 'failed'\n        );\n      }\n    }\n    \n    const triggerFileInput = () => {\n      if (fileInput.value) fileInput.value.value = '';\n      fileInput.value && fileInput.value.click()\n    }\n    \n    const handleFileUpload = (e) => {\n      const files = e.target.files\n      if (!files || !files.length) return\n      \n      // ÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûãÈÖçÁΩÆ\n      const allowedTypes = {\n        // ÊñáÊ°£Á±ªÂûã\n        'text/plain': 'txt',                          // txtÊñá‰ª∂\n        'application/pdf': 'pdf',                     // pdfÊñá‰ª∂\n        'application/msword': 'doc',                  // docÊñá‰ª∂\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'docx', // docxÊñá‰ª∂\n        'text/markdown': 'md',                        // markdownÊñá‰ª∂\n        'text/x-markdown': 'md',                      // markdownÊñá‰ª∂Âèò‰Ωì\n        \n        // Ë°®Ê†ºÁ±ªÂûã\n        'text/csv': 'csv',                            // csvÊñá‰ª∂\n        'application/csv': 'csv',                     // csvÊñá‰ª∂Âè¶‰∏ÄÁßçMIME\n        'application/vnd.ms-excel': 'xls',            // xlsÊñá‰ª∂\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'xlsx', // xlsxÊñá‰ª∂\n        \n        // ÂõæÁâáÁ±ªÂûã\n        'image/jpeg': 'jpg',                          // jpg/jpegÂõæÁâá\n        'image/png': 'png',                           // pngÂõæÁâá\n        'image/gif': 'gif',                           // gifÂõæÁâá\n        'image/bmp': 'bmp',                           // bmpÂõæÁâá\n        'image/webp': 'webp',                         // webpÂõæÁâá\n        'image/svg+xml': 'svg',                       // svgÁü¢ÈáèÂõæ\n        'image/tiff': 'tiff'                          // tiffÂõæÁâá\n      };\n      \n      // ÊòæÁ§∫ÊîØÊåÅÁöÑÊñá‰ª∂Ê†ºÂºèÊèêÁ§∫\n      const supportedFormats = 'ÊîØÊåÅÁöÑÊñá‰ª∂Ê†ºÂºè: txt, pdf, doc, docx, md, xls, xlsx, csv ÂíåÂ∏∏ËßÅÂõæÁâáÊ†ºÂºè';\n      \n      // Ê£ÄÊü•ÊØè‰∏™Êñá‰ª∂\n      const validFiles = [];\n      let hasInvalidFile = false;\n      \n      // ÊúâÊïàÁöÑÊñá‰ª∂Êâ©Â±ïÂêçÂàóË°®Ôºà‰∏çÂå∫ÂàÜÂ§ßÂ∞èÂÜôÔºâ\n      const validExtensions = ['txt', 'pdf', 'doc', 'docx', 'md', 'xls', 'xlsx', 'csv', \n                              'jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'tiff'];\n      \n      Array.from(files).forEach(file => {\n        const ext = getExt(file.name).toLowerCase();\n        const isValidExtension = validExtensions.includes(ext);\n        \n        // Ê£ÄÊü•MIMEÁ±ªÂûãÊàñÊâ©Â±ïÂêçÊòØÂê¶ÊúâÊïà\n        if (allowedTypes[file.type] || isValidExtension) {\n          const id = file.name + '_' + file.size + '_' + Date.now() + Math.random()\n          if (file.type.startsWith('image/')) {\n            const reader = new FileReader()\n            reader.onload = (ev) => {\n              selectedFiles.value.push({\n                id,\n                name: file.name,\n                type: file.type,\n                url: ev.target.result,\n                size: formatSize(file.size),\n                ext,\n                label: getFileLabel(file.type, ext),\n                bg: getFileBg(ext),\n                rawFile: file,\n                progress: 0,\n                status: 'ready'\n              })\n              // Ëá™Âä®‰∏ä‰º†\n              uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n            }\n            reader.readAsDataURL(file)\n          } else {\n            const url = URL.createObjectURL(file)\n            selectedFiles.value.push({\n              id,\n              name: file.name,\n              type: file.type,\n              url,\n              size: formatSize(file.size),\n              ext,\n              label: getFileLabel(file.type, ext),\n              bg: getFileBg(ext),\n              rawFile: file,\n              progress: 0,\n              status: 'ready'\n            })\n            // Ëá™Âä®‰∏ä‰º†\n            uploadFileAndGetId(selectedFiles.value[selectedFiles.value.length - 1])\n          }\n          validFiles.push(selectedFiles.value[selectedFiles.value.length - 1])\n        } else {\n          hasInvalidFile = true;\n          ElMessage.error(`‰∏çÊîØÊåÅÁöÑÊñá‰ª∂Á±ªÂûã: ${file.name}`);\n          console.warn(`Êñá‰ª∂Á±ªÂûãÊãíÁªù: ${file.name}, MIME: ${file.type}, Êâ©Â±ïÂêç: ${ext}`);\n        }\n      })\n      \n      // Âú®Êúâ‰∏çÊîØÊåÅÊñá‰ª∂Á±ªÂûãÊó∂ÊòæÁ§∫ÊîØÊåÅÁöÑÊ†ºÂºè‰ø°ÊÅØ\n      if (hasInvalidFile) {\n        ElMessage.info(supportedFormats);\n      }\n      \n      // Â¶ÇÊûúÂÖ®ÈÉ®Êñá‰ª∂ÈÉΩÊòØÊúâÊïàÁöÑÔºåÊòæÁ§∫ÊàêÂäü‰∏ä‰º†ÊèêÁ§∫\n      if (validFiles.length > 0 && validFiles.length === files.length) {\n        ElMessage.success(`Â∑≤Ê∑ªÂä†${validFiles.length}‰∏™Êñá‰ª∂`);\n      }\n    }\n    \n    const removeFile = (idx) => {\n      selectedFiles.value.splice(idx, 1)\n    }\n\n    // markedÈÖçÁΩÆÔºö‰ΩøÁî®Êñ∞ÁöÑAPIÂ§ÑÁêÜMarkdown\n    const markedOptions = {\n      breaks: true,\n      gfm: true,\n      mangle: false,\n      renderer: new marked.Renderer()\n    };\n    \n    // Ëá™ÂÆö‰πâÊ∏≤ÊüìÂô®\n    markedOptions.renderer.table = function(header, body) {\n      return `<table class=\"openwebui-md-table\"><thead>${header}</thead><tbody>${body}</tbody></table>`;\n    };\n    \n    markedOptions.renderer.code = function(code, infostring, escaped) {\n      const codeId = 'code-' + Math.random().toString(36).slice(2, 11);\n      let lang = (infostring || '').split(/\\s+/)[0];\n      let langLabel = lang ? lang : 'code';\n      let langClass = lang ? `language-${lang}` : '';\n      return `\n        <div class=\"openwebui-md-code-block-beauty\">\n          <div class=\"openwebui-md-code-toolbar\">\n            <span class=\"openwebui-md-code-lang\">${langLabel}</span>\n            <button class=\"openwebui-copy-btn\" data-clipboard-target=\"#${codeId}\" title=\"Â§çÂà∂‰ª£Á†Å\">Â§çÂà∂</button>\n          </div>\n          <pre class=\"openwebui-md-pre\"><code id=\"${codeId}\" class=\"${langClass}\">${escaped ? code : escapeHtml(code)}</code></pre>\n        </div>\n      `;\n    };\n    \n    // Â∫îÁî®ÈÄâÈ°π\n    marked.setOptions(markedOptions);\n\n    onMounted(() => {\n      document.body.addEventListener('click', function(e) {\n        if (e.target.classList && e.target.classList.contains('openwebui-copy-btn')) {\n          const codeId = e.target.getAttribute('data-clipboard-target').replace('#', '');\n          const codeElem = document.getElementById(codeId);\n          if (codeElem) {\n            navigator.clipboard.writeText(codeElem.innerText).then(() => {\n              e.target.innerText = 'Â∑≤Â§çÂà∂';\n              setTimeout(() => { e.target.innerText = 'Â§çÂà∂'; }, 1200);\n            });\n          }\n        }\n      });\n    });\n\n    return {\n      input, \n      messages, \n      sendMsg, \n      chatBody, \n      fileInput, \n      triggerFileInput, \n      handleFileUpload, \n      selectedFiles, \n      removeFile, \n      UploadFilled, \n      Document, \n      Close, \n      Check,\n      loading, \n      processingFiles,\n      clearChat,\n      showContextBar,\n      chatId\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nhtml, body {\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-root {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  min-width: 0;\n  background: var(--bg-color);\n  display: flex;\n  align-items: stretch;\n  justify-content: stretch;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.openwebui-chat-window {\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  background: var(--bg-color);\n  border-radius: 0;\n  box-shadow: none;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0;\n}\n.openwebui-chat-header {\n  height: 56px;\n  background: var(--bg-color-secondary);\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  font-size: 18px;\n  font-weight: 600;\n  border-bottom: 1px solid var(--border-color);\n  flex-shrink: 0;\n  justify-content: space-between;\n  color: var(--text-color);\n}\n.openwebui-title {\n  color: var(--primary-color);\n}\n.clear-chat-btn {\n  color: var(--text-color-secondary);\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 14px;\n  font-weight: normal;\n}\n.clear-chat-btn:hover {\n  color: var(--primary-color);\n}\n.openwebui-file-preview-bar {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 12px;\n  padding: 12px 0 8px 0;\n  background: transparent;\n  border-bottom: none;\n  overflow-x: auto;\n  min-height: 64px;\n  z-index: 3;\n}\n.openwebui-file-card {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: var(--bg-color-secondary);\n  border-radius: 14px;\n  box-shadow: 0 2px 8px rgba(var(--primary-color-rgb),0.04);\n  padding: 8px 16px 8px 8px;\n  min-width: 160px;\n  max-width: 240px;\n  position: relative;\n  color: var(--text-color);\n}\n.openwebui-file-thumb {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background: var(--bg-color-tertiary);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  margin-right: 10px;\n}\n.openwebui-file-img {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  border-radius: 8px;\n}\n.openwebui-file-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-size: 22px;\n}\n.openwebui-file-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.openwebui-file-name {\n  font-size: 14px;\n  color: var(--text-color);\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 120px;\n}\n.openwebui-file-meta {\n  font-size: 12px;\n  color: var(--text-color-secondary);\n  margin-top: 2px;\n}\n.openwebui-file-progress {\n  margin-top: 4px;\n  width: 100%;\n}\n.openwebui-file-status.completed {\n  color: var(--success-color);\n}\n.openwebui-file-remove {\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  color: var(--text-color-tertiary);\n  font-size: 16px;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n.openwebui-file-remove:hover {\n  color: var(--error-color);\n}\n.openwebui-chat-body {\n  flex: 1 1 0%;\n  overflow-y: auto;\n  padding: 0 16px 12px 16px;\n  background: var(--bg-color);\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  max-height: calc(100vh - 200px);\n  height: calc(100vh - 200px);\n  flex-shrink: 1;\n  scrollbar-width: thin;\n}\n.openwebui-msg {\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 16px;\n  flex-direction: row;\n  justify-content: flex-start;\n}\n.openwebui-msg.user {\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin-left: auto;\n  margin-right: 0;\n}\n.openwebui-msg.assistant {\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-end;\n  margin-right: auto;\n  margin-left: 0;\n}\n.openwebui-msg-bubble {\n  max-width: 70%;\n  padding: 12px 18px;\n  border-radius: 16px;\n  font-size: 15px;\n  line-height: 1.7;\n  background: var(--bg-color-secondary);\n  color: var(--text-color);\n  box-shadow: 0 2px 8px rgba(var(--primary-color-rgb),0.04);\n  position: relative;\n  word-break: break-all;\n  overflow-wrap: break-word;\n  margin-top: 4px;\n  margin-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n}\n.openwebui-msg.user .openwebui-msg-bubble {\n  background: var(--primary-color);\n  color: #fff;\n  border-bottom-right-radius: 4px;\n  margin-right: 8px;\n  margin-left: auto;\n}\n.openwebui-msg.assistant .openwebui-msg-bubble {\n  background: var(--bg-color-secondary);\n  color: var(--text-color);\n  border-bottom-left-radius: 4px;\n  margin-left: 8px;\n  margin-right: auto;\n}\n.openwebui-avatar {\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  margin-bottom: auto;\n}\n.left-avatar {\n  margin-right: 8px;\n}\n.right-avatar {\n  margin-left: 8px;\n}\n.openwebui-user-label {\n  font-weight: bold;\n  margin-right: 4px;\n}\n.openwebui-ai-label {\n  font-weight: bold;\n  color: #2f54eb;\n  margin-right: 4px;\n}\n.openwebui-chat-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 0 16px 12px 16px;\n  background: var(--bg-color);\n  border-top: 1px solid var(--border-color);\n  margin: 0;\n  flex-shrink: 0;\n  box-shadow: 0 -2px 16px 0 rgba(var(--primary-color-rgb),0.03);\n  z-index: 2;\n}\n.openwebui-input-area {\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n.openwebui-input {\n  flex: 1;\n  margin-right: 12px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n}\n.openwebui-send-btn {\n  min-width: 72px;\n  height: 40px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 8px;\n}\n.openwebui-upload-btn {\n  margin-right: 8px;\n  font-size: 20px;\n  background: var(--bg-color-tertiary);\n  border: 1px solid var(--border-color);\n  color: var(--primary-color);\n  cursor: pointer;\n  border-radius: 8px;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: border 0.2s, box-shadow 0.2s;\n}\n.openwebui-upload-btn:hover {\n  border: 1.5px solid var(--primary-color);\n  box-shadow: 0 2px 8px rgba(var(--primary-color-rgb),0.08);\n}\n.openwebui-img-preview {\n  max-width: 180px;\n  max-height: 120px;\n  border-radius: 8px;\n  display: block;\n  margin: 4px 0;\n  box-shadow: 0 2px 8px rgba(47,84,235,0.08);\n}\n.openwebui-file-link {\n  color: var(--primary-color);\n  text-decoration: underline;\n  word-break: break-all;\n}\n.openwebui-cursor {\n  display: inline-block;\n  width: 8px;\n  height: 16px;\n  background: var(--primary-color);\n  margin-left: 2px;\n  vertical-align: middle;\n  animation: blink 0.8s infinite;\n}\n\n@keyframes blink {\n  0% { opacity: 1; }\n  50% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n.file-bubble-nest {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.file-bubble-vertical {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.file-message-card {\n  display: flex;\n  align-items: center;\n  background: var(--bg-color-secondary);\n  border-radius: 12px;\n  padding: 8px 16px;\n  margin-bottom: 0;\n  min-width: 180px;\n  max-width: 320px;\n  box-shadow: 0 2px 8px rgba(var(--primary-color-rgb),0.04);\n  color: var(--text-color);\n}\n.file-icon-area {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n}\n.file-icon-img {\n  width: 32px;\n  height: 32px;\n}\n.file-info-area {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.file-name {\n  font-size: 15px;\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 2px;\n  word-break: break-all;\n}\n.file-meta {\n  font-size: 12px;\n  color: var(--text-color-secondary);\n}\n.file-desc-text {\n  margin-top: 8px;\n  font-size: 15px;\n  color: var(--text-color);\n  background: transparent;\n  border-radius: 8px;\n  padding: 0 2px;\n  display: inline-block;\n  word-break: break-all;\n}\n.openwebui-context-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 24px;\n  background-color: var(--bg-color-tertiary);\n  border-bottom: 1px solid var(--border-color);\n  font-size: 14px;\n  color: var(--text-color-secondary);\n}\n.context-info {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n.context-icon {\n  color: var(--primary-color);\n  font-size: 16px;\n}\n</style>\n\n<style>\n.openwebui-md-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 8px 0;\n  background: var(--bg-color-secondary);\n  font-size: 15px;\n}\n.openwebui-md-table th, .openwebui-md-table td {\n  border: 1px solid var(--border-color);\n  padding: 6px 12px;\n  text-align: left;\n  color: var(--text-color);\n  background: var(--bg-color-secondary);\n}\n.openwebui-md-table th {\n  background: var(--bg-color-tertiary);\n  font-weight: 600;\n  color: var(--text-color-secondary);\n}\n/* ‰ª£Á†ÅÂùóÁæéÂåñÂíåÂ§çÂà∂ÊåâÈíÆ */\n.openwebui-md-code-block-beauty {\n  position: relative;\n  background: var(--bg-color-tertiary);\n  border-radius: 12px;\n  margin: 18px 0;\n  box-shadow: 0 4px 16px var(--shadow-color);\n  overflow: hidden;\n  border: 1px solid var(--border-color);\n}\n.openwebui-md-code-toolbar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: var(--bg-color-secondary);\n  border-bottom: 1px solid var(--border-color);\n  height: 36px;\n  padding: 0 14px;\n}\n.openwebui-md-code-lang {\n  font-size: 13px;\n  color: var(--text-color-tertiary);\n  font-family: 'JetBrains Mono', 'Fira Mono', 'Consolas', monospace;\n  user-select: none;\n}\n.openwebui-copy-btn {\n  background: var(--bg-color-tertiary);\n  border: 1px solid var(--border-color);\n  color: var(--primary-color);\n  border-radius: 6px;\n  font-size: 13px;\n  padding: 2px 12px;\n  cursor: pointer;\n  z-index: 2;\n  transition: background 0.2s, border 0.2s, color 0.2s;\n  outline: none;\n  margin-left: 8px;\n}\n.openwebui-copy-btn:hover {\n  background: var(--primary-color);\n  color: #fff;\n  border: 1px solid var(--primary-color);\n}\n.openwebui-md-pre {\n  margin: 0;\n  padding: 16px 18px;\n  background: var(--bg-color-tertiary);\n  border-radius: 0 0 12px 12px;\n  overflow-x: auto;\n  font-family: 'JetBrains Mono', 'Fira Mono', 'Consolas', monospace;\n  font-size: 15px;\n  line-height: 1.7;\n  color: var(--text-color);\n  min-height: 40px;\n}\n@media (max-width: 600px) {\n  .openwebui-md-pre {\n    font-size: 13px;\n    padding: 12px 6px;\n  }\n  .openwebui-md-code-block-beauty {\n    margin: 12px 0;\n  }\n}\n</style>\n\n<style>\n.openwebui-footer-hint {\n  font-size: 12px;\n  color: var(--text-color-secondary);\n  text-align: center;\n  padding-top: 8px;\n  user-select: none;\n  width: 100%;\n}\n</style>\n\n<style>\n.openwebui-upload-tooltip {\n  max-width: 300px !important;\n  background: var(--bg-color-secondary) !important;\n  color: var(--text-color) !important;\n  border: 1px solid var(--primary-color) !important;\n  border-radius: 8px !important;\n  box-shadow: 0 4px 12px rgba(var(--primary-color-rgb), 0.2) !important;\n  padding: 10px 14px !important;\n  font-size: 13px !important;\n  line-height: 1.6 !important;\n  white-space: pre-wrap; /* For newline in content */\n}\n\n.openwebui-upload-tooltip .el-popper__arrow::before {\n  border-color: var(--primary-color) !important;\n  background: var(--bg-color-secondary) !important;\n}\n</style>\n\n<style>\n.error-message {\n  color: #ff4d4f;\n  padding: 10px 15px;\n  background: rgba(255, 77, 79, 0.1);\n  border-left: 3px solid #ff4d4f;\n  border-radius: 3px;\n  margin: 5px 0;\n  font-weight: 500;\n}\n</style> "]}]}