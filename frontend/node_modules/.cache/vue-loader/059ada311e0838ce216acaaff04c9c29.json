{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\GlobalSearch.vue?vue&type=style&index=0&id=167b7d2b&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\GlobalSearch.vue","mtime":1750561891270},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOWwhiBwb3BwZXIg55qE5qC35byP5o+Q5Y2H5Li65YWo5bGA77yM5Lul5L6/5bqU55SoICovCi5nbG9iYWwtc2VhcmNoLXBvcHBlciB7CiAgd2lkdGg6IDQwMHB4ICFpbXBvcnRhbnQ7IC8qIOWbuuWumuWuveW6pu+8jOS4jui+k+WFpeahhuS4gOiHtCAqLwp9CgouZ2xvYmFsLXNlYXJjaC1wb3BwZXIgLmVsLXNlbGVjdC1ncm91cF9fdGl0bGUgewogIHBhZGRpbmctbGVmdDogMTVweDsKICBmb250LXNpemU6IDFyZW07CiAgZm9udC13ZWlnaHQ6IDYwMDsKICBjb2xvcjogdmFyKC0tZWwtdGV4dC1jb2xvci1wcmltYXJ5KTsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tZWwtYm9yZGVyLWNvbG9yLWxpZ2h0ZXIpOwogIG1hcmdpbi1ib3R0b206IDVweDsKfQoKLmdsb2JhbC1zZWFyY2gtcG9wcGVyIC5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0gewogIGhlaWdodDogYXV0bzsKICBwYWRkaW5nOiA4cHggMTVweDsKICBsaW5lLWhlaWdodDogMS40OwogIHdoaXRlLXNwYWNlOiBub3JtYWw7CiAgd29yZC1icmVhazogYnJlYWstYWxsOwp9Cg=="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\GlobalSearch.vue"],"names":[],"mappings":"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","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/components/GlobalSearch.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"global-search-container\">\n    <el-select\n      v-model=\"currentQuery\"\n      filterable\n      remote\n      reserve-keyword\n      placeholder=\"在所有应用中搜索...\"\n      :remote-method=\"search\"\n      :loading=\"loading\"\n      @change=\"handleSelect\"\n      @clear=\"clearSearch\"\n      clearable\n      class=\"global-search-input\"\n      popper-class=\"global-search-popper\"\n      size=\"large\"\n    >\n      <el-option-group\n        v-for=\"group in searchResults\"\n        :key=\"group.type\"\n        :label=\"group.type\"\n      >\n        <el-option\n          v-for=\"item in group.items\"\n          :key=\"item.id + item.type\"\n          :label=\"item.title\"\n          :value=\"item\"\n        >\n          <div class=\"search-result-item\">\n            <div class=\"item-icon\">\n              <i :class=\"getIconForType(item.type)\"></i>\n            </div>\n            <div class=\"item-content\">\n              <span class=\"title\">{{ item.title }}</span>\n              <span class=\"summary\">{{ item.summary }}</span>\n            </div>\n          </div>\n        </el-option>\n      </el-option-group>\n      <template #empty>\n        <div class=\"search-empty-state\">\n          <i v-if=\"loading\" class=\"el-icon is-loading\"><el-icon-loading /></i>\n          <span v-else-if=\"currentQuery && currentQuery.trim().length > 0 && currentQuery.trim().length < 2\">请输入至少两个字符进行搜索</span>\n          <span v-else>无匹配结果</span>\n        </div>\n      </template>\n    </el-select>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { globalSearch } from '@/api/search'; // 需要在api中创建此方法\nimport { findOrCreateChat } from '@/api/chat';\nimport { debounce } from 'lodash';\nimport {\n  Loading as ElIconLoading\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'GlobalSearch',\n  components: {\n    ElIconLoading\n  },\n  setup(props, { expose }) {\n    const router = useRouter();\n    const selectedValue = ref(''); // 保留用于跟踪最终选择的值，但不再是 v-model\n    const currentQuery = ref(''); // 现在是 v-model，跟踪输入框的实时文本\n    const searchResults = ref([]);\n    const loading = ref(false);\n    const searchCounter = ref(0); // 用于处理竞态条件的计数器\n\n    const getIconForType = (type) => {\n      const iconMap = {\n        '项目': 'bi bi-kanban',\n        '任务': 'bi bi-check2-square',\n        '日程': 'bi bi-calendar-week',\n        '智能文档': 'bi bi-file-earmark-text',\n        '合同': 'bi bi-file-earmark-ruled',\n        '知识库': 'bi bi-book',\n        '聊天记录': 'bi bi-chat-dots',\n        '联系人': 'bi bi-person-lines-fill'\n      };\n      return iconMap[type] || 'bi bi-app';\n    };\n\n    // 封装一个清晰的清除状态的函数\n    const clearSearchState = () => {\n      selectedValue.value = '';\n      currentQuery.value = ''; // 清除输入框文本\n      searchResults.value = [];\n      loading.value = false;\n    };\n\n    const search = debounce(async (query) => {\n      // currentQuery.value = query; // 不再需要，因为 v-model 会自动更新\n      searchCounter.value++; // 为每个新搜索增加计数器\n      const localCounter = searchCounter.value;\n\n      if (query && query.trim().length >= 2) {\n        loading.value = true;\n        try {\n          const { data } = await globalSearch(query);\n          // 仅当这是最新的搜索时才更新结果\n          if (localCounter === searchCounter.value) {\n            const grouped = data.reduce((acc, item) => {\n              if (!acc[item.type]) {\n                acc[item.type] = { type: item.type, items: [] };\n              }\n              acc[item.type].items.push(item);\n              return acc;\n            }, {});\n            searchResults.value = Object.values(grouped);\n          }\n        } catch (error) {\n          // 仅为最新的搜索报告错误\n          if (localCounter === searchCounter.value) {\n            console.error('Global search failed:', error);\n            searchResults.value = [];\n          }\n        } finally {\n          // 仅为最新的搜索更新加载状态\n          if (localCounter === searchCounter.value) {\n            loading.value = false;\n          }\n        }\n      } else {\n        searchResults.value = [];\n        loading.value = false; // 如果输入无效，确保停止加载\n      }\n    }, 300);\n\n    const handleSelect = async (url) => {\n      // The 'url' is now the full item object because we bind :value=\"item\"\n      const item = url; \n      if (!item || !item.type) return;\n\n      if (item.type === '联系人') {\n        try {\n          const { data } = await findOrCreateChat(item.id);\n          if (data && data.chat_id) {\n            router.push(`/chat?session=${data.chat_id}`);\n          }\n        } catch (error) {\n          console.error('Failed to find or create chat:', error);\n          // Optionally show an error message to the user\n        }\n      } else {\n        // Default behavior for all other types\n        if(item.url) {\n          router.push(item.url);\n        }\n      }\n      \n      searchCounter.value++;\n      setTimeout(() => {\n        clearSearchState();\n      }, 0);\n    };\n\n    // 从外部或通过 clearable 按钮调用的清除方法\n    const clearSearch = () => {\n      searchCounter.value++; // 使所有待处理的请求无效\n      clearSearchState();\n    };\n\n    expose({\n      clearSearch\n    });\n\n    return {\n      selectedValue,\n      currentQuery,\n      searchResults,\n      loading,\n      search,\n      handleSelect,\n      clearSearch, // 暴露给模板\n      getIconForType,\n    };\n  },\n};\n</script>\n\n<style>\n/* 将 popper 的样式提升为全局，以便应用 */\n.global-search-popper {\n  width: 400px !important; /* 固定宽度，与输入框一致 */\n}\n\n.global-search-popper .el-select-group__title {\n  padding-left: 15px;\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--el-text-color-primary);\n  border-bottom: 1px solid var(--el-border-color-lighter);\n  margin-bottom: 5px;\n}\n\n.global-search-popper .el-select-dropdown__item {\n  height: auto;\n  padding: 8px 15px;\n  line-height: 1.4;\n  white-space: normal;\n  word-break: break-all;\n}\n</style>\n\n<style scoped>\n.global-search-container {\n  width: 400px;\n}\n.global-search-input {\n  width: 100%;\n}\n.search-result-item {\n  display: flex;\n  align-items: center;\n}\n.item-icon {\n  font-size: 1.5rem;\n  margin-right: 15px;\n  color: var(--el-color-primary);\n  flex-shrink: 0;\n}\n.item-content {\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n.title {\n  font-weight: 500;\n  color: var(--el-text-color-regular);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.summary {\n  font-size: 0.85rem;\n  color: var(--el-text-color-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.search-empty-state {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  text-align: center;\n  color: #999;\n}\n.search-empty-state .el-icon {\n  margin-right: 8px;\n}\n</style> "]}]}