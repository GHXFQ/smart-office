{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\KnowledgeManagement.vue?vue&type=style&index=0&id=3a984224&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\KnowledgeManagement.vue","mtime":1750393064176},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJy4vc2hhcmVkLXN0eWxlcy5jc3MnOwoKLmZpbGUtaW5mbyB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBjb2xvcjogIzYwNjI2NjsKfQoKLnVwbG9hZC1jb21wb25lbnQgewogICAgd2lkdGg6IDEwMCU7Cn0KCi5jYXRlZ29yeS1kaWFsb2ctY29udGVudCB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDIwcHg7CiAgbWluLWhlaWdodDogNDAwcHg7Cn0KCi5jYXRlZ29yeS1saXN0LXNlY3Rpb24sIC5jYXRlZ29yeS1mb3JtLXNlY3Rpb24gewogIHBhZGRpbmc6IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogOHB4Owp9CgouY2F0ZWdvcnktbGlzdC1zZWN0aW9uIHsKICBmbGV4OiAxOwogIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlMGUwZTA7CiAgcGFkZGluZy1yaWdodDogMjBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KCi5jYXRlZ29yeS1mb3JtLXNlY3Rpb24gewogIGZsZXg6IDEuMjsKfQoKLnNlY3Rpb24taGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgcGFkZGluZy1ib3R0b206IDEwcHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMGYwZjA7Cn0KCi5jYXRlZ29yeS1pdGVtcyB7CiAgb3ZlcmZsb3cteTogYXV0bzsKICBtYXgtaGVpZ2h0OiAzNTBweDsKfQoKLmNhdGVnb3J5LWxpc3QtaXRlbSB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlci1yYWRpdXM6IDZweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzOwogIG1hcmdpbi1ib3R0b206IDVweDsKfQoKLmNhdGVnb3J5LWxpc3QtaXRlbTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsKfQoKLmNhdGVnb3J5LWxpc3QtaXRlbS5zZWxlY3RlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjVmZjsKICBib3JkZXI6IDFweCBzb2xpZCAjYjNkOGZmOwp9CgouY2F0ZWdvcnktaW5mbyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogMTBweDsKfQoKLmNhdGVnb3J5LWNvbG9yIHsKICB3aWR0aDogOHB4OwogIGhlaWdodDogMjBweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgZmxleC1zaHJpbms6IDA7Cn0KCi5jYXRlZ29yeS1pY29uIHsKICB3aWR0aDogMzJweDsKICBoZWlnaHQ6IDMycHg7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKLmNhdGVnb3J5LWljb24gLmVsLWljb24gewogIGNvbG9yOiB3aGl0ZTsKfQoKLmJ1aWxkLWZvb3RlciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\KnowledgeManagement.vue"],"names":[],"mappings":"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","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/admin/KnowledgeManagement.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"management-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <div class=\"header-left\">\n            <el-icon class=\"header-icon\"><Collection /></el-icon>\n            <span>知识库管理</span>\n          </div>\n          <div class=\"header-right\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"搜索知识库文章...\"\n              clearable\n              @clear=\"fetchArticles\"\n              @input=\"debouncedFetchArticles\"\n              class=\"search-input\"\n            >\n              <template #append>\n                <el-button :icon=\"Search\" />\n              </template>\n            </el-input>\n            <el-button type=\"success\" @click=\"openBuildModal\">构建知识库</el-button>\n            <el-button type=\"info\" @click=\"openCategoryModal()\">管理分类</el-button>\n            <el-button type=\"primary\" :icon=\"Upload\" @click=\"openArticleModal()\">上传文件</el-button>\n          </div>\n        </div>\n      </template>\n      <!-- Main content will go here -->\n      <el-table :data=\"articles\" v-loading=\"loading\" border>\n        <el-table-column prop=\"title\" label=\"标题\" min-width=\"200\"></el-table-column>\n        <el-table-column prop=\"original_filename\" label=\"文件名\" min-width=\"200\"></el-table-column>\n        <el-table-column prop=\"category_name\" label=\"分类\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"company_name\" label=\"所属公司\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"creator_name\" label=\"上传者\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"created_at\" label=\"上传时间\" width=\"180\">\n            <template #default=\"scope\">\n                {{ new Date(scope.row.created_at).toLocaleString() }}\n            </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" :icon=\"Edit\" @click=\"openArticleModal(scope.row)\"></el-button>\n            <el-button size=\"small\" type=\"danger\" :icon=\"Delete\" @click=\"confirmDeleteArticle(scope.row)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination\n        background\n        layout=\"prev, pager, next, total\"\n        :total=\"total\"\n        :page-size=\"pagination.pageSize\"\n        :current-page=\"pagination.page\"\n        @current-change=\"handlePageChange\"\n        style=\"margin-top: 20px; text-align: right;\"\n      />\n    </el-card>\n\n    <!-- Category Management Modal -->\n    <el-dialog v-model=\"isCategoryModalOpen\" title=\"管理分类\" width=\"60%\">\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n           <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button>\n          </div>\n          <div v-if=\"!categories.length\" class=\"category-items\">\n             <el-empty description=\"暂无分类\" />\n          </div>\n          <div v-else class=\"category-items\">\n            <div \n                v-for=\"category in categories\" \n                :key=\"category.id\" \n                class=\"category-list-item\"\n                :class=\"{ 'selected': currentCategory.id === category.id }\"\n                @click=\"selectCategoryForEdit(category)\"\n            >\n              <div class=\"category-info\">\n                 <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                    <el-icon><component :is=\"category.icon || 'Document'\" /></el-icon>\n                 </div>\n                <span class=\"category-name-section\">{{ category.name }}</span>\n              </div>\n               <div class=\"category-actions\">\n                    <el-button type=\"primary\" size=\"small\" plain :icon=\"Edit\" @click.stop=\"selectCategoryForEdit(category)\" />\n                    <el-button type=\"danger\" size=\"small\" plain :icon=\"Delete\" @click.stop=\"confirmDeleteCategory(category)\" />\n                </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"category-form-section\">\n          <div class=\"section-header\">\n             <h5>{{ isEditingCategory ? '编辑分类' : '新增分类' }}</h5>\n             <el-button v-if=\"isEditingCategory\" text @click=\"resetCategoryForm\">取消</el-button>\n          </div>\n          <el-form :model=\"currentCategory\" ref=\"categoryForm\" label-position=\"top\">\n            <el-form-item label=\"分类名称\" prop=\"name\" required>\n              <el-input v-model=\"currentCategory.name\" />\n            </el-form-item>\n             <el-form-item label=\"所属公司\" prop=\"company\" required>\n              <el-select v-model=\"currentCategory.company\" placeholder=\"请选择公司\" style=\"width: 100%;\">\n                <el-option v-for=\"company in companies\" :key=\"company.id\" :label=\"company.name\" :value=\"company.id\" />\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"分类描述\" prop=\"description\">\n              <el-input v-model=\"currentCategory.description\" type=\"textarea\" />\n            </el-form-item>\n            <el-form-item label=\"图标\" prop=\"icon\">\n               <el-select v-model=\"currentCategory.icon\" placeholder=\"选择一个图标\" style=\"width: 100%;\">\n                <el-option v-for=\"icon in availableIcons\" :key=\"icon.name\" :label=\"icon.label\" :value=\"icon.name\">\n                  <div style=\"display: flex; align-items: center;\">\n                    <el-icon style=\"margin-right: 8px;\"><component :is=\"icon.component\" /></el-icon>\n                    <span>{{ icon.label }}</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"颜色\" prop=\"color\">\n              <el-color-picker v-model=\"currentCategory.color\" />\n            </el-form-item>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"saveCategory\">保存</el-button>\n                <el-button @click=\"resetCategoryForm\" v-if=\"!isEditingCategory\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- Add/Edit Article Modal -->\n    <el-dialog v-model=\"isArticleModalOpen\" :title=\"currentArticle.id ? '编辑文件信息' : '上传新文件'\" width=\"50%\">\n      <el-form :model=\"currentArticle\" ref=\"articleForm\" label-width=\"80px\">\n        <el-form-item label=\"标题\" prop=\"title\" required>\n          <el-input v-model=\"currentArticle.title\" />\n        </el-form-item>\n        <el-form-item label=\"公司\" prop=\"company\" required>\n            <el-select v-model=\"currentArticle.company\" placeholder=\"请选择公司\" style=\"width: 100%;\" @change=\"handleCompanyChange\">\n              <el-option v-for=\"company in companies\" :key=\"company.id\" :label=\"company.name\" :value=\"company.id\" />\n            </el-select>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category\">\n            <el-select v-model=\"currentArticle.category\" placeholder=\"可选，请先选择公司\" style=\"width: 100%;\" :disabled=\"!currentArticle.company\" clearable>\n              <el-option v-for=\"category in companyCategories\" :key=\"category.id\" :label=\"category.name\" :value=\"category.id\" />\n            </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input v-model=\"currentArticle.description\" type=\"textarea\" />\n        </el-form-item>\n        <el-form-item label=\"文件\" prop=\"original_file\">\n            <div v-if=\"currentArticle.id && currentArticle.original_filename && !showUpload\">\n                <span class=\"file-info\">当前文件: {{ currentArticle.original_filename }} ({{ currentArticle.file_size }} KB)</span>\n                <el-button @click=\"showUpload = true\" type=\"primary\" link style=\"margin-left: 10px;\">替换文件</el-button>\n            </div>\n            <el-upload\n                v-else\n                ref=\"upload\"\n                action=\"#\"\n                :auto-upload=\"false\"\n                :on-change=\"handleFileChange\"\n                :on-remove=\"handleFileRemove\"\n                :limit=\"1\"\n                class=\"upload-component\"\n            >\n                <template #trigger>\n                <el-button type=\"primary\">选择文件</el-button>\n                </template>\n                <template #tip>\n                <div class=\"el-upload__tip\">\n                    只能上传单个文件，文件大小不应超过系统限制。\n                </div>\n                </template>\n            </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"closeArticleModal\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveArticle\">保存</el-button>\n      </template>\n    </el-dialog>\n\n    <!-- Build Knowledge Base Modal -->\n    <el-dialog v-model=\"isBuildModalOpen\" title=\"构建公司知识库\" width=\"70%\" @close=\"stopStatusPolling\">\n        <el-table \n            :data=\"buildStatuses\" \n            v-loading=\"isBuildStatusLoading\"\n            @selection-change=\"handleSelectionChange\"\n            border\n            row-key=\"company_id\"\n        >\n            <el-table-column type=\"selection\" width=\"55\" :selectable=\"isCompanySelectable\" />\n            <el-table-column prop=\"company_name\" label=\"公司名称\" />\n            <el-table-column prop=\"file_count\" label=\"文件数\" width=\"80\" />\n            <el-table-column prop=\"status\" label=\"构建状态\">\n                <template #default=\"scope\">\n                    <el-tooltip v-if=\"scope.row.file_count === 0\" content=\"没有文件，无法构建\" placement=\"top\">\n                        <el-tag type=\"info\">\n                            无法构建\n                        </el-tag>\n                    </el-tooltip>\n                    <el-tag v-else :type=\"getStatusTagType(scope.row.status)\">\n                        {{ getStatusText(scope.row.status) }}\n                        <el-icon v-if=\"scope.row.status === 'processing'\" class=\"is-loading\"><Loading /></el-icon>\n                    </el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"last_built_at\" label=\"上次构建时间\">\n                 <template #default=\"scope\">\n                    {{ scope.row.last_built_at ? new Date(scope.row.last_built_at).toLocaleString() : 'N/A' }}\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"processing_message\" label=\"消息\" show-overflow-tooltip />\n            <el-table-column label=\"操作\" width=\"120\">\n                <template #default=\"scope\">\n                    <el-tooltip content=\"没有文件，无法构建\" :disabled=\"scope.row.file_count > 0\">\n                        <div style=\"display: inline-block\"> <!-- Wrapper for tooltip on disabled button -->\n                             <el-button \n                                type=\"primary\" \n                                size=\"small\" \n                                @click=\"triggerBuildForCompanies([scope.row.company_id])\"\n                                :disabled=\"isCompanyBuilding(scope.row.company_id) || scope.row.file_count === 0\"\n                            >\n                                构建\n                            </el-button>\n                        </div>\n                    </el-tooltip>\n                </template>\n            </el-table-column>\n        </el-table>\n        <template #footer>\n            <div class=\"build-footer\">\n                <el-button \n                    type=\"primary\" \n                    @click=\"triggerBuildForCompanies(selectedCompanyIds)\"\n                    :disabled=\"selectedCompanyIds.length === 0 || isAnyCompanyBuilding(selectedCompanyIds)\"\n                >\n                    构建选中 ({{ selectedCompanyIds.length }})\n                </el-button>\n                <el-button @click=\"fetchBuildStatuses\" :icon=\"Refresh\">刷新状态</el-button>\n            </div>\n        </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport adminApi from '@/api/admin';\nimport { ElMessage, ElMessageBox, ElCard, ElIcon, ElInput, ElButton, ElTable, ElTableColumn, ElPagination, ElDialog, ElForm, ElFormItem, ElSelect, ElOption, ElUpload, ElColorPicker, ElEmpty, ElTooltip } from 'element-plus';\nimport { Collection, Search, Upload, Edit, Delete, Plus, Document, Folder, DataAnalysis, TrendCharts, Reading, MagicStick, Loading, Refresh } from '@element-plus/icons-vue';\n\nconst articles = ref([]);\nconst categories = ref([]);\nconst companies = ref([]);\nconst loading = ref(true);\nconst searchQuery = ref('');\nconst total = ref(0);\nconst pagination = reactive({\n  page: 1,\n  pageSize: 10,\n});\n\nconst isCategoryModalOpen = ref(false);\nconst isSingleCategoryModalOpen = ref(false);\nconst currentCategory = ref({});\nconst categoryForm = ref(null);\nconst isEditingCategory = computed(() => !!currentCategory.value.id);\n\nconst availableIcons = [\n  { name: 'Document', label: '文档', component: Document },\n  { name: 'Folder', label: '文件夹', component: Folder },\n  { name: 'DataAnalysis', label: '数据分析', component: DataAnalysis },\n  { name: 'TrendCharts', label: '趋势图', component: TrendCharts },\n  { name: 'Reading', label: '阅读', component: Reading },\n  { name: 'MagicStick', label: '魔术棒', component: MagicStick },\n];\n\nconst isArticleModalOpen = ref(false);\nconst currentArticle = ref({});\nconst articleForm = ref(null);\nconst companyCategories = ref([]);\nconst upload = ref(null);\nconst showUpload = ref(false);\n\nconst isBuildModalOpen = ref(false);\nconst buildStatuses = ref([]);\nconst isBuildStatusLoading = ref(false);\nconst selectedCompanyIds = ref([]);\nconst buildingCompanyIds = ref(new Set());\nlet statusPollInterval = null;\n\nlet searchTimeout = null;\n\nconst fetchCategories = async () => {\n  try {\n    const response = await adminApi.getKnowledgeCategories({ all: 'true' });\n    categories.value = response.data;\n  } catch (error) {\n    ElMessage.error('获取分类列表失败');\n  }\n};\n\nconst fetchCompanies = async () => {\n  try {\n    const response = await adminApi.getCompanies({ all: 'true' });\n    companies.value = response.data;\n  } catch (error) {\n    ElMessage.error('获取公司列表失败');\n  }\n};\n\nconst openCategoryModal = async () => {\n  await fetchCompanies();\n  await fetchCategories();\n  resetCategoryForm();\n  isCategoryModalOpen.value = true;\n};\n\nconst closeSingleCategoryModal = () => {\n  isSingleCategoryModalOpen.value = false;\n  currentCategory.value = {};\n  categoryForm.value?.resetFields();\n};\n\nconst resetCategoryForm = () => {\n  currentCategory.value = {\n    id: null,\n    name: '',\n    description: '',\n    icon: 'Document',\n    color: '#409EFF',\n    company: null,\n  };\n  categoryForm.value?.resetFields();\n};\n\nconst selectCategoryForEdit = (category) => {\n  currentCategory.value = { ...category };\n};\n\nconst saveCategory = async () => {\n  try {\n    if (currentCategory.value.id) {\n      await adminApi.updateKnowledgeCategory(currentCategory.value.id, currentCategory.value);\n    } else {\n      await adminApi.createKnowledgeCategory(currentCategory.value);\n    }\n    ElMessage.success('分类保存成功');\n    closeSingleCategoryModal();\n    fetchCategories(); // Refresh list in the background\n  } catch (error) {\n    ElMessage.error('保存分类失败');\n  }\n};\n\nconst confirmDeleteCategory = (category) => {\n  ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗?`, '警告', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning',\n  }).then(async () => {\n    try {\n      await adminApi.deleteKnowledgeCategory(category.id);\n      ElMessage.success('分类删除成功');\n      fetchCategories(); // Refresh list\n    } catch (error) {\n      ElMessage.error('删除分类失败');\n    }\n  });\n};\n\nconst debouncedFetchArticles = () => {\n  clearTimeout(searchTimeout);\n  searchTimeout = setTimeout(() => {\n    pagination.page = 1;\n    fetchArticles();\n  }, 300);\n};\n\nconst fetchArticles = async () => {\n  loading.value = true;\n  try {\n    const params = {\n      page: pagination.page,\n      size: pagination.pageSize,\n      search: searchQuery.value\n    };\n    const response = await adminApi.getKnowledgeBases(params);\n    articles.value = response.data.results;\n    total.value = response.data.count;\n  } catch (error) {\n    ElMessage.error('获取文章列表失败');\n    articles.value = [];\n    total.value = 0;\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst openArticleModal = async (article = {}) => {\n  await fetchCompanies();\n  currentArticle.value = { ...article };\n\n  if (article.id) {\n    showUpload.value = false; // 编辑模式下，默认不显示上传组件\n  } else {\n    showUpload.value = true; // 新建模式下，直接显示上传组件\n  }\n  \n  if (currentArticle.value.company) {\n    await fetchCategoriesForCompany(currentArticle.value.company);\n  } else {\n    companyCategories.value = [];\n  }\n  isArticleModalOpen.value = true;\n};\n\nconst closeArticleModal = () => {\n  isArticleModalOpen.value = false;\n  currentArticle.value = {};\n  companyCategories.value = [];\n  upload.value?.clearFiles();\n  articleForm.value?.resetFields();\n};\n\nconst saveArticle = async () => {\n  try {\n    const dataToSave = { ...currentArticle.value };\n    if (!dataToSave.id && !dataToSave.original_file) {\n        ElMessage.error('请选择一个文件上传');\n        return;\n    }\n\n    if (dataToSave.id) {\n      await adminApi.updateKnowledgeBase(dataToSave.id, dataToSave);\n    } else {\n      await adminApi.createKnowledgeBase(dataToSave);\n    }\n    ElMessage.success('文件信息保存成功');\n    closeArticleModal();\n    fetchArticles();\n  } catch (error) {\n    const errorMsg = error.response?.data ? JSON.stringify(error.response.data) : '保存文件信息失败';\n    ElMessage.error(errorMsg);\n  }\n};\n\nconst confirmDeleteArticle = (article) => {\n  ElMessageBox.confirm(`确定要删除文件 \"${article.title}\" 吗? 这将一并删除关联的文件和数据。`, '警告', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning',\n  }).then(async () => {\n    try {\n      await adminApi.deleteKnowledgeBase(article.id);\n      ElMessage.success('文件删除成功');\n      fetchArticles(); // Refresh list\n    } catch (error) {\n      ElMessage.error('删除文件失败');\n    }\n  });\n};\n\nconst handlePageChange = (newPage) => {\n  pagination.page = newPage;\n  fetchArticles();\n};\n\nconst handleCompanyChange = async (companyId) => {\n  currentArticle.value.category = null;\n  companyCategories.value = [];\n  if (companyId) {\n    await fetchCategoriesForCompany(companyId);\n  }\n};\n\nconst fetchCategoriesForCompany = async (companyId) => {\n  try {\n    const response = await adminApi.getKnowledgeCategories({ all: 'true', company_id: companyId });\n    companyCategories.value = response.data;\n  } catch (error) {\n    ElMessage.error('获取该公司下的分类失败');\n  }\n};\n\nconst handleFileChange = (file) => {\n    currentArticle.value.original_file = file.raw;\n};\n\nconst handleFileRemove = () => {\n    currentArticle.value.original_file = null;\n};\n\nconst openBuildModal = () => {\n    isBuildModalOpen.value = true;\n    fetchBuildStatuses();\n};\n\nconst fetchBuildStatuses = async () => {\n    isBuildStatusLoading.value = true;\n    try {\n        const response = await adminApi.getKnowledgeBuildStatus();\n        buildStatuses.value = response.data;\n    } catch (error) {\n        ElMessage.error('获取构建状态失败');\n    } finally {\n        isBuildStatusLoading.value = false;\n    }\n};\n\nconst handleSelectionChange = (selection) => {\n    selectedCompanyIds.value = selection.map(item => item.company_id);\n};\n\nconst triggerBuildForCompanies = async (companyIds) => {\n    if (companyIds.length === 0) return;\n    try {\n        const response = await adminApi.buildKnowledgeForCompanies(companyIds);\n        ElMessage.success(response.data.message || '构建任务已启动');\n        companyIds.forEach(id => buildingCompanyIds.value.add(id));\n        fetchBuildStatuses();\n        startStatusPolling();\n    } catch (error) {\n        ElMessage.error('启动构建任务失败');\n    }\n};\n\nconst startStatusPolling = () => {\n    if (statusPollInterval) return; // 避免重复启动\n    statusPollInterval = setInterval(async () => {\n        await fetchBuildStatuses();\n        // 检查是否有仍在处理中的构建\n        const stillProcessing = buildStatuses.value.some(s => s.status === 'processing' || s.status === 'pending');\n        if (!stillProcessing) {\n            stopStatusPolling();\n            buildingCompanyIds.value.clear();\n            ElMessage.info('所有构建任务已完成。');\n        }\n    }, 5000); // 每5秒轮询一次\n};\n\nconst stopStatusPolling = () => {\n    if (statusPollInterval) {\n        clearInterval(statusPollInterval);\n        statusPollInterval = null;\n    }\n};\n\nconst getStatusTagType = (status) => {\n    switch (status) {\n        case 'completed': return 'success';\n        case 'processing': return 'primary';\n        case 'pending': return 'warning';\n        case 'failed': return 'danger';\n        default: return 'info';\n    }\n};\n\nconst getStatusText = (status) => {\n    const map = {\n        'completed': '成功',\n        'processing': '构建中',\n        'pending': '等待中',\n        'failed': '失败',\n        'not_built': '未构建'\n    };\n    return map[status] || '未知';\n};\n\nconst isCompanyBuilding = (companyId) => {\n    const status = buildStatuses.value.find(s => s.company_id === companyId)?.status;\n    return status === 'processing' || status === 'pending';\n};\n\nconst isAnyCompanyBuilding = (companyIds) => {\n    // 增加一个检查，确保所选的公司都有文件\n    const hasFiles = companyIds.every(id => {\n        const company = buildStatuses.value.find(s => s.company_id === id);\n        return company && company.file_count > 0;\n    });\n    if (!hasFiles) return true;\n\n    return companyIds.some(id => isCompanyBuilding(id));\n};\n\nconst isCompanySelectable = (row) => {\n    return row.file_count > 0;\n};\n\nonMounted(() => {\n  // initial fetch\n  fetchArticles();\n});\n</script>\n\n<style scoped>\n@import './shared-styles.css';\n\n.file-info {\n    font-size: 14px;\n    color: #606266;\n}\n\n.upload-component {\n    width: 100%;\n}\n\n.category-dialog-content {\n  display: flex;\n  gap: 20px;\n  min-height: 400px;\n}\n\n.category-list-section, .category-form-section {\n  padding: 10px;\n  border-radius: 8px;\n}\n\n.category-list-section {\n  flex: 1;\n  border-right: 1px solid #e0e0e0;\n  padding-right: 20px;\n  display: flex;\n  flex-direction: column;\n}\n\n.category-form-section {\n  flex: 1.2;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.category-items {\n  overflow-y: auto;\n  max-height: 350px;\n}\n\n.category-list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-bottom: 5px;\n}\n\n.category-list-item:hover {\n  background-color: #f5f7fa;\n}\n\n.category-list-item.selected {\n  background-color: #ecf5ff;\n  border: 1px solid #b3d8ff;\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.category-color {\n  width: 8px;\n  height: 20px;\n  border-radius: 4px;\n  flex-shrink: 0;\n}\n\n.category-icon {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.category-icon .el-icon {\n  color: white;\n}\n\n.build-footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n</style>\n\n<style>\n.category-dialog-content .el-form-item {\n  margin-bottom: 22px;\n}\n</style> "]}]}