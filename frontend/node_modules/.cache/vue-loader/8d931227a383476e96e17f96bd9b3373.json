{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\CompanyManagement.vue?vue&type=style&index=0&id=771a9c96&lang=css","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\CompanyManagement.vue","mtime":1750340283877},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJy4vc2hhcmVkLXN0eWxlcy5jc3MnOwo="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\admin\\CompanyManagement.vue"],"names":[],"mappings":";AAoMA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/views/admin/CompanyManagement.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"management-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span><i class=\"bi bi-building header-icon\"></i> 公司管理</span>\n          <div class=\"actions\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"搜索公司...\"\n              clearable\n              @clear=\"fetchCompanies\"\n              @input=\"debouncedFetchCompanies\"\n              class=\"search-input\"\n            >\n              <template #append>\n                <el-button :icon=\"Search\"></el-button>\n              </template>\n            </el-input>\n            <el-button type=\"primary\" @click=\"openModal()\">添加公司</el-button>\n          </div>\n        </div>\n      </template>\n      <div class=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>序号</th>\n              <th>公司名称</th>\n              <th>行业</th>\n              <th>规模</th>\n              <th>地址</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(company, index) in companies\" :key=\"company.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ company.name }}</td>\n              <td>{{ company.industry }}</td>\n              <td>{{ company.size }}</td>\n              <td>{{ company.address }}</td>\n              <td class=\"action-buttons\">\n                <button class=\"btn-edit\" @click=\"openModal(company)\">编辑</button>\n                <button class=\"btn-delete\" @click=\"confirmDelete(company)\">删除</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑模态框 -->\n    <div v-if=\"isModalOpen\" class=\"modal-overlay\">\n      <div class=\"modal-content\">\n        <h3>{{ currentItem.id ? '编辑公司' : '添加公司' }}</h3>\n        <form @submit.prevent=\"saveItem\">\n          <div class=\"form-group\">\n            <label>公司名称:</label>\n            <input type=\"text\" v-model=\"currentItem.name\" required />\n          </div>\n          <div class=\"form-group\">\n            <label>行业:</label>\n            <input type=\"text\" v-model=\"currentItem.industry\" required />\n          </div>\n          <div class=\"form-group\">\n            <label>规模:</label>\n            <input type=\"text\" v-model=\"currentItem.size\" required />\n          </div>\n          <div class=\"form-group\">\n            <label>地址:</label>\n            <input type=\"text\" v-model=\"currentItem.address\" required />\n          </div>\n           <div class=\"form-group\">\n            <label>网站:</label>\n            <input type=\"text\" v-model=\"currentItem.website\" required />\n          </div>\n           <div class=\"form-group\">\n            <label>联系电话:</label>\n            <input type=\"tel\" v-model=\"currentItem.phone\" required />\n          </div>\n          <div class=\"form-actions\">\n            <button type=\"submit\" class=\"btn-primary\">保存</button>\n            <button type=\"button\" @click=\"closeModal\" class=\"btn-secondary\">取消</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport adminApi from '@/api/admin';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Search } from '@element-plus/icons-vue';\n\n// Simple debounce function\nfunction debounce(fn, delay) {\n  let timeoutID = null;\n  return function(...args) {\n    clearTimeout(timeoutID);\n    timeoutID = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n\nexport default {\n  name: 'CompanyManagement',\n  setup() {\n    const companies = ref([]);\n    const searchQuery = ref('');\n    const isModalOpen = ref(false);\n    const currentItem = ref({});\n\n    const fetchCompanies = async () => {\n      try {\n        const params = { search: searchQuery.value };\n        const response = await adminApi.getCompanies(params);\n        companies.value = response.data.results;\n      } catch (error) {\n        console.error(\"获取公司列表失败:\", error);\n      }\n    };\n\n    const debouncedFetchCompanies = debounce(fetchCompanies, 300);\n\n    const openModal = (item = {}) => {\n      currentItem.value = { ...item };\n      isModalOpen.value = true;\n    };\n\n    const closeModal = () => {\n      isModalOpen.value = false;\n      currentItem.value = {};\n    };\n\n    const saveItem = async () => {\n      try {\n        if (currentItem.value.id) {\n          await adminApi.updateCompany(currentItem.value.id, currentItem.value);\n        } else {\n          await adminApi.createCompany(currentItem.value);\n        }\n        closeModal();\n        fetchCompanies();\n      } catch (error) {\n        console.error(\"保存公司失败:\", error);\n      }\n    };\n\n    const confirmDelete = (item) => {\n      ElMessageBox.confirm(\n        `确定要删除公司【${item.name}】吗？删除后，该公司下的所有用户和部门信息都将丢失，此操作不可恢复。`,\n        '严重警告',\n        {\n          confirmButtonText: '确定删除',\n          cancelButtonText: '取消',\n          type: 'error',\n          center: true,\n        }\n      ).then(async () => {\n        try {\n          await adminApi.deleteCompany(item.id);\n          ElMessage.success('公司删除成功');\n          fetchCompanies();\n        } catch (error) {\n          ElMessage.error('删除失败，请稍后重试');\n          console.error(\"删除公司失败:\", error);\n        }\n      }).catch(() => {\n        ElMessage.info('已取消删除');\n      });\n    };\n\n    onMounted(fetchCompanies);\n\n    return {\n      companies,\n      searchQuery,\n      isModalOpen,\n      currentItem,\n      fetchCompanies,\n      debouncedFetchCompanies,\n      openModal,\n      closeModal,\n      saveItem,\n      confirmDelete,\n      Search,\n    };\n  },\n};\n</script>\n\n<style>\n@import './shared-styles.css';\n</style> \n "]}]}