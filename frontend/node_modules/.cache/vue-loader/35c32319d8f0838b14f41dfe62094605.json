{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue?vue&type=template&id=58ef6f92&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue","mtime":1754627607208},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue"],"names":[],"mappings":"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CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAChD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxF,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;cAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;cAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,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;kBACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;mBACnG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,CAAC,CAAC,C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,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACT,C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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACzD,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAC5B,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChcAC9G,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAChC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC1E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnG,CAAC,CAAC,CAAC,CAAC,CAAC;cACP,CAAC,CAAC,CAAC,CAAC,CAAC;;cAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;sBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;sBACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,CAAC,CAAC,CAAC,CAAC,CAAC;cACP,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC,CAAC;UACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC3D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACjD,CAAC;YACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACb,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACxzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACpC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC7D,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAClC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC3D,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACnC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC5D,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC1C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACrG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/18083/Desktop/CCIT/office/o/smart-office/frontend/src/views/knowledge/Index.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"knowledge-container\" :key=\"internalRefreshKey\">\n    <el-alert\n      title=\"知识库使用说明\"\n      type=\"info\"\n      :closable=\"false\"\n      show-icon\n      style=\"margin-bottom: 20px;\"\n    >\n      <template #default>\n        <div>\n          知识库的<b>【上传文档】</b>、<b>【构建知识库】</b>及<b>【分类管理】</b>等核心功能，主要由企业所有者（老板角色）在后台进行统一管理和构建。\n          <br>\n          普通员工此页面进行已有知识的<b>查阅和检索</b>。\n        </div>\n      </template>\n    </el-alert>\n    \n    <!-- 标签页导航 -->\n    <el-tabs v-model=\"activeTab\" class=\"knowledge-tabs\" @tab-change=\"handleTabChange\">\n      <el-tab-pane label=\"文档管理\" name=\"documents\">\n        <template #label>\n          <span class=\"tab-label\">\n            <el-icon><Document /></el-icon>\n            文档管理\n          </span>\n        </template>\n        <DocumentManagement ref=\"documentManagementRef\" />\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"知识图谱\" name=\"graph\">\n        <template #label>\n          <span class=\"tab-label\">\n            <el-icon><DataAnalysis /></el-icon>\n            知识图谱\n          </span>\n        </template>\n        <KnowledgeGraph ref=\"knowledgeGraphRef\" />\n      </el-tab-pane>\n    </el-tabs>\n    \n    <!-- 原有的文档管理内容，现在作为组件 -->\n    <div v-show=\"false\" class=\"row\">\n      <!-- 左侧导航 -->\n      <div class=\"col-lg-3\">\n        <el-card class=\"category-card\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索文档...\"\n              clearable\n              :prefix-icon=\"Search\"\n              @input=\"handleSearch\"\n            ></el-input>\n          </div>\n          \n          <div class=\"category-list\">\n            <div v-for=\"(category, index) in categories\" :key=\"category.id || index\" \n                 class=\"category-item\" \n                 :class=\"{'active': selectedCategory === (category.id || index)}\"\n                 @click=\"selectCategory(category.id || index)\">\n              <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                <el-icon :size=\"20\" color=\"white\">\n                  <component :is=\"category.icon\"></component>\n                </el-icon>\n              </div>\n              <span class=\"category-name\">{{ category.name }}</span>\n              <span class=\"category-count\">{{ category.document_count || 0 }}</span>\n            </div>\n            \n            <!-- <el-button \n              v-if=\"isAdmin\"\n              type=\"primary\" \n              size=\"small\" \n              class=\"add-category-btn\"\n              @click=\"showCategoryDialog = true\">\n              <el-icon><Plus /></el-icon> 添加分类\n            </el-button> -->\n          </div>\n          \n          <div class=\"filter-section\">\n            <h6>筛选条件</h6>\n            <div class=\"filter-group\">\n              <h6>文件类型</h6>\n              <div class=\"filter-options\">\n                <el-checkbox v-model=\"filters.types.pdf\" @change=\"applyFilters\">PDF文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.doc\" @change=\"applyFilters\">Word文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.xls\" @change=\"applyFilters\">Excel表格</el-checkbox>\n                <el-checkbox v-model=\"filters.types.ppt\" @change=\"applyFilters\">PPT演示文稿</el-checkbox>\n                <el-checkbox v-model=\"filters.types.img\" @change=\"applyFilters\">图片</el-checkbox>\n                <el-checkbox v-model=\"filters.types.txt\" @change=\"applyFilters\">文本文件</el-checkbox>\n                <el-checkbox v-model=\"filters.types.md\" @change=\"applyFilters\">Markdown文件</el-checkbox>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </div>\n      \n      <!-- 右侧内容区 -->\n      <div class=\"col-lg-9\">\n        <div class=\"page-header\">\n          <h2 class=\"page-title\">{{ currentCategoryName }}</h2>\n            <div class=\"header-actions\">\n            <!-- <el-button type=\"primary\" size=\"large\" @click=\"openUploadDialog\">\n              <el-icon class=\"el-icon--left\"><Upload /></el-icon> 上传文档\n              </el-button>\n            <el-button type=\"success\" plain size=\"large\" @click=\"buildingVisible = true\">\n              <el-icon class=\"el-icon--left\"><Files /></el-icon> 构建知识库\n              </el-button>\n            <el-button v-if=\"isAdmin\" text bg size=\"large\" @click=\"showCategoryDialog = true\">\n              <el-icon class=\"el-icon--left\"><FolderAdd /></el-icon> 管理分类\n              </el-button> -->\n            <el-button text bg size=\"large\" @click=\"forceRefresh\">\n              <el-icon class=\"el-icon--left\"><Refresh /></el-icon> 刷新\n              </el-button>\n            </div>\n          </div>\n          \n        <el-card class=\"document-container-card\" shadow=\"never\">\n          <div v-if=\"documents.length === 0\" class=\"empty-state\">\n            <div class=\"empty-icon\">\n              <el-icon><InfoFilled /></el-icon>\n            </div>\n            <h3 class=\"empty-title\">当前分类下暂无文档</h3>\n          </div>\n          \n          <div v-else class=\"document-grid\">\n            <el-card \n              v-for=\"doc in documents\" \n              :key=\"doc.id\" \n              class=\"document-item-card\" \n              shadow=\"hover\"\n              body-style=\"padding: 0; height: 100%; display: flex; flex-direction: column;\"\n            >\n              <div class=\"card-header\">\n                <div class=\"file-icon\" :class=\"'file-icon-' + doc.file_type\">\n                  <component :is=\"getFileIcon(doc.file_type)\" />\n              </div>\n                <div class=\"document-title-block\">\n                  <h5 class=\"document-title\" :title=\"doc.title\">\n                    {{ doc.title }}\n                    <span v-if=\"doc.file_type\" class=\"file-extension\">.{{ doc.file_type }}</span>\n                  </h5>\n                  </div>\n                </div>\n              <div class=\"card-body\">\n                <p class=\"document-description\">\n                  {{ doc.description || '暂无描述信息' }}\n                </p>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"document-meta\">\n                  <el-icon><Clock /></el-icon>\n                  <span>{{ formatDate(doc.date) }}</span>\n                </div>\n                <div class=\"card-actions\">\n                  <el-button type=\"primary\" text bg :icon=\"Download\" @click.stop=\"downloadDocument(doc)\">下载</el-button>\n                   <!-- <el-dropdown trigger=\"click\" @click.stop>\n                    <el-button text bg class=\"more-button\">\n                      <el-icon><MoreFilled /></el-icon>\n                  </el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                        <el-dropdown-item @click=\"editDocument(doc)\" :icon=\"Edit\">编辑</el-dropdown-item>\n                        <el-dropdown-item @click=\"deleteDocument(doc)\" :icon=\"Delete\" class=\"delete-item\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown> -->\n              </div>\n            </div>\n            </el-card>\n          </div>\n          \n          <div v-if=\"documents.length > 0\" class=\"pagination-wrapper\">\n            <el-pagination\n              background\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"totalDocs\"\n              :page-size=\"pageSize\"\n              :page-sizes=\"[12, 24, 48, 96]\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              @size-change=\"handleSizeChange\"\n            />\n          </div>\n        </el-card>\n      </div>\n    </div>\n    \n    <!-- 文件上传对话框 -->\n    <el-dialog\n      v-model=\"uploadVisible\"\n      title=\"上传文档\"\n      width=\"500px\"\n      :before-close=\"handleCloseUploadDialog\"\n    >\n      <el-form ref=\"uploadFormRef\" :model=\"uploadForm\" :rules=\"uploadRules\">\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"uploadForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"uploadForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"文档文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"javascript:void(0);\"\n            :auto-upload=\"false\"\n            :on-change=\"handleFileChange\"\n            :on-remove=\"handleRemove\"\n            :limit=\"1\"\n            :before-upload=\"beforeUpload\"\n            :on-error=\"handleUploadError\"\n            ref=\"uploadRef\"\n          >\n            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            <div class=\"el-upload__text\">\n              拖拽文件到此处或<em>点击上传</em>\n            </div>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                <strong>仅支持</strong>上传 txt, pdf, doc, docx, md, ppt, pptx, xls, xlsx 格式文件，单个文件不超过10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCancelUpload\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">上传</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"showCategoryDialog\"\n      title=\"分类管理\"\n      width=\"850px\"\n    >\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n          <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <!-- <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button> -->\n          </div>\n          \n          <div v-if=\"categoryLoading\" class=\"text-center p-4\">\n            <el-icon class=\"is-loading\"><Loading /></el-icon> 加载中...\n          </div>\n          \n          <div v-else-if=\"categories.length <= 1\" class=\"empty-categories\">\n            <el-empty description=\"\" />\n          </div>\n          \n          <div v-else class=\"category-items\">\n            <div v-for=\"(category, index) in categories.filter(c => c.id !== 'all')\" :key=\"index\" class=\"category-list-item\">\n              <div class=\"category-info\">\n                <div class=\"category-color\" :style=\"{ backgroundColor: category.color }\"></div>\n                <div class=\"category-name-section\">\n                  <div class=\"category-name\" :title=\"category.name\">{{ category.name }}</div>\n                  <div class=\"category-desc\" :title=\"category.description\">{{ category.description || '无描述' }}</div>\n                </div>\n              </div>\n              \n              <div class=\"category-details\">\n                <span class=\"category-count\">{{ category.document_count || 0 }}个文档</span>\n                <div class=\"category-actions\">\n                    <el-button type=\"primary\" size=\"small\" plain @click=\"editCategory(category)\">\n                      <el-icon><Edit /></el-icon>\n                    </el-button>\n                    <el-button type=\"danger\" size=\"small\" plain @click=\"handleDeleteCategory(category)\">\n                      <el-icon><Delete /></el-icon>\n                    </el-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAddCategoryForm\" class=\"category-form-section\">\n          <div class=\"section-header\">\n            <h5>{{ editingCategory ? '编辑分类' : '新增分类' }}</h5>\n            <el-button size=\"small\" @click=\"cancelCategoryForm\">\n              取消\n            </el-button>\n          </div>\n          \n          <el-form :model=\"categoryForm\" label-width=\"80px\">\n            <el-form-item label=\"分类名称\" required>\n              <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"分类描述\">\n              <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"2\" placeholder=\"请输入分类描述\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"图标\">\n              <el-select v-model=\"categoryForm.icon\" placeholder=\"选择图标\" style=\"width: 100%\">\n                <el-option value=\"Document\" label=\"文档\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Document /></el-icon> <span class=\"ml-2\">文档</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Files\" label=\"文件夹\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Files /></el-icon> <span class=\"ml-2\">文件夹</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Tickets\" label=\"票据\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Tickets /></el-icon> <span class=\"ml-2\">票据</span>\n                  </div>\n                </el-option>\n                <el-option value=\"DataAnalysis\" label=\"数据分析\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><DataAnalysis /></el-icon> <span class=\"ml-2\">数据分析</span>\n                  </div>\n                </el-option>\n                <el-option value=\"PictureFilled\" label=\"图片\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><PictureFilled /></el-icon> <span class=\"ml-2\">图片</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"颜色\">\n              <el-color-picker v-model=\"categoryForm.color\" show-alpha @change=\"formatColorValue\"></el-color-picker>\n              <span class=\"ml-2\">{{ categoryForm.color }}</span>\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\n              <el-button @click=\"cancelCategoryForm\">取消</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 知识库构建对话框组件 -->\n    <KnowledgeBuilder \n      v-model=\"buildingVisible\"\n      @build-completed=\"handleBuildCompleted\"\n      @build-failed=\"handleBuildFailed\"\n    />\n\n    <!-- 编辑文档对话框 -->\n    <el-dialog\n      v-model=\"editDialogVisible\"\n      title=\"编辑文档\"\n      width=\"500px\"\n      :before-close=\"handleCloseEditDialog\"\n    >\n      <el-form :model=\"editForm\" label-width=\"80px\">\n        <el-form-item label=\"文档标题\">\n          <el-input v-model=\"editForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"editForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"editForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCancelEditDialog\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleUpdateDocument\">保存</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onBeforeUnmount, onActivated, nextTick, watch } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, Upload, FolderAdd, View, Download, More, Share, \n  Edit, EditPen, FolderOpened, Star, Delete, Document, \n  Files, Tickets, DataAnalysis, PictureFilled, UploadFilled,\n  Loading, List, Grid, Crop, Plus, InfoFilled, Clock, User,\n  Refresh\n} from '@element-plus/icons-vue'\nimport { getCategories, getDocuments, getDocumentChunks, uploadDocument, updateDocument, deleteDocument as apiDeleteDocument, deleteCategory, updateCategory, addCategory, downloadDocumentFile } from '@/api/knowledge'\nimport KnowledgeBuilder from '@/components/KnowledgeBuilder.vue'\nimport KnowledgeGraph from './components/KnowledgeGraph.vue'\nimport DocumentManagement from './components/DocumentManagement.vue'\n\nexport default {\n  name: 'Knowledge',\n  components: {\n    KnowledgeBuilder,\n    KnowledgeGraph,\n    DocumentManagement\n  },\n  setup() {\n    // 路由相关\n    const route = useRoute();\n    \n    // 内部刷新标识\n    const internalRefreshKey = ref(Date.now());\n    \n    // 状态变量\n    const activeTab = ref('documents')\n    const searchQuery = ref('')\n    const selectedCategory = ref('all')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const uploadVisible = ref(false)\n    const editDialogVisible = ref(false)\n    const showCategoryDialog = ref(false)\n    const showAddCategoryForm = ref(false)\n    const showChunksDialog = ref(false)\n    const editingCategory = ref(null)\n    const viewMode = ref('list')\n    const sortOrder = ref('-created_at')\n    const categoryLoading = ref(false)\n    const loading = ref(false)\n    const uploading = ref(false)\n    const chunksLoading = ref(false)\n    const isAdmin = ref(true) // 实际应用中从用户会话获取\n    const selectedDocument = ref(null)\n    const documentChunks = ref([])\n    const uploadFormRef = ref(null)\n    const uploadRef = ref(null)\n    const totalDocs = ref(0)\n    const documentManagementRef = ref(null)\n    const knowledgeGraphRef = ref(null)\n    \n    // 编辑表单\n    const editForm = reactive({\n      id: null,\n      title: '',\n      description: '',\n      category: null,\n      creator: null,\n    })\n    \n    // 上传表单\n    const uploadForm = reactive({\n      title: '',\n      description: '',\n      file: null,\n      category: null,\n      tags: '',\n      chunk_size: 500,\n      chunk_overlap: 50,\n      is_public: true\n    })\n    \n    // 上传表单验证规则\n    const uploadRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' }\n      ],\n      file: [\n        { required: true, message: '请上传文件', trigger: 'change' }\n      ]\n    }\n    \n    // 分类表单\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      icon: 'Document',\n      color: '#409EFF'\n    })\n    \n    // 筛选条件\n    const filters = ref({\n      types: {\n        pdf: false,\n        doc: false,\n        xls: false,\n        ppt: false,\n        img: false,\n        txt: false,\n        md: false,\n      },\n    })\n    \n    // 知识分类\n    const categories = ref([\n      { id: 'all', name: '全部文档', icon: 'Files', color: '#007bff', document_count: 0 }\n    ])\n    \n    // 文档列表\n    const documents = ref([])\n    \n    // 计算属性\n    const currentCategoryName = computed(() => {\n      const category = categories.value.find(cat => cat.id === selectedCategory.value)\n      return category ? category.name : '全部文档'\n    })\n    \n    const processingCount = computed(() => {\n      return documents.value.filter(doc => doc.status === 'processing').length\n    })\n    \n    // 知识库构建相关状态\n    const buildingVisible = ref(false)\n    \n    // 方法\n    const fetchCategories = async () => {\n      categoryLoading.value = true\n      console.log('开始获取知识库分类...')\n      try {\n        // console.log('请求URL:', `${API_URL}/categories/`) // 已被实际API调用取代\n        const response = await getCategories() // API call for specific categories\n        console.log('获取分类响应:', response)\n        \n        let categoryList = []\n        \n        // 处理不同格式的响应 (for specific categories)\n        if (response) {\n          if (response.results && Array.isArray(response.results)) {\n            categoryList = response.results\n          } \n          else if (Array.isArray(response)) {\n            categoryList = response\n          } \n          else if (typeof response === 'object') {\n            const possibleArrayFields = ['data', 'categories', 'items'];\n            for (const field of possibleArrayFields) {\n              if (response[field] && Array.isArray(response[field])) {\n                categoryList = response[field];\n                break;\n              }\n            }\n          }\n        }\n\n        // Fetch the grand total of all documents\n        let grandTotalAllDocuments = 0;\n        try {\n          // Lightweight request to get the total count of all documents\n          const allDocsResponse = await getDocuments({ page: 1, page_size: 1 }); \n          if (allDocsResponse && Object.prototype.hasOwnProperty.call(allDocsResponse, 'count')) {\n            grandTotalAllDocuments = allDocsResponse.count;\n            console.log('获取到全部文档总数:', grandTotalAllDocuments);\n          } else {\n            console.warn('未能从 getDocuments 响应中获取总数 count:', allDocsResponse);\n          }\n        } catch (docError) {\n          console.error('获取全部文档总数失败:', docError);\n          // 保留 grandTotalAllDocuments = 0 或根据需要处理错误\n        }\n        \n        // 创建 \"全部文档\" 分类\n        const allCategory = { \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: grandTotalAllDocuments // 使用获取到的真实总数\n        }\n        \n        if (categoryList && categoryList.length > 0) {\n          console.log('找到分类数据，数量:', categoryList.length);\n          // 不再通过累加其他分类来计算 allCategory.document_count\n          categories.value = [allCategory, ...categoryList]\n        } else {\n          console.warn('未找到有效的分类数据');\n          if (response && response.message) {\n            ElMessage.warning(response.message);\n          } else if (!response && !categoryList.length) { // Only show if response was truly empty and no list was parsed\n             // 删除警告消息\n          }\n          categories.value = [allCategory]; // 至少显示\"全部文档\"分类\n        }\n      } catch (error) {\n        console.error('获取分类失败:', error)\n        if (error.response) {\n          console.error('错误响应状态:', error.response.status)\n          console.error('错误响应数据:', error.response.data)\n        } else if (error.message && error.message.includes('message channel closed')) {\n          console.warn('通信通道关闭：', error.message);\n          // 静默处理此类错误，不向用户显示\n        } else {\n          ElMessage.error('无法加载知识库分类，请检查网络连接或联系管理员')\n        }\n        // 确保至少有\"全部\"分类可显示\n        categories.value = [{ \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }];\n      } finally {\n        categoryLoading.value = false\n      }\n    }\n    \n    const fetchDocuments = async () => {\n      loading.value = true\n      try {\n        // 构建参数对象\n        const params = {\n          page: currentPage.value,\n          page_size: pageSize.value,\n          ordering: sortOrder.value\n        }\n        \n        // 添加筛选条件\n        if (selectedCategory.value && selectedCategory.value !== 'all') {\n          params.category = selectedCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        // 添加文件类型筛选\n        const selectedTypes = []\n        const typeMapping = {\n          doc: ['doc', 'docx'],\n          xls: ['xls', 'xlsx'],\n          ppt: ['ppt', 'pptx'],\n        };\n\n        for (const [type, selected] of Object.entries(filters.value.types)) {\n          if (selected) {\n            if (typeMapping[type]) {\n              selectedTypes.push(...typeMapping[type]);\n            } else {\n              selectedTypes.push(type);\n            }\n          }\n        }\n        \n        // 使用Set去重，以防将来可能的逻辑重叠\n        const uniqueSelectedTypes = [...new Set(selectedTypes)];\n\n        if (uniqueSelectedTypes.length > 0) {\n          params.file_type = uniqueSelectedTypes.join(',')\n        }\n        \n        const response = await getDocuments(params)\n        if (response) {\n          console.log('获取文档响应:', response)\n          \n          // 处理不同格式的响应\n          if (response.results && Array.isArray(response.results)) {\n            // 分页格式的响应\n            documents.value = response.results\n            totalDocs.value = response.count || response.total || documents.value.length\n          } else if (Array.isArray(response)) {\n            // 数组格式的响应\n            documents.value = response\n            totalDocs.value = response.length\n          } else if (response.data && Array.isArray(response.data)) {\n            // 另一种常见的对象包装格式\n            documents.value = response.data\n            totalDocs.value = response.total || response.count || documents.value.length\n          } else if (typeof response === 'object') {\n            // 尝试提取可能的文档列表\n            const possibleDocuments = Object.values(response).filter(item => \n              item && typeof item === 'object' && ('title' in item || 'file' in item)\n            )\n            if (possibleDocuments.length > 0) {\n              documents.value = possibleDocuments\n              totalDocs.value = possibleDocuments.length\n            } else {\n              console.error('无法从响应中提取文档列表:', response)\n              documents.value = []\n              totalDocs.value = 0\n              ElMessage.warning('获取文档列表格式异常')\n            }\n          } else {\n            console.error('文档响应格式不支持:', typeof response, response)\n            documents.value = []\n            totalDocs.value = 0\n            ElMessage.warning('获取文档列表格式不支持')\n          }\n        } else {\n          documents.value = []\n          totalDocs.value = 0\n        }\n      } catch (error) {\n        console.error('获取文档失败:', error)\n        ElMessage.error('无法加载知识库文档')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const fetchDocumentChunks = async (documentId) => {\n      chunksLoading.value = true\n      try {\n        const response = await getDocumentChunks(documentId)\n        documentChunks.value = response\n      } catch (error) {\n        console.error('获取文档分块失败:', error)\n        ElMessage.error('无法加载文档分块数据')\n      } finally {\n        chunksLoading.value = false\n      }\n    }\n    \n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchDocuments()\n    }\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const selectCategory = (categoryId) => {\n      selectedCategory.value = categoryId\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const applyFilters = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleFileChange = (file) => {\n      console.log(\">>> handleFileChange: Received file object from el-upload:\", file);\n      if (file && file.raw) {\n        console.log(\">>> handleFileChange: file.raw (the actual File object):\", file.raw);\n        \n        // 检查文件大小是否为0，这会导致上传失败\n        if (file.raw.size === 0) {\n          ElMessage.error('文件大小为0，请选择有效文件');\n          return false;\n        }\n        \n        // 检查文件是否过大（例如超过10MB）\n        const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n        if (file.raw.size > maxSizeInBytes) {\n          ElMessage.error(`文件过大，最大支持${maxSizeInBytes / (1024 * 1024)}MB`);\n          return false;\n        }\n        \n        // 严格检查文件扩展名是否支持\n        const fileName = file.raw.name;\n        const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n        const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n        \n        if (!allowedFileTypes.includes(ext)) {\n          ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n          // 不支持的文件类型不应该更新uploadForm.file\n          uploadForm.file = null;\n          // 清除上传组件中显示的文件\n          if (uploadRef.value) {\n            uploadRef.value.clearFiles();\n          }\n          return false;\n        }\n        \n        // 仅在验证通过后设置文件\n        uploadForm.file = file.raw\n        console.log(\">>> handleFileChange: uploadForm.file after assignment:\", uploadForm.file, uploadForm.file ? `Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}` : 'No file');\n        uploadForm.title = uploadForm.title || file.name.split('.')[0];\n        \n        // 返回true表示验证通过\n        return true;\n      } else {\n        console.warn(\">>> handleFileChange: file.raw is not available. File:\", file);\n        return false;\n      }\n    }\n    \n    const handleRemove = () => {\n      console.log(\">>> handleRemove: File removed by user. Setting uploadForm.file to null.\");\n      uploadForm.file = null;\n      \n      // 如果标题是自动从文件名生成的，也清除标题\n      if (uploadForm.title && uploadForm.title.includes('.')) {\n        const fileNameWithoutExt = uploadForm.file?.name?.split('.')[0];\n        if (uploadForm.title === fileNameWithoutExt) {\n          uploadForm.title = '';\n        }\n      }\n    }\n    \n    const beforeUpload = (file) => {\n      // 获取文件扩展名\n      const fileName = file.name;\n      const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n      \n      // 允许的文件类型列表\n      const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n      \n      // 严格检查文件类型\n      if (!allowedFileTypes.includes(ext)) {\n        ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n        return false;\n      }\n      \n      // 检查文件大小\n      const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSizeInBytes) {\n        ElMessage.error(`文件大小超过限制，最大支持 ${maxSizeInBytes / (1024 * 1024)}MB`);\n        return false;\n      }\n      \n      // 检查文件是否为空\n      if (file.size === 0) {\n        ElMessage.error('文件为空，请选择有效文件');\n        return false;\n      }\n      \n      return true;\n    }\n    \n    const handleUploadError = (error) => {\n      console.error('上传错误:', error);\n      ElMessage.error('上传错误，请检查文件格式或网络连接');\n      // 移除错误文件\n      uploadForm.file = null;\n    }\n    \n    const submitUpload = async () => {\n      if (!uploadFormRef.value) return\n      \n      await uploadFormRef.value.validate(async (valid) => {\n        if (valid) {\n          uploading.value = true\n          \n          console.log(\">>> submitUpload: Current uploadForm.file before appending to FormData:\", uploadForm.file);\n          if (!uploadForm.file) {\n            console.warn(\">>> submitUpload: uploadForm.file is null or undefined before appending.\");\n            uploading.value = false;\n            ElMessage.warning(\"请先选择文件再上传\");\n            return;\n          }\n          \n          // 再次检查文件大小，确保不是空文件或损坏文件\n          if (uploadForm.file.size === 0) {\n            console.error(\">>> submitUpload: 文件大小为0，无法上传\");\n            uploading.value = false;\n            ElMessage.error(\"文件大小为0，请选择有效文件\");\n            return;\n          }\n          \n          console.log(`>>> submitUpload: uploadForm.file details - Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}`);\n          \n          // 创建formData对象，并添加文件和其他参数\n          const formData = new FormData()\n          formData.append('title', uploadForm.title)\n          formData.append('description', uploadForm.description)\n          formData.append('file', uploadForm.file) // Appending the file\n          \n          if (uploadForm.category) {\n            formData.append('category', uploadForm.category)\n            console.log(`>>> submitUpload: Attaching category to FormData: ${uploadForm.category}`)\n          } else {\n            console.log(\">>> submitUpload: No category selected (uploadForm.category is null/empty). Not attaching to FormData.\")\n          }\n          \n          formData.append('tags', JSON.stringify(uploadForm.tags))\n          formData.append('chunk_size', uploadForm.chunk_size.toString())\n          formData.append('chunk_overlap', uploadForm.chunk_overlap.toString())\n          formData.append('is_public', uploadForm.is_public.toString())\n          \n          // 再次检查formData中的文件是否正确\n          const fileInFormData = formData.get('file');\n          if (!fileInFormData || fileInFormData.size === 0) {\n            console.error(\">>> submitUpload: FormData中的文件无效或大小为0\");\n            uploading.value = false;\n            ElMessage.error(\"FormData处理文件失败，请重试\");\n            return;\n          }\n\n          try {\n            const response = await uploadDocument(formData) // Assuming uploadDocument returns the new document object or its ID\n            console.log(\">>> submitUpload: API Response from uploadDocument:\", response);\n\n            ElMessage.success('文档上传请求已发送，后台正在处理...')\n            uploading.value = false // 确保上传状态被重置\n            uploadVisible.value = false\n            const uploadedFileTitle = uploadForm.title; // Store title for polling check\n            resetUploadForm()\n\n            // Start polling for document status if response contains an ID or enough info\n            // For simplicity, we'll poll fetchDocuments and look for the title, assuming titles are reasonably unique for recent uploads.\n            // A more robust way is if backend returns the new document ID, and we poll a getDocumentById(id) endpoint.\n            // Or if the document object in fetchDocuments has a clear 'status' field (e.g., 'processing', 'completed').\n            \n            let attempts = 0;\n            const maxAttempts = 10; // Poll for max 30 seconds (10 attempts * 3s interval)\n            const pollInterval = 3000; // 3 seconds\n\n            const poll = setInterval(async () => {\n              attempts++;\n              console.log(`>>> Polling for document status (attempt ${attempts}/${maxAttempts})...`);\n              try {\n                // Fetch the list of documents, usually sorted by creation date descending\n                const documentsResponse = await getDocuments({ \n                  page: 1, \n                  page_size: 10, // Check recent documents\n                  ordering: '-created_at', \n                  category: selectedCategory.value || undefined, // Use current category or all if 'all'\n                  // search: uploadedFileTitle // Optionally, if backend supports search by title for recent items\n                });\n\n                let foundDoc = null;\n                if (documentsResponse && documentsResponse.results && documentsResponse.results.length > 0) {\n                  // Attempt to find the document by title. This is a simplification.\n                  // Ideally, backend returns ID and we poll for that ID, or a status field directly.\n                  foundDoc = documentsResponse.results.find(doc => doc.title === uploadedFileTitle);\n                  \n                  // MORE ROBUST CHECK: Assume doc object has a 'status' field from backend\n                  // Example: if (doc.status === 'completed') { ... }\n                  // For now, if we find it by title recently, we assume it might be processed or soon.\n                }\n\n                if (foundDoc) {\n                  // Let's assume if found by title, it's processed enough for a refresh.\n                  // Replace this with actual status check if backend provides 'status' field.\n                  console.log(`>>> Polling: Document \"${uploadedFileTitle}\" found (or assumed processed). Refreshing lists.`);\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.success(`文档 \"${uploadedFileTitle}\" 处理完毕并已刷新列表!`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                } else if (attempts >= maxAttempts) {\n                  console.log(\">>> Polling: Max attempts reached. Refreshing lists anyway.\");\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.info(`文档 \"${uploadedFileTitle}\" 可能仍在后台处理中，列表已刷新。`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                }\n              } catch (pollError) {\n                console.error(\">>> Polling error:\", pollError);\n                clearInterval(poll);\n                // Still refresh, as the document might be there despite polling error\n                fetchDocuments();\n                fetchCategories();\n                ElMessage.error('检查文档状态时出错，列表已刷新。');\n                // 确保所有状态正确重置\n                uploading.value = false;\n              }\n            }, pollInterval);\n\n          } catch (error) {\n            console.error('上传文档失败:', error)\n            uploading.value = false;\n            // 在上传失败时清除文件选择状态\n            if (uploadRef.value) {\n              uploadRef.value.clearFiles();\n            }\n            let errorMsg = '文档上传失败'\n            if (error.response && error.response.data) {\n              const data = error.response.data;\n              if (typeof data === 'string') errorMsg += ': ' + data;\n              else if (data.detail) errorMsg += ': ' + data.detail;\n              else if (data.message) errorMsg += ': ' + data.message;\n              else if (data.file && Array.isArray(data.file)) errorMsg += ': ' + data.file.join(', ');\n              // 处理特定的文件类型错误\n              else if (data.status === 'error' && data.message && data.message.includes('不支持的文件类型')) {\n                errorMsg = data.message; // 直接使用后端的错误消息\n              }\n              else if (typeof data === 'object') errorMsg += ': ' + JSON.stringify(data).substring(0, 100);\n            }\n            ElMessage.error(errorMsg);\n          }\n        } else {\n          console.log('error submit!! Form validation failed.');\n          uploading.value = false; // Ensure uploading is reset if validation fails\n          return false;\n        }\n      })\n    }\n    \n    const showDocumentChunks = async (doc) => {\n      selectedDocument.value = doc\n      showChunksDialog.value = true\n      await fetchDocumentChunks(doc.id)\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = category\n      categoryForm.id = category.id\n      categoryForm.name = category.name\n      categoryForm.description = category.description || ''\n      categoryForm.icon = category.icon || 'Document'\n      \n      // 确保颜色值不超过20个字符\n      if (category.color && category.color.length > 20) {\n        categoryForm.color = category.color.substring(0, 20);\n        console.log(`编辑分类时截断颜色值: ${category.color} -> ${categoryForm.color}`);\n      } else {\n        categoryForm.color = category.color || '#409EFF'\n      }\n      \n      showAddCategoryForm.value = true // 显示编辑表单\n    }\n    \n    const handleDeleteCategory = async (category) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗？`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteCategory(category.id)\n        ElMessage.success('分类删除成功')\n        fetchCategories()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const saveCategoryForm = async () => {\n      console.log('保存分类表单被调用，模式:', editingCategory.value ? 'edit' : 'add')\n      \n      // 确保颜色值不超过20个字符\n      formatColorValue(categoryForm.color);\n      \n      showAddCategoryForm.value = false\n      if (editingCategory.value) {\n        console.log('尝试更新分类:', categoryForm)\n        if (!editingCategory.value.id) {\n            ElMessage.error('无法更新分类，未找到当前编辑的分类ID');\n            return;\n        }\n        try {\n          const response = await updateCategory(editingCategory.value.id, categoryForm)\n          console.log('更新分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类更新成功')\n            await fetchCategories() // 刷新分类列表\n            // 如果当前编辑的分类就是选中的分类，可能需要刷新文档列表\n            if (selectedCategory.value === (response.id || response.data.id)) {\n              await fetchDocuments();\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`更新分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`更新分类失败: ${response.detail}`)\n          }\n          else {\n            ElMessage.error('更新分类失败，响应格式不符合预期或无ID返回')\n          }\n        } catch (error) {\n          console.error('更新分类失败:', error)\n          ElMessage.error('更新分类失败，请检查网络或联系管理员')\n        }\n      } else {\n        console.log('尝试添加新分类:', categoryForm)\n        try {\n          const response = await addCategory(categoryForm)\n          console.log('添加分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类添加成功')\n            await fetchCategories() // 刷新分类列表\n            // 自动选中新创建的分类并刷新文档列表\n            const newCategoryId = response.id || response.data.id;\n            if (newCategoryId) {\n              selectedCategory.value = newCategoryId;\n              console.log(`新分类创建成功，自动选中新分类 ID: ${newCategoryId}`);\n              await fetchDocuments(); // 刷新文档列表以显示新选中的分类（初始为空）\n            } else {\n              console.warn(\"新创建的分类ID未找到，无法自动选中。\");\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`添加分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`添加分类失败: ${response.detail}`)\n          }\n           else {\n            ElMessage.error('添加分类失败，响应格式不符合预期或无ID返回')\n            console.error(\"添加分类失败，响应:\", response);\n          }\n        } catch (error) {\n          console.error('添加分类失败:', error)\n          ElMessage.error('添加分类失败，请检查网络或联系管理员')\n        }\n      }\n      resetCategoryForm()\n    }\n    \n    const cancelCategoryForm = () => {\n      showAddCategoryForm.value = false\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF' // 确保默认颜色值不超过20个字符\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF' // 确保默认颜色值不超过20个字符\n      showAddCategoryForm.value = true\n    }\n    \n    const resetUploadForm = () => {\n      if (uploadFormRef.value) {\n        // 使用el-form的resetFields方法重置表单\n        uploadFormRef.value.resetFields(); \n      }\n      \n      // 手动重置所有uploadForm字段，确保全部清空\n      uploadForm.title = ''\n      uploadForm.description = ''\n      uploadForm.file = null\n      uploadForm.category = null // Explicitly reset category\n      uploadForm.tags = ''\n      uploadForm.is_public = true\n      uploadForm.chunk_size = 500 // 重置为初始默认值\n      uploadForm.chunk_overlap = 50 // 重置为初始默认值\n      \n      // 清除上传组件中的文件\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles();\n      }\n      \n      console.log(\">>> resetUploadForm: uploadForm和上传组件已完全重置\");\n    }\n    \n    const handleCancelUpload = () => {\n      // 如果正在上传，不允许关闭\n      if (uploading.value) {\n        ElMessage.warning('文件正在上传中，请等待上传完成');\n        return;\n      }\n      resetUploadForm();\n      uploadVisible.value = false;\n    }\n    \n    const handleCloseUploadDialog = (done) => {\n      handleCancelUpload();\n      done(); // 允许关闭对话框\n    }\n    \n    const openUploadDialog = () => {\n      resetUploadForm(); // Reset form first for a clean state\n      if (selectedCategory.value && selectedCategory.value !== 'all') {\n        uploadForm.category = selectedCategory.value;\n        console.log(`>>> openUploadDialog: Auto-selecting current category: ${selectedCategory.value}`);\n      } else {\n        uploadForm.category = null; // If 'all' or no category is selected, let user choose in dialog\n        console.log(\">>> openUploadDialog: No category auto-selected (current is 'all' or none).\");\n      }\n      uploadVisible.value = true;\n    };\n    \n    // 文件操作函数\n    const previewDocument = async (doc) => {\n      try {\n        // 记录文档对象，便于调试\n        console.log('预览文档对象:', doc);\n        \n        // 检查是否有 original_file 字段\n        if (doc.original_file) {\n          try {\n            const response = await fetch(doc.original_file);\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              window.open(url, '_blank');\n              setTimeout(() => window.URL.revokeObjectURL(url), 100);\n              return;\n            }\n          } catch (error) {\n            console.warn('通过 original_file 访问失败，尝试其他方式:', error);\n          }\n        }\n        \n        // 首先尝试通过API获取文件\n        try {\n          const response = await downloadDocumentFile(doc.id);\n        const blob = new Blob([response.data], { type: response.headers['content-type'] || 'application/octet-stream' });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url, '_blank');\n        setTimeout(() => window.URL.revokeObjectURL(url), 100);\n          return;\n        } catch (apiError) {\n          console.warn('通过API获取文件失败，尝试直接访问文件URL:', apiError);\n        }\n        \n        // 如果API调用失败，尝试直接访问文件URL\n        if (doc.file_url) {\n          // 尝试直接访问原始URL\n          try {\n            const response = await fetch(doc.file_url);\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              window.open(url, '_blank');\n              setTimeout(() => window.URL.revokeObjectURL(url), 100);\n              return;\n            }\n          } catch (urlError) {\n            console.warn('直接访问文件URL失败:', urlError);\n          }\n          \n          // 尝试修正的URL路径\n          // 从file_url中提取文件名\n          const fileUrlParts = doc.file_url.split('/');\n          const originalFilename = fileUrlParts[fileUrlParts.length - 1];\n          \n          // 尝试从file_url中提取可能的UUID\n          let uuid = null;\n          const uuidMatch = doc.file_url.match(/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/);\n          if (uuidMatch && uuidMatch[1]) {\n            uuid = uuidMatch[1];\n            console.log('从URL中提取的UUID:', uuid);\n          }\n          \n          // 构造可能的替代路径\n          const possiblePaths = [\n            `/media/original_files/${originalFilename}`,\n            `/media/original_files/company_1/${originalFilename}`,\n            `/backend/media/original_files/${originalFilename}`,\n            `/backend/media/original_files/company_1/${originalFilename}`,\n            `/media/documents/1/${originalFilename}`,\n            `/backend/media/documents/1/${originalFilename}`\n          ];\n          \n          // 如果文件名不是UUID格式，尝试在documents目录下查找可能匹配的文件\n          if (!originalFilename.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\.[a-z]+$/)) {\n            // 尝试使用文档ID作为文件名的一部分\n            if (doc.id) {\n              possiblePaths.push(`/media/documents/1/${doc.id}.${doc.file_type}`);\n              possiblePaths.push(`/backend/media/documents/1/${doc.id}.${doc.file_type}`);\n            }\n          }\n          \n          // 如果从URL中提取到了UUID，尝试使用UUID构造路径\n          if (uuid) {\n            possiblePaths.push(`/media/documents/1/${uuid}.${doc.file_type}`);\n            possiblePaths.push(`/backend/media/documents/1/${uuid}.${doc.file_type}`);\n          }\n          \n          // 尝试所有可能的路径\n          for (const path of possiblePaths) {\n            try {\n              const response = await fetch(path);\n              if (response.ok) {\n                const blob = await response.blob();\n                const url = window.URL.createObjectURL(blob);\n                window.open(url, '_blank');\n                setTimeout(() => window.URL.revokeObjectURL(url), 100);\n                return;\n              }\n            } catch (pathError) {\n              console.warn(`尝试路径 ${path} 失败:`, pathError);\n            }\n          }\n        }\n        \n        // 所有尝试都失败，显示错误消息\n        throw new Error('无法找到有效的文件路径');\n      } catch (error) {\n        console.error('预览文档失败:', error);\n        ElMessage.error('预览文档失败: 无法找到或访问文件。请联系管理员检查文件路径配置。');\n      }\n    }\n    \n    const downloadDocument = async (doc) => {\n      try {\n        // 记录文档对象，便于调试\n        console.log('下载文档对象:', doc);\n        \n        // 检查是否有 original_file 字段\n        if (doc.original_file) {\n          try {\n            const response = await fetch(doc.original_file);\n            if (response.ok) {\n              const blob = await response.blob();\n              const filename = doc.original_filename || doc.title + '.' + doc.file_type;\n              \n              const url = window.URL.createObjectURL(blob);\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', filename);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n              \n              ElMessage.success(`文档 \"${filename}\" 下载成功`);\n              return;\n            }\n          } catch (error) {\n            console.warn('通过 original_file 下载失败，尝试其他方式:', error);\n          }\n        }\n        \n        // 首先尝试通过API获取文件\n        try {\n          const response = await downloadDocumentFile(doc.id);\n          const filename = doc.title ? `${doc.title}.${doc.file_type}` : \n                          (doc.file_url ? doc.file_url.split('/').pop() : `document.${doc.file_type}`);\n          \n          const url = window.URL.createObjectURL(new Blob([response.data], { type: response.headers['content-type'] || 'application/octet-stream' }));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', filename);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          \n          ElMessage.success(`文档 \"${filename}\" 下载成功`);\n          return;\n        } catch (apiError) {\n          console.warn('通过API获取文件失败，尝试直接访问文件URL:', apiError);\n        }\n        \n        // 如果API调用失败，尝试直接访问文件URL\n        if (doc.file_url) {\n          // 尝试直接访问原始URL\n          try {\n            const response = await fetch(doc.file_url);\n            if (response.ok) {\n              const blob = await response.blob();\n              const filename = doc.title ? `${doc.title}.${doc.file_type}` : doc.file_url.split('/').pop();\n              \n              const url = window.URL.createObjectURL(blob);\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', filename);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n              \n              ElMessage.success(`文档 \"${filename}\" 下载成功`);\n              return;\n            }\n          } catch (urlError) {\n            console.warn('直接访问文件URL失败:', urlError);\n          }\n          \n          // 尝试修正的URL路径\n          const fileUrlParts = doc.file_url.split('/');\n          const originalFilename = fileUrlParts[fileUrlParts.length - 1];\n          \n          // 尝试从file_url中提取可能的UUID\n          let uuid = null;\n          const uuidMatch = doc.file_url.match(/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/);\n          if (uuidMatch && uuidMatch[1]) {\n            uuid = uuidMatch[1];\n            console.log('从URL中提取的UUID:', uuid);\n          }\n          \n          // 构造可能的替代路径\n          const possiblePaths = [\n            `/media/original_files/${originalFilename}`,\n            `/media/original_files/company_1/${originalFilename}`,\n            `/backend/media/original_files/${originalFilename}`,\n            `/backend/media/original_files/company_1/${originalFilename}`,\n            `/media/documents/1/${originalFilename}`,\n            `/backend/media/documents/1/${originalFilename}`\n          ];\n          \n          // 如果文件名不是UUID格式，尝试在documents目录下查找可能匹配的文件\n          if (!originalFilename.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\.[a-z]+$/)) {\n            // 尝试使用文档ID作为文件名的一部分\n            if (doc.id) {\n              possiblePaths.push(`/media/documents/1/${doc.id}.${doc.file_type}`);\n              possiblePaths.push(`/backend/media/documents/1/${doc.id}.${doc.file_type}`);\n            }\n          }\n          \n          // 如果从URL中提取到了UUID，尝试使用UUID构造路径\n          if (uuid) {\n            possiblePaths.push(`/media/documents/1/${uuid}.${doc.file_type}`);\n            possiblePaths.push(`/backend/media/documents/1/${uuid}.${doc.file_type}`);\n          }\n          \n          // 尝试所有可能的路径\n          for (const path of possiblePaths) {\n            try {\n              const response = await fetch(path);\n              if (response.ok) {\n                const blob = await response.blob();\n                const filename = doc.title ? `${doc.title}.${doc.file_type}` : originalFilename;\n                \n                const url = window.URL.createObjectURL(blob);\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', filename);\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                window.URL.revokeObjectURL(url);\n                \n                ElMessage.success(`文档 \"${filename}\" 下载成功`);\n                return;\n              }\n            } catch (pathError) {\n              console.warn(`尝试路径 ${path} 失败:`, pathError);\n            }\n          }\n        }\n        \n        // 所有尝试都失败，显示错误消息\n        throw new Error('无法找到有效的文件路径');\n      } catch (error) {\n        console.error('下载文档失败:', error);\n        ElMessage.error('下载文档失败: 无法找到或访问文件。请联系管理员检查文件路径配置。');\n      }\n    }\n    \n    const shareDocument = (doc) => {\n      // 实现文档分享功能\n      console.log('准备分享文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的分享功能即将上线`)\n    }\n    \n    const editDocument = (doc) => {\n      editForm.id = doc.id;\n      editForm.title = doc.title;\n      editForm.description = doc.description;\n      editForm.category = doc.category;\n      editForm.creator = doc.creator;\n      editDialogVisible.value = true;\n    }\n\n    const handleUpdateDocument = async () => {\n      if (!editForm.id) return;\n      try {\n        await updateDocument(editForm.id, {\n          title: editForm.title,\n          description: editForm.description,\n          category: editForm.category,\n          creator: editForm.creator,\n        });\n        ElMessage.success('文档更新成功');\n        editDialogVisible.value = false;\n        fetchDocuments(); // 刷新列表\n      } catch (error) {\n        console.error('更新文档失败:', error);\n        let errorMsg = '更新文档失败';\n        if (error.response && error.response.data) {\n          const data = error.response.data;\n          if (typeof data === 'object' && data !== null) {\n            const messages = Object.entries(data).map(([field, errors]) => {\n              return `${field}: ${Array.isArray(errors) ? errors.join(' ') : errors}`;\n            }).join('; ');\n\n            if (messages) {\n              errorMsg += `: ${messages}`;\n            } else {\n              errorMsg += `: 请求失败，无详细信息。`;\n            }\n          } else {\n            errorMsg += `: ${data}`;\n          }\n        } else if (error.message) {\n          errorMsg += `: ${error.message}`;\n        } else {\n          errorMsg += ': 未知错误';\n        }\n        ElMessage.error(errorMsg);\n      }\n    };\n    \n    const handleCloseEditDialog = (done) => {\n      editDialogVisible.value = false;\n      done();\n    }\n\n    const handleCancelEditDialog = () => {\n      editDialogVisible.value = false;\n    }\n\n    const deleteDocument = async (doc) => {\n      console.log('>>> Vue component: Attempting to delete document (local method):', doc); // Log entry\n      try {\n        await ElMessageBox.confirm(`确定要删除文档 \"${doc.title}\" 吗？此操作不可撤销。`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        console.log('>>> Vue component: Calling apiDeleteDocument for ID:', doc.id); // Log before API call\n        await apiDeleteDocument(doc.id) // MODIFIED: Use imported and renamed apiDeleteDocument\n        \n        ElMessage.success('文档删除成功')\n        fetchDocuments()\n        fetchCategories() // 更新分类文档计数\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除文档失败:', error)\n          // 使用更安全的错误消息提取\n          const errorMessage = error?.response?.data?.detail || error?.message || '未知错误';\n          ElMessage.error('删除文档失败: ' + errorMessage);\n        }\n      }\n    }\n    \n    // 获取文件图标\n    const getFileIcon = (fileType) => {\n      const extension = fileType ? fileType.toLowerCase() : '';\n      const iconMap = {\n        pdf: Document,\n        doc: Document,\n        docx: Document,\n        xls: DataAnalysis,\n        xlsx: DataAnalysis,\n        ppt: Tickets,\n        pptx: Tickets,\n        png: PictureFilled,\n        jpg: PictureFilled,\n        jpeg: PictureFilled,\n        gif: PictureFilled,\n        svg: PictureFilled,\n        img: PictureFilled,\n        txt: Files,\n        md: Files,\n        other: Files\n      };\n      return iconMap[extension] || Files;\n    };\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      })\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (!sizeInKB) return '0 KB'\n      \n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取标签列表\n    const getTagsList = (tags) => {\n      if (!tags) return []\n      if (Array.isArray(tags)) return tags\n      return tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n    }\n    \n    // 处理构建完成\n    const handleBuildCompleted = () => {\n      // 刷新文档列表\n      fetchDocuments()\n      fetchCategories()\n      ElMessage.success('知识库构建完成，现在可以使用智能问答功能了！')\n    }\n\n    // 处理构建失败\n    const handleBuildFailed = (error) => {\n      console.error('知识库构建失败:', error)\n      ElMessage.error('知识库构建失败，请检查日志或联系管理员')\n    }\n    \n    // 格式化颜色值，确保不超过20个字符\n    const formatColorValue = (color) => {\n      if (color && color.length > 20) {\n        // 如果是带透明度的颜色值(rgba)，则去除透明度，转为hex格式\n        if (color.startsWith('rgba')) {\n          const hexColor = color.replace(/rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),[^)]+\\)/, (match, r, g, b) => {\n            const toHex = (c) => {\n              const hex = parseInt(c).toString(16);\n              return hex.length === 1 ? '0' + hex : hex;\n            };\n            return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n          });\n          categoryForm.color = hexColor.substring(0, 20);\n        } else {\n          // 如果是其他格式，直接截断\n          categoryForm.color = color.substring(0, 20);\n        }\n        console.log(`颜色值已格式化: ${color} -> ${categoryForm.color}`);\n      }\n    };\n    \n    // 添加一个强制刷新函数\n    const forceRefresh = async () => {\n      console.log('强制刷新知识库组件');\n      \n      // 更新内部刷新标识，触发视图更新\n      internalRefreshKey.value = Date.now();\n      \n      // 重置所有状态\n      currentPage.value = 1;\n      \n      // 第一步：清除所有可能的DOM副作用\n      try {\n        // 清除所有浮层和遮罩\n        const overlays = document.querySelectorAll('.el-overlay, .el-overlay-dialog, .el-overlay-message-box, .el-popup-parent--hidden');\n        overlays.forEach(el => {\n          if (el && el.parentNode) {\n            try {\n              el.parentNode.removeChild(el);\n            } catch (e) {\n              console.error('清理浮层元素失败:', e);\n            }\n          }\n        });\n        \n        // 恢复body样式\n        if (document && document.body) {\n          document.body.style.overflow = '';\n          document.body.classList.remove('el-popup-parent--hidden');\n          document.body.style.pointerEvents = 'auto';\n        }\n        \n        // 处理所有可能的下拉菜单\n        const dropdowns = document.querySelectorAll('.el-dropdown-menu, .el-select-dropdown');\n        dropdowns.forEach(el => {\n          if (el && el.parentNode) {\n            try {\n              el.parentNode.removeChild(el);\n            } catch (e) {\n              console.error('清理下拉菜单失败:', e);\n            }\n          }\n        });\n      } catch (error) {\n        console.error('清理DOM元素失败:', error);\n      }\n      \n      // 第二步：重新绑定所有事件\n      await nextTick();\n      try {\n        // 确保所有按钮和交互元素可点击\n        const interactiveElements = document.querySelectorAll(\n          '.knowledge-container button, ' +\n          '.el-dropdown-menu__item, ' +\n          '.document-item-card, ' +\n          '.card-actions button, ' +\n          '.card-footer button, ' +\n          '.el-dropdown, ' +\n          '.category-item'\n        );\n        \n        interactiveElements.forEach(el => {\n          if (el) {\n            // 恢复所有交互元素的点击能力\n            el.style.pointerEvents = 'auto';\n            if (el.hasAttribute('disabled') && !el.classList.contains('is-disabled')) {\n              el.removeAttribute('disabled');\n            }\n            \n            // 为了确保事件能正确触发，我们尝试复制并替换元素\n            // 这会清除旧的事件监听器并保持Vue的绑定\n            try {\n              const parent = el.parentNode;\n              if (parent) {\n                // 使用克隆节点的方式可能会丢失Vue的绑定，所以我们只重置样式\n                el.style.opacity = '1';\n                el.style.visibility = 'visible';\n                el.style.display = '';\n              }\n            } catch (e) {\n              console.error('重置元素样式失败:', e);\n            }\n          }\n        });\n        \n        // 重置上传组件\n        if (uploadRef.value) {\n          uploadRef.value.clearFiles();\n          uploadForm.file = null;\n          uploadForm.title = '';\n          uploadForm.description = '';\n        }\n        \n        // 确保文档卡片可点击\n        document.querySelectorAll('.document-item-card').forEach(card => {\n          if (card) {\n            card.style.pointerEvents = 'auto';\n            card.style.cursor = 'pointer';\n            // 重置z-index确保没有被覆盖\n            card.style.zIndex = '1';\n            card.style.position = 'relative';\n          }\n        });\n        \n        // 特别处理下拉菜单\n        document.querySelectorAll('.el-dropdown').forEach(dropdown => {\n          if (dropdown) {\n            dropdown.style.pointerEvents = 'auto';\n          }\n        });\n      } catch (error) {\n        console.error('重置交互元素失败:', error);\n      }\n      \n      // 第三步：强制重新获取数据\n      try {\n        console.log('重新加载所有数据...');\n        loading.value = true;\n        \n        // 先获取分类数据\n        await fetchCategories().catch(err => {\n          console.error('强制刷新分类失败:', err);\n          return [];\n        });\n        \n        // 然后获取文档数据\n        await fetchDocuments().catch(err => {\n          console.error('强制刷新文档失败:', err);\n          return [];\n        });\n        \n        console.log('数据刷新完成');\n      } catch (error) {\n        console.error('强制刷新数据失败:', error);\n      } finally {\n        loading.value = false;\n      }\n      \n      // 第四步：再次确保DOM更新完成后的交互性\n      await nextTick();\n      setTimeout(() => {\n        try {\n          // 最后一次确保所有元素可交互\n          document.querySelectorAll('.knowledge-container button, .el-dropdown, .document-item-card').forEach(el => {\n            if (el) {\n              el.style.pointerEvents = 'auto';\n            }\n          });\n        } catch (error) {\n          console.error('最终DOM修复失败:', error);\n        }\n      }, 300);\n    };\n    \n    // 监听路由变化，确保每次进入页面都刷新\n    watch(() => route.fullPath, (newPath) => {\n      if (newPath === '/knowledge') {\n        console.log('检测到路由变化到知识库页面，强制刷新');\n        // 延迟执行，确保DOM已经渲染\n        setTimeout(() => {\n          forceRefresh();\n        }, 100);\n      }\n    });\n    \n    // 生命周期钩子\n    onMounted(() => {\n      console.log('Knowledge组件挂载');\n      // 组件挂载时强制刷新\n      forceRefresh();\n      });\n    \n    // 添加keep-alive激活事件处理\n    onActivated(() => {\n      console.log('Knowledge组件被激活');\n      // 组件激活时强制刷新\n      forceRefresh();\n    });\n    \n    onBeforeUnmount(() => {\n      // 无需清除，因为没有设置轮询\n      // if (pollingInterval) {\n      //   clearInterval(pollingInterval)\n      // }\n    })\n    \n    // 标签页切换处理\n    const handleTabChange = (tabName) => {\n      activeTab.value = tabName\n      if (tabName === 'documents' && documentManagementRef.value) {\n        // 切换到文档管理时刷新数据\n        nextTick(() => {\n          if (documentManagementRef.value && documentManagementRef.value.refresh) {\n            documentManagementRef.value.refresh()\n          }\n        })\n      } else if (tabName === 'graph' && knowledgeGraphRef.value) {\n        // 切换到知识图谱时刷新数据\n        nextTick(() => {\n          if (knowledgeGraphRef.value && knowledgeGraphRef.value.refresh) {\n            knowledgeGraphRef.value.refresh()\n          }\n        })\n      }\n    }\n\n    return {\n      activeTab,\n      documentManagementRef,\n      knowledgeGraphRef,\n      searchQuery,\n      selectedCategory,\n      categories,\n      documents,\n      filters,\n      currentPage,\n      pageSize,\n      totalDocs,\n      uploadVisible,\n      uploadForm,\n      uploadFormRef,\n      uploadRef,\n      uploadRules,\n      uploading,\n      loading,\n      viewMode,\n      sortOrder,\n      showCategoryDialog,\n      showAddCategoryForm,\n      editingCategory,\n      categoryForm,\n      categoryLoading,\n      showChunksDialog,\n      selectedDocument,\n      documentChunks,\n      chunksLoading,\n      isAdmin,\n      currentCategoryName,\n      processingCount,\n      forceRefresh,\n      internalRefreshKey,\n      \n      // 图标\n      Search,\n      Upload,\n      FolderAdd,\n      View,\n      Download,\n      More,\n      Share,\n      Edit,\n      EditPen,\n      FolderOpened,\n      Star,\n      Delete,\n      Document,\n      Files,\n      Tickets,\n      DataAnalysis,\n      PictureFilled,\n      UploadFilled,\n      Loading,\n      List,\n      Grid,\n      Crop,\n      Plus,\n      InfoFilled,\n      Clock,\n      User,\n      Refresh,\n      \n      // 方法\n      handleTabChange,\n      selectCategory,\n      handleSearch,\n      applyFilters,\n      getFileIcon,\n      formatDate,\n      formatFileSize,\n      getTagsList,\n      previewDocument,\n      downloadDocument,\n      shareDocument,\n      editDocument,\n      handleUpdateDocument,\n      handleCloseEditDialog,\n      handleCancelEditDialog,\n      deleteDocument,\n      handleFileChange,\n      handleRemove,\n      beforeUpload,\n      handleUploadError,\n      submitUpload,\n      handlePageChange,\n      handleSizeChange,\n      showDocumentChunks,\n      editCategory,\n      handleDeleteCategory,\n      saveCategoryForm,\n      cancelCategoryForm,\n      resetCategoryForm,\n      buildingVisible,\n      handleBuildCompleted,\n      handleBuildFailed,\n      resetUploadForm,\n      handleCloseUploadDialog,\n      openUploadDialog,\n      handleCancelUpload,\n      formatColorValue,\n      editDialogVisible,\n      editForm\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.knowledge-container {\n  padding: 20px;\n  height: 100%;\n  width: 100%;\n  background-color: var(--el-bg-color-page) !important;\n}\n\n.knowledge-tabs {\n  margin-bottom: 20px;\n  \n  .tab-label {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    \n    .el-icon {\n      font-size: 16px;\n    }\n  }\n  \n  :deep(.el-tabs__header) {\n    margin-bottom: 20px;\n  }\n  \n  :deep(.el-tabs__nav-wrap::after) {\n    background-color: var(--el-border-color-light);\n  }\n  \n  :deep(.el-tabs__active-bar) {\n    background-color: var(--el-color-primary);\n  }\n  \n  :deep(.el-tabs__item) {\n    color: var(--el-text-color-regular);\n    font-weight: 500;\n    \n    &.is-active {\n      color: var(--el-color-primary);\n      font-weight: 600;\n    }\n    \n    &:hover {\n      color: var(--el-color-primary);\n    }\n  }\n}\n\n/* 确保所有交互元素可点击 */\n.knowledge-container button,\n.knowledge-container .el-dropdown,\n.knowledge-container .document-item-card,\n.knowledge-container .category-item {\n  pointer-events: auto !important;\n  cursor: pointer !important;\n}\n\n/* 强制知识库页面的所有元素使用深色背景 */\n.knowledge-container .row,\n.knowledge-container .col-lg-3,\n.knowledge-container .col-lg-9,\n.knowledge-container .page-header,\n.knowledge-container .document-grid {\n  background-color: var(--el-bg-color-page) !important;\n}\n\n/* 确保下拉菜单项可点击 */\n:deep(.el-dropdown-menu__item) {\n  pointer-events: auto !important;\n  cursor: pointer !important;\n}\n\n.row {\n  display: flex;\n  gap: 20px;\n}\n\n.col-lg-3 {\n  flex: 0 0 280px;\n  width: 280px;\n}\n\n.col-lg-9 {\n  flex: 1;\n  min-width: 0;\n}\n\n.category-card {\n  border: none;\n  border-radius: 8px;\n  padding: 16px;\n  background-color: var(--el-bg-color);\n  height: 100%;\n}\n\n.search-box {\n  margin-bottom: 20px;\n}\n\n.category-list .category-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  cursor: pointer;\n  border-radius: 6px;\n  margin-bottom: 5px;\n  transition: background-color 0.2s ease-in-out;\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n    .category-name {\n      font-weight: 600;\n      color: var(--el-color-primary);\n    }\n  }\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  .category-icon {\n    width: 32px;\n    height: 32px;\n    border-radius: 6px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 12px;\n    .el-icon {\n      color: white !important;\n    }\n  }\n\n  .category-name {\n    flex-grow: 1;\n    font-weight: 500;\n  }\n\n  .category-count {\n    font-size: 12px;\n    color: #909399;\n    background-color: #e9e9eb;\n    padding: 2px 6px;\n    border-radius: 10px;\n  }\n}\n\n.add-category-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.filter-section {\n  margin-top: 20px;\n  h6 {\n    font-size: 14px;\n    color: var(--el-text-color-secondary);\n    margin-bottom: 10px;\n  }\n  .filter-group {\n    margin-bottom: 15px;\n  }\n  .filter-options {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  .page-title {\n    font-size: 28px;\n    font-weight: 600;\n    color: var(--el-text-color-primary);\n  }\n  .header-actions {\n  display: flex;\n    gap: 12px;\n  }\n}\n\n.document-container-card {\n  border: none;\n  border-radius: 8px;\n  background-color: var(--el-bg-color-overlay);\n  padding: 24px;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 60px 0;\n  .empty-icon {\n    font-size: 64px;\n    color: var(--el-text-color-placeholder);\n    margin-bottom: 20px;\n}\n  .empty-title {\n    font-size: 20px;\n    color: var(--el-text-color-primary);\n  margin-bottom: 10px;\n}\n  .empty-description {\n  color: var(--el-text-color-secondary);\n  margin-bottom: 20px;\n}\n}\n\n.document-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n}\n\n.document-item-card {\n  border-radius: 12px;\n  border: 1px solid var(--el-border-color-lighter);\n  transition: all 0.3s ease;\n  background-color: var(--el-bg-color-overlay);\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--el-box-shadow-light);\n}\n\n  .card-header {\n  display: flex;\n  align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-bottom: 1px solid var(--el-border-color-lighter);\n}\n\n  .file-icon {\n    flex-shrink: 0;\n    width: 40px;\n    height: 40px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n    font-size: 20px;\n    color: #fff;\n\n    &.file-icon-pdf { background-color: #f56c6c; }\n    &.file-icon-doc, &.file-icon-docx { background-color: #409eff; }\n    &.file-icon-xls, &.file-icon-xlsx { background-color: #67c23a; }\n    &.file-icon-ppt, &.file-icon-pptx { background-color: #e6a23c; }\n    &.file-icon-img, &.file-icon-jpg, &.file-icon-jpeg, &.file-icon-png, &.file-icon-gif, &.file-icon-svg { background-color: #909399; }\n    &.file-icon-txt, &.file-icon-md { background-color: #b1b3b8; }\n}\n\n  .document-title-block {\n    flex-grow: 1;\n    overflow: hidden;\n}\n\n  .document-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: var(--el-text-color-primary);\n    margin: 0;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;  \n  overflow: hidden;\n    text-overflow: ellipsis;\n    line-height: 1.4;\n}\n\n  .file-extension {\n    font-weight: 400;\n    color: var(--el-text-color-placeholder);\n    font-size: 14px;\n    margin-left: 2px;\n}\n\n  .card-body {\n    padding: 16px;\n    flex-grow: 1;\n    min-height: 85px;\n  }\n  \n  .document-description {\n    font-size: 14px;\n    color: var(--el-text-color-regular);\n  line-height: 1.6;\n    margin: 0;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n  .card-footer {\n    margin-top: auto;\n    border-top: 1px solid var(--el-border-color-lighter);\n    padding: 10px 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n    background-color: var(--el-fill-color-lighter);\n}\n\n  .document-meta {\n    font-size: 13px;\n    color: var(--el-text-color-secondary);\n  display: flex;\n  align-items: center;\n    gap: 6px;\n}\n\n  .card-actions {\n  display: flex;\n  align-items: center;\n    gap: 4px;\n  }\n}\n\n.pagination-wrapper {\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n  :deep(.el-pagination.is-background .el-pager li) {\n    background-color: var(--el-fill-color);\n  }\n   :deep(.el-pagination.is-background .el-pager li:not(.is-disabled):hover) {\n    color: var(--el-color-primary);\n  }\n  :deep(.el-pagination.is-background .btn-next),\n  :deep(.el-pagination.is-background .btn-prev) {\n    background-color: var(--el-fill-color);\n  }\n}\n\n.category-dialog-content {\n  display: flex;\n  gap: 24px;\n\n  .category-list-section {\n    flex: 2;\n    border-right: 1px solid var(--el-border-color-light);\n    padding-right: 24px;\n    min-width: 0;\n  }\n\n  .category-form-section {\n    flex: 3;\n    min-width: 0;\n  }\n\n  .section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 16px;\n\n    h5 {\n      margin: 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n  }\n\n  .category-items {\n    max-height: 400px;\n    overflow-y: auto;\n    padding-right: 8px; /* for scrollbar */\n  }\n\n  .category-list-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 8px;\n    border-radius: 6px;\n    margin-bottom: 8px;\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: var(--el-fill-color-light);\n    }\n\n    .category-info {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      flex-grow: 1;\n      min-width: 0;\n\n      .category-color {\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        flex-shrink: 0;\n      }\n\n      .category-name-section {\n        flex-grow: 1;\n        min-width: 0;\n\n        .category-name {\n          font-weight: 500;\n          color: var(--el-text-color-primary);\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: block; // Ensures it takes its own line\n        }\n\n        .category-desc {\n          font-size: 12px;\n          color: var(--el-text-color-secondary);\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: block; // Ensures it takes its own line\n        }\n      }\n    }\n    \n    .category-details {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        flex-shrink: 0;\n        margin-left: 16px;\n    }\n\n    .category-count {\n      font-size: 13px;\n      color: var(--el-text-color-regular);\n      white-space: nowrap;\n      flex-shrink: 0;\n    }\n\n    .category-actions {\n      display: flex;\n      gap: 8px;\n      flex-shrink: 0;\n    }\n  }\n\n  .empty-categories {\n    text-align: center;\n    padding: 20px;\n  }\n}\n\n.category-form-section .el-form {\n  margin-top: 10px;\n}\n\n/* 分页容器样式 */\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--el-border-color);\n}\n\n// ===========================================\n// 深色模式\n// ===========================================\n:deep(.dark .knowledge-container) {\n  background-color: #141414;\n}\n:deep(.dark .page-header .page-title) {\n  color: #ffffff;\n}\n:deep(.dark .document-container-card) {\n  background-color: #1d1d1d;\n  border-color: #424242;\n}\n:deep(.dark .document-item-card) {\n  background-color: #262626;\n  border-color: #424242;\n  &:hover {\n    border-color: #589ef8;\n  }\n}\n:deep(.dark .document-title) {\n  color: #e0e0e0;\n}\n:deep(.dark .file-extension) {\n  color: #8c8c8c;\n}\n:deep(.dark .document-description) {\n  color: #a6a6a6;\n}\n:deep(.dark .card-footer) {\n  background-color: #2c2c2c;\n  border-top-color: #424242;\n}\n:deep(.dark .document-meta) {\n  color: #8c8c8c;\n}\n:deep(.dark .category-card) {\n  background-color: #1d1d1d;\n  border-color: #424242;\n}\n:deep(.dark .category-name) {\n  color: #e0e0e0;\n}\n:deep(.dark .category-count) {\n  color: #8c8c8c;\n}\n:deep(.dark .filter-section h6) {\n  color: #e0e0e0;\n}\n:deep(.dark .el-checkbox__label) {\n  color: #a6a6a6;\n}\n:deep(.dark .el-checkbox__input .el-checkbox__inner) {\n  background-color: #333;\n  border-color: #555;\n}\n:deep(.dark .category-item.active) {\n  background-color: #2c2c2c;\n}\n:deep(.dark .category-item:hover) {\n  background-color: #262626;\n}\n</style>"]}]}