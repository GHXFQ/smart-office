{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\project\\components\\RequirementsView.vue?vue&type=style&index=1&id=99ce15a4&lang=scss","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\project\\components\\RequirementsView.vue","mtime":1751973806023},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1746431217000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1747194135644},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CltkYXRhLXRoZW1lPSJkYXJrIl0gewogIC5tb2R1bGUtY2FyZCwgLmFpLWFuYWx5c2lzLWNhcmQsIC5saXN0LWdyb3VwLWl0ZW0sIC5lbC1kaWFsb2cgewogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZWwtYmctY29sb3ItcGFnZSkgIWltcG9ydGFudDsKICAgIGNvbG9yOiB2YXIoLS1lbC10ZXh0LWNvbG9yLXByaW1hcnkpICFpbXBvcnRhbnQ7CiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1lbC1ib3JkZXItY29sb3ItbGlnaHQpICFpbXBvcnRhbnQ7CiAgfQoKICAubW9kdWxlLXRpdGxlLCBoNiwgLmVsLWRpYWxvZ19fdGl0bGUgewogICAgY29sb3I6IHZhcigtLWVsLXRleHQtY29sb3ItcHJpbWFyeSkgIWltcG9ydGFudDsKICB9CgogIC50ZXh0LW11dGVkLCAuc21hbGwsIC5haS1yZXF1aXJlbWVudC1hbmFseXNpcyBzbWFsbC50ZXh0LW11dGVkIHsKICAgIGNvbG9yOiB2YXIoLS1lbC10ZXh0LWNvbG9yLXNlY29uZGFyeSkgIWltcG9ydGFudDsKICB9CiAgCiAgLmVsLWZvcm0taXRlbV9fbGFiZWwgewogICAgY29sb3I6IHZhcigtLWVsLXRleHQtY29sb3Itc2Vjb25kYXJ5KSAhaW1wb3J0YW50OwogIH0KCiAgLmVsLWlucHV0X193cmFwcGVyLCAuZWwtc2VsZWN0IC5lbC1pbnB1dF9fd3JhcHBlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lbC1maWxsLWNvbG9yLWxpZ2h0KSAhaW1wb3J0YW50OwogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1lbC1ib3JkZXItY29sb3IpICFpbXBvcnRhbnQ7CiAgfQoKICAubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lbC1maWxsLWNvbG9yLWxpZ2h0KSAhaW1wb3J0YW50OwogIH0KCiAgLmRlcGVuZGVuY3ktaXRlbSwgLnN1Z2dlc3Rpb24taXRlbSB7CiAgICBjb2xvcjogdmFyKC0tZWwtdGV4dC1jb2xvci1zZWNvbmRhcnkpICFpbXBvcnRhbnQ7CiAgfQp9Cg=="},{"version":3,"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\o\\smart-office\\frontend\\src\\views\\project\\components\\RequirementsView.vue"],"names":[],"mappings":";AAmkBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAClpD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzD;;EAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACjC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD;AACF","file":"C:/Users/18083/Desktop/CCIT/office/o/smart-office/frontend/src/views/project/components/RequirementsView.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"module-card\">\n    <div class=\"module-header\">\n      <h5 class=\"module-title\">需求管理</h5>\n      <div class=\"btn-group\">\n        <el-button type=\"primary\" size=\"default\" round @click=\"showAddReq=true\">新建需求</el-button>\n      </div>\n    </div>\n    <!-- AI需求分析 -->\n    <div class=\"ai-requirement-analysis mb-4\">\n      <div class=\"d-flex justify-content-between align-items-center mb-3\">\n        <h6 class=\"mb-0\">AI需求分析</h6>\n        <div class=\"btn-group\">\n          <el-button size=\"small\" @click=\"fetchAiAnalysis\" :loading=\"aiAnalysisLoading\">\n            <el-icon><Refresh /></el-icon>刷新分析\n          </el-button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"ai-analysis-card\">\n            <h6 class=\"text-primary\">需求完整性</h6>\n            <el-progress :percentage=\"aiAnalysis.completeness\" :status=\"getCompletenessStatus(aiAnalysis.completeness)\" style=\"margin-bottom:8px;\" />\n            <p class=\"text-muted small\">需求描述完整性评分</p>\n          </div>\n        </div>\n        <div class=\"col-md-4\">\n          <div class=\"ai-analysis-card\">\n            <h6 class=\"text-primary\">需求依赖关系</h6>\n            <div class=\"requirement-dependencies\">\n              <div class=\"dependency-item\">\n                <el-icon><Connection /></el-icon>\n                发现{{aiAnalysis.dependencies}}个需求依赖关系\n              </div>\n              <div class=\"dependency-item\">\n                <el-icon><CircleCloseFilled /></el-icon>\n                {{aiAnalysis.conflicts}}个需求存在冲突\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-4\">\n          <div class=\"ai-analysis-card\">\n            <h6 class=\"text-primary\">智能建议</h6>\n            <div class=\"ai-suggestions\">\n              <div v-if=\"aiAnalysis.suggestions.length === 0\" class=\"text-center py-2\">\n                <!-- 不显示任何内容 -->\n              </div>\n              <div class=\"suggestion-item\" v-for=\"(suggestion, i) in aiAnalysis.suggestions\" :key=\"i\">\n                <el-icon><Lightning v-if=\"i === 0\" /><Check v-else /></el-icon>\n                {{suggestion}}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 筛选区 -->\n    <div class=\"filter-bar\" style=\"display:flex;gap:12px;margin-bottom:16px;\">\n      <el-select v-model=\"filterPriority\" placeholder=\"优先级\" clearable style=\"width:120px;\">\n        <el-option label=\"全部\" value=\"\" />\n        <el-option label=\"高\" value=\"high\" />\n        <el-option label=\"中\" value=\"medium\" />\n        <el-option label=\"低\" value=\"low\" />\n      </el-select>\n      <el-select v-model=\"filterStatus\" placeholder=\"状态\" clearable style=\"width:120px;\">\n        <el-option label=\"全部\" value=\"\" />\n        <el-option label=\"待处理\" value=\"pending\" />\n        <el-option label=\"进行中\" value=\"in-progress\" />\n        <el-option label=\"已完成\" value=\"completed\" />\n      </el-select>\n      <el-input v-model=\"filterKeyword\" placeholder=\"关键词\" clearable style=\"width:180px;\" />\n    </div>\n    <!-- 需求列表 -->\n    <div v-loading=\"loading\" class=\"requirements-list\">\n      <div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-action\" v-for=\"req in filteredRequirements\" :key=\"req.id\">\n          <div class=\"d-flex w-100 justify-content-between\">\n            <div>\n              <h6 class=\"mb-1\">{{ req.name }}</h6>\n              <div class=\"ai-requirement-tags\">\n                <el-tag v-for=\"tag in req.tags_list\" :key=\"tag.text\" :type=\"tag.type\" size=\"small\">{{ tag.text }}</el-tag>\n              </div>\n            </div>\n            <div class=\"text-end\">\n              <el-tag :type=\"getStatusType(req.status)\" size=\"small\">{{ getStatusText(req.status) }}</el-tag>\n              <div class=\"ai-requirement-status\">\n                <small class=\"text-muted\">{{ formatDate(req.created_at) }}</small>\n              </div>\n              <div style=\"margin-top: 8px;\">\n                <el-button size=\"small\" type=\"primary\" text @click=\"openEditReq(req)\">编辑</el-button>\n                <el-button size=\"small\" type=\"danger\" text @click=\"handleDeleteReq(req)\">删除</el-button>\n                <el-button size=\"small\" type=\"info\" text @click=\"analyzeRequirement(req, true)\" :loading=\"req.analyzing\">AI分析</el-button>\n              </div>\n            </div>\n          </div>\n          <p class=\"mb-1\">{{ req.description || '暂无描述' }}</p>\n          <div class=\"ai-requirement-analysis\" v-if=\"req.ai_analysis\">\n            <div class=\"d-flex justify-content-between\">\n              <small class=\"text-muted\">AI分析：</small>\n              <el-button type=\"link\" size=\"small\" @click=\"req.showFullAnalysis = !req.showFullAnalysis\">\n                {{ req.showFullAnalysis ? '收起' : '展开' }}\n              </el-button>\n            </div>\n            <div v-if=\"req.showFullAnalysis\">{{ req.ai_analysis }}</div>\n            <div v-else>{{ req.ai_analysis.substring(0, 100) }}{{ req.ai_analysis.length > 100 ? '...' : '' }}</div>\n          </div>\n          <div class=\"ai-requirement-analysis\" v-else>\n            <small class=\"text-muted\">暂无AI分析</small>\n          </div>\n        </div>\n      </div>\n      <el-empty v-if=\"requirements.length === 0\" description=\"暂无需求数据\" />\n    </div>\n  </div>\n  <!-- 新建/编辑需求弹窗 -->\n  <el-dialog v-model=\"showAddReq\" :title=\"editMode ? '编辑需求' : '新建需求'\" width=\"400px\">\n    <el-form :model=\"addReqForm\" label-width=\"80px\" :rules=\"formRules\" ref=\"reqFormRef\">\n      <el-form-item label=\"需求名称\" prop=\"name\" required>\n        <el-input v-model=\"addReqForm.name\" placeholder=\"请输入需求名称\" />\n      </el-form-item>\n      <el-form-item label=\"优先级\" prop=\"priority\" required>\n        <el-select v-model=\"addReqForm.priority\" placeholder=\"请选择\">\n          <el-option label=\"高\" value=\"high\" />\n          <el-option label=\"中\" value=\"medium\" />\n          <el-option label=\"低\" value=\"low\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"标签\" prop=\"tags\" required>\n        <el-input v-model=\"addReqForm.tags\" placeholder=\"逗号分隔，如：功能,高优先级\" />\n      </el-form-item>\n      <el-form-item label=\"描述\" prop=\"description\" required>\n        <el-input v-model=\"addReqForm.description\" type=\"textarea\" placeholder=\"请输入需求描述\" />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\" required>\n        <el-select v-model=\"addReqForm.status\" placeholder=\"请选择\">\n          <el-option label=\"待处理\" value=\"pending\" />\n          <el-option label=\"进行中\" value=\"in-progress\" />\n          <el-option label=\"已完成\" value=\"completed\" />\n        </el-select>\n      </el-form-item>\n    </el-form>\n    <template #footer>\n      <el-button @click=\"closeDialog\">取消</el-button>\n      <el-button type=\"primary\" @click=\"submitAddReq\" :loading=\"submitting\">{{ editMode ? '保存' : '提交' }}</el-button>\n    </template>\n  </el-dialog>\n</template>\n<script setup>\nimport { Connection, CircleCloseFilled, Lightning, Check, Refresh } from '@element-plus/icons-vue'\nimport { ref, onMounted, computed, watch } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { fetchRequirements, createRequirement, updateRequirement, deleteRequirement, getRequirementAiAnalysis, getSingleRequirementAiAnalysis } from '@/api/project'\nimport { useRoute } from 'vue-router'\n\nconst route = useRoute()\nconst projectId = computed(() => route.params.id)\n\nconst requirements = ref([])\nconst loading = ref(false)\nconst submitting = ref(false)\nconst showAddReq = ref(false)\nconst editMode = ref(false)\nconst editingReqId = ref(null)\nconst addReqForm = ref({ name: '', priority: 'medium', tags: '', description: '', status: 'pending' })\nconst aiAnalysisLoading = ref(false)\nconst aiAnalysis = ref({\n  completeness: 0,\n  dependencies: 0,\n  conflicts: 0,\n  suggestions: []\n})\nconst filterPriority = ref('')\nconst filterStatus = ref('')\nconst filterKeyword = ref('')\nconst filteredRequirements = computed(() => {\n  return requirements.value.filter(req => {\n    const matchPriority = !filterPriority.value || req.priority === filterPriority.value\n    const matchStatus = !filterStatus.value || req.status === filterStatus.value\n    const matchKeyword = !filterKeyword.value || req.name.includes(filterKeyword.value) || (req.description && req.description.includes(filterKeyword.value))\n    return matchPriority && matchStatus && matchKeyword\n  })\n})\n\n// 表单引用\nconst reqFormRef = ref(null)\n\n// 表单验证规则\nconst formRules = {\n  name: [{ required: true, message: '请输入需求名称', trigger: 'blur' }],\n  priority: [{ required: true, message: '请选择优先级', trigger: 'change' }],\n  tags: [{ required: true, message: '请输入标签', trigger: 'blur' }],\n  description: [{ required: true, message: '请输入需求描述', trigger: 'blur' }],\n  status: [{ required: true, message: '请选择状态', trigger: 'change' }]\n}\n\n// 获取需求列表\nconst fetchRequirementList = async () => {\n  try {\n    loading.value = true\n    const res = await fetchRequirements(projectId.value)\n    requirements.value = res.data\n    requirements.value.forEach(req => {\n      req.analyzing = false\n      req.showFullAnalysis = false\n      // 自动AI分析\n      req.ai_analysis = ''\n      analyzeRequirement(req)\n    })\n  } catch (error) {\n    console.error('获取需求列表失败:', error)\n    ElMessage.error('获取需求列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取需求AI分析\nconst fetchAiAnalysis = async () => {\n  if (!projectId.value) {\n    ElMessage.warning('没有有效的项目ID')\n    return\n  }\n  \n  try {\n    aiAnalysisLoading.value = true\n    const res = await getRequirementAiAnalysis(projectId.value)\n    \n    // 检查响应数据结构\n    if (res.data) {\n      aiAnalysis.value = {\n        completeness: res.data.completeness || 0,\n        dependencies: res.data.dependencies || 0,\n        conflicts: res.data.conflicts || 0,\n        suggestions: Array.isArray(res.data.suggestions) ? res.data.suggestions : []\n      }\n      \n      console.log('AI需求分析结果:', aiAnalysis.value)\n    } else {\n      console.error('AI分析响应数据格式错误:', res)\n      ElMessage.error('AI分析响应数据格式错误')\n    }\n  } catch (error) {\n    console.error('获取AI分析失败:', error)\n    ElMessage.error('获取AI分析失败')\n  } finally {\n    aiAnalysisLoading.value = false\n  }\n}\n\n// 获取完整性状态\nconst getCompletenessStatus = (score) => {\n  if (score >= 80) return 'success' \n  if (score >= 60) return 'warning'\n  return 'exception'\n}\n\n// 打开编辑弹窗\nconst openEditReq = (req) => {\n  editMode.value = true\n  editingReqId.value = req.id\n  addReqForm.value = {\n    name: req.name,\n    priority: req.priority,\n    tags: req.tags,\n    description: req.description,\n    status: req.status\n  }\n  showAddReq.value = true\n}\n\n// 关闭弹窗\nconst closeDialog = () => {\n  showAddReq.value = false\n  editMode.value = false\n  editingReqId.value = null\n  addReqForm.value = { name: '', priority: 'medium', tags: '', description: '', status: 'pending' }\n}\n\n// 提交新建/编辑需求\nconst submitAddReq = async () => {\n  if (!reqFormRef.value) {\n    console.error('表单引用不存在')\n    return\n  }\n  \n  reqFormRef.value.validate(async valid => {\n    if (!valid) {\n      ElMessage.error('请填写所有必填项')\n      return\n    }\n    \n    try {\n      submitting.value = true\n      const formData = {\n        project: projectId.value,\n        name: addReqForm.value.name,\n        description: addReqForm.value.description,\n        priority: addReqForm.value.priority,\n        tags: addReqForm.value.tags,\n        status: addReqForm.value.status\n      }\n      if (editMode.value && editingReqId.value) {\n        await updateRequirement(editingReqId.value, formData)\n        ElMessage.success('需求更新成功')\n      } else {\n        await createRequirement(formData)\n        ElMessage.success('需求创建成功')\n      }\n      closeDialog()\n      refreshAfterChange()\n    } catch (error) {\n      console.error('保存需求失败:', error)\n      ElMessage.error('保存需求失败')\n    } finally {\n      submitting.value = false\n    }\n  })\n}\n\n// 删除需求\nconst handleDeleteReq = async (req) => {\n  try {\n    await ElMessageBox.confirm('确定删除此需求？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    })\n    \n    loading.value = true\n    await deleteRequirement(req.id)\n    ElMessage.success('删除成功')\n    refreshAfterChange()\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('删除需求失败:', error)\n      ElMessage.error('删除需求失败')\n    }\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取状态类型\nconst getStatusType = (status) => {\n  const types = {\n    'pending': 'info',\n    'in-progress': 'primary',\n    'completed': 'success'\n  }\n  return types[status] || 'info'\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const texts = {\n    'pending': '待处理',\n    'in-progress': '进行中',\n    'completed': '已完成'\n  }\n  return texts[status] || '待处理'\n}\n\n// 格式化日期\nconst formatDate = (dateString) => {\n  if (!dateString) return '刚刚'\n  const date = new Date(dateString)\n  const now = new Date()\n  const diff = now - date\n  \n  // 如果小于1天，显示\"x小时前\"或\"x分钟前\"\n  if (diff < 24 * 60 * 60 * 1000) {\n    const hours = Math.floor(diff / (60 * 60 * 1000))\n    if (hours > 0) {\n      return `${hours}小时前`\n    }\n    const minutes = Math.floor(diff / (60 * 1000))\n    if (minutes > 0) {\n      return `${minutes}分钟前`\n    }\n    return '刚刚'\n  }\n  \n  // 否则显示日期\n  return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n}\n\n// 分析需求\nconst analyzeRequirement = (req, showMsg = false) => {\n  if (!req.id) {\n    if (showMsg) ElMessage.warning('无效的需求ID')\n    return\n  }\n  req.analyzing = true\n  getSingleRequirementAiAnalysis(req.id)\n    .then(res => {\n      req.ai_analysis = res.data.ai_analysis || '暂无分析'\n      req.showFullAnalysis = false\n      if (showMsg) ElMessage.success('AI分析完成')\n    })\n    .catch(() => {\n      req.ai_analysis = 'AI分析失败'\n      if (showMsg) ElMessage.error('AI分析失败')\n    })\n    .finally(() => {\n      req.analyzing = false\n    })\n}\n\n// 在组件挂载时获取需求列表和AI分析\nonMounted(() => {\n  fetchRequirementList()\n  fetchAiAnalysis()\n})\n\n// 监听项目ID变化，同时刷新需求列表和AI分析\nwatch(projectId, () => {\n  if (projectId.value) {\n    fetchRequirementList()\n    fetchAiAnalysis()\n  }\n})\n\n// 在创建或更新需求后刷新AI分析\nconst refreshAfterChange = () => {\n  fetchRequirementList()\n  fetchAiAnalysis()\n}\n</script>\n<style scoped>\n.module-card { background: var(--bg-color-secondary); border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); margin-bottom: 20px; padding: 20px; }\n.module-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px; }\n.module-title { font-size: 1.1rem; font-weight: 600; color: var(--text-color) !important; margin: 0; }\n.btn-group { display: flex; gap: 10px; }\n.row { display: flex; flex-wrap: wrap; margin: 0 -10px; }\n.col-md-4 { padding: 0 10px; width: 33.3333%; }\n.mb-4 { margin-bottom: 24px; }\n.list-group { margin: 0; }\n.list-group-item,\n.list-group-item-action,\n.list-group-item-action:active,\n.list-group-item-action:focus,\n.list-group-item-action:hover {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--text-color);\n  border: none;\n}\n.ai-analysis-card { background: var(--bg-color-secondary); border: 1px solid var(--border-color); border-radius: 8px; padding: 15px; margin-bottom: 15px; }\n.dependency-item, .suggestion-item { display: flex; align-items: center; gap: 8px; margin-bottom: 8px; }\n.text-primary { color: var(--primary-color)!important; }\n.filter-bar { display: flex; gap: 12px; margin-bottom: 16px; }\n.list-group-item:hover {\n  background: var(--hover-color);\n  color: var(--primary-color);\n}\n.ai-requirement-analysis {\n  background: var(--bg-color-tertiary);\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 16px;\n  color: var(--text-color);\n}\n.ai-requirement-analysis .text-muted,\n.ai-requirement-analysis small {\n  color: var(--text-color-tertiary) !important;\n}\n\n/* 确保 Element Plus 组件在深色模式下正确显示 */\n:deep(.el-dialog),\n:deep(.el-dialog .el-dialog__body),\n:deep(.el-dialog .el-dialog__header),\n:deep(.el-dialog .el-dialog__footer) {\n  background: var(--bg-color-secondary) !important;\n  color: var(--text-color) !important;\n}\n\n:deep(.el-button.el-button--text) {\n  color: var(--primary-color) !important;\n}\n\n:deep(.el-select-dropdown),\n:deep(.el-select-dropdown__item),\n:deep(.el-select-dropdown__list) {\n  background-color: var(--bg-color-secondary) !important;\n  color: var(--text-color) !important;\n}\n\n:deep(.el-select-dropdown__item.hover),\n:deep(.el-select-dropdown__item:hover) {\n  background-color: var(--hover-color) !important;\n}\n\n/* 修复 el-tag 标签在深色模式下的显示 */\n:deep(.el-tag) {\n  background-color: var(--bg-color-tertiary) !important;\n  color: var(--text-color) !important;\n  border-color: var(--border-color) !important;\n}\n\n:deep(.el-tag.el-tag--info) {\n  background-color: var(--bg-color-tertiary) !important;\n  border-color: var(--border-color) !important;\n}\n\n:deep(.el-tag.el-tag--success) {\n  background-color: var(--success-color) !important;\n  border-color: var(--success-color) !important;\n  color: #fff !important;\n}\n\n:deep(.el-tag.el-tag--primary) {\n  background-color: var(--primary-color) !important;\n  border-color: var(--primary-color) !important;\n  color: #fff !important;\n}\n\n:deep(.el-tag.el-tag--warning) {\n  background-color: var(--warning-color) !important;\n  border-color: var(--warning-color) !important;\n  color: #fff !important;\n}\n\n:deep(.el-tag.el-tag--danger) {\n  background-color: var(--danger-color) !important;\n  border-color: var(--danger-color) !important;\n  color: #fff !important;\n}\n\n/* 修复按钮悬停效果 */\n:deep(.el-button:hover),\n:deep(.el-button:focus) {\n  background-color: var(--hover-color) !important;\n  border-color: var(--primary-color) !important;\n  color: var(--primary-color) !important;\n}\n\n:deep(.el-button--primary:hover),\n:deep(.el-button--primary:focus) {\n  background-color: var(--primary-color) !important;\n  opacity: 0.9;\n  color: #fff !important;\n}\n\n:deep(.el-button--danger:hover),\n:deep(.el-button--danger:focus) {\n  background-color: var(--danger-color) !important;\n  opacity: 0.9;\n  color: #fff !important;\n}\n\n:deep(.el-button--info:hover),\n:deep(.el-button--info:focus) {\n  background-color: var(--info-color) !important;\n  opacity: 0.9;\n  color: #fff !important;\n}\n\n:deep(.el-button--text:hover),\n:deep(.el-button--text:focus) {\n  background-color: transparent !important;\n  color: var(--primary-color) !important;\n  opacity: 0.9;\n}\n\n/* 确保字体可见 */\n.ai-requirement-tags,\n.ai-requirement-status {\n  color: var(--text-color) !important;\n}\n\n/* 修复列表项细节 */\n.list-group-item {\n  border-radius: 5px !important;\n  margin-bottom: 10px !important;\n  padding: 16px !important;\n}\n</style>\n\n<style lang=\"scss\">\n[data-theme=\"dark\"] {\n  .module-card, .ai-analysis-card, .list-group-item, .el-dialog {\n    background-color: var(--el-bg-color-page) !important;\n    color: var(--el-text-color-primary) !important;\n    border: 1px solid var(--el-border-color-light) !important;\n  }\n\n  .module-title, h6, .el-dialog__title {\n    color: var(--el-text-color-primary) !important;\n  }\n\n  .text-muted, .small, .ai-requirement-analysis small.text-muted {\n    color: var(--el-text-color-secondary) !important;\n  }\n  \n  .el-form-item__label {\n    color: var(--el-text-color-secondary) !important;\n  }\n\n  .el-input__wrapper, .el-select .el-input__wrapper {\n    background-color: var(--el-fill-color-light) !important;\n    border-color: var(--el-border-color) !important;\n  }\n\n  .list-group-item-action:hover {\n    background-color: var(--el-fill-color-light) !important;\n  }\n\n  .dependency-item, .suggestion-item {\n    color: var(--el-text-color-secondary) !important;\n  }\n}\n</style> "]}]}