{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue","mtime":1749786486654},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","reactive","computed","onMounted","onBeforeUnmount","ElMessage","ElMessageBox","Search","Upload","FolderAdd","View","Download","More","Share","Edit","EditPen","FolderOpened","Star","Delete","Document","Files","Tickets","DataAnalysis","PictureFilled","UploadFilled","Loading","List","Grid","Crop","Plus","InfoFilled","Clock","User","getCategories","getDocuments","getDocumentChunks","uploadDocument","deleteDocument","apiDeleteDocument","deleteCategory","updateCategory","addCategory","downloadDocumentFile","KnowledgeBuilder","name","components","setup","searchQuery","selectedCategory","currentPage","pageSize","uploadVisible","showCategoryDialog","showAddCategoryForm","showChunksDialog","editingCategory","viewMode","sortOrder","categoryLoading","loading","uploading","chunksLoading","isAdmin","selectedDocument","documentChunks","uploadFormRef","uploadRef","totalDocs","uploadForm","title","description","file","category","tags","chunk_size","chunk_overlap","is_public","uploadRules","required","message","trigger","categoryForm","id","icon","color","filters","types","pdf","doc","xls","ppt","img","txt","md","categories","document_count","documents","currentCategoryName","value","find","cat","processingCount","filter","status","length","buildingVisible","fetchCategories","console","log","response","categoryList","results","Array","isArray","possibleArrayFields","field","grandTotalAllDocuments","allDocsResponse","page","page_size","Object","prototype","hasOwnProperty","call","count","warn","docError","error","allCategory","warning","data","includes","fetchDocuments","params","ordering","search","selectedTypes","typeMapping","type","selected","entries","push","uniqueSelectedTypes","Set","file_type","join","total","possibleDocuments","values","item","fetchDocumentChunks","documentId","handlePageChange","handleSizeChange","size","selectCategory","categoryId","handleSearch","applyFilters","handleFileChange","raw","maxSizeInBytes","fileName","ext","slice","lastIndexOf","toLowerCase","allowedFileTypes","clearFiles","split","handleRemove","_uploadForm$file","_uploadForm$file$name","fileNameWithoutExt","beforeUpload","handleUploadError","submitUpload","validate","valid","formData","FormData","append","JSON","stringify","toString","fileInFormData","get","success","uploadedFileTitle","resetUploadForm","attempts","maxAttempts","pollInterval","poll","setInterval","documentsResponse","undefined","foundDoc","clearInterval","info","pollError","errorMsg","detail","substring","showDocumentChunks","editCategory","handleDeleteCategory","confirm","confirmButtonText","cancelButtonText","_error$response","_error$response$data","saveCategoryForm","formatColorValue","newCategoryId","resetCategoryForm","cancelCategoryForm","resetFields","handleCancelUpload","handleCloseUploadDialog","done","openUploadDialog","previewDocument","original_file","fetch","ok","blob","url","window","URL","createObjectURL","open","setTimeout","revokeObjectURL","Blob","headers","apiError","file_url","urlError","fileUrlParts","originalFilename","uuid","uuidMatch","match","possiblePaths","path","pathError","Error","downloadDocument","filename","original_filename","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","pop","shareDocument","editDocument","_error$response2","_error$response2$data","errorMessage","getFileIcon","fileType","extension","iconMap","docx","xlsx","pptx","png","jpg","jpeg","gif","svg","other","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","formatFileSize","sizeInKB","toFixed","getTagsList","map","tag","trim","handleBuildCompleted","handleBuildFailed","startsWith","hexColor","replace","r","g","b","toHex","c","hex","parseInt","Promise","all","catch","err","finally"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-container\">\n    <div class=\"row\">\n      <!-- 左侧导航 -->\n      <div class=\"col-lg-3\">\n        <el-card class=\"category-card\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索文档...\"\n              clearable\n              :prefix-icon=\"Search\"\n              @input=\"handleSearch\"\n            ></el-input>\n          </div>\n          \n          <div class=\"category-list\">\n            <div v-for=\"(category, index) in categories\" :key=\"category.id || index\" \n                 class=\"category-item\" \n                 :class=\"{'active': selectedCategory === (category.id || index)}\"\n                 @click=\"selectCategory(category.id || index)\">\n              <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                <el-icon :size=\"20\" color=\"white\">\n                  <component :is=\"category.icon\"></component>\n                </el-icon>\n              </div>\n              <span class=\"category-name\">{{ category.name }}</span>\n              <span class=\"category-count\">{{ category.document_count || 0 }}</span>\n            </div>\n            \n            <el-button \n              v-if=\"isAdmin\"\n              type=\"primary\" \n              size=\"small\" \n              class=\"add-category-btn\"\n              @click=\"showCategoryDialog = true\">\n              <el-icon><Plus /></el-icon> 添加分类\n            </el-button>\n          </div>\n          \n          <div class=\"filter-section\">\n            <h6>筛选条件</h6>\n            <div class=\"filter-group\">\n              <h6>文件类型</h6>\n              <div class=\"filter-options\">\n                <el-checkbox v-model=\"filters.types.pdf\" @change=\"applyFilters\">PDF文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.doc\" @change=\"applyFilters\">Word文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.xls\" @change=\"applyFilters\">Excel表格</el-checkbox>\n                <el-checkbox v-model=\"filters.types.ppt\" @change=\"applyFilters\">PPT演示文稿</el-checkbox>\n                <el-checkbox v-model=\"filters.types.img\" @change=\"applyFilters\">图片</el-checkbox>\n                <el-checkbox v-model=\"filters.types.txt\" @change=\"applyFilters\">文本文件</el-checkbox>\n                <el-checkbox v-model=\"filters.types.md\" @change=\"applyFilters\">Markdown文件</el-checkbox>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </div>\n      \n      <!-- 右侧内容区 -->\n      <div class=\"col-lg-9\">\n        <div class=\"page-header\">\n          <h2 class=\"page-title\">{{ currentCategoryName }}</h2>\n            <div class=\"header-actions\">\n            <el-button type=\"primary\" size=\"large\" @click=\"openUploadDialog\">\n              <el-icon class=\"el-icon--left\"><Upload /></el-icon> 上传文档\n              </el-button>\n            <el-button type=\"success\" plain size=\"large\" @click=\"buildingVisible = true\">\n              <el-icon class=\"el-icon--left\"><Files /></el-icon> 构建知识库\n              </el-button>\n            <el-button v-if=\"isAdmin\" text bg size=\"large\" @click=\"showCategoryDialog = true\">\n              <el-icon class=\"el-icon--left\"><FolderAdd /></el-icon> 管理分类\n              </el-button>\n            </div>\n          </div>\n          \n        <el-card class=\"document-container-card\" shadow=\"never\">\n          <div v-if=\"documents.length === 0\" class=\"empty-state\">\n            <div class=\"empty-icon\">\n              <el-icon><InfoFilled /></el-icon>\n            </div>\n            <h3 class=\"empty-title\">当前分类下暂无文档</h3>\n            <p class=\"empty-description\">您可以点击\"上传文档\"按钮，开始构建您的知识库。</p>\n            <el-button type=\"primary\" plain @click=\"openUploadDialog\">立即上传</el-button>\n          </div>\n          \n          <div v-else class=\"document-grid\">\n            <el-card \n              v-for=\"doc in documents\" \n              :key=\"doc.id\" \n              class=\"document-item-card\" \n              shadow=\"hover\"\n              body-style=\"padding: 0; height: 100%; display: flex; flex-direction: column;\"\n            >\n              <div class=\"card-header\">\n                <div class=\"file-icon\" :class=\"'file-icon-' + doc.file_type\">\n                  <component :is=\"getFileIcon(doc.file_type)\" />\n              </div>\n                <div class=\"document-title-block\">\n                  <h5 class=\"document-title\" :title=\"doc.title\">\n                    {{ doc.title }}\n                    <span v-if=\"doc.file_type\" class=\"file-extension\">.{{ doc.file_type }}</span>\n                  </h5>\n                  </div>\n                </div>\n              <div class=\"card-body\">\n                <p class=\"document-description\">\n                  {{ doc.description || '暂无描述信息' }}\n                </p>\n              </div>\n              <div class=\"card-footer\">\n                <div class=\"document-meta\">\n                  <el-icon><Clock /></el-icon>\n                  <span>{{ formatDate(doc.date) }}</span>\n                </div>\n                <div class=\"card-actions\">\n                  <el-button type=\"primary\" text bg :icon=\"Download\" @click.stop=\"downloadDocument(doc)\">下载</el-button>\n                   <el-dropdown trigger=\"click\" @click.stop>\n                    <el-button text bg class=\"more-button\">\n                      <el-icon><MoreFilled /></el-icon>\n                  </el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                        <el-dropdown-item @click=\"shareDocument(doc)\" :icon=\"Share\">分享</el-dropdown-item>\n                        <el-dropdown-item @click=\"editDocument(doc)\" :icon=\"Edit\">编辑</el-dropdown-item>\n                        <el-dropdown-item @click=\"renameDocument(doc)\" :icon=\"EditPen\">重命名</el-dropdown-item>\n                        <el-dropdown-item @click=\"moveDocument(doc)\" :icon=\"FolderOpened\">移动</el-dropdown-item>\n                        <el-dropdown-item @click=\"starDocument(doc)\" :icon=\"Star\">收藏</el-dropdown-item>\n                        <el-dropdown-item divided @click=\"deleteDocument(doc)\" :icon=\"Delete\" class=\"delete-item\">\n                          删除\n                      </el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </div>\n            </el-card>\n          </div>\n          \n          <div v-if=\"documents.length > 0\" class=\"pagination-wrapper\">\n            <el-pagination\n              background\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"totalDocs\"\n              :page-size=\"pageSize\"\n              :page-sizes=\"[12, 24, 48, 96]\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              @size-change=\"handleSizeChange\"\n            />\n          </div>\n        </el-card>\n      </div>\n    </div>\n    \n    <!-- 文件上传对话框 -->\n    <el-dialog\n      v-model=\"uploadVisible\"\n      title=\"上传文档\"\n      width=\"500px\"\n      :before-close=\"handleCloseUploadDialog\"\n    >\n      <el-form ref=\"uploadFormRef\" :model=\"uploadForm\" :rules=\"uploadRules\">\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"uploadForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"uploadForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"文档文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"javascript:void(0);\"\n            :auto-upload=\"false\"\n            :on-change=\"handleFileChange\"\n            :on-remove=\"handleRemove\"\n            :limit=\"1\"\n            :before-upload=\"beforeUpload\"\n            :on-error=\"handleUploadError\"\n            ref=\"uploadRef\"\n          >\n            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            <div class=\"el-upload__text\">\n              拖拽文件到此处或<em>点击上传</em>\n            </div>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                <strong>仅支持</strong>上传 txt, pdf, doc, docx, md, ppt, pptx, xls, xlsx 格式文件，单个文件不超过10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCancelUpload\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">上传</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"showCategoryDialog\"\n      title=\"分类管理\"\n      width=\"850px\"\n    >\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n          <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button>\n          </div>\n          \n          <div v-if=\"categoryLoading\" class=\"text-center p-4\">\n            <el-icon class=\"is-loading\"><Loading /></el-icon> 加载中...\n          </div>\n          \n          <div v-else-if=\"categories.length <= 1\" class=\"empty-categories\">\n            <el-empty description=\"\" />\n          </div>\n          \n          <div v-else class=\"category-items\">\n            <div v-for=\"(category, index) in categories.filter(c => c.id !== 'all')\" :key=\"index\" class=\"category-list-item\">\n              <div class=\"category-info\">\n                <div class=\"category-color\" :style=\"{ backgroundColor: category.color }\"></div>\n                <div class=\"category-name-section\">\n                  <div class=\"category-name\" :title=\"category.name\">{{ category.name }}</div>\n                  <div class=\"category-desc\" :title=\"category.description\">{{ category.description || '无描述' }}</div>\n                </div>\n              </div>\n              \n              <div class=\"category-details\">\n                <span class=\"category-count\">{{ category.document_count || 0 }}个文档</span>\n                <div class=\"category-actions\">\n                    <el-button type=\"primary\" size=\"small\" plain @click=\"editCategory(category)\">\n                      <el-icon><Edit /></el-icon>\n                    </el-button>\n                    <el-button type=\"danger\" size=\"small\" plain @click=\"handleDeleteCategory(category)\">\n                      <el-icon><Delete /></el-icon>\n                    </el-button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAddCategoryForm\" class=\"category-form-section\">\n          <div class=\"section-header\">\n            <h5>{{ editingCategory ? '编辑分类' : '新增分类' }}</h5>\n            <el-button size=\"small\" @click=\"cancelCategoryForm\">\n              取消\n            </el-button>\n          </div>\n          \n          <el-form :model=\"categoryForm\" label-width=\"80px\">\n            <el-form-item label=\"分类名称\" required>\n              <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"分类描述\">\n              <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"2\" placeholder=\"请输入分类描述\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"图标\">\n              <el-select v-model=\"categoryForm.icon\" placeholder=\"选择图标\" style=\"width: 100%\">\n                <el-option value=\"Document\" label=\"文档\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Document /></el-icon> <span class=\"ml-2\">文档</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Files\" label=\"文件夹\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Files /></el-icon> <span class=\"ml-2\">文件夹</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Tickets\" label=\"票据\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Tickets /></el-icon> <span class=\"ml-2\">票据</span>\n                  </div>\n                </el-option>\n                <el-option value=\"DataAnalysis\" label=\"数据分析\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><DataAnalysis /></el-icon> <span class=\"ml-2\">数据分析</span>\n                  </div>\n                </el-option>\n                <el-option value=\"PictureFilled\" label=\"图片\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><PictureFilled /></el-icon> <span class=\"ml-2\">图片</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"颜色\">\n              <el-color-picker v-model=\"categoryForm.color\" show-alpha @change=\"formatColorValue\"></el-color-picker>\n              <span class=\"ml-2\">{{ categoryForm.color }}</span>\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\n              <el-button @click=\"cancelCategoryForm\">取消</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 知识库构建对话框组件 -->\n    <KnowledgeBuilder \n      v-model=\"buildingVisible\"\n      @build-completed=\"handleBuildCompleted\"\n      @build-failed=\"handleBuildFailed\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onBeforeUnmount } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, Upload, FolderAdd, View, Download, More, Share, \n  Edit, EditPen, FolderOpened, Star, Delete, Document, \n  Files, Tickets, DataAnalysis, PictureFilled, UploadFilled,\n  Loading, List, Grid, Crop, Plus, InfoFilled, Clock, User\n} from '@element-plus/icons-vue'\nimport { getCategories, getDocuments, getDocumentChunks, uploadDocument, deleteDocument as apiDeleteDocument, deleteCategory, updateCategory, addCategory, downloadDocumentFile } from '@/api/knowledge'\nimport KnowledgeBuilder from '@/components/KnowledgeBuilder.vue'\n\nexport default {\n  name: 'Knowledge',\n  components: {\n    KnowledgeBuilder\n  },\n  setup() {\n    // 状态变量\n    const searchQuery = ref('')\n    const selectedCategory = ref('all')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const uploadVisible = ref(false)\n    const showCategoryDialog = ref(false)\n    const showAddCategoryForm = ref(false)\n    const showChunksDialog = ref(false)\n    const editingCategory = ref(null)\n    const viewMode = ref('list')\n    const sortOrder = ref('-created_at')\n    const categoryLoading = ref(false)\n    const loading = ref(false)\n    const uploading = ref(false)\n    const chunksLoading = ref(false)\n    const isAdmin = ref(true) // 实际应用中从用户会话获取\n    const selectedDocument = ref(null)\n    const documentChunks = ref([])\n    const uploadFormRef = ref(null)\n    const uploadRef = ref(null)\n    const totalDocs = ref(0)\n    \n    // 上传表单\n    const uploadForm = reactive({\n      title: '',\n      description: '',\n      file: null,\n      category: null,\n      tags: '',\n      chunk_size: 500,\n      chunk_overlap: 50,\n      is_public: true\n    })\n    \n    // 上传表单验证规则\n    const uploadRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' }\n      ],\n      file: [\n        { required: true, message: '请上传文件', trigger: 'change' }\n      ]\n    }\n    \n    // 分类表单\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      icon: 'Document',\n      color: '#409EFF'\n    })\n    \n    // 筛选条件\n    const filters = ref({\n      types: {\n        pdf: false,\n        doc: false,\n        xls: false,\n        ppt: false,\n        img: false,\n        txt: false,\n        md: false,\n      },\n    })\n    \n    // 知识分类\n    const categories = ref([\n      { id: 'all', name: '全部文档', icon: 'Files', color: '#007bff', document_count: 0 }\n    ])\n    \n    // 文档列表\n    const documents = ref([])\n    \n    // 计算属性\n    const currentCategoryName = computed(() => {\n      const category = categories.value.find(cat => cat.id === selectedCategory.value)\n      return category ? category.name : '全部文档'\n    })\n    \n    const processingCount = computed(() => {\n      return documents.value.filter(doc => doc.status === 'processing').length\n    })\n    \n    // 知识库构建相关状态\n    const buildingVisible = ref(false)\n    \n    // 方法\n    const fetchCategories = async () => {\n      categoryLoading.value = true\n      console.log('开始获取知识库分类...')\n      try {\n        // console.log('请求URL:', `${API_URL}/categories/`) // 已被实际API调用取代\n        const response = await getCategories() // API call for specific categories\n        console.log('获取分类响应:', response)\n        \n        let categoryList = []\n        \n        // 处理不同格式的响应 (for specific categories)\n        if (response) {\n          if (response.results && Array.isArray(response.results)) {\n            categoryList = response.results\n          } \n          else if (Array.isArray(response)) {\n            categoryList = response\n          } \n          else if (typeof response === 'object') {\n            const possibleArrayFields = ['data', 'categories', 'items'];\n            for (const field of possibleArrayFields) {\n              if (response[field] && Array.isArray(response[field])) {\n                categoryList = response[field];\n                break;\n              }\n            }\n          }\n        }\n\n        // Fetch the grand total of all documents\n        let grandTotalAllDocuments = 0;\n        try {\n          // Lightweight request to get the total count of all documents\n          const allDocsResponse = await getDocuments({ page: 1, page_size: 1 }); \n          if (allDocsResponse && Object.prototype.hasOwnProperty.call(allDocsResponse, 'count')) {\n            grandTotalAllDocuments = allDocsResponse.count;\n            console.log('获取到全部文档总数:', grandTotalAllDocuments);\n          } else {\n            console.warn('未能从 getDocuments 响应中获取总数 count:', allDocsResponse);\n          }\n        } catch (docError) {\n          console.error('获取全部文档总数失败:', docError);\n          // 保留 grandTotalAllDocuments = 0 或根据需要处理错误\n        }\n        \n        // 创建 \"全部文档\" 分类\n        const allCategory = { \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: grandTotalAllDocuments // 使用获取到的真实总数\n        }\n        \n        if (categoryList && categoryList.length > 0) {\n          console.log('找到分类数据，数量:', categoryList.length);\n          // 不再通过累加其他分类来计算 allCategory.document_count\n          categories.value = [allCategory, ...categoryList]\n        } else {\n          console.warn('未找到有效的分类数据');\n          if (response && response.message) {\n            ElMessage.warning(response.message);\n          } else if (!response && !categoryList.length) { // Only show if response was truly empty and no list was parsed\n             // 删除警告消息\n          }\n          categories.value = [allCategory]; // 至少显示\"全部文档\"分类\n        }\n      } catch (error) {\n        console.error('获取分类失败:', error)\n        if (error.response) {\n          console.error('错误响应状态:', error.response.status)\n          console.error('错误响应数据:', error.response.data)\n        } else if (error.message && error.message.includes('message channel closed')) {\n          console.warn('通信通道关闭：', error.message);\n          // 静默处理此类错误，不向用户显示\n        } else {\n          ElMessage.error('无法加载知识库分类，请检查网络连接或联系管理员')\n        }\n        // 确保至少有\"全部\"分类可显示\n        categories.value = [{ \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }];\n      } finally {\n        categoryLoading.value = false\n      }\n    }\n    \n    const fetchDocuments = async () => {\n      loading.value = true\n      try {\n        // 构建参数对象\n        const params = {\n          page: currentPage.value,\n          page_size: pageSize.value,\n          ordering: sortOrder.value\n        }\n        \n        // 添加筛选条件\n        if (selectedCategory.value && selectedCategory.value !== 'all') {\n          params.category = selectedCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        // 添加文件类型筛选\n        const selectedTypes = []\n        const typeMapping = {\n          doc: ['doc', 'docx'],\n          xls: ['xls', 'xlsx'],\n          ppt: ['ppt', 'pptx'],\n        };\n\n        for (const [type, selected] of Object.entries(filters.value.types)) {\n          if (selected) {\n            if (typeMapping[type]) {\n              selectedTypes.push(...typeMapping[type]);\n            } else {\n              selectedTypes.push(type);\n            }\n          }\n        }\n        \n        // 使用Set去重，以防将来可能的逻辑重叠\n        const uniqueSelectedTypes = [...new Set(selectedTypes)];\n\n        if (uniqueSelectedTypes.length > 0) {\n          params.file_type = uniqueSelectedTypes.join(',')\n        }\n        \n        const response = await getDocuments(params)\n        if (response) {\n          console.log('获取文档响应:', response)\n          \n          // 处理不同格式的响应\n          if (response.results && Array.isArray(response.results)) {\n            // 分页格式的响应\n            documents.value = response.results\n            totalDocs.value = response.count || response.total || documents.value.length\n          } else if (Array.isArray(response)) {\n            // 数组格式的响应\n            documents.value = response\n            totalDocs.value = response.length\n          } else if (response.data && Array.isArray(response.data)) {\n            // 另一种常见的对象包装格式\n            documents.value = response.data\n            totalDocs.value = response.total || response.count || documents.value.length\n          } else if (typeof response === 'object') {\n            // 尝试提取可能的文档列表\n            const possibleDocuments = Object.values(response).filter(item => \n              item && typeof item === 'object' && ('title' in item || 'file' in item)\n            )\n            if (possibleDocuments.length > 0) {\n              documents.value = possibleDocuments\n              totalDocs.value = possibleDocuments.length\n            } else {\n              console.error('无法从响应中提取文档列表:', response)\n              documents.value = []\n              totalDocs.value = 0\n              ElMessage.warning('获取文档列表格式异常')\n            }\n          } else {\n            console.error('文档响应格式不支持:', typeof response, response)\n            documents.value = []\n            totalDocs.value = 0\n            ElMessage.warning('获取文档列表格式不支持')\n          }\n        } else {\n          documents.value = []\n          totalDocs.value = 0\n        }\n      } catch (error) {\n        console.error('获取文档失败:', error)\n        ElMessage.error('无法加载知识库文档')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const fetchDocumentChunks = async (documentId) => {\n      chunksLoading.value = true\n      try {\n        const response = await getDocumentChunks(documentId)\n        documentChunks.value = response\n      } catch (error) {\n        console.error('获取文档分块失败:', error)\n        ElMessage.error('无法加载文档分块数据')\n      } finally {\n        chunksLoading.value = false\n      }\n    }\n    \n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchDocuments()\n    }\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const selectCategory = (categoryId) => {\n      selectedCategory.value = categoryId\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const applyFilters = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleFileChange = (file) => {\n      console.log(\">>> handleFileChange: Received file object from el-upload:\", file);\n      if (file && file.raw) {\n        console.log(\">>> handleFileChange: file.raw (the actual File object):\", file.raw);\n        \n        // 检查文件大小是否为0，这会导致上传失败\n        if (file.raw.size === 0) {\n          ElMessage.error('文件大小为0，请选择有效文件');\n          return false;\n        }\n        \n        // 检查文件是否过大（例如超过10MB）\n        const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n        if (file.raw.size > maxSizeInBytes) {\n          ElMessage.error(`文件过大，最大支持${maxSizeInBytes / (1024 * 1024)}MB`);\n          return false;\n        }\n        \n        // 严格检查文件扩展名是否支持\n        const fileName = file.raw.name;\n        const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n        const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n        \n        if (!allowedFileTypes.includes(ext)) {\n          ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n          // 不支持的文件类型不应该更新uploadForm.file\n          uploadForm.file = null;\n          // 清除上传组件中显示的文件\n          if (uploadRef.value) {\n            uploadRef.value.clearFiles();\n          }\n          return false;\n        }\n        \n        // 仅在验证通过后设置文件\n        uploadForm.file = file.raw\n        console.log(\">>> handleFileChange: uploadForm.file after assignment:\", uploadForm.file, uploadForm.file ? `Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}` : 'No file');\n        uploadForm.title = uploadForm.title || file.name.split('.')[0];\n        \n        // 返回true表示验证通过\n        return true;\n      } else {\n        console.warn(\">>> handleFileChange: file.raw is not available. File:\", file);\n        return false;\n      }\n    }\n    \n    const handleRemove = () => {\n      console.log(\">>> handleRemove: File removed by user. Setting uploadForm.file to null.\");\n      uploadForm.file = null;\n      \n      // 如果标题是自动从文件名生成的，也清除标题\n      if (uploadForm.title && uploadForm.title.includes('.')) {\n        const fileNameWithoutExt = uploadForm.file?.name?.split('.')[0];\n        if (uploadForm.title === fileNameWithoutExt) {\n          uploadForm.title = '';\n        }\n      }\n    }\n    \n    const beforeUpload = (file) => {\n      // 获取文件扩展名\n      const fileName = file.name;\n      const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n      \n      // 允许的文件类型列表\n      const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n      \n      // 严格检查文件类型\n      if (!allowedFileTypes.includes(ext)) {\n        ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n        return false;\n      }\n      \n      // 检查文件大小\n      const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSizeInBytes) {\n        ElMessage.error(`文件大小超过限制，最大支持 ${maxSizeInBytes / (1024 * 1024)}MB`);\n        return false;\n      }\n      \n      // 检查文件是否为空\n      if (file.size === 0) {\n        ElMessage.error('文件为空，请选择有效文件');\n        return false;\n      }\n      \n      return true;\n    }\n    \n    const handleUploadError = (error) => {\n      console.error('上传错误:', error);\n      ElMessage.error('上传错误，请检查文件格式或网络连接');\n      // 移除错误文件\n      uploadForm.file = null;\n    }\n    \n    const submitUpload = async () => {\n      if (!uploadFormRef.value) return\n      \n      await uploadFormRef.value.validate(async (valid) => {\n        if (valid) {\n          uploading.value = true\n          \n          console.log(\">>> submitUpload: Current uploadForm.file before appending to FormData:\", uploadForm.file);\n          if (!uploadForm.file) {\n            console.warn(\">>> submitUpload: uploadForm.file is null or undefined before appending.\");\n            uploading.value = false;\n            ElMessage.warning(\"请先选择文件再上传\");\n            return;\n          }\n          \n          // 再次检查文件大小，确保不是空文件或损坏文件\n          if (uploadForm.file.size === 0) {\n            console.error(\">>> submitUpload: 文件大小为0，无法上传\");\n            uploading.value = false;\n            ElMessage.error(\"文件大小为0，请选择有效文件\");\n            return;\n          }\n          \n          console.log(`>>> submitUpload: uploadForm.file details - Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}`);\n          \n          // 创建formData对象，并添加文件和其他参数\n          const formData = new FormData()\n          formData.append('title', uploadForm.title)\n          formData.append('description', uploadForm.description)\n          formData.append('file', uploadForm.file) // Appending the file\n          \n          if (uploadForm.category) {\n            formData.append('category', uploadForm.category)\n            console.log(`>>> submitUpload: Attaching category to FormData: ${uploadForm.category}`)\n          } else {\n            console.log(\">>> submitUpload: No category selected (uploadForm.category is null/empty). Not attaching to FormData.\")\n          }\n          \n          formData.append('tags', JSON.stringify(uploadForm.tags))\n          formData.append('chunk_size', uploadForm.chunk_size.toString())\n          formData.append('chunk_overlap', uploadForm.chunk_overlap.toString())\n          formData.append('is_public', uploadForm.is_public.toString())\n          \n          // 再次检查formData中的文件是否正确\n          const fileInFormData = formData.get('file');\n          if (!fileInFormData || fileInFormData.size === 0) {\n            console.error(\">>> submitUpload: FormData中的文件无效或大小为0\");\n            uploading.value = false;\n            ElMessage.error(\"FormData处理文件失败，请重试\");\n            return;\n          }\n\n          try {\n            const response = await uploadDocument(formData) // Assuming uploadDocument returns the new document object or its ID\n            console.log(\">>> submitUpload: API Response from uploadDocument:\", response);\n\n            ElMessage.success('文档上传请求已发送，后台正在处理...')\n            uploading.value = false // 确保上传状态被重置\n            uploadVisible.value = false\n            const uploadedFileTitle = uploadForm.title; // Store title for polling check\n            resetUploadForm()\n\n            // Start polling for document status if response contains an ID or enough info\n            // For simplicity, we'll poll fetchDocuments and look for the title, assuming titles are reasonably unique for recent uploads.\n            // A more robust way is if backend returns the new document ID, and we poll a getDocumentById(id) endpoint.\n            // Or if the document object in fetchDocuments has a clear 'status' field (e.g., 'processing', 'completed').\n            \n            let attempts = 0;\n            const maxAttempts = 10; // Poll for max 30 seconds (10 attempts * 3s interval)\n            const pollInterval = 3000; // 3 seconds\n\n            const poll = setInterval(async () => {\n              attempts++;\n              console.log(`>>> Polling for document status (attempt ${attempts}/${maxAttempts})...`);\n              try {\n                // Fetch the list of documents, usually sorted by creation date descending\n                const documentsResponse = await getDocuments({ \n                  page: 1, \n                  page_size: 10, // Check recent documents\n                  ordering: '-created_at', \n                  category: selectedCategory.value || undefined, // Use current category or all if 'all'\n                  // search: uploadedFileTitle // Optionally, if backend supports search by title for recent items\n                });\n\n                let foundDoc = null;\n                if (documentsResponse && documentsResponse.results && documentsResponse.results.length > 0) {\n                  // Attempt to find the document by title. This is a simplification.\n                  // Ideally, backend returns ID and we poll for that ID, or a status field directly.\n                  foundDoc = documentsResponse.results.find(doc => doc.title === uploadedFileTitle);\n                  \n                  // MORE ROBUST CHECK: Assume doc object has a 'status' field from backend\n                  // Example: if (doc.status === 'completed') { ... }\n                  // For now, if we find it by title recently, we assume it might be processed or soon.\n                }\n\n                if (foundDoc) {\n                  // Let's assume if found by title, it's processed enough for a refresh.\n                  // Replace this with actual status check if backend provides 'status' field.\n                  console.log(`>>> Polling: Document \"${uploadedFileTitle}\" found (or assumed processed). Refreshing lists.`);\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.success(`文档 \"${uploadedFileTitle}\" 处理完毕并已刷新列表!`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                } else if (attempts >= maxAttempts) {\n                  console.log(\">>> Polling: Max attempts reached. Refreshing lists anyway.\");\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.info(`文档 \"${uploadedFileTitle}\" 可能仍在后台处理中，列表已刷新。`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                }\n              } catch (pollError) {\n                console.error(\">>> Polling error:\", pollError);\n                clearInterval(poll);\n                // Still refresh, as the document might be there despite polling error\n                fetchDocuments();\n                fetchCategories();\n                ElMessage.error('检查文档状态时出错，列表已刷新。');\n                // 确保所有状态正确重置\n                uploading.value = false;\n              }\n            }, pollInterval);\n\n          } catch (error) {\n            console.error('上传文档失败:', error)\n            uploading.value = false;\n            // 在上传失败时清除文件选择状态\n            if (uploadRef.value) {\n              uploadRef.value.clearFiles();\n            }\n            let errorMsg = '文档上传失败'\n            if (error.response && error.response.data) {\n              const data = error.response.data;\n              if (typeof data === 'string') errorMsg += ': ' + data;\n              else if (data.detail) errorMsg += ': ' + data.detail;\n              else if (data.message) errorMsg += ': ' + data.message;\n              else if (data.file && Array.isArray(data.file)) errorMsg += ': ' + data.file.join(', ');\n              // 处理特定的文件类型错误\n              else if (data.status === 'error' && data.message && data.message.includes('不支持的文件类型')) {\n                errorMsg = data.message; // 直接使用后端的错误消息\n              }\n              else if (typeof data === 'object') errorMsg += ': ' + JSON.stringify(data).substring(0, 100);\n            }\n            ElMessage.error(errorMsg);\n          }\n        } else {\n          console.log('error submit!! Form validation failed.');\n          uploading.value = false; // Ensure uploading is reset if validation fails\n          return false;\n        }\n      })\n    }\n    \n    const showDocumentChunks = async (doc) => {\n      selectedDocument.value = doc\n      showChunksDialog.value = true\n      await fetchDocumentChunks(doc.id)\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = category\n      categoryForm.id = category.id\n      categoryForm.name = category.name\n      categoryForm.description = category.description || ''\n      categoryForm.icon = category.icon || 'Document'\n      \n      // 确保颜色值不超过20个字符\n      if (category.color && category.color.length > 20) {\n        categoryForm.color = category.color.substring(0, 20);\n        console.log(`编辑分类时截断颜色值: ${category.color} -> ${categoryForm.color}`);\n      } else {\n        categoryForm.color = category.color || '#409EFF'\n      }\n      \n      showAddCategoryForm.value = true // 显示编辑表单\n    }\n    \n    const handleDeleteCategory = async (category) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗？`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteCategory(category.id)\n        ElMessage.success('分类删除成功')\n        fetchCategories()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const saveCategoryForm = async () => {\n      console.log('保存分类表单被调用，模式:', editingCategory.value ? 'edit' : 'add')\n      \n      // 确保颜色值不超过20个字符\n      formatColorValue(categoryForm.color);\n      \n      showAddCategoryForm.value = false\n      if (editingCategory.value) {\n        console.log('尝试更新分类:', categoryForm)\n        if (!editingCategory.value.id) {\n            ElMessage.error('无法更新分类，未找到当前编辑的分类ID');\n            return;\n        }\n        try {\n          const response = await updateCategory(editingCategory.value.id, categoryForm)\n          console.log('更新分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类更新成功')\n            await fetchCategories() // 刷新分类列表\n            // 如果当前编辑的分类就是选中的分类，可能需要刷新文档列表\n            if (selectedCategory.value === (response.id || response.data.id)) {\n              await fetchDocuments();\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`更新分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`更新分类失败: ${response.detail}`)\n          }\n          else {\n            ElMessage.error('更新分类失败，响应格式不符合预期或无ID返回')\n          }\n        } catch (error) {\n          console.error('更新分类失败:', error)\n          ElMessage.error('更新分类失败，请检查网络或联系管理员')\n        }\n      } else {\n        console.log('尝试添加新分类:', categoryForm)\n        try {\n          const response = await addCategory(categoryForm)\n          console.log('添加分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类添加成功')\n            await fetchCategories() // 刷新分类列表\n            // 自动选中新创建的分类并刷新文档列表\n            const newCategoryId = response.id || response.data.id;\n            if (newCategoryId) {\n              selectedCategory.value = newCategoryId;\n              console.log(`新分类创建成功，自动选中新分类 ID: ${newCategoryId}`);\n              await fetchDocuments(); // 刷新文档列表以显示新选中的分类（初始为空）\n            } else {\n              console.warn(\"新创建的分类ID未找到，无法自动选中。\");\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`添加分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`添加分类失败: ${response.detail}`)\n          }\n           else {\n            ElMessage.error('添加分类失败，响应格式不符合预期或无ID返回')\n            console.error(\"添加分类失败，响应:\", response);\n          }\n        } catch (error) {\n          console.error('添加分类失败:', error)\n          ElMessage.error('添加分类失败，请检查网络或联系管理员')\n        }\n      }\n      resetCategoryForm()\n    }\n    \n    const cancelCategoryForm = () => {\n      showAddCategoryForm.value = false\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF' // 确保默认颜色值不超过20个字符\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF' // 确保默认颜色值不超过20个字符\n      showAddCategoryForm.value = true\n    }\n    \n    const resetUploadForm = () => {\n      if (uploadFormRef.value) {\n        // 使用el-form的resetFields方法重置表单\n        uploadFormRef.value.resetFields(); \n      }\n      \n      // 手动重置所有uploadForm字段，确保全部清空\n      uploadForm.title = ''\n      uploadForm.description = ''\n      uploadForm.file = null\n      uploadForm.category = null // Explicitly reset category\n      uploadForm.tags = ''\n      uploadForm.is_public = true\n      uploadForm.chunk_size = 500 // 重置为初始默认值\n      uploadForm.chunk_overlap = 50 // 重置为初始默认值\n      \n      // 清除上传组件中的文件\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles();\n      }\n      \n      console.log(\">>> resetUploadForm: uploadForm和上传组件已完全重置\");\n    }\n    \n    const handleCancelUpload = () => {\n      // 如果正在上传，不允许关闭\n      if (uploading.value) {\n        ElMessage.warning('文件正在上传中，请等待上传完成');\n        return;\n      }\n      resetUploadForm();\n      uploadVisible.value = false;\n    }\n    \n    const handleCloseUploadDialog = (done) => {\n      handleCancelUpload();\n      done(); // 允许关闭对话框\n    }\n    \n    const openUploadDialog = () => {\n      resetUploadForm(); // Reset form first for a clean state\n      if (selectedCategory.value && selectedCategory.value !== 'all') {\n        uploadForm.category = selectedCategory.value;\n        console.log(`>>> openUploadDialog: Auto-selecting current category: ${selectedCategory.value}`);\n      } else {\n        uploadForm.category = null; // If 'all' or no category is selected, let user choose in dialog\n        console.log(\">>> openUploadDialog: No category auto-selected (current is 'all' or none).\");\n      }\n      uploadVisible.value = true;\n    };\n    \n    // 文件操作函数\n    const previewDocument = async (doc) => {\n      try {\n        // 记录文档对象，便于调试\n        console.log('预览文档对象:', doc);\n        \n        // 检查是否有 original_file 字段\n        if (doc.original_file) {\n          try {\n            const response = await fetch(doc.original_file);\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              window.open(url, '_blank');\n              setTimeout(() => window.URL.revokeObjectURL(url), 100);\n              return;\n            }\n          } catch (error) {\n            console.warn('通过 original_file 访问失败，尝试其他方式:', error);\n          }\n        }\n        \n        // 首先尝试通过API获取文件\n        try {\n          const response = await downloadDocumentFile(doc.id);\n        const blob = new Blob([response.data], { type: response.headers['content-type'] || 'application/octet-stream' });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url, '_blank');\n        setTimeout(() => window.URL.revokeObjectURL(url), 100);\n          return;\n        } catch (apiError) {\n          console.warn('通过API获取文件失败，尝试直接访问文件URL:', apiError);\n        }\n        \n        // 如果API调用失败，尝试直接访问文件URL\n        if (doc.file_url) {\n          // 尝试直接访问原始URL\n          try {\n            const response = await fetch(doc.file_url);\n            if (response.ok) {\n              const blob = await response.blob();\n              const url = window.URL.createObjectURL(blob);\n              window.open(url, '_blank');\n              setTimeout(() => window.URL.revokeObjectURL(url), 100);\n              return;\n            }\n          } catch (urlError) {\n            console.warn('直接访问文件URL失败:', urlError);\n          }\n          \n          // 尝试修正的URL路径\n          // 从file_url中提取文件名\n          const fileUrlParts = doc.file_url.split('/');\n          const originalFilename = fileUrlParts[fileUrlParts.length - 1];\n          \n          // 尝试从file_url中提取可能的UUID\n          let uuid = null;\n          const uuidMatch = doc.file_url.match(/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/);\n          if (uuidMatch && uuidMatch[1]) {\n            uuid = uuidMatch[1];\n            console.log('从URL中提取的UUID:', uuid);\n          }\n          \n          // 构造可能的替代路径\n          const possiblePaths = [\n            `/media/original_files/${originalFilename}`,\n            `/media/original_files/company_1/${originalFilename}`,\n            `/backend/media/original_files/${originalFilename}`,\n            `/backend/media/original_files/company_1/${originalFilename}`,\n            `/media/documents/1/${originalFilename}`,\n            `/backend/media/documents/1/${originalFilename}`\n          ];\n          \n          // 如果文件名不是UUID格式，尝试在documents目录下查找可能匹配的文件\n          if (!originalFilename.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\.[a-z]+$/)) {\n            // 尝试使用文档ID作为文件名的一部分\n            if (doc.id) {\n              possiblePaths.push(`/media/documents/1/${doc.id}.${doc.file_type}`);\n              possiblePaths.push(`/backend/media/documents/1/${doc.id}.${doc.file_type}`);\n            }\n          }\n          \n          // 如果从URL中提取到了UUID，尝试使用UUID构造路径\n          if (uuid) {\n            possiblePaths.push(`/media/documents/1/${uuid}.${doc.file_type}`);\n            possiblePaths.push(`/backend/media/documents/1/${uuid}.${doc.file_type}`);\n          }\n          \n          // 尝试所有可能的路径\n          for (const path of possiblePaths) {\n            try {\n              const response = await fetch(path);\n              if (response.ok) {\n                const blob = await response.blob();\n                const url = window.URL.createObjectURL(blob);\n                window.open(url, '_blank');\n                setTimeout(() => window.URL.revokeObjectURL(url), 100);\n                return;\n              }\n            } catch (pathError) {\n              console.warn(`尝试路径 ${path} 失败:`, pathError);\n            }\n          }\n        }\n        \n        // 所有尝试都失败，显示错误消息\n        throw new Error('无法找到有效的文件路径');\n      } catch (error) {\n        console.error('预览文档失败:', error);\n        ElMessage.error('预览文档失败: 无法找到或访问文件。请联系管理员检查文件路径配置。');\n      }\n    }\n    \n    const downloadDocument = async (doc) => {\n      try {\n        // 记录文档对象，便于调试\n        console.log('下载文档对象:', doc);\n        \n        // 检查是否有 original_file 字段\n        if (doc.original_file) {\n          try {\n            const response = await fetch(doc.original_file);\n            if (response.ok) {\n              const blob = await response.blob();\n              const filename = doc.original_filename || doc.title + '.' + doc.file_type;\n              \n              const url = window.URL.createObjectURL(blob);\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', filename);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n              \n              ElMessage.success(`文档 \"${filename}\" 下载成功`);\n              return;\n            }\n          } catch (error) {\n            console.warn('通过 original_file 下载失败，尝试其他方式:', error);\n          }\n        }\n        \n        // 首先尝试通过API获取文件\n        try {\n          const response = await downloadDocumentFile(doc.id);\n          const filename = doc.title ? `${doc.title}.${doc.file_type}` : \n                          (doc.file_url ? doc.file_url.split('/').pop() : `document.${doc.file_type}`);\n          \n          const url = window.URL.createObjectURL(new Blob([response.data], { type: response.headers['content-type'] || 'application/octet-stream' }));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', filename);\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n          \n          ElMessage.success(`文档 \"${filename}\" 下载成功`);\n          return;\n        } catch (apiError) {\n          console.warn('通过API获取文件失败，尝试直接访问文件URL:', apiError);\n        }\n        \n        // 如果API调用失败，尝试直接访问文件URL\n        if (doc.file_url) {\n          // 尝试直接访问原始URL\n          try {\n            const response = await fetch(doc.file_url);\n            if (response.ok) {\n              const blob = await response.blob();\n              const filename = doc.title ? `${doc.title}.${doc.file_type}` : doc.file_url.split('/').pop();\n              \n              const url = window.URL.createObjectURL(blob);\n              const link = document.createElement('a');\n              link.href = url;\n              link.setAttribute('download', filename);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n              window.URL.revokeObjectURL(url);\n              \n              ElMessage.success(`文档 \"${filename}\" 下载成功`);\n              return;\n            }\n          } catch (urlError) {\n            console.warn('直接访问文件URL失败:', urlError);\n          }\n          \n          // 尝试修正的URL路径\n          const fileUrlParts = doc.file_url.split('/');\n          const originalFilename = fileUrlParts[fileUrlParts.length - 1];\n          \n          // 尝试从file_url中提取可能的UUID\n          let uuid = null;\n          const uuidMatch = doc.file_url.match(/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/);\n          if (uuidMatch && uuidMatch[1]) {\n            uuid = uuidMatch[1];\n            console.log('从URL中提取的UUID:', uuid);\n          }\n          \n          // 构造可能的替代路径\n          const possiblePaths = [\n            `/media/original_files/${originalFilename}`,\n            `/media/original_files/company_1/${originalFilename}`,\n            `/backend/media/original_files/${originalFilename}`,\n            `/backend/media/original_files/company_1/${originalFilename}`,\n            `/media/documents/1/${originalFilename}`,\n            `/backend/media/documents/1/${originalFilename}`\n          ];\n          \n          // 如果文件名不是UUID格式，尝试在documents目录下查找可能匹配的文件\n          if (!originalFilename.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\.[a-z]+$/)) {\n            // 尝试使用文档ID作为文件名的一部分\n            if (doc.id) {\n              possiblePaths.push(`/media/documents/1/${doc.id}.${doc.file_type}`);\n              possiblePaths.push(`/backend/media/documents/1/${doc.id}.${doc.file_type}`);\n            }\n          }\n          \n          // 如果从URL中提取到了UUID，尝试使用UUID构造路径\n          if (uuid) {\n            possiblePaths.push(`/media/documents/1/${uuid}.${doc.file_type}`);\n            possiblePaths.push(`/backend/media/documents/1/${uuid}.${doc.file_type}`);\n          }\n          \n          // 尝试所有可能的路径\n          for (const path of possiblePaths) {\n            try {\n              const response = await fetch(path);\n              if (response.ok) {\n                const blob = await response.blob();\n                const filename = doc.title ? `${doc.title}.${doc.file_type}` : originalFilename;\n                \n                const url = window.URL.createObjectURL(blob);\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', filename);\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                window.URL.revokeObjectURL(url);\n                \n                ElMessage.success(`文档 \"${filename}\" 下载成功`);\n                return;\n              }\n            } catch (pathError) {\n              console.warn(`尝试路径 ${path} 失败:`, pathError);\n            }\n          }\n        }\n        \n        // 所有尝试都失败，显示错误消息\n        throw new Error('无法找到有效的文件路径');\n      } catch (error) {\n        console.error('下载文档失败:', error);\n        ElMessage.error('下载文档失败: 无法找到或访问文件。请联系管理员检查文件路径配置。');\n      }\n    }\n    \n    const shareDocument = (doc) => {\n      // 实现文档分享功能\n      console.log('准备分享文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的分享功能即将上线`)\n    }\n    \n    const editDocument = (doc) => {\n      // 实现文档编辑功能\n      console.log('准备编辑文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的编辑功能即将上线`)\n    }\n    \n    const deleteDocument = async (doc) => {\n      console.log('>>> Vue component: Attempting to delete document (local method):', doc); // Log entry\n      try {\n        await ElMessageBox.confirm(`确定要删除文档 \"${doc.title}\" 吗？此操作不可撤销。`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        console.log('>>> Vue component: Calling apiDeleteDocument for ID:', doc.id); // Log before API call\n        await apiDeleteDocument(doc.id) // MODIFIED: Use imported and renamed apiDeleteDocument\n        \n        ElMessage.success('文档删除成功')\n        fetchDocuments()\n        fetchCategories() // 更新分类文档计数\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除文档失败:', error)\n          // 使用更安全的错误消息提取\n          const errorMessage = error?.response?.data?.detail || error?.message || '未知错误';\n          ElMessage.error('删除文档失败: ' + errorMessage);\n        }\n      }\n    }\n    \n    // 获取文件图标\n    const getFileIcon = (fileType) => {\n      const extension = fileType ? fileType.toLowerCase() : '';\n      const iconMap = {\n        pdf: Document,\n        doc: Document,\n        docx: Document,\n        xls: DataAnalysis,\n        xlsx: DataAnalysis,\n        ppt: Tickets,\n        pptx: Tickets,\n        png: PictureFilled,\n        jpg: PictureFilled,\n        jpeg: PictureFilled,\n        gif: PictureFilled,\n        svg: PictureFilled,\n        img: PictureFilled,\n        txt: Files,\n        md: Files,\n        other: Files\n      };\n      return iconMap[extension] || Files;\n    };\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      })\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (!sizeInKB) return '0 KB'\n      \n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取标签列表\n    const getTagsList = (tags) => {\n      if (!tags) return []\n      if (Array.isArray(tags)) return tags\n      return tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n    }\n    \n    // 处理构建完成\n    const handleBuildCompleted = () => {\n      // 刷新文档列表\n      fetchDocuments()\n      fetchCategories()\n      ElMessage.success('知识库构建完成，现在可以使用智能问答功能了！')\n    }\n\n    // 处理构建失败\n    const handleBuildFailed = (error) => {\n      console.error('知识库构建失败:', error)\n      ElMessage.error('知识库构建失败，请检查日志或联系管理员')\n    }\n    \n    // 格式化颜色值，确保不超过20个字符\n    const formatColorValue = (color) => {\n      if (color && color.length > 20) {\n        // 如果是带透明度的颜色值(rgba)，则去除透明度，转为hex格式\n        if (color.startsWith('rgba')) {\n          const hexColor = color.replace(/rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),[^)]+\\)/, (match, r, g, b) => {\n            const toHex = (c) => {\n              const hex = parseInt(c).toString(16);\n              return hex.length === 1 ? '0' + hex : hex;\n            };\n            return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n          });\n          categoryForm.color = hexColor.substring(0, 20);\n        } else {\n          // 如果是其他格式，直接截断\n          categoryForm.color = color.substring(0, 20);\n        }\n        console.log(`颜色值已格式化: ${color} -> ${categoryForm.color}`);\n      }\n    };\n    \n    // 生命周期钩子\n    onMounted(() => {\n      // 添加加载状态和错误处理\n      Promise.all([\n        fetchCategories().catch(err => {\n          console.error('初始化加载分类失败:', err);\n          ElMessage.error('加载知识库分类失败，请稍后重试');\n          return [];\n        }),\n        fetchDocuments().catch(err => {\n          console.error('初始化加载文档失败:', err);\n          ElMessage.error('加载知识库文档失败，请稍后重试');\n          return [];\n        })\n      ]).finally(() => {\n        // 初始化完成，不需要轮询\n        // pollBuildStatus();\n      });\n    })\n    \n    onBeforeUnmount(() => {\n      // 无需清除，因为没有设置轮询\n      // if (pollingInterval) {\n      //   clearInterval(pollingInterval)\n      // }\n    })\n    \n    return {\n      searchQuery,\n      selectedCategory,\n      categories,\n      documents,\n      filters,\n      currentPage,\n      pageSize,\n      totalDocs,\n      uploadVisible,\n      uploadForm,\n      uploadFormRef,\n      uploadRef,\n      uploadRules,\n      uploading,\n      loading,\n      viewMode,\n      sortOrder,\n      showCategoryDialog,\n      showAddCategoryForm,\n      editingCategory,\n      categoryForm,\n      categoryLoading,\n      showChunksDialog,\n      selectedDocument,\n      documentChunks,\n      chunksLoading,\n      isAdmin,\n      currentCategoryName,\n      processingCount,\n      \n      // 图标\n      Search,\n      Upload,\n      FolderAdd,\n      View,\n      Download,\n      More,\n      Share,\n      Edit,\n      EditPen,\n      FolderOpened,\n      Star,\n      Delete,\n      Document,\n      Files,\n      Tickets,\n      DataAnalysis,\n      PictureFilled,\n      UploadFilled,\n      Loading,\n      List,\n      Grid,\n      Crop,\n      Plus,\n      InfoFilled,\n      Clock,\n      User,\n      \n      // 方法\n      selectCategory,\n      handleSearch,\n      applyFilters,\n      getFileIcon,\n      formatDate,\n      formatFileSize,\n      getTagsList,\n      previewDocument,\n      downloadDocument,\n      shareDocument,\n      editDocument,\n      deleteDocument,\n      handleFileChange,\n      handleRemove,\n      beforeUpload,\n      handleUploadError,\n      submitUpload,\n      handlePageChange,\n      handleSizeChange,\n      showDocumentChunks,\n      editCategory,\n      handleDeleteCategory,\n      saveCategoryForm,\n      cancelCategoryForm,\n      resetCategoryForm,\n      buildingVisible,\n      handleBuildCompleted,\n      handleBuildFailed,\n      resetUploadForm,\n      handleCloseUploadDialog,\n      openUploadDialog,\n      handleCancelUpload,\n      formatColorValue\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.knowledge-container {\n  padding: 20px;\n  background-color: #f7f8fa;\n  min-height: 100vh;\n}\n\n.row {\n  display: flex;\n  gap: 20px;\n}\n\n.col-lg-3 {\n  flex: 0 0 280px;\n  width: 280px;\n}\n\n.col-lg-9 {\n  flex: 1;\n  min-width: 0;\n}\n\n.category-card {\n  border: none;\n  border-radius: 8px;\n  padding: 16px;\n  background-color: #fff;\n  height: 100%;\n}\n\n.search-box {\n  margin-bottom: 20px;\n}\n\n.category-list .category-item {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s ease, color 0.2s ease;\n  margin-bottom: 8px;\n\n.category-icon {\n    width: 32px;\n    height: 32px;\n    border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n    margin-right: 12px;\n    .el-icon {\n      color: white !important;\n    }\n}\n\n.category-name {\n    flex-grow: 1;\n  font-weight: 500;\n}\n\n.category-count {\n  font-size: 12px;\n    color: #909399;\n    background-color: #e9e9eb;\n    padding: 2px 6px;\n    border-radius: 10px;\n  }\n\n  &:hover {\n    background-color: #f2f6fc;\n  }\n\n  &.active {\n    background-color: #ecf5ff;\n    color: #409eff;\n    .category-count {\n      background-color: #d9ecff;\n      color: #409eff;\n    }\n  }\n}\n\n.add-category-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.filter-section {\n  margin-top: 24px;\n  h6 {\n    font-size: 14px;\n    color: #606266;\n    margin-bottom: 12px;\n  }\n.filter-group {\n    margin-bottom: 16px;\n}\n.filter-options {\n    .el-checkbox, .el-radio {\n      display: block;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  .page-title {\n    font-size: 28px;\n    font-weight: 600;\n    color: #303133;\n  }\n  .header-actions {\n  display: flex;\n    gap: 12px;\n  }\n}\n\n.document-container-card {\n  border: none;\n  border-radius: 8px;\n  background-color: #fff;\n  padding: 24px;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 60px 0;\n  .empty-icon {\n    font-size: 64px;\n    color: #c0c4cc;\n    margin-bottom: 20px;\n}\n  .empty-title {\n    font-size: 20px;\n    color: #303133;\n  margin-bottom: 10px;\n}\n  .empty-description {\n  color: #909399;\n  margin-bottom: 20px;\n}\n}\n\n.document-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n}\n\n.document-item-card {\n  border-radius: 12px;\n  border: 1px solid #eef2f7;\n  transition: all 0.3s ease;\n  background-color: #fff;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);\n}\n\n  .card-header {\n  display: flex;\n  align-items: center;\n    gap: 12px;\n    padding: 16px;\n    border-bottom: 1px solid #eef2f7;\n}\n\n  .file-icon {\n    flex-shrink: 0;\n    width: 40px;\n    height: 40px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n    font-size: 20px;\n    color: #fff;\n\n    &.file-icon-pdf { background-color: #f56c6c; }\n    &.file-icon-doc, &.file-icon-docx { background-color: #409eff; }\n    &.file-icon-xls, &.file-icon-xlsx { background-color: #67c23a; }\n    &.file-icon-ppt, &.file-icon-pptx { background-color: #e6a23c; }\n    &.file-icon-img, &.file-icon-jpg, &.file-icon-jpeg, &.file-icon-png, &.file-icon-gif, &.file-icon-svg { background-color: #909399; }\n    &.file-icon-txt, &.file-icon-md { background-color: #b1b3b8; }\n}\n\n  .document-title-block {\n    flex-grow: 1;\n    overflow: hidden;\n}\n\n  .document-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: #303133;\n    margin: 0;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;  \n  overflow: hidden;\n    text-overflow: ellipsis;\n    line-height: 1.4;\n}\n\n  .file-extension {\n    font-weight: 400;\n    color: #aab2bd;\n    font-size: 14px;\n    margin-left: 2px;\n}\n\n  .card-body {\n    padding: 16px;\n    flex-grow: 1;\n    min-height: 85px;\n  }\n  \n  .document-description {\n    font-size: 14px;\n    color: #606266;\n  line-height: 1.6;\n    margin: 0;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n  .card-footer {\n    margin-top: auto;\n    border-top: 1px solid #eef2f7;\n    padding: 10px 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n    background-color: #fcfdfe;\n}\n\n  .document-meta {\n    font-size: 13px;\n    color: #909399;\n  display: flex;\n  align-items: center;\n    gap: 6px;\n}\n\n  .card-actions {\n  display: flex;\n  align-items: center;\n    gap: 4px;\n  }\n}\n\n.pagination-wrapper {\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n}\n\n.category-dialog-content {\n  display: flex;\n  gap: 24px;\n\n  .category-list-section {\n    flex: 2;\n    border-right: 1px solid #f0f0f0;\n    padding-right: 24px;\n    min-width: 0;\n  }\n\n  .category-form-section {\n    flex: 3;\n    min-width: 0;\n  }\n\n  .section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 16px;\n\n    h5 {\n      margin: 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n  }\n\n  .category-items {\n    max-height: 400px;\n    overflow-y: auto;\n    padding-right: 8px; /* for scrollbar */\n  }\n\n  .category-list-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 8px;\n    border-radius: 6px;\n    margin-bottom: 8px;\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: #f7f8fa;\n    }\n\n    .category-info {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      flex-grow: 1;\n      min-width: 0;\n\n      .category-color {\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        flex-shrink: 0;\n      }\n\n      .category-name-section {\n        flex-grow: 1;\n        min-width: 0;\n\n        .category-name {\n          font-weight: 500;\n          color: #303133;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: block; // Ensures it takes its own line\n        }\n\n        .category-desc {\n          font-size: 12px;\n          color: #909399;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: block; // Ensures it takes its own line\n        }\n      }\n    }\n    \n    .category-details {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        flex-shrink: 0;\n        margin-left: 16px;\n    }\n\n    .category-count {\n      font-size: 13px;\n      color: #606266;\n      white-space: nowrap;\n      flex-shrink: 0;\n    }\n\n    .category-actions {\n      display: flex;\n      gap: 8px;\n      flex-shrink: 0;\n    }\n  }\n\n  .empty-categories {\n    text-align: center;\n    padding: 20px;\n  }\n}\n\n.category-form-section .el-form {\n  margin-top: 10px;\n}\n\n// 移除旧的、未使用的样式\n// .card-header-flex, .upload-zone, .document-list, .document-card, .pagination-container\n</style> "],"mappings":"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","ignoreList":[]}]}