{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue","mtime":1747457225194},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","reactive","computed","onMounted","onBeforeUnmount","ElMessage","ElMessageBox","axios","Search","Upload","FolderAdd","View","Download","More","Share","Edit","EditPen","FolderOpened","Star","Delete","Document","Files","Tickets","DataAnalysis","PictureFilled","UploadFilled","Loading","List","Grid","Crop","Plus","getCategories","getDocuments","getDocumentChunks","uploadDocument","deleteDocument","apiDeleteDocument","deleteCategory","updateCategory","addCategory","KnowledgeBuilder","name","components","setup","API_URL","searchQuery","selectedCategory","currentPage","pageSize","uploadVisible","showCategoryDialog","showAddCategoryForm","showChunksDialog","editingCategory","viewMode","sortOrder","categoryLoading","loading","uploading","chunksLoading","isAdmin","selectedDocument","documentChunks","uploadFormRef","uploadRef","totalDocs","uploadForm","title","description","file","category","tags","chunk_size","chunk_overlap","is_public","uploadRules","required","message","trigger","categoryForm","id","icon","color","filters","types","pdf","doc","xls","ppt","img","txt","status","date","dateRange","categories","document_count","documents","currentCategoryName","value","find","cat","processingCount","filter","length","buildingVisible","fetchCategories","console","log","response","categoryList","results","Array","isArray","possibleArrayFields","field","grandTotalAllDocuments","allDocsResponse","page","page_size","Object","prototype","hasOwnProperty","call","count","warn","docError","error","allCategory","warning","data","fetchDocuments","params","ordering","search","selectedTypes","type","selected","entries","push","file_type","join","now","Date","startDate","setHours","setDate","getDate","getDay","endDate","created_after","formatDateForAPI","created_before","total","possibleDocuments","values","item","fetchDocumentChunks","documentId","handlePageChange","handleSizeChange","size","selectCategory","categoryId","handleSearch","applyFilters","handleFileChange","raw","maxSizeInBytes","fileName","ext","slice","lastIndexOf","toLowerCase","allowedFileTypes","includes","clearFiles","split","handleRemove","_uploadForm$file","_uploadForm$file$name","fileNameWithoutExt","beforeUpload","handleUploadError","submitUpload","validate","valid","formData","FormData","append","JSON","stringify","toString","fileInFormData","get","success","uploadedFileTitle","resetUploadForm","attempts","maxAttempts","pollInterval","poll","setInterval","documentsResponse","undefined","foundDoc","clearInterval","info","pollError","errorMsg","detail","substring","showDocumentChunks","editCategory","handleDeleteCategory","confirm","confirmButtonText","cancelButtonText","_error$response","_error$response$data","saveCategoryForm","newCategoryId","resetCategoryForm","cancelCategoryForm","resetFields","handleCancelUpload","handleCloseUploadDialog","done","openUploadDialog","previewDocument","catch","err","window","open","file_url","downloadDocument","responseType","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","shareDocument","editDocument","_error$response2","_error$response2$data","errorMessage","getFileIcon","iconMap","other","formatDate","dateString","toLocaleDateString","year","month","day","toISOString","formatFileSize","sizeInKB","toFixed","getTagsList","map","tag","trim","handleBuildCompleted","handleBuildFailed","Promise","all","finally"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-container\">\n    <div class=\"row\">\n      <!-- 左侧导航 -->\n      <div class=\"col-lg-3\">\n        <el-card class=\"category-card\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索文档...\"\n              clearable\n              :prefix-icon=\"Search\"\n              @input=\"handleSearch\"\n            ></el-input>\n          </div>\n          \n          <div class=\"category-list\">\n            <div v-for=\"(category, index) in categories\" :key=\"category.id || index\" \n                 class=\"category-item\" \n                 :class=\"{'active': selectedCategory === (category.id || index)}\"\n                 @click=\"selectCategory(category.id || index)\">\n              <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                <el-icon :size=\"20\" color=\"white\">\n                  <component :is=\"category.icon\"></component>\n                </el-icon>\n              </div>\n              <span class=\"category-name\">{{ category.name }}</span>\n              <span class=\"category-count\">{{ category.document_count || 0 }}</span>\n            </div>\n            \n            <el-button \n              v-if=\"isAdmin\"\n              type=\"primary\" \n              size=\"small\" \n              class=\"add-category-btn\"\n              @click=\"showCategoryDialog = true\">\n              <el-icon><Plus /></el-icon> 添加分类\n            </el-button>\n          </div>\n          \n          <div class=\"filter-section\">\n            <h6>筛选条件</h6>\n            <div class=\"filter-group\">\n              <h6>文件类型</h6>\n              <div class=\"filter-options\">\n                <el-checkbox v-model=\"filters.types.pdf\" @change=\"applyFilters\">PDF文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.doc\" @change=\"applyFilters\">Word文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.xls\" @change=\"applyFilters\">Excel表格</el-checkbox>\n                <el-checkbox v-model=\"filters.types.ppt\" @change=\"applyFilters\">PPT演示文稿</el-checkbox>\n                <el-checkbox v-model=\"filters.types.img\" @change=\"applyFilters\">图片</el-checkbox>\n                <el-checkbox v-model=\"filters.types.txt\" @change=\"applyFilters\">文本文件</el-checkbox>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>文档状态</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.status\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部状态</el-radio>\n                  <el-radio :value=\"'completed'\">处理完成</el-radio>\n                  <el-radio :value=\"'processing'\">处理中</el-radio>\n                  <el-radio :value=\"'pending'\">待处理</el-radio>\n                  <el-radio :value=\"'failed'\">处理失败</el-radio>\n                </el-radio-group>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>创建日期</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.date\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部时间</el-radio>\n                  <el-radio :value=\"'today'\">今天</el-radio>\n                  <el-radio :value=\"'week'\">本周</el-radio>\n                  <el-radio :value=\"'month'\">本月</el-radio>\n                  <el-radio :value=\"'custom'\">自定义</el-radio>\n                </el-radio-group>\n                <div v-if=\"filters.date === 'custom'\" class=\"mt-2\">\n                  <el-date-picker\n                    v-model=\"filters.dateRange\"\n                    type=\"daterange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    format=\"YYYY/MM/DD\"\n                    style=\"width: 100%\"\n                    @change=\"applyFilters\"\n                  ></el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </div>\n      \n      <!-- 右侧内容区 -->\n      <div class=\"col-lg-9\">\n        <el-card class=\"mb-3\">\n          <div class=\"card-header-flex\">\n            <div class=\"header-title\">\n              <span>{{ currentCategoryName }}</span>\n              <el-tag v-if=\"totalDocs > 0\" class=\"ml-2\">{{ totalDocs }}个文档</el-tag>\n            </div>\n            <div class=\"header-actions\">\n              <el-button type=\"primary\" @click=\"openUploadDialog\">\n                <el-icon><Upload /></el-icon> 上传文档\n              </el-button>\n              <el-button type=\"success\" @click=\"buildingVisible = true\">\n                <el-icon><Crop /></el-icon> 构建知识库\n              </el-button>\n              <el-button v-if=\"isAdmin\" @click=\"showCategoryDialog = true\">\n                <el-icon><FolderAdd /></el-icon> 管理分类\n              </el-button>\n            </div>\n          </div>\n          \n          <div class=\"upload-zone\" @click=\"openUploadDialog\" v-if=\"documents.length === 0\">\n            <el-icon class=\"upload-icon\"><Upload /></el-icon>\n            <div class=\"upload-text\">点击或拖拽文件到此处上传</div>\n            <div class=\"upload-hint\">支持单个或批量上传，最大支持10MB</div>\n          </div>\n          \n          <div v-else class=\"document-list\">\n            <div v-for=\"(doc, index) in documents\" :key=\"index\" class=\"document-card\">\n              <div class=\"document-icon\" :class=\"'icon-' + doc.type\">\n                <component :is=\"getFileIcon(doc.type)\"></component>\n              </div>\n              <div class=\"document-content\">\n                <div class=\"document-title\">{{ doc.title }}</div>\n                <div class=\"document-info\">\n                  <span>{{ doc.creator }} · {{ doc.date }}</span>\n                  <div class=\"document-tags\">\n                    <span v-for=\"(tag, i) in doc.tags\" :key=\"i\" class=\"tag\">{{ tag }}</span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"document-actions\">\n                <el-button circle size=\"small\" @click.stop=\"previewDocument(doc)\">\n                  <el-icon><View /></el-icon>\n                </el-button>\n                <el-button circle size=\"small\" @click.stop=\"downloadDocument(doc)\">\n                  <el-icon><Download /></el-icon>\n                </el-button>\n                <el-dropdown trigger=\"click\" :teleported=\"true\">\n                  <el-button circle size=\"small\">\n                    <el-icon><More /></el-icon>\n                  </el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                      <el-dropdown-item @click=\"shareDocument(doc)\">\n                        <el-icon><Share /></el-icon> 分享\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"editDocument(doc)\">\n                        <el-icon><Edit /></el-icon> 编辑\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"renameDocument(doc)\">\n                        <el-icon><EditPen /></el-icon> 重命名\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"moveDocument(doc)\">\n                        <el-icon><FolderOpened /></el-icon> 移动到\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"starDocument(doc)\">\n                        <el-icon><Star /></el-icon> 收藏\n                      </el-dropdown-item>\n                      <el-dropdown-item divided @click=\"deleteDocument(doc)\">\n                        <el-icon><Delete /></el-icon> 删除\n                      </el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              v-if=\"documents.length > 0\"\n              background\n              layout=\"sizes, prev, pager, next, total\"\n              :total=\"totalDocs\"\n              :page-size=\"pageSize\"\n              :page-sizes=\"[10, 20, 50, 100]\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              @size-change=\"handleSizeChange\"\n            ></el-pagination>\n          </div>\n        </el-card>\n      </div>\n    </div>\n    \n    <!-- 文件上传对话框 -->\n    <el-dialog\n      v-model=\"uploadVisible\"\n      title=\"上传文档\"\n      width=\"500px\"\n      :before-close=\"handleCloseUploadDialog\"\n    >\n      <el-form ref=\"uploadFormRef\" :model=\"uploadForm\" :rules=\"uploadRules\">\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"uploadForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"uploadForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"文档文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"javascript:void(0);\"\n            :auto-upload=\"false\"\n            :on-change=\"handleFileChange\"\n            :on-remove=\"handleRemove\"\n            :limit=\"1\"\n            :before-upload=\"beforeUpload\"\n            :on-error=\"handleUploadError\"\n            ref=\"uploadRef\"\n          >\n            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            <div class=\"el-upload__text\">\n              拖拽文件到此处或<em>点击上传</em>\n            </div>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                <strong>仅支持</strong>上传 txt, pdf, doc, docx, md, ppt, pptx, xls, xlsx 格式文件，单个文件不超过10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCancelUpload\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">上传</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"showCategoryDialog\"\n      title=\"分类管理\"\n      width=\"650px\"\n    >\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n          <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button>\n          </div>\n          \n          <div v-if=\"categoryLoading\" class=\"text-center p-4\">\n            <el-icon class=\"is-loading\"><Loading /></el-icon> 加载中...\n          </div>\n          \n          <div v-else-if=\"categories.length <= 1\" class=\"empty-categories\">\n            <el-empty description=\"\" />\n          </div>\n          \n          <div v-else class=\"category-items\">\n            <div v-for=\"(category, index) in categories.filter(c => c.id !== 'all')\" :key=\"index\" class=\"category-list-item\">\n              <div class=\"category-info\">\n                <div class=\"category-color\" :style=\"{ backgroundColor: category.color }\"></div>\n                <div class=\"category-name-section\">\n                  <span class=\"category-name\">{{ category.name }}</span>\n                  <span class=\"category-desc\">{{ category.description }}</span>\n                </div>\n                <span class=\"category-count\">{{ category.document_count || 0 }}个文档</span>\n              </div>\n              \n              <div class=\"category-actions\">\n                <el-button type=\"primary\" size=\"small\" plain @click=\"editCategory(category)\">\n                  <el-icon><Edit /></el-icon>\n                </el-button>\n                <el-button type=\"danger\" size=\"small\" plain @click=\"handleDeleteCategory(category)\">\n                  <el-icon><Delete /></el-icon>\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAddCategoryForm\" class=\"category-form-section\">\n          <div class=\"section-header\">\n            <h5>{{ editingCategory ? '编辑分类' : '新增分类' }}</h5>\n            <el-button size=\"small\" @click=\"cancelCategoryForm\">\n              取消\n            </el-button>\n          </div>\n          \n          <el-form :model=\"categoryForm\" label-width=\"80px\">\n            <el-form-item label=\"分类名称\" required>\n              <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"分类描述\">\n              <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"2\" placeholder=\"请输入分类描述\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"图标\">\n              <el-select v-model=\"categoryForm.icon\" placeholder=\"选择图标\" style=\"width: 100%\">\n                <el-option value=\"Document\" label=\"文档\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Document /></el-icon> <span class=\"ml-2\">文档</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Files\" label=\"文件夹\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Files /></el-icon> <span class=\"ml-2\">文件夹</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Tickets\" label=\"票据\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Tickets /></el-icon> <span class=\"ml-2\">票据</span>\n                  </div>\n                </el-option>\n                <el-option value=\"DataAnalysis\" label=\"数据分析\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><DataAnalysis /></el-icon> <span class=\"ml-2\">数据分析</span>\n                  </div>\n                </el-option>\n                <el-option value=\"PictureFilled\" label=\"图片\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><PictureFilled /></el-icon> <span class=\"ml-2\">图片</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"颜色\">\n              <el-color-picker v-model=\"categoryForm.color\" show-alpha></el-color-picker>\n              <span class=\"ml-2\">{{ categoryForm.color }}</span>\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\n              <el-button @click=\"cancelCategoryForm\">取消</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 知识库构建对话框组件 -->\n    <KnowledgeBuilder \n      v-model=\"buildingVisible\"\n      @build-completed=\"handleBuildCompleted\"\n      @build-failed=\"handleBuildFailed\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onBeforeUnmount } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\nimport { \n  Search, Upload, FolderAdd, View, Download, More, Share, \n  Edit, EditPen, FolderOpened, Star, Delete, Document, \n  Files, Tickets, DataAnalysis, PictureFilled, UploadFilled,\n  Loading, List, Grid, Crop, Plus\n} from '@element-plus/icons-vue'\nimport { getCategories, getDocuments, getDocumentChunks, uploadDocument, deleteDocument as apiDeleteDocument, deleteCategory, updateCategory, addCategory } from '@/api/knowledge'\nimport KnowledgeBuilder from '@/components/KnowledgeBuilder.vue'\n\nexport default {\n  name: 'Knowledge',\n  components: {\n    KnowledgeBuilder\n  },\n  setup() {\n    const API_URL = '/api/knowledge'\n    \n    // 状态变量\n    const searchQuery = ref('')\n    const selectedCategory = ref('all')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const uploadVisible = ref(false)\n    const showCategoryDialog = ref(false)\n    const showAddCategoryForm = ref(false)\n    const showChunksDialog = ref(false)\n    const editingCategory = ref(null)\n    const viewMode = ref('list')\n    const sortOrder = ref('-created_at')\n    const categoryLoading = ref(false)\n    const loading = ref(false)\n    const uploading = ref(false)\n    const chunksLoading = ref(false)\n    const isAdmin = ref(true) // 实际应用中从用户会话获取\n    const selectedDocument = ref(null)\n    const documentChunks = ref([])\n    const uploadFormRef = ref(null)\n    const uploadRef = ref(null)\n    const totalDocs = ref(0)\n    \n    // 上传表单\n    const uploadForm = reactive({\n      title: '',\n      description: '',\n      file: null,\n      category: null,\n      tags: '',\n      chunk_size: 500,\n      chunk_overlap: 50,\n      is_public: true\n    })\n    \n    // 上传表单验证规则\n    const uploadRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' }\n      ],\n      file: [\n        { required: true, message: '请上传文件', trigger: 'change' }\n      ]\n    }\n    \n    // 分类表单\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      icon: 'Document',\n      color: '#409EFF'\n    })\n    \n    // 筛选条件\n    const filters = reactive({\n      types: {\n        pdf: false,\n        doc: false,\n        xls: false,\n        ppt: false,\n        img: false,\n        txt: false\n      },\n      status: 'all',\n      date: 'all',\n      dateRange: []\n    })\n    \n    // 知识分类\n    const categories = ref([\n      { id: 'all', name: '全部文档', icon: 'Files', color: '#007bff', document_count: 0 }\n    ])\n    \n    // 文档列表\n    const documents = ref([])\n    \n    // 计算属性\n    const currentCategoryName = computed(() => {\n      const category = categories.value.find(cat => cat.id === selectedCategory.value)\n      return category ? category.name : '全部文档'\n    })\n    \n    const processingCount = computed(() => {\n      return documents.value.filter(doc => doc.status === 'processing').length\n    })\n    \n    // 知识库构建相关状态\n    const buildingVisible = ref(false)\n    \n    // 方法\n    const fetchCategories = async () => {\n      categoryLoading.value = true\n      console.log('开始获取知识库分类...')\n      try {\n        // console.log('请求URL:', `${API_URL}/categories/`) // 已被实际API调用取代\n        const response = await getCategories() // API call for specific categories\n        console.log('获取分类响应:', response)\n        \n        let categoryList = []\n        \n        // 处理不同格式的响应 (for specific categories)\n        if (response) {\n          if (response.results && Array.isArray(response.results)) {\n            categoryList = response.results\n          } \n          else if (Array.isArray(response)) {\n            categoryList = response\n          } \n          else if (typeof response === 'object') {\n            const possibleArrayFields = ['data', 'categories', 'items'];\n            for (const field of possibleArrayFields) {\n              if (response[field] && Array.isArray(response[field])) {\n                categoryList = response[field];\n                break;\n              }\n            }\n          }\n        }\n\n        // Fetch the grand total of all documents\n        let grandTotalAllDocuments = 0;\n        try {\n          // Lightweight request to get the total count of all documents\n          const allDocsResponse = await getDocuments({ page: 1, page_size: 1 }); \n          if (allDocsResponse && Object.prototype.hasOwnProperty.call(allDocsResponse, 'count')) {\n            grandTotalAllDocuments = allDocsResponse.count;\n            console.log('获取到全部文档总数:', grandTotalAllDocuments);\n          } else {\n            console.warn('未能从 getDocuments 响应中获取总数 count:', allDocsResponse);\n          }\n        } catch (docError) {\n          console.error('获取全部文档总数失败:', docError);\n          // 保留 grandTotalAllDocuments = 0 或根据需要处理错误\n        }\n        \n        // 创建 \"全部文档\" 分类\n        const allCategory = { \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: grandTotalAllDocuments // 使用获取到的真实总数\n        }\n        \n        if (categoryList && categoryList.length > 0) {\n          console.log('找到分类数据，数量:', categoryList.length);\n          // 不再通过累加其他分类来计算 allCategory.document_count\n          categories.value = [allCategory, ...categoryList]\n        } else {\n          console.error('未找到有效的分类数据');\n          if (response && response.message) {\n            ElMessage.warning(response.message);\n          } else if (!response && !categoryList.length) { // Only show if response was truly empty and no list was parsed\n             // 删除警告消息\n          }\n          categories.value = [allCategory]; // 至少显示\"全部文档\"分类\n        }\n      } catch (error) {\n        console.error('获取分类失败:', error)\n        if (error.response) {\n          console.error('错误响应状态:', error.response.status)\n          console.error('错误响应数据:', error.response.data)\n        }\n        ElMessage.error('无法加载知识库分类，请检查网络连接或联系管理员')\n        // 确保至少有\"全部\"分类可显示\n        categories.value = [{ \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }];\n      } finally {\n        categoryLoading.value = false\n      }\n    }\n    \n    const fetchDocuments = async () => {\n      loading.value = true\n      try {\n        // 构建参数对象\n        const params = {\n          page: currentPage.value,\n          page_size: pageSize.value,\n          ordering: sortOrder.value\n        }\n        \n        // 添加筛选条件\n        if (selectedCategory.value && selectedCategory.value !== 'all') {\n          params.category = selectedCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        // 添加文件类型筛选\n        const selectedTypes = []\n        for (const [type, selected] of Object.entries(filters.types)) {\n          if (selected) selectedTypes.push(type)\n        }\n        if (selectedTypes.length > 0) {\n          params.file_type = selectedTypes.join(',')\n        }\n        \n        // 添加状态筛选\n        if (filters.status !== 'all') {\n          params.status = filters.status\n        }\n        \n        // 添加日期筛选\n        if (filters.date !== 'all') {\n          const now = new Date()\n          let startDate = new Date()\n          \n          if (filters.date === 'today') {\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'week') {\n            startDate.setDate(now.getDate() - now.getDay())\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'month') {\n            startDate.setDate(1)\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'custom' && filters.dateRange.length === 2) {\n            startDate = filters.dateRange[0]\n            const endDate = filters.dateRange[1]\n            params.created_after = formatDateForAPI(startDate)\n            params.created_before = formatDateForAPI(endDate)\n          } else {\n            params.created_after = formatDateForAPI(startDate)\n          }\n        }\n        \n        const response = await getDocuments(params)\n        if (response) {\n          console.log('获取文档响应:', response)\n          \n          // 处理不同格式的响应\n          if (response.results && Array.isArray(response.results)) {\n            // 分页格式的响应\n            documents.value = response.results\n            totalDocs.value = response.count || response.total || documents.value.length\n          } else if (Array.isArray(response)) {\n            // 数组格式的响应\n            documents.value = response\n            totalDocs.value = response.length\n          } else if (response.data && Array.isArray(response.data)) {\n            // 另一种常见的对象包装格式\n            documents.value = response.data\n            totalDocs.value = response.total || response.count || documents.value.length\n          } else if (typeof response === 'object') {\n            // 尝试提取可能的文档列表\n            const possibleDocuments = Object.values(response).filter(item => \n              item && typeof item === 'object' && ('title' in item || 'file' in item)\n            )\n            if (possibleDocuments.length > 0) {\n              documents.value = possibleDocuments\n              totalDocs.value = possibleDocuments.length\n            } else {\n              console.error('无法从响应中提取文档列表:', response)\n              documents.value = []\n              totalDocs.value = 0\n              ElMessage.warning('获取文档列表格式异常')\n            }\n          } else {\n            console.error('文档响应格式不支持:', typeof response, response)\n            documents.value = []\n            totalDocs.value = 0\n            ElMessage.warning('获取文档列表格式不支持')\n          }\n        } else {\n          documents.value = []\n          totalDocs.value = 0\n        }\n      } catch (error) {\n        console.error('获取文档失败:', error)\n        ElMessage.error('无法加载知识库文档')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const fetchDocumentChunks = async (documentId) => {\n      chunksLoading.value = true\n      try {\n        const response = await getDocumentChunks(documentId)\n        documentChunks.value = response\n      } catch (error) {\n        console.error('获取文档分块失败:', error)\n        ElMessage.error('无法加载文档分块数据')\n      } finally {\n        chunksLoading.value = false\n      }\n    }\n    \n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchDocuments()\n    }\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const selectCategory = (categoryId) => {\n      selectedCategory.value = categoryId\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const applyFilters = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleFileChange = (file) => {\n      console.log(\">>> handleFileChange: Received file object from el-upload:\", file);\n      if (file && file.raw) {\n        console.log(\">>> handleFileChange: file.raw (the actual File object):\", file.raw);\n        \n        // 检查文件大小是否为0，这会导致上传失败\n        if (file.raw.size === 0) {\n          ElMessage.error('文件大小为0，请选择有效文件');\n          return false;\n        }\n        \n        // 检查文件是否过大（例如超过10MB）\n        const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n        if (file.raw.size > maxSizeInBytes) {\n          ElMessage.error(`文件过大，最大支持${maxSizeInBytes / (1024 * 1024)}MB`);\n          return false;\n        }\n        \n        // 严格检查文件扩展名是否支持\n        const fileName = file.raw.name;\n        const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n        const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n        \n        if (!allowedFileTypes.includes(ext)) {\n          ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n          // 不支持的文件类型不应该更新uploadForm.file\n          uploadForm.file = null;\n          // 清除上传组件中显示的文件\n          if (uploadRef.value) {\n            uploadRef.value.clearFiles();\n          }\n          return false;\n        }\n        \n        // 仅在验证通过后设置文件\n        uploadForm.file = file.raw\n        console.log(\">>> handleFileChange: uploadForm.file after assignment:\", uploadForm.file, uploadForm.file ? `Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}` : 'No file');\n        uploadForm.title = uploadForm.title || file.name.split('.')[0];\n        \n        // 返回true表示验证通过\n        return true;\n      } else {\n        console.warn(\">>> handleFileChange: file.raw is not available. File:\", file);\n        return false;\n      }\n    }\n    \n    const handleRemove = () => {\n      console.log(\">>> handleRemove: File removed by user. Setting uploadForm.file to null.\");\n      uploadForm.file = null;\n      \n      // 如果标题是自动从文件名生成的，也清除标题\n      if (uploadForm.title && uploadForm.title.includes('.')) {\n        const fileNameWithoutExt = uploadForm.file?.name?.split('.')[0];\n        if (uploadForm.title === fileNameWithoutExt) {\n          uploadForm.title = '';\n        }\n      }\n    }\n    \n    const beforeUpload = (file) => {\n      // 获取文件扩展名\n      const fileName = file.name;\n      const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n      \n      // 允许的文件类型列表\n      const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n      \n      // 严格检查文件类型\n      if (!allowedFileTypes.includes(ext)) {\n        ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n        return false;\n      }\n      \n      // 检查文件大小\n      const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSizeInBytes) {\n        ElMessage.error(`文件大小超过限制，最大支持 ${maxSizeInBytes / (1024 * 1024)}MB`);\n        return false;\n      }\n      \n      // 检查文件是否为空\n      if (file.size === 0) {\n        ElMessage.error('文件为空，请选择有效文件');\n        return false;\n      }\n      \n      return true;\n    }\n    \n    const handleUploadError = (error) => {\n      console.error('上传错误:', error);\n      ElMessage.error('上传错误，请检查文件格式或网络连接');\n      // 移除错误文件\n      uploadForm.file = null;\n    }\n    \n    const submitUpload = async () => {\n      if (!uploadFormRef.value) return\n      \n      await uploadFormRef.value.validate(async (valid) => {\n        if (valid) {\n          uploading.value = true\n          \n          console.log(\">>> submitUpload: Current uploadForm.file before appending to FormData:\", uploadForm.file);\n          if (!uploadForm.file) {\n            console.warn(\">>> submitUpload: uploadForm.file is null or undefined before appending.\");\n            uploading.value = false;\n            ElMessage.warning(\"请先选择文件再上传\");\n            return;\n          }\n          \n          // 再次检查文件大小，确保不是空文件或损坏文件\n          if (uploadForm.file.size === 0) {\n            console.error(\">>> submitUpload: 文件大小为0，无法上传\");\n            uploading.value = false;\n            ElMessage.error(\"文件大小为0，请选择有效文件\");\n            return;\n          }\n          \n          console.log(`>>> submitUpload: uploadForm.file details - Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}`);\n          \n          // 创建formData对象，并添加文件和其他参数\n          const formData = new FormData()\n          formData.append('title', uploadForm.title)\n          formData.append('description', uploadForm.description)\n          formData.append('file', uploadForm.file) // Appending the file\n          \n          if (uploadForm.category) {\n            formData.append('category', uploadForm.category)\n            console.log(`>>> submitUpload: Attaching category to FormData: ${uploadForm.category}`)\n          } else {\n            console.log(\">>> submitUpload: No category selected (uploadForm.category is null/empty). Not attaching to FormData.\")\n          }\n          \n          formData.append('tags', JSON.stringify(uploadForm.tags))\n          formData.append('chunk_size', uploadForm.chunk_size.toString())\n          formData.append('chunk_overlap', uploadForm.chunk_overlap.toString())\n          formData.append('is_public', uploadForm.is_public.toString())\n          \n          // 再次检查formData中的文件是否正确\n          const fileInFormData = formData.get('file');\n          if (!fileInFormData || fileInFormData.size === 0) {\n            console.error(\">>> submitUpload: FormData中的文件无效或大小为0\");\n            uploading.value = false;\n            ElMessage.error(\"FormData处理文件失败，请重试\");\n            return;\n          }\n\n          try {\n            const response = await uploadDocument(formData) // Assuming uploadDocument returns the new document object or its ID\n            console.log(\">>> submitUpload: API Response from uploadDocument:\", response);\n\n            ElMessage.success('文档上传请求已发送，后台正在处理...')\n            uploading.value = false // 确保上传状态被重置\n            uploadVisible.value = false\n            const uploadedFileTitle = uploadForm.title; // Store title for polling check\n            resetUploadForm()\n\n            // Start polling for document status if response contains an ID or enough info\n            // For simplicity, we'll poll fetchDocuments and look for the title, assuming titles are reasonably unique for recent uploads.\n            // A more robust way is if backend returns the new document ID, and we poll a getDocumentById(id) endpoint.\n            // Or if the document object in fetchDocuments has a clear 'status' field (e.g., 'processing', 'completed').\n            \n            let attempts = 0;\n            const maxAttempts = 10; // Poll for max 30 seconds (10 attempts * 3s interval)\n            const pollInterval = 3000; // 3 seconds\n\n            const poll = setInterval(async () => {\n              attempts++;\n              console.log(`>>> Polling for document status (attempt ${attempts}/${maxAttempts})...`);\n              try {\n                // Fetch the list of documents, usually sorted by creation date descending\n                const documentsResponse = await getDocuments({ \n                  page: 1, \n                  page_size: 10, // Check recent documents\n                  ordering: '-created_at', \n                  category: selectedCategory.value || undefined, // Use current category or all if 'all'\n                  // search: uploadedFileTitle // Optionally, if backend supports search by title for recent items\n                });\n\n                let foundDoc = null;\n                if (documentsResponse && documentsResponse.results && documentsResponse.results.length > 0) {\n                  // Attempt to find the document by title. This is a simplification.\n                  // Ideally, backend returns ID and we poll for that ID, or a status field directly.\n                  foundDoc = documentsResponse.results.find(doc => doc.title === uploadedFileTitle);\n                  \n                  // MORE ROBUST CHECK: Assume doc object has a 'status' field from backend\n                  // Example: if (doc.status === 'completed') { ... }\n                  // For now, if we find it by title recently, we assume it might be processed or soon.\n                }\n\n                if (foundDoc) {\n                  // Let's assume if found by title, it's processed enough for a refresh.\n                  // Replace this with actual status check if backend provides 'status' field.\n                  console.log(`>>> Polling: Document \"${uploadedFileTitle}\" found (or assumed processed). Refreshing lists.`);\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.success(`文档 \"${uploadedFileTitle}\" 处理完毕并已刷新列表!`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                } else if (attempts >= maxAttempts) {\n                  console.log(\">>> Polling: Max attempts reached. Refreshing lists anyway.\");\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.info(`文档 \"${uploadedFileTitle}\" 可能仍在后台处理中，列表已刷新。`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                }\n              } catch (pollError) {\n                console.error(\">>> Polling error:\", pollError);\n                clearInterval(poll);\n                // Still refresh, as the document might be there despite polling error\n                fetchDocuments();\n                fetchCategories();\n                ElMessage.error('检查文档状态时出错，列表已刷新。');\n                // 确保所有状态正确重置\n                uploading.value = false;\n              }\n            }, pollInterval);\n\n          } catch (error) {\n            console.error('上传文档失败:', error)\n            uploading.value = false;\n            // 在上传失败时清除文件选择状态\n            if (uploadRef.value) {\n              uploadRef.value.clearFiles();\n            }\n            let errorMsg = '文档上传失败'\n            if (error.response && error.response.data) {\n              const data = error.response.data;\n              if (typeof data === 'string') errorMsg += ': ' + data;\n              else if (data.detail) errorMsg += ': ' + data.detail;\n              else if (data.message) errorMsg += ': ' + data.message;\n              else if (data.file && Array.isArray(data.file)) errorMsg += ': ' + data.file.join(', ');\n              // 处理特定的文件类型错误\n              else if (data.status === 'error' && data.message && data.message.includes('不支持的文件类型')) {\n                errorMsg = data.message; // 直接使用后端的错误消息\n              }\n              else if (typeof data === 'object') errorMsg += ': ' + JSON.stringify(data).substring(0, 100);\n            }\n            ElMessage.error(errorMsg);\n          }\n        } else {\n          console.log('error submit!! Form validation failed.');\n          uploading.value = false; // Ensure uploading is reset if validation fails\n          return false;\n        }\n      })\n    }\n    \n    const showDocumentChunks = async (doc) => {\n      selectedDocument.value = doc\n      showChunksDialog.value = true\n      await fetchDocumentChunks(doc.id)\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = category\n      categoryForm.id = category.id\n      categoryForm.name = category.name\n      categoryForm.description = category.description || ''\n      categoryForm.icon = category.icon || 'Document'\n      categoryForm.color = category.color || '#409EFF'\n      showAddCategoryForm.value = true // 显示编辑表单\n    }\n    \n    const handleDeleteCategory = async (category) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗？`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteCategory(category.id)\n        ElMessage.success('分类删除成功')\n        fetchCategories()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const saveCategoryForm = async () => {\n      console.log('保存分类表单被调用，模式:', editingCategory.value ? 'edit' : 'add')\n      showAddCategoryForm.value = false\n      if (editingCategory.value) {\n        console.log('尝试更新分类:', categoryForm)\n        if (!editingCategory.value.id) {\n            ElMessage.error('无法更新分类，未找到当前编辑的分类ID');\n            return;\n        }\n        try {\n          const response = await updateCategory(editingCategory.value.id, categoryForm)\n          console.log('更新分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类更新成功')\n            await fetchCategories() // 刷新分类列表\n            // 如果当前编辑的分类就是选中的分类，可能需要刷新文档列表\n            if (selectedCategory.value === (response.id || response.data.id)) {\n              await fetchDocuments();\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`更新分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`更新分类失败: ${response.detail}`)\n          }\n          else {\n            ElMessage.error('更新分类失败，响应格式不符合预期或无ID返回')\n          }\n        } catch (error) {\n          console.error('更新分类失败:', error)\n          ElMessage.error('更新分类失败，请检查网络或联系管理员')\n        }\n      } else {\n        console.log('尝试添加新分类:', categoryForm)\n        try {\n          const response = await addCategory(categoryForm)\n          console.log('添加分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类添加成功')\n            await fetchCategories() // 刷新分类列表\n            // 自动选中新创建的分类并刷新文档列表\n            const newCategoryId = response.id || response.data.id;\n            if (newCategoryId) {\n              selectedCategory.value = newCategoryId;\n              console.log(`新分类创建成功，自动选中新分类 ID: ${newCategoryId}`);\n              await fetchDocuments(); // 刷新文档列表以显示新选中的分类（初始为空）\n            } else {\n              console.warn(\"新创建的分类ID未找到，无法自动选中。\");\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`添加分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`添加分类失败: ${response.detail}`)\n          }\n           else {\n            ElMessage.error('添加分类失败，响应格式不符合预期或无ID返回')\n            console.error(\"添加分类失败，响应:\", response);\n          }\n        } catch (error) {\n          console.error('添加分类失败:', error)\n          ElMessage.error('添加分类失败，请检查网络或联系管理员')\n        }\n      }\n      resetCategoryForm()\n    }\n    \n    const cancelCategoryForm = () => {\n      showAddCategoryForm.value = false\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n      showAddCategoryForm.value = true\n    }\n    \n    const resetUploadForm = () => {\n      if (uploadFormRef.value) {\n        // 使用el-form的resetFields方法重置表单\n        uploadFormRef.value.resetFields(); \n      }\n      \n      // 手动重置所有uploadForm字段，确保全部清空\n      uploadForm.title = ''\n      uploadForm.description = ''\n      uploadForm.file = null\n      uploadForm.category = null // Explicitly reset category\n      uploadForm.tags = ''\n      uploadForm.is_public = true\n      uploadForm.chunk_size = 500 // 重置为初始默认值\n      uploadForm.chunk_overlap = 50 // 重置为初始默认值\n      \n      // 清除上传组件中的文件\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles();\n      }\n      \n      console.log(\">>> resetUploadForm: uploadForm和上传组件已完全重置\");\n    }\n    \n    const handleCancelUpload = () => {\n      // 如果正在上传，不允许关闭\n      if (uploading.value) {\n        ElMessage.warning('文件正在上传中，请等待上传完成');\n        return;\n      }\n      resetUploadForm();\n      uploadVisible.value = false;\n    }\n    \n    const handleCloseUploadDialog = (done) => {\n      handleCancelUpload();\n      done(); // 允许关闭对话框\n    }\n    \n    const openUploadDialog = () => {\n      resetUploadForm(); // Reset form first for a clean state\n      if (selectedCategory.value && selectedCategory.value !== 'all') {\n        uploadForm.category = selectedCategory.value;\n        console.log(`>>> openUploadDialog: Auto-selecting current category: ${selectedCategory.value}`);\n      } else {\n        uploadForm.category = null; // If 'all' or no category is selected, let user choose in dialog\n        console.log(\">>> openUploadDialog: No category auto-selected (current is 'all' or none).\");\n      }\n      uploadVisible.value = true;\n    };\n    \n    // 文件操作函数\n    const previewDocument = (doc) => {\n      if (doc.status !== 'completed') {\n        ElMessage.warning('文档正在处理中，暂时无法预览')\n        return\n      }\n      \n      // 增加查看计数\n      axios.get(`${API_URL}/documents/${doc.id}/`)\n        .catch(err => console.error('更新查看计数失败:', err))\n      \n      // 这里应该实现文档预览功能\n      window.open(doc.file_url, '_blank')\n    }\n    \n    const downloadDocument = async (doc) => {\n      try {\n        const response = await axios.get(`${API_URL}/documents/${doc.id}/download/`, {\n          responseType: 'blob'\n        })\n        \n        // 创建临时下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', doc.title)\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        \n        ElMessage.success('文档下载成功')\n      } catch (error) {\n        console.error('下载文档失败:', error)\n        ElMessage.error('下载文档失败')\n      }\n    }\n    \n    const shareDocument = (doc) => {\n      // 实现文档分享功能\n      console.log('准备分享文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的分享功能即将上线`)\n    }\n    \n    const editDocument = (doc) => {\n      // 实现文档编辑功能\n      console.log('准备编辑文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的编辑功能即将上线`)\n    }\n    \n    const deleteDocument = async (doc) => {\n      console.log('>>> Vue component: Attempting to delete document (local method):', doc); // Log entry\n      try {\n        await ElMessageBox.confirm(`确定要删除文档 \"${doc.title}\" 吗？此操作不可撤销。`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        console.log('>>> Vue component: Calling apiDeleteDocument for ID:', doc.id); // Log before API call\n        await apiDeleteDocument(doc.id) // MODIFIED: Use imported and renamed apiDeleteDocument\n        \n        ElMessage.success('文档删除成功')\n        fetchDocuments()\n        fetchCategories() // 更新分类文档计数\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除文档失败:', error)\n          // 使用更安全的错误消息提取\n          const errorMessage = error?.response?.data?.detail || error?.message || '未知错误';\n          ElMessage.error('删除文档失败: ' + errorMessage);\n        }\n      }\n    }\n    \n    // 获取文件图标\n    const getFileIcon = (type) => {\n      const iconMap = {\n        pdf: Document,\n        doc: Document,\n        xls: DataAnalysis,\n        ppt: Tickets,\n        img: PictureFilled,\n        txt: Files,\n        other: Files\n      }\n      return iconMap[type] || Document\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      })\n    }\n    \n    // 格式化日期为API格式\n    const formatDateForAPI = (date) => {\n      if (!date) return ''\n      return date.toISOString().split('T')[0]\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (!sizeInKB) return '0 KB'\n      \n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取标签列表\n    const getTagsList = (tags) => {\n      if (!tags) return []\n      if (Array.isArray(tags)) return tags\n      return tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n    }\n    \n    // 处理构建完成\n    const handleBuildCompleted = () => {\n      // 刷新文档列表\n      fetchDocuments()\n      fetchCategories()\n      ElMessage.success('知识库构建完成，现在可以使用智能问答功能了！')\n    }\n\n    // 处理构建失败\n    const handleBuildFailed = (error) => {\n      console.error('知识库构建失败:', error)\n      ElMessage.error('知识库构建失败，请检查日志或联系管理员')\n    }\n    \n    // 生命周期钩子\n    onMounted(() => {\n      // 添加加载状态和错误处理\n      Promise.all([\n        fetchCategories().catch(err => {\n          console.error('初始化加载分类失败:', err);\n          ElMessage.error('加载知识库分类失败，请稍后重试');\n          return [];\n        }),\n        fetchDocuments().catch(err => {\n          console.error('初始化加载文档失败:', err);\n          ElMessage.error('加载知识库文档失败，请稍后重试');\n          return [];\n        })\n      ]).finally(() => {\n        // 初始化完成，不需要轮询\n        // pollBuildStatus();\n      });\n    })\n    \n    onBeforeUnmount(() => {\n      // 无需清除，因为没有设置轮询\n      // if (pollingInterval) {\n      //   clearInterval(pollingInterval)\n      // }\n    })\n    \n    return {\n      searchQuery,\n      selectedCategory,\n      categories,\n      documents,\n      filters,\n      currentPage,\n      pageSize,\n      totalDocs,\n      uploadVisible,\n      uploadForm,\n      uploadFormRef,\n      uploadRef,\n      uploadRules,\n      uploading,\n      loading,\n      viewMode,\n      sortOrder,\n      showCategoryDialog,\n      showAddCategoryForm,\n      editingCategory,\n      categoryForm,\n      categoryLoading,\n      showChunksDialog,\n      selectedDocument,\n      documentChunks,\n      chunksLoading,\n      isAdmin,\n      currentCategoryName,\n      processingCount,\n      \n      // 图标\n      Search,\n      Upload,\n      FolderAdd,\n      View,\n      Download,\n      More,\n      Share,\n      Edit,\n      EditPen,\n      FolderOpened,\n      Star,\n      Delete,\n      Document,\n      Files,\n      Tickets,\n      DataAnalysis,\n      PictureFilled,\n      UploadFilled,\n      Loading,\n      List,\n      Grid,\n      Crop,\n      Plus,\n      \n      // 方法\n      selectCategory,\n      handleSearch,\n      applyFilters,\n      getFileIcon,\n      formatDate,\n      formatFileSize,\n      getTagsList,\n      previewDocument,\n      downloadDocument,\n      shareDocument,\n      editDocument,\n      deleteDocument,\n      handleFileChange,\n      handleRemove,\n      beforeUpload,\n      handleUploadError,\n      submitUpload,\n      handlePageChange,\n      handleSizeChange,\n      showDocumentChunks,\n      editCategory,\n      handleDeleteCategory,\n      saveCategoryForm,\n      cancelCategoryForm,\n      resetCategoryForm,\n      buildingVisible,\n      handleBuildCompleted,\n      handleBuildFailed,\n      resetUploadForm,\n      handleCloseUploadDialog,\n      openUploadDialog,\n      handleCancelUpload\n    }\n  }\n}\n</script>\n\n<style scoped>\n.knowledge-container {\n  padding: 20px;\n}\n\n.category-card {\n  height: calc(100vh - 150px);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.search-box {\n  margin-bottom: 20px;\n}\n\n.category-list {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 5px;\n  margin-bottom: 15px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.header-title {\n  font-weight: 600;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.header-title .el-tag {\n  margin-left: 10px;\n}\n\n.category-item {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  transition: all 0.2s;\n  color: #495057;\n  cursor: pointer;\n  background-color: #f8f9fa;\n}\n\n.category-item:hover {\n  background-color: #e9ecef;\n  transform: translateY(-2px);\n}\n\n.category-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n  box-shadow: 0 2px 6px rgba(0, 123, 255, 0.15);\n}\n\n.category-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n}\n\n.category-name {\n  font-weight: 500;\n  flex: 1;\n}\n\n.category-count {\n  background-color: #e9ecef;\n  border-radius: 15px;\n  padding: 2px 10px;\n  font-size: 12px;\n  color: #6c757d;\n}\n\n.add-category-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.filter-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #f0f0f0;\n  overflow-y: auto;\n}\n\n.filter-section h6 {\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: #495057;\n}\n\n.filter-group {\n  margin-bottom: 15px;\n}\n\n.filter-options {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.document-list {\n  margin-top: 20px;\n}\n\n.view-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.list-view {\n  margin-bottom: 20px;\n}\n\n.grid-view {\n  margin-bottom: 20px;\n}\n\n.document-card {\n  display: flex;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #fff;\n  margin-bottom: 15px;\n  transition: all 0.2s;\n  border: 1px solid #f0f0f0;\n  align-items: center;\n}\n\n.document-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-2px);\n}\n\n.document-card.processing {\n  background-color: #fff9e6;\n  border-color: #ffd04b;\n}\n\n.document-icon {\n  width: 45px;\n  height: 45px;\n  border-radius: 5px;\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  color: white;\n}\n\n.document-content {\n  flex: 1;\n}\n\n.document-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.document-title .el-tag {\n  margin-left: 10px;\n  font-weight: normal;\n}\n\n.document-info {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.document-meta {\n  display: flex;\n  gap: 15px;\n  margin-top: 5px;\n  color: #909399;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.document-tags {\n  margin-top: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.document-progress {\n  margin-top: 10px;\n  padding: 8px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.progress-info {\n  margin-top: 5px;\n  font-size: 12px;\n  color: #606266;\n}\n\n.document-actions {\n  display: flex;\n  gap: 5px;\n}\n\n.icon-pdf {\n  background-color: #dc3545;\n}\n\n.icon-doc {\n  background-color: #007bff;\n}\n\n.icon-xls {\n  background-color: #28a745;\n}\n\n.icon-ppt {\n  background-color: #fd7e14;\n}\n\n.icon-img {\n  background-color: #6f42c1;\n}\n\n.icon-txt {\n  background-color: #17a2b8;\n}\n\n.icon-other {\n  background-color: #6c757d;\n}\n\n.grid-card {\n  height: 220px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f0f0f0;\n  overflow: hidden;\n  transition: all 0.2s;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n}\n\n.grid-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-5px);\n}\n\n.grid-card-icon {\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 42px;\n}\n\n.grid-card-content {\n  padding: 12px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n}\n\n.grid-card-title {\n  font-weight: 500;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.grid-card-meta {\n  display: flex;\n  justify-content: space-between;\n  color: #909399;\n  font-size: 12px;\n  margin-bottom: 8px;\n}\n\n.grid-card-status {\n  margin-bottom: 8px;\n}\n\n.grid-card-actions {\n  margin-top: auto;\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n}\n\n.upload-zone {\n  border: 2px dashed #ced4da;\n  border-radius: 10px;\n  padding: 40px 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-top: 20px;\n}\n\n.upload-zone:hover {\n  border-color: #007bff;\n  background-color: #f8f9fa;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.upload-text {\n  font-size: 18px;\n  color: #495057;\n  margin-bottom: 10px;\n}\n\n.upload-hint {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 20px;\n}\n\n.upload-features {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  gap: 30px;\n}\n\n.feature-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #495057;\n}\n\n.feature-item .el-icon {\n  font-size: 32px;\n  margin-bottom: 8px;\n  color: #007bff;\n}\n\n.tag {\n  display: inline-block;\n  padding: 2px 10px;\n  background-color: #e9ecef;\n  border-radius: 15px;\n  font-size: 12px;\n  color: #495057;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.knowledge-status-bar {\n  margin-bottom: 15px;\n}\n\n.processing-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  color: #e6a23c;\n}\n\n.form-help-text {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.category-row {\n  display: flex;\n  align-items: center;\n}\n\n.category-color {\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n\n.dialog-add-section {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.chunks-container {\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n.chunk-item {\n  margin-bottom: 15px;\n  border: 1px solid #f0f0f0;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.chunk-header {\n  display: flex;\n  justify-content: space-between;\n  background-color: #f8f9fa;\n  padding: 10px 15px;\n}\n\n.chunk-index {\n  font-weight: 500;\n}\n\n.chunk-meta {\n  color: #909399;\n  font-size: 13px;\n}\n\n.chunk-content {\n  padding: 15px;\n  white-space: pre-wrap;\n  line-height: 1.6;\n}\n\n.category-dialog-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.section-header h5 {\n  margin: 0;\n  font-weight: 600;\n}\n\n.category-list-section {\n  margin-bottom: 20px;\n}\n\n.category-items {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.category-list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.category-list-item:hover {\n  background-color: #f0f2f5;\n  transform: translateY(-2px);\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.category-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 3px;\n  margin-right: 12px;\n}\n\n.category-name-section {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.category-name {\n  font-weight: 500;\n}\n\n.category-desc {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 2px;\n}\n\n.category-count {\n  font-size: 13px;\n  color: #606266;\n  margin-left: 10px;\n}\n\n.category-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.category-form-section {\n  padding: 15px;\n  border-radius: 6px;\n  background-color: #f8f9fa;\n  margin-top: 20px;\n}\n\n.empty-categories {\n  padding: 40px 0;\n  text-align: center;\n}\n</style> "],"mappings":";;;;;;;;AAgXA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAc,QAAS,KAAI;AACxE,SAASC,SAAS,EAAEC,YAAW,QAAS,cAAa;AACrD,OAAOC,KAAI,MAAO,OAAM;AACxB,SACEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EACtDC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EACnDC,KAAK,EAAEC,OAAO,EAAEC,YAAY,EAAEC,aAAa,EAAEC,YAAY,EACzDC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAG,QACzB,yBAAwB;AAC/B,SAASC,aAAa,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,cAAa,IAAKC,iBAAiB,EAAEC,cAAc,EAAEC,cAAc,EAAEC,WAAU,QAAS,iBAAgB;AACjL,OAAOC,gBAAe,MAAO,mCAAkC;AAE/D,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAI,gBAAe;;IAE/B;IACA,MAAMC,WAAU,GAAI7C,GAAG,CAAC,EAAE;IAC1B,MAAM8C,gBAAe,GAAI9C,GAAG,CAAC,KAAK;IAClC,MAAM+C,WAAU,GAAI/C,GAAG,CAAC,CAAC;IACzB,MAAMgD,QAAO,GAAIhD,GAAG,CAAC,EAAE;IACvB,MAAMiD,aAAY,GAAIjD,GAAG,CAAC,KAAK;IAC/B,MAAMkD,kBAAiB,GAAIlD,GAAG,CAAC,KAAK;IACpC,MAAMmD,mBAAkB,GAAInD,GAAG,CAAC,KAAK;IACrC,MAAMoD,gBAAe,GAAIpD,GAAG,CAAC,KAAK;IAClC,MAAMqD,eAAc,GAAIrD,GAAG,CAAC,IAAI;IAChC,MAAMsD,QAAO,GAAItD,GAAG,CAAC,MAAM;IAC3B,MAAMuD,SAAQ,GAAIvD,GAAG,CAAC,aAAa;IACnC,MAAMwD,eAAc,GAAIxD,GAAG,CAAC,KAAK;IACjC,MAAMyD,OAAM,GAAIzD,GAAG,CAAC,KAAK;IACzB,MAAM0D,SAAQ,GAAI1D,GAAG,CAAC,KAAK;IAC3B,MAAM2D,aAAY,GAAI3D,GAAG,CAAC,KAAK;IAC/B,MAAM4D,OAAM,GAAI5D,GAAG,CAAC,IAAI,GAAE;IAC1B,MAAM6D,gBAAe,GAAI7D,GAAG,CAAC,IAAI;IACjC,MAAM8D,cAAa,GAAI9D,GAAG,CAAC,EAAE;IAC7B,MAAM+D,aAAY,GAAI/D,GAAG,CAAC,IAAI;IAC9B,MAAMgE,SAAQ,GAAIhE,GAAG,CAAC,IAAI;IAC1B,MAAMiE,SAAQ,GAAIjE,GAAG,CAAC,CAAC;;IAEvB;IACA,MAAMkE,UAAS,GAAIjE,QAAQ,CAAC;MAC1BkE,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,GAAG;MACfC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE;IACb,CAAC;;IAED;IACA,MAAMC,WAAU,GAAI;MAClBR,KAAK,EAAE,CACL;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,EACvD;MACDT,IAAI,EAAE,CACJ;QAAEO,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAS;IAE1D;;IAEA;IACA,MAAMC,YAAW,GAAI9E,QAAQ,CAAC;MAC5B+E,EAAE,EAAE,IAAI;MACRvC,IAAI,EAAE,EAAE;MACR2B,WAAW,EAAE,EAAE;MACfa,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE;IACT,CAAC;;IAED;IACA,MAAMC,OAAM,GAAIlF,QAAQ,CAAC;MACvBmF,KAAK,EAAE;QACLC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE;MACP,CAAC;MACDC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;IACb,CAAC;;IAED;IACA,MAAMC,UAAS,GAAI9F,GAAG,CAAC,CACrB;MAAEgF,EAAE,EAAE,KAAK;MAAEvC,IAAI,EAAE,MAAM;MAAEwC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE,SAAS;MAAEa,cAAc,EAAE;IAAE,EAC/E;;IAED;IACA,MAAMC,SAAQ,GAAIhG,GAAG,CAAC,EAAE;;IAExB;IACA,MAAMiG,mBAAkB,GAAI/F,QAAQ,CAAC,MAAM;MACzC,MAAMoE,QAAO,GAAIwB,UAAU,CAACI,KAAK,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACpB,EAAC,KAAMlC,gBAAgB,CAACoD,KAAK;MAC/E,OAAO5B,QAAO,GAAIA,QAAQ,CAAC7B,IAAG,GAAI,MAAK;IACzC,CAAC;IAED,MAAM4D,eAAc,GAAInG,QAAQ,CAAC,MAAM;MACrC,OAAO8F,SAAS,CAACE,KAAK,CAACI,MAAM,CAAChB,GAAE,IAAKA,GAAG,CAACK,MAAK,KAAM,YAAY,CAAC,CAACY,MAAK;IACzE,CAAC;;IAED;IACA,MAAMC,eAAc,GAAIxG,GAAG,CAAC,KAAK;;IAEjC;IACA,MAAMyG,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClCjD,eAAe,CAAC0C,KAAI,GAAI,IAAG;MAC3BQ,OAAO,CAACC,GAAG,CAAC,cAAc;MAC1B,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM7E,aAAa,CAAC,GAAE;QACvC2E,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ;QAE/B,IAAIC,YAAW,GAAI,EAAC;;QAEpB;QACA,IAAID,QAAQ,EAAE;UACZ,IAAIA,QAAQ,CAACE,OAAM,IAAKC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,OAAO,CAAC,EAAE;YACvDD,YAAW,GAAID,QAAQ,CAACE,OAAM;UAChC,OACK,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;YAChCC,YAAW,GAAID,QAAO;UACxB,OACK,IAAI,OAAOA,QAAO,KAAM,QAAQ,EAAE;YACrC,MAAMK,mBAAkB,GAAI,CAAC,MAAM,EAAE,YAAY,EAAE,OAAO,CAAC;YAC3D,KAAK,MAAMC,KAAI,IAAKD,mBAAmB,EAAE;cACvC,IAAIL,QAAQ,CAACM,KAAK,KAAKH,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACM,KAAK,CAAC,CAAC,EAAE;gBACrDL,YAAW,GAAID,QAAQ,CAACM,KAAK,CAAC;gBAC9B;cACF;YACF;UACF;QACF;;QAEA;QACA,IAAIC,sBAAqB,GAAI,CAAC;QAC9B,IAAI;UACF;UACA,MAAMC,eAAc,GAAI,MAAMpF,YAAY,CAAC;YAAEqF,IAAI,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAE,CAAC,CAAC;UACrE,IAAIF,eAAc,IAAKG,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,eAAe,EAAE,OAAO,CAAC,EAAE;YACrFD,sBAAqB,GAAIC,eAAe,CAACO,KAAK;YAC9CjB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEQ,sBAAsB,CAAC;UACnD,OAAO;YACLT,OAAO,CAACkB,IAAI,CAAC,iCAAiC,EAAER,eAAe,CAAC;UAClE;QACF,EAAE,OAAOS,QAAQ,EAAE;UACjBnB,OAAO,CAACoB,KAAK,CAAC,aAAa,EAAED,QAAQ,CAAC;UACtC;QACF;;QAEA;QACA,MAAME,WAAU,GAAI;UAClB/C,EAAE,EAAE,KAAK;UACTvC,IAAI,EAAE,MAAM;UACZwC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,SAAS;UAChBa,cAAc,EAAEoB,sBAAqB,CAAE;QACzC;QAEA,IAAIN,YAAW,IAAKA,YAAY,CAACN,MAAK,GAAI,CAAC,EAAE;UAC3CG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEE,YAAY,CAACN,MAAM,CAAC;UAC9C;UACAT,UAAU,CAACI,KAAI,GAAI,CAAC6B,WAAW,EAAE,GAAGlB,YAAY;QAClD,OAAO;UACLH,OAAO,CAACoB,KAAK,CAAC,YAAY,CAAC;UAC3B,IAAIlB,QAAO,IAAKA,QAAQ,CAAC/B,OAAO,EAAE;YAChCxE,SAAS,CAAC2H,OAAO,CAACpB,QAAQ,CAAC/B,OAAO,CAAC;UACrC,OAAO,IAAI,CAAC+B,QAAO,IAAK,CAACC,YAAY,CAACN,MAAM,EAAE,CAAE;YAC7C;UAAA;UAEHT,UAAU,CAACI,KAAI,GAAI,CAAC6B,WAAW,CAAC,EAAE;QACpC;MACF,EAAE,OAAOD,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9B,IAAIA,KAAK,CAAClB,QAAQ,EAAE;UAClBF,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAClB,QAAQ,CAACjB,MAAM;UAC9Ce,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAClB,QAAQ,CAACqB,IAAI;QAC9C;QACA5H,SAAS,CAACyH,KAAK,CAAC,yBAAyB;QACzC;QACAhC,UAAU,CAACI,KAAI,GAAI,CAAC;UAClBlB,EAAE,EAAE,KAAK;UACTvC,IAAI,EAAE,MAAM;UACZwC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,SAAS;UAChBa,cAAc,EAAE;QAClB,CAAC,CAAC;MACJ,UAAU;QACRvC,eAAe,CAAC0C,KAAI,GAAI,KAAI;MAC9B;IACF;IAEA,MAAMgC,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjCzE,OAAO,CAACyC,KAAI,GAAI,IAAG;MACnB,IAAI;QACF;QACA,MAAMiC,MAAK,GAAI;UACbd,IAAI,EAAEtE,WAAW,CAACmD,KAAK;UACvBoB,SAAS,EAAEtE,QAAQ,CAACkD,KAAK;UACzBkC,QAAQ,EAAE7E,SAAS,CAAC2C;QACtB;;QAEA;QACA,IAAIpD,gBAAgB,CAACoD,KAAI,IAAKpD,gBAAgB,CAACoD,KAAI,KAAM,KAAK,EAAE;UAC9DiC,MAAM,CAAC7D,QAAO,GAAIxB,gBAAgB,CAACoD,KAAI;QACzC;;QAEA;QACA,IAAIrD,WAAW,CAACqD,KAAK,EAAE;UACrBiC,MAAM,CAACE,MAAK,GAAIxF,WAAW,CAACqD,KAAI;QAClC;;QAEA;QACA,MAAMoC,aAAY,GAAI,EAAC;QACvB,KAAK,MAAM,CAACC,IAAI,EAAEC,QAAQ,KAAKjB,MAAM,CAACkB,OAAO,CAACtD,OAAO,CAACC,KAAK,CAAC,EAAE;UAC5D,IAAIoD,QAAQ,EAAEF,aAAa,CAACI,IAAI,CAACH,IAAI;QACvC;QACA,IAAID,aAAa,CAAC/B,MAAK,GAAI,CAAC,EAAE;UAC5B4B,MAAM,CAACQ,SAAQ,GAAIL,aAAa,CAACM,IAAI,CAAC,GAAG;QAC3C;;QAEA;QACA,IAAIzD,OAAO,CAACQ,MAAK,KAAM,KAAK,EAAE;UAC5BwC,MAAM,CAACxC,MAAK,GAAIR,OAAO,CAACQ,MAAK;QAC/B;;QAEA;QACA,IAAIR,OAAO,CAACS,IAAG,KAAM,KAAK,EAAE;UAC1B,MAAMiD,GAAE,GAAI,IAAIC,IAAI,CAAC;UACrB,IAAIC,SAAQ,GAAI,IAAID,IAAI,CAAC;UAEzB,IAAI3D,OAAO,CAACS,IAAG,KAAM,OAAO,EAAE;YAC5BmD,SAAS,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC/B,OAAO,IAAI7D,OAAO,CAACS,IAAG,KAAM,MAAM,EAAE;YAClCmD,SAAS,CAACE,OAAO,CAACJ,GAAG,CAACK,OAAO,CAAC,IAAIL,GAAG,CAACM,MAAM,CAAC,CAAC;YAC9CJ,SAAS,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC/B,OAAO,IAAI7D,OAAO,CAACS,IAAG,KAAM,OAAO,EAAE;YACnCmD,SAAS,CAACE,OAAO,CAAC,CAAC;YACnBF,SAAS,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;UAC/B,OAAO,IAAI7D,OAAO,CAACS,IAAG,KAAM,QAAO,IAAKT,OAAO,CAACU,SAAS,CAACU,MAAK,KAAM,CAAC,EAAE;YACtEwC,SAAQ,GAAI5D,OAAO,CAACU,SAAS,CAAC,CAAC;YAC/B,MAAMuD,OAAM,GAAIjE,OAAO,CAACU,SAAS,CAAC,CAAC;YACnCsC,MAAM,CAACkB,aAAY,GAAIC,gBAAgB,CAACP,SAAS;YACjDZ,MAAM,CAACoB,cAAa,GAAID,gBAAgB,CAACF,OAAO;UAClD,OAAO;YACLjB,MAAM,CAACkB,aAAY,GAAIC,gBAAgB,CAACP,SAAS;UACnD;QACF;QAEA,MAAMnC,QAAO,GAAI,MAAM5E,YAAY,CAACmG,MAAM;QAC1C,IAAIvB,QAAQ,EAAE;UACZF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ;;UAE/B;UACA,IAAIA,QAAQ,CAACE,OAAM,IAAKC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,OAAO,CAAC,EAAE;YACvD;YACAd,SAAS,CAACE,KAAI,GAAIU,QAAQ,CAACE,OAAM;YACjC7C,SAAS,CAACiC,KAAI,GAAIU,QAAQ,CAACe,KAAI,IAAKf,QAAQ,CAAC4C,KAAI,IAAKxD,SAAS,CAACE,KAAK,CAACK,MAAK;UAC7E,OAAO,IAAIQ,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;YAClC;YACAZ,SAAS,CAACE,KAAI,GAAIU,QAAO;YACzB3C,SAAS,CAACiC,KAAI,GAAIU,QAAQ,CAACL,MAAK;UAClC,OAAO,IAAIK,QAAQ,CAACqB,IAAG,IAAKlB,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACqB,IAAI,CAAC,EAAE;YACxD;YACAjC,SAAS,CAACE,KAAI,GAAIU,QAAQ,CAACqB,IAAG;YAC9BhE,SAAS,CAACiC,KAAI,GAAIU,QAAQ,CAAC4C,KAAI,IAAK5C,QAAQ,CAACe,KAAI,IAAK3B,SAAS,CAACE,KAAK,CAACK,MAAK;UAC7E,OAAO,IAAI,OAAOK,QAAO,KAAM,QAAQ,EAAE;YACvC;YACA,MAAM6C,iBAAgB,GAAIlC,MAAM,CAACmC,MAAM,CAAC9C,QAAQ,CAAC,CAACN,MAAM,CAACqD,IAAG,IAC1DA,IAAG,IAAK,OAAOA,IAAG,KAAM,QAAO,KAAM,OAAM,IAAKA,IAAG,IAAK,MAAK,IAAKA,IAAI,CACxE;YACA,IAAIF,iBAAiB,CAAClD,MAAK,GAAI,CAAC,EAAE;cAChCP,SAAS,CAACE,KAAI,GAAIuD,iBAAgB;cAClCxF,SAAS,CAACiC,KAAI,GAAIuD,iBAAiB,CAAClD,MAAK;YAC3C,OAAO;cACLG,OAAO,CAACoB,KAAK,CAAC,eAAe,EAAElB,QAAQ;cACvCZ,SAAS,CAACE,KAAI,GAAI,EAAC;cACnBjC,SAAS,CAACiC,KAAI,GAAI;cAClB7F,SAAS,CAAC2H,OAAO,CAAC,YAAY;YAChC;UACF,OAAO;YACLtB,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAE,OAAOlB,QAAQ,EAAEA,QAAQ;YACrDZ,SAAS,CAACE,KAAI,GAAI,EAAC;YACnBjC,SAAS,CAACiC,KAAI,GAAI;YAClB7F,SAAS,CAAC2H,OAAO,CAAC,aAAa;UACjC;QACF,OAAO;UACLhC,SAAS,CAACE,KAAI,GAAI,EAAC;UACnBjC,SAAS,CAACiC,KAAI,GAAI;QACpB;MACF,EAAE,OAAO4B,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BzH,SAAS,CAACyH,KAAK,CAAC,WAAW;MAC7B,UAAU;QACRrE,OAAO,CAACyC,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,MAAM0D,mBAAkB,GAAI,MAAOC,UAAU,IAAK;MAChDlG,aAAa,CAACuC,KAAI,GAAI,IAAG;MACzB,IAAI;QACF,MAAMU,QAAO,GAAI,MAAM3E,iBAAiB,CAAC4H,UAAU;QACnD/F,cAAc,CAACoC,KAAI,GAAIU,QAAO;MAChC,EAAE,OAAOkB,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChCzH,SAAS,CAACyH,KAAK,CAAC,YAAY;MAC9B,UAAU;QACRnE,aAAa,CAACuC,KAAI,GAAI,KAAI;MAC5B;IACF;IAEA,MAAM4D,gBAAe,GAAKzC,IAAI,IAAK;MACjCtE,WAAW,CAACmD,KAAI,GAAImB,IAAG;MACvBa,cAAc,CAAC;IACjB;IAEA,MAAM6B,gBAAe,GAAKC,IAAI,IAAK;MACjChH,QAAQ,CAACkD,KAAI,GAAI8D,IAAG;MACpBjH,WAAW,CAACmD,KAAI,GAAI;MACpBgC,cAAc,CAAC;IACjB;IAEA,MAAM+B,cAAa,GAAKC,UAAU,IAAK;MACrCpH,gBAAgB,CAACoD,KAAI,GAAIgE,UAAS;MAClCnH,WAAW,CAACmD,KAAI,GAAI;MACpBgC,cAAc,CAAC;IACjB;IAEA,MAAMiC,YAAW,GAAIA,CAAA,KAAM;MACzBpH,WAAW,CAACmD,KAAI,GAAI;MACpBgC,cAAc,CAAC;IACjB;IAEA,MAAMkC,YAAW,GAAIA,CAAA,KAAM;MACzBrH,WAAW,CAACmD,KAAI,GAAI;MACpBgC,cAAc,CAAC;IACjB;IAEA,MAAMmC,gBAAe,GAAKhG,IAAI,IAAK;MACjCqC,OAAO,CAACC,GAAG,CAAC,4DAA4D,EAAEtC,IAAI,CAAC;MAC/E,IAAIA,IAAG,IAAKA,IAAI,CAACiG,GAAG,EAAE;QACpB5D,OAAO,CAACC,GAAG,CAAC,0DAA0D,EAAEtC,IAAI,CAACiG,GAAG,CAAC;;QAEjF;QACA,IAAIjG,IAAI,CAACiG,GAAG,CAACN,IAAG,KAAM,CAAC,EAAE;UACvB3J,SAAS,CAACyH,KAAK,CAAC,gBAAgB,CAAC;UACjC,OAAO,KAAK;QACd;;QAEA;QACA,MAAMyC,cAAa,GAAI,EAAC,GAAI,IAAG,GAAI,IAAI,EAAE;QACzC,IAAIlG,IAAI,CAACiG,GAAG,CAACN,IAAG,GAAIO,cAAc,EAAE;UAClClK,SAAS,CAACyH,KAAK,CAAC,YAAYyC,cAAa,IAAK,IAAG,GAAI,IAAI,CAAC,IAAI,CAAC;UAC/D,OAAO,KAAK;QACd;;QAEA;QACA,MAAMC,QAAO,GAAInG,IAAI,CAACiG,GAAG,CAAC7H,IAAI;QAC9B,MAAMgI,GAAE,GAAID,QAAQ,CAACE,KAAK,CAACF,QAAQ,CAACG,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACvE,MAAMC,gBAAe,GAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;QAE1F,IAAI,CAACA,gBAAgB,CAACC,QAAQ,CAACL,GAAG,CAAC,EAAE;UACnCpK,SAAS,CAACyH,KAAK,CAAC,aAAa2C,GAAG,QAAQI,gBAAgB,CAACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;UAC1E;UACA1E,UAAU,CAACG,IAAG,GAAI,IAAI;UACtB;UACA,IAAIL,SAAS,CAACkC,KAAK,EAAE;YACnBlC,SAAS,CAACkC,KAAK,CAAC6E,UAAU,CAAC,CAAC;UAC9B;UACA,OAAO,KAAK;QACd;;QAEA;QACA7G,UAAU,CAACG,IAAG,GAAIA,IAAI,CAACiG,GAAE;QACzB5D,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEzC,UAAU,CAACG,IAAI,EAAEH,UAAU,CAACG,IAAG,GAAI,SAASH,UAAU,CAACG,IAAI,CAAC5B,IAAI,WAAWyB,UAAU,CAACG,IAAI,CAAC2F,IAAI,iBAAiB9F,UAAU,CAACG,IAAI,CAACkE,IAAI,EAAC,GAAI,SAAS,CAAC;QAC1NrE,UAAU,CAACC,KAAI,GAAID,UAAU,CAACC,KAAI,IAAKE,IAAI,CAAC5B,IAAI,CAACuI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAE9D;QACA,OAAO,IAAI;MACb,OAAO;QACLtE,OAAO,CAACkB,IAAI,CAAC,wDAAwD,EAAEvD,IAAI,CAAC;QAC5E,OAAO,KAAK;MACd;IACF;IAEA,MAAM4G,YAAW,GAAIA,CAAA,KAAM;MACzBvE,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;MACvFzC,UAAU,CAACG,IAAG,GAAI,IAAI;;MAEtB;MACA,IAAIH,UAAU,CAACC,KAAI,IAAKD,UAAU,CAACC,KAAK,CAAC2G,QAAQ,CAAC,GAAG,CAAC,EAAE;QAAA,IAAAI,gBAAA,EAAAC,qBAAA;QACtD,MAAMC,kBAAiB,IAAAF,gBAAA,GAAIhH,UAAU,CAACG,IAAI,cAAA6G,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBzI,IAAI,cAAA0I,qBAAA,uBAArBA,qBAAA,CAAuBH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI9G,UAAU,CAACC,KAAI,KAAMiH,kBAAkB,EAAE;UAC3ClH,UAAU,CAACC,KAAI,GAAI,EAAE;QACvB;MACF;IACF;IAEA,MAAMkH,YAAW,GAAKhH,IAAI,IAAK;MAC7B;MACA,MAAMmG,QAAO,GAAInG,IAAI,CAAC5B,IAAI;MAC1B,MAAMgI,GAAE,GAAID,QAAQ,CAACE,KAAK,CAACF,QAAQ,CAACG,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;;MAEvE;MACA,MAAMC,gBAAe,GAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;;MAE1F;MACA,IAAI,CAACA,gBAAgB,CAACC,QAAQ,CAACL,GAAG,CAAC,EAAE;QACnCpK,SAAS,CAACyH,KAAK,CAAC,aAAa2C,GAAG,QAAQI,gBAAgB,CAACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1E,OAAO,KAAK;MACd;;MAEA;MACA,MAAM2B,cAAa,GAAI,EAAC,GAAI,IAAG,GAAI,IAAI,EAAE;MACzC,IAAIlG,IAAI,CAAC2F,IAAG,GAAIO,cAAc,EAAE;QAC9BlK,SAAS,CAACyH,KAAK,CAAC,iBAAiByC,cAAa,IAAK,IAAG,GAAI,IAAI,CAAC,IAAI,CAAC;QACpE,OAAO,KAAK;MACd;;MAEA;MACA,IAAIlG,IAAI,CAAC2F,IAAG,KAAM,CAAC,EAAE;QACnB3J,SAAS,CAACyH,KAAK,CAAC,cAAc,CAAC;QAC/B,OAAO,KAAK;MACd;MAEA,OAAO,IAAI;IACb;IAEA,MAAMwD,iBAAgB,GAAKxD,KAAK,IAAK;MACnCpB,OAAO,CAACoB,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC7BzH,SAAS,CAACyH,KAAK,CAAC,mBAAmB,CAAC;MACpC;MACA5D,UAAU,CAACG,IAAG,GAAI,IAAI;IACxB;IAEA,MAAMkH,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACxH,aAAa,CAACmC,KAAK,EAAE;MAE1B,MAAMnC,aAAa,CAACmC,KAAK,CAACsF,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAClD,IAAIA,KAAK,EAAE;UACT/H,SAAS,CAACwC,KAAI,GAAI,IAAG;UAErBQ,OAAO,CAACC,GAAG,CAAC,yEAAyE,EAAEzC,UAAU,CAACG,IAAI,CAAC;UACvG,IAAI,CAACH,UAAU,CAACG,IAAI,EAAE;YACpBqC,OAAO,CAACkB,IAAI,CAAC,0EAA0E,CAAC;YACxFlE,SAAS,CAACwC,KAAI,GAAI,KAAK;YACvB7F,SAAS,CAAC2H,OAAO,CAAC,WAAW,CAAC;YAC9B;UACF;;UAEA;UACA,IAAI9D,UAAU,CAACG,IAAI,CAAC2F,IAAG,KAAM,CAAC,EAAE;YAC9BtD,OAAO,CAACoB,KAAK,CAAC,+BAA+B,CAAC;YAC9CpE,SAAS,CAACwC,KAAI,GAAI,KAAK;YACvB7F,SAAS,CAACyH,KAAK,CAAC,gBAAgB,CAAC;YACjC;UACF;UAEApB,OAAO,CAACC,GAAG,CAAC,qDAAqDzC,UAAU,CAACG,IAAI,CAAC5B,IAAI,WAAWyB,UAAU,CAACG,IAAI,CAAC2F,IAAI,iBAAiB9F,UAAU,CAACG,IAAI,CAACkE,IAAI,EAAE,CAAC;;UAE5J;UACA,MAAMmD,QAAO,GAAI,IAAIC,QAAQ,CAAC;UAC9BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE1H,UAAU,CAACC,KAAK;UACzCuH,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE1H,UAAU,CAACE,WAAW;UACrDsH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE1H,UAAU,CAACG,IAAI,GAAE;;UAEzC,IAAIH,UAAU,CAACI,QAAQ,EAAE;YACvBoH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE1H,UAAU,CAACI,QAAQ;YAC/CoC,OAAO,CAACC,GAAG,CAAC,qDAAqDzC,UAAU,CAACI,QAAQ,EAAE;UACxF,OAAO;YACLoC,OAAO,CAACC,GAAG,CAAC,wGAAwG;UACtH;UAEA+E,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC5H,UAAU,CAACK,IAAI,CAAC;UACvDmH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE1H,UAAU,CAACM,UAAU,CAACuH,QAAQ,CAAC,CAAC;UAC9DL,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1H,UAAU,CAACO,aAAa,CAACsH,QAAQ,CAAC,CAAC;UACpEL,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE1H,UAAU,CAACQ,SAAS,CAACqH,QAAQ,CAAC,CAAC;;UAE5D;UACA,MAAMC,cAAa,GAAIN,QAAQ,CAACO,GAAG,CAAC,MAAM,CAAC;UAC3C,IAAI,CAACD,cAAa,IAAKA,cAAc,CAAChC,IAAG,KAAM,CAAC,EAAE;YAChDtD,OAAO,CAACoB,KAAK,CAAC,uCAAuC,CAAC;YACtDpE,SAAS,CAACwC,KAAI,GAAI,KAAK;YACvB7F,SAAS,CAACyH,KAAK,CAAC,oBAAoB,CAAC;YACrC;UACF;UAEA,IAAI;YACF,MAAMlB,QAAO,GAAI,MAAM1E,cAAc,CAACwJ,QAAQ,GAAE;YAChDhF,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEC,QAAQ,CAAC;YAE5EvG,SAAS,CAAC6L,OAAO,CAAC,qBAAqB;YACvCxI,SAAS,CAACwC,KAAI,GAAI,KAAI,EAAE;YACxBjD,aAAa,CAACiD,KAAI,GAAI,KAAI;YAC1B,MAAMiG,iBAAgB,GAAIjI,UAAU,CAACC,KAAK,EAAE;YAC5CiI,eAAe,CAAC;;YAEhB;YACA;YACA;YACA;;YAEA,IAAIC,QAAO,GAAI,CAAC;YAChB,MAAMC,WAAU,GAAI,EAAE,EAAE;YACxB,MAAMC,YAAW,GAAI,IAAI,EAAE;;YAE3B,MAAMC,IAAG,GAAIC,WAAW,CAAC,YAAY;cACnCJ,QAAQ,EAAE;cACV3F,OAAO,CAACC,GAAG,CAAC,4CAA4C0F,QAAQ,IAAIC,WAAW,MAAM,CAAC;cACtF,IAAI;gBACF;gBACA,MAAMI,iBAAgB,GAAI,MAAM1K,YAAY,CAAC;kBAC3CqF,IAAI,EAAE,CAAC;kBACPC,SAAS,EAAE,EAAE;kBAAE;kBACfc,QAAQ,EAAE,aAAa;kBACvB9D,QAAQ,EAAExB,gBAAgB,CAACoD,KAAI,IAAKyG,SAAS,CAAE;kBAC/C;gBACF,CAAC,CAAC;gBAEF,IAAIC,QAAO,GAAI,IAAI;gBACnB,IAAIF,iBAAgB,IAAKA,iBAAiB,CAAC5F,OAAM,IAAK4F,iBAAiB,CAAC5F,OAAO,CAACP,MAAK,GAAI,CAAC,EAAE;kBAC1F;kBACA;kBACAqG,QAAO,GAAIF,iBAAiB,CAAC5F,OAAO,CAACX,IAAI,CAACb,GAAE,IAAKA,GAAG,CAACnB,KAAI,KAAMgI,iBAAiB,CAAC;;kBAEjF;kBACA;kBACA;gBACF;gBAEA,IAAIS,QAAQ,EAAE;kBACZ;kBACA;kBACAlG,OAAO,CAACC,GAAG,CAAC,0BAA0BwF,iBAAiB,mDAAmD,CAAC;kBAC3GU,aAAa,CAACL,IAAI,CAAC;kBACnBtE,cAAc,CAAC,CAAC;kBAChBzB,eAAe,CAAC,CAAC;kBACjBpG,SAAS,CAAC6L,OAAO,CAAC,OAAOC,iBAAiB,eAAe,CAAC;kBAC1D;kBACAzI,SAAS,CAACwC,KAAI,GAAI,KAAK;gBACzB,OAAO,IAAImG,QAAO,IAAKC,WAAW,EAAE;kBAClC5F,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC;kBAC1EkG,aAAa,CAACL,IAAI,CAAC;kBACnBtE,cAAc,CAAC,CAAC;kBAChBzB,eAAe,CAAC,CAAC;kBACjBpG,SAAS,CAACyM,IAAI,CAAC,OAAOX,iBAAiB,oBAAoB,CAAC;kBAC5D;kBACAzI,SAAS,CAACwC,KAAI,GAAI,KAAK;gBACzB;cACF,EAAE,OAAO6G,SAAS,EAAE;gBAClBrG,OAAO,CAACoB,KAAK,CAAC,oBAAoB,EAAEiF,SAAS,CAAC;gBAC9CF,aAAa,CAACL,IAAI,CAAC;gBACnB;gBACAtE,cAAc,CAAC,CAAC;gBAChBzB,eAAe,CAAC,CAAC;gBACjBpG,SAAS,CAACyH,KAAK,CAAC,kBAAkB,CAAC;gBACnC;gBACApE,SAAS,CAACwC,KAAI,GAAI,KAAK;cACzB;YACF,CAAC,EAAEqG,YAAY,CAAC;UAElB,EAAE,OAAOzE,KAAK,EAAE;YACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;YAC9BpE,SAAS,CAACwC,KAAI,GAAI,KAAK;YACvB;YACA,IAAIlC,SAAS,CAACkC,KAAK,EAAE;cACnBlC,SAAS,CAACkC,KAAK,CAAC6E,UAAU,CAAC,CAAC;YAC9B;YACA,IAAIiC,QAAO,GAAI,QAAO;YACtB,IAAIlF,KAAK,CAAClB,QAAO,IAAKkB,KAAK,CAAClB,QAAQ,CAACqB,IAAI,EAAE;cACzC,MAAMA,IAAG,GAAIH,KAAK,CAAClB,QAAQ,CAACqB,IAAI;cAChC,IAAI,OAAOA,IAAG,KAAM,QAAQ,EAAE+E,QAAO,IAAK,IAAG,GAAI/E,IAAI,MAChD,IAAIA,IAAI,CAACgF,MAAM,EAAED,QAAO,IAAK,IAAG,GAAI/E,IAAI,CAACgF,MAAM,MAC/C,IAAIhF,IAAI,CAACpD,OAAO,EAAEmI,QAAO,IAAK,IAAG,GAAI/E,IAAI,CAACpD,OAAO,MACjD,IAAIoD,IAAI,CAAC5D,IAAG,IAAK0C,KAAK,CAACC,OAAO,CAACiB,IAAI,CAAC5D,IAAI,CAAC,EAAE2I,QAAO,IAAK,IAAG,GAAI/E,IAAI,CAAC5D,IAAI,CAACuE,IAAI,CAAC,IAAI,CAAC;cACvF;cAAA,KACK,IAAIX,IAAI,CAACtC,MAAK,KAAM,OAAM,IAAKsC,IAAI,CAACpD,OAAM,IAAKoD,IAAI,CAACpD,OAAO,CAACiG,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACrFkC,QAAO,GAAI/E,IAAI,CAACpD,OAAO,EAAE;cAC3B,OACK,IAAI,OAAOoD,IAAG,KAAM,QAAQ,EAAE+E,QAAO,IAAK,IAAG,GAAInB,IAAI,CAACC,SAAS,CAAC7D,IAAI,CAAC,CAACiF,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;YAC9F;YACA7M,SAAS,CAACyH,KAAK,CAACkF,QAAQ,CAAC;UAC3B;QACF,OAAO;UACLtG,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;UACrDjD,SAAS,CAACwC,KAAI,GAAI,KAAK,EAAE;UACzB,OAAO,KAAK;QACd;MACF,CAAC;IACH;IAEA,MAAMiH,kBAAiB,GAAI,MAAO7H,GAAG,IAAK;MACxCzB,gBAAgB,CAACqC,KAAI,GAAIZ,GAAE;MAC3BlC,gBAAgB,CAAC8C,KAAI,GAAI,IAAG;MAC5B,MAAM0D,mBAAmB,CAACtE,GAAG,CAACN,EAAE;IAClC;IAEA,MAAMoI,YAAW,GAAK9I,QAAQ,IAAK;MACjCjB,eAAe,CAAC6C,KAAI,GAAI5B,QAAO;MAC/BS,YAAY,CAACC,EAAC,GAAIV,QAAQ,CAACU,EAAC;MAC5BD,YAAY,CAACtC,IAAG,GAAI6B,QAAQ,CAAC7B,IAAG;MAChCsC,YAAY,CAACX,WAAU,GAAIE,QAAQ,CAACF,WAAU,IAAK,EAAC;MACpDW,YAAY,CAACE,IAAG,GAAIX,QAAQ,CAACW,IAAG,IAAK,UAAS;MAC9CF,YAAY,CAACG,KAAI,GAAIZ,QAAQ,CAACY,KAAI,IAAK,SAAQ;MAC/C/B,mBAAmB,CAAC+C,KAAI,GAAI,IAAG,EAAE;IACnC;IAEA,MAAMmH,oBAAmB,GAAI,MAAO/I,QAAQ,IAAK;MAC/C,IAAI;QACF,MAAMhE,YAAY,CAACgN,OAAO,CAAC,YAAYhJ,QAAQ,CAAC7B,IAAI,MAAM,EAAE,MAAM,EAAE;UAClE8K,iBAAiB,EAAE,IAAI;UACvBC,gBAAgB,EAAE,IAAI;UACtBjF,IAAI,EAAE;QACR,CAAC;QAED,MAAMlG,cAAc,CAACiC,QAAQ,CAACU,EAAE;QAChC3E,SAAS,CAAC6L,OAAO,CAAC,QAAQ;QAC1BzF,eAAe,CAAC;MAClB,EAAE,OAAOqB,KAAK,EAAE;QACd,IAAIA,KAAI,KAAM,QAAQ,EAAE;UAAA,IAAA2F,eAAA,EAAAC,oBAAA;UACtBhH,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;UAC9BzH,SAAS,CAACyH,KAAK,CAAC,UAAS,IAAK,EAAA2F,eAAA,GAAA3F,KAAK,CAAClB,QAAQ,cAAA6G,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBxF,IAAI,cAAAyF,oBAAA,uBAApBA,oBAAA,CAAsBT,MAAK,KAAKnF,KAAK,CAACjD,OAAM,IAAK,MAAM,CAAC;QACxF;MACF;IACF;IAEA,MAAM8I,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnCjH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEtD,eAAe,CAAC6C,KAAI,GAAI,MAAK,GAAI,KAAK;MACnE/C,mBAAmB,CAAC+C,KAAI,GAAI,KAAI;MAChC,IAAI7C,eAAe,CAAC6C,KAAK,EAAE;QACzBQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5B,YAAY;QACnC,IAAI,CAAC1B,eAAe,CAAC6C,KAAK,CAAClB,EAAE,EAAE;UAC3B3E,SAAS,CAACyH,KAAK,CAAC,qBAAqB,CAAC;UACtC;QACJ;QACA,IAAI;UACF,MAAMlB,QAAO,GAAI,MAAMtE,cAAc,CAACe,eAAe,CAAC6C,KAAK,CAAClB,EAAE,EAAED,YAAY;UAC5E2B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ;UAC/B,IAAIA,QAAO,KAAMA,QAAQ,CAAC5B,EAAC,IAAM4B,QAAQ,CAACqB,IAAG,IAAKrB,QAAQ,CAACqB,IAAI,CAACjD,EAAG,CAAC,EAAE;YACpE3E,SAAS,CAAC6L,OAAO,CAAC,QAAQ;YAC1B,MAAMzF,eAAe,CAAC,GAAE;YACxB;YACA,IAAI3D,gBAAgB,CAACoD,KAAI,MAAOU,QAAQ,CAAC5B,EAAC,IAAK4B,QAAQ,CAACqB,IAAI,CAACjD,EAAE,CAAC,EAAE;cAChE,MAAMkD,cAAc,CAAC,CAAC;YACxB;UACF,OAAO,IAAItB,QAAO,IAAKA,QAAQ,CAACkB,KAAK,EAAE;YACrCzH,SAAS,CAACyH,KAAK,CAAC,WAAWlB,QAAQ,CAACkB,KAAK,CAACjD,OAAM,IAAK,MAAM,EAAE;UAC/D,OAAO,IAAI+B,QAAO,IAAKA,QAAQ,CAACqG,MAAM,EAAE;YACrC5M,SAAS,CAACyH,KAAK,CAAC,WAAWlB,QAAQ,CAACqG,MAAM,EAAE;UAC/C,OACK;YACH5M,SAAS,CAACyH,KAAK,CAAC,wBAAwB;UAC1C;QACF,EAAE,OAAOA,KAAK,EAAE;UACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;UAC9BzH,SAAS,CAACyH,KAAK,CAAC,oBAAoB;QACtC;MACF,OAAO;QACLpB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE5B,YAAY;QACpC,IAAI;UACF,MAAM6B,QAAO,GAAI,MAAMrE,WAAW,CAACwC,YAAY;UAC/C2B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,QAAQ;UAC/B,IAAIA,QAAO,KAAMA,QAAQ,CAAC5B,EAAC,IAAM4B,QAAQ,CAACqB,IAAG,IAAKrB,QAAQ,CAACqB,IAAI,CAACjD,EAAG,CAAC,EAAE;YACpE3E,SAAS,CAAC6L,OAAO,CAAC,QAAQ;YAC1B,MAAMzF,eAAe,CAAC,GAAE;YACxB;YACA,MAAMmH,aAAY,GAAIhH,QAAQ,CAAC5B,EAAC,IAAK4B,QAAQ,CAACqB,IAAI,CAACjD,EAAE;YACrD,IAAI4I,aAAa,EAAE;cACjB9K,gBAAgB,CAACoD,KAAI,GAAI0H,aAAa;cACtClH,OAAO,CAACC,GAAG,CAAC,uBAAuBiH,aAAa,EAAE,CAAC;cACnD,MAAM1F,cAAc,CAAC,CAAC,EAAE;YAC1B,OAAO;cACLxB,OAAO,CAACkB,IAAI,CAAC,qBAAqB,CAAC;YACrC;UACF,OAAO,IAAIhB,QAAO,IAAKA,QAAQ,CAACkB,KAAK,EAAE;YACrCzH,SAAS,CAACyH,KAAK,CAAC,WAAWlB,QAAQ,CAACkB,KAAK,CAACjD,OAAM,IAAK,MAAM,EAAE;UAC/D,OAAO,IAAI+B,QAAO,IAAKA,QAAQ,CAACqG,MAAM,EAAE;YACrC5M,SAAS,CAACyH,KAAK,CAAC,WAAWlB,QAAQ,CAACqG,MAAM,EAAE;UAC/C,OACM;YACJ5M,SAAS,CAACyH,KAAK,CAAC,wBAAwB;YACxCpB,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAElB,QAAQ,CAAC;UACvC;QACF,EAAE,OAAOkB,KAAK,EAAE;UACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;UAC9BzH,SAAS,CAACyH,KAAK,CAAC,oBAAoB;QACtC;MACF;MACA+F,iBAAiB,CAAC;IACpB;IAEA,MAAMC,kBAAiB,GAAIA,CAAA,KAAM;MAC/B3K,mBAAmB,CAAC+C,KAAI,GAAI,KAAI;MAChC7C,eAAe,CAAC6C,KAAI,GAAI,IAAG;MAC3BnB,YAAY,CAACC,EAAC,GAAI,IAAG;MACrBD,YAAY,CAACtC,IAAG,GAAI,EAAC;MACrBsC,YAAY,CAACX,WAAU,GAAI,EAAC;MAC5BW,YAAY,CAACE,IAAG,GAAI,UAAS;MAC7BF,YAAY,CAACG,KAAI,GAAI,SAAQ;IAC/B;IAEA,MAAM2I,iBAAgB,GAAIA,CAAA,KAAM;MAC9BxK,eAAe,CAAC6C,KAAI,GAAI,IAAG;MAC3BnB,YAAY,CAACC,EAAC,GAAI,IAAG;MACrBD,YAAY,CAACtC,IAAG,GAAI,EAAC;MACrBsC,YAAY,CAACX,WAAU,GAAI,EAAC;MAC5BW,YAAY,CAACE,IAAG,GAAI,UAAS;MAC7BF,YAAY,CAACG,KAAI,GAAI,SAAQ;MAC7B/B,mBAAmB,CAAC+C,KAAI,GAAI,IAAG;IACjC;IAEA,MAAMkG,eAAc,GAAIA,CAAA,KAAM;MAC5B,IAAIrI,aAAa,CAACmC,KAAK,EAAE;QACvB;QACAnC,aAAa,CAACmC,KAAK,CAAC6H,WAAW,CAAC,CAAC;MACnC;;MAEA;MACA7J,UAAU,CAACC,KAAI,GAAI,EAAC;MACpBD,UAAU,CAACE,WAAU,GAAI,EAAC;MAC1BF,UAAU,CAACG,IAAG,GAAI,IAAG;MACrBH,UAAU,CAACI,QAAO,GAAI,IAAG,EAAE;MAC3BJ,UAAU,CAACK,IAAG,GAAI,EAAC;MACnBL,UAAU,CAACQ,SAAQ,GAAI,IAAG;MAC1BR,UAAU,CAACM,UAAS,GAAI,GAAE,EAAE;MAC5BN,UAAU,CAACO,aAAY,GAAI,EAAC,EAAE;;MAE9B;MACA,IAAIT,SAAS,CAACkC,KAAK,EAAE;QACnBlC,SAAS,CAACkC,KAAK,CAAC6E,UAAU,CAAC,CAAC;MAC9B;MAEArE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D;IAEA,MAAMqH,kBAAiB,GAAIA,CAAA,KAAM;MAC/B;MACA,IAAItK,SAAS,CAACwC,KAAK,EAAE;QACnB7F,SAAS,CAAC2H,OAAO,CAAC,iBAAiB,CAAC;QACpC;MACF;MACAoE,eAAe,CAAC,CAAC;MACjBnJ,aAAa,CAACiD,KAAI,GAAI,KAAK;IAC7B;IAEA,MAAM+H,uBAAsB,GAAKC,IAAI,IAAK;MACxCF,kBAAkB,CAAC,CAAC;MACpBE,IAAI,CAAC,CAAC,EAAE;IACV;IAEA,MAAMC,gBAAe,GAAIA,CAAA,KAAM;MAC7B/B,eAAe,CAAC,CAAC,EAAE;MACnB,IAAItJ,gBAAgB,CAACoD,KAAI,IAAKpD,gBAAgB,CAACoD,KAAI,KAAM,KAAK,EAAE;QAC9DhC,UAAU,CAACI,QAAO,GAAIxB,gBAAgB,CAACoD,KAAK;QAC5CQ,OAAO,CAACC,GAAG,CAAC,0DAA0D7D,gBAAgB,CAACoD,KAAK,EAAE,CAAC;MACjG,OAAO;QACLhC,UAAU,CAACI,QAAO,GAAI,IAAI,EAAE;QAC5BoC,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;MAC5F;MACA1D,aAAa,CAACiD,KAAI,GAAI,IAAI;IAC5B,CAAC;;IAED;IACA,MAAMkI,eAAc,GAAK9I,GAAG,IAAK;MAC/B,IAAIA,GAAG,CAACK,MAAK,KAAM,WAAW,EAAE;QAC9BtF,SAAS,CAAC2H,OAAO,CAAC,gBAAgB;QAClC;MACF;;MAEA;MACAzH,KAAK,CAAC0L,GAAG,CAAC,GAAGrJ,OAAO,cAAc0C,GAAG,CAACN,EAAE,GAAG,EACxCqJ,KAAK,CAACC,GAAE,IAAK5H,OAAO,CAACoB,KAAK,CAAC,WAAW,EAAEwG,GAAG,CAAC;;MAE/C;MACAC,MAAM,CAACC,IAAI,CAAClJ,GAAG,CAACmJ,QAAQ,EAAE,QAAQ;IACpC;IAEA,MAAMC,gBAAe,GAAI,MAAOpJ,GAAG,IAAK;MACtC,IAAI;QACF,MAAMsB,QAAO,GAAI,MAAMrG,KAAK,CAAC0L,GAAG,CAAC,GAAGrJ,OAAO,cAAc0C,GAAG,CAACN,EAAE,YAAY,EAAE;UAC3E2J,YAAY,EAAE;QAChB,CAAC;;QAED;QACA,MAAMC,GAAE,GAAIL,MAAM,CAACM,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACnI,QAAQ,CAACqB,IAAI,CAAC,CAAC;QAChE,MAAM+G,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;QACvCF,IAAI,CAACG,IAAG,GAAIP,GAAE;QACdI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE9J,GAAG,CAACnB,KAAK;QACvC8K,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI;QAC9BA,IAAI,CAACO,KAAK,CAAC;QACXN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI;QAE9B3O,SAAS,CAAC6L,OAAO,CAAC,QAAQ;MAC5B,EAAE,OAAOpE,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BzH,SAAS,CAACyH,KAAK,CAAC,QAAQ;MAC1B;IACF;IAEA,MAAM2H,aAAY,GAAKnK,GAAG,IAAK;MAC7B;MACAoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErB,GAAG,CAACnB,KAAK;MAChC9D,SAAS,CAACyM,IAAI,CAAC,MAAMxH,GAAG,CAACnB,KAAK,YAAY;IAC5C;IAEA,MAAMuL,YAAW,GAAKpK,GAAG,IAAK;MAC5B;MACAoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErB,GAAG,CAACnB,KAAK;MAChC9D,SAAS,CAACyM,IAAI,CAAC,MAAMxH,GAAG,CAACnB,KAAK,YAAY;IAC5C;IAEA,MAAMhC,cAAa,GAAI,MAAOmD,GAAG,IAAK;MACpCoB,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAErB,GAAG,CAAC,EAAE;MACtF,IAAI;QACF,MAAMhF,YAAY,CAACgN,OAAO,CAAC,YAAYhI,GAAG,CAACnB,KAAK,cAAc,EAAE,MAAM,EAAE;UACtEoJ,iBAAiB,EAAE,IAAI;UACvBC,gBAAgB,EAAE,IAAI;UACtBjF,IAAI,EAAE;QACR,CAAC;QAED7B,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAAErB,GAAG,CAACN,EAAE,CAAC,EAAE;QAC7E,MAAM5C,iBAAiB,CAACkD,GAAG,CAACN,EAAE,GAAE;;QAEhC3E,SAAS,CAAC6L,OAAO,CAAC,QAAQ;QAC1BhE,cAAc,CAAC;QACfzB,eAAe,CAAC,GAAE;MACpB,EAAE,OAAOqB,KAAK,EAAE;QACd,IAAIA,KAAI,KAAM,QAAQ,EAAE;UAAA,IAAA6H,gBAAA,EAAAC,qBAAA;UACtBlJ,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;UAC9B;UACA,MAAM+H,YAAW,GAAI,CAAA/H,KAAK,aAALA,KAAK,wBAAA6H,gBAAA,GAAL7H,KAAK,CAAElB,QAAQ,cAAA+I,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiB1H,IAAI,cAAA2H,qBAAA,uBAArBA,qBAAA,CAAuB3C,MAAK,MAAKnF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEjD,OAAM,KAAK,MAAM;UAC9ExE,SAAS,CAACyH,KAAK,CAAC,UAAS,GAAI+H,YAAY,CAAC;QAC5C;MACF;IACF;;IAEA;IACA,MAAMC,WAAU,GAAKvH,IAAI,IAAK;MAC5B,MAAMwH,OAAM,GAAI;QACd1K,GAAG,EAAEjE,QAAQ;QACbkE,GAAG,EAAElE,QAAQ;QACbmE,GAAG,EAAEhE,YAAY;QACjBiE,GAAG,EAAElE,OAAO;QACZmE,GAAG,EAAEjE,aAAa;QAClBkE,GAAG,EAAErE,KAAK;QACV2O,KAAK,EAAE3O;MACT;MACA,OAAO0O,OAAO,CAACxH,IAAI,KAAKnH,QAAO;IACjC;;IAEA;IACA,MAAM6O,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAC;MACzB,MAAMtK,IAAG,GAAI,IAAIkD,IAAI,CAACoH,UAAU;MAChC,OAAOtK,IAAI,CAACuK,kBAAkB,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE;MACP,CAAC;IACH;;IAEA;IACA,MAAMhH,gBAAe,GAAK1D,IAAI,IAAK;MACjC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAC;MACnB,OAAOA,IAAI,CAAC2K,WAAW,CAAC,CAAC,CAACvF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC;;IAEA;IACA,MAAMwF,cAAa,GAAKC,QAAQ,IAAK;MACnC,IAAI,CAACA,QAAQ,EAAE,OAAO,MAAK;MAE3B,IAAIA,QAAO,GAAI,IAAI,EAAE;QACnB,OAAO,GAAGA,QAAQ,KAAI;MACxB,OAAO;QACL,OAAO,GAAG,CAACA,QAAO,GAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAI;MAC5C;IACF;;IAEA;IACA,MAAMC,WAAU,GAAKpM,IAAI,IAAK;MAC5B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAC;MACnB,IAAIwC,KAAK,CAACC,OAAO,CAACzC,IAAI,CAAC,EAAE,OAAOA,IAAG;MACnC,OAAOA,IAAI,CAACyG,KAAK,CAAC,GAAG,CAAC,CAAC4F,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACxK,MAAM,CAACuK,GAAE,IAAKA,GAAG;IACjE;;IAEA;IACA,MAAME,oBAAmB,GAAIA,CAAA,KAAM;MACjC;MACA7I,cAAc,CAAC;MACfzB,eAAe,CAAC;MAChBpG,SAAS,CAAC6L,OAAO,CAAC,wBAAwB;IAC5C;;IAEA;IACA,MAAM8E,iBAAgB,GAAKlJ,KAAK,IAAK;MACnCpB,OAAO,CAACoB,KAAK,CAAC,UAAU,EAAEA,KAAK;MAC/BzH,SAAS,CAACyH,KAAK,CAAC,qBAAqB;IACvC;;IAEA;IACA3H,SAAS,CAAC,MAAM;MACd;MACA8Q,OAAO,CAACC,GAAG,CAAC,CACVzK,eAAe,CAAC,CAAC,CAAC4H,KAAK,CAACC,GAAE,IAAK;QAC7B5H,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAEwG,GAAG,CAAC;QAChCjO,SAAS,CAACyH,KAAK,CAAC,iBAAiB,CAAC;QAClC,OAAO,EAAE;MACX,CAAC,CAAC,EACFI,cAAc,CAAC,CAAC,CAACmG,KAAK,CAACC,GAAE,IAAK;QAC5B5H,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAEwG,GAAG,CAAC;QAChCjO,SAAS,CAACyH,KAAK,CAAC,iBAAiB,CAAC;QAClC,OAAO,EAAE;MACX,CAAC,EACF,CAAC,CAACqJ,OAAO,CAAC,MAAM;QACf;QACA;MAAA,CACD,CAAC;IACJ,CAAC;IAED/Q,eAAe,CAAC,MAAM;MACpB;MACA;MACA;MACA;IAAA,CACD;IAED,OAAO;MACLyC,WAAW;MACXC,gBAAgB;MAChBgD,UAAU;MACVE,SAAS;MACTb,OAAO;MACPpC,WAAW;MACXC,QAAQ;MACRiB,SAAS;MACThB,aAAa;MACbiB,UAAU;MACVH,aAAa;MACbC,SAAS;MACTW,WAAW;MACXjB,SAAS;MACTD,OAAO;MACPH,QAAQ;MACRC,SAAS;MACTL,kBAAkB;MAClBC,mBAAmB;MACnBE,eAAe;MACf0B,YAAY;MACZvB,eAAe;MACfJ,gBAAgB;MAChBS,gBAAgB;MAChBC,cAAc;MACdH,aAAa;MACbC,OAAO;MACPqC,mBAAmB;MACnBI,eAAe;MAEf;MACA7F,MAAM;MACNC,MAAM;MACNC,SAAS;MACTC,IAAI;MACJC,QAAQ;MACRC,IAAI;MACJC,KAAK;MACLC,IAAI;MACJC,OAAO;MACPC,YAAY;MACZC,IAAI;MACJC,MAAM;MACNC,QAAQ;MACRC,KAAK;MACLC,OAAO;MACPC,YAAY;MACZC,aAAa;MACbC,YAAY;MACZC,OAAO;MACPC,IAAI;MACJC,IAAI;MACJC,IAAI;MACJC,IAAI;MAEJ;MACAmI,cAAc;MACdE,YAAY;MACZC,YAAY;MACZ0F,WAAW;MACXG,UAAU;MACVO,cAAc;MACdG,WAAW;MACXvC,eAAe;MACfM,gBAAgB;MAChBe,aAAa;MACbC,YAAY;MACZvN,cAAc;MACdkI,gBAAgB;MAChBY,YAAY;MACZI,YAAY;MACZC,iBAAiB;MACjBC,YAAY;MACZzB,gBAAgB;MAChBC,gBAAgB;MAChBoD,kBAAkB;MAClBC,YAAY;MACZC,oBAAoB;MACpBM,gBAAgB;MAChBG,kBAAkB;MAClBD,iBAAiB;MACjBrH,eAAe;MACfuK,oBAAoB;MACpBC,iBAAiB;MACjB5E,eAAe;MACf6B,uBAAuB;MACvBE,gBAAgB;MAChBH;IACF;EACF;AACF","ignoreList":[]}]}