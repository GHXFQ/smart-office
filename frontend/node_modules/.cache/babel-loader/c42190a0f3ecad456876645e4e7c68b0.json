{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\api\\ai.js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\api\\ai.js","mtime":1749792262602},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgcmVxdWVzdCBmcm9tICdAL3V0aWxzL3JlcXVlc3QnOwoKLyoqCiAqIOiOt+WPlkFJ5pel56iL5o+Q6YaSCiAqIEByZXR1cm5zIHtQcm9taXNlfSDov5Tlm55BSeaXpeeoi+aPkOmGkuWIl+ihqAogKi8KZXhwb3J0IGZ1bmN0aW9uIGdldFNjaGVkdWxlUmVtaW5kZXJzKCkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hcGkvYWkvc2NoZWR1bGUtcmVtaW5kZXIvJywKICAgIG1ldGhvZDogJ2dldCcKICB9KTsKfQoKLyoqCiAqIOiwg+eUqEFJ6IGK5aSpCiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC0g6IGK5aSp5pWw5o2uCiAqIEByZXR1cm5zIHtQcm9taXNlfSDov5Tlm55BSeWbnuWkjQogKi8KZXhwb3J0IGZ1bmN0aW9uIGFpQ2hhdChkYXRhKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2FwaS9haS9jaGF0LycsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGEKICB9KTsKfQoKLyoqCiAqIOeUn+aIkEFJ5YaF5a65CiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC0g55Sf5oiQ6K+35rGC5pWw5o2uCiAqIEByZXR1cm5zIHtQcm9taXNlfSDov5Tlm57nlJ/miJDnmoTlhoXlrrkKICovCmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUNvbnRlbnQoZGF0YSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hcGkvYWkvZ2VuZXJhdGUvJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YQogIH0pOwp9CgovKioKICog5qCH6K6wQUnml6XnqIvmj5DphpLkuLrlt7Lor7sKICogQHBhcmFtIHtudW1iZXJ9IGlkIC0g5o+Q6YaSSUQKICogQHJldHVybnMge1Byb21pc2V9CiAqLwpleHBvcnQgZnVuY3Rpb24gbWFya1NjaGVkdWxlUmVtaW5kZXJBc1JlYWQoaWQpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6IGAvYXBpL2FpL3JlY29tbWVuZGF0aW9ucy8ke2lkfS9tYXJrX2FzX3JlYWQvYCwKICAgIG1ldGhvZDogJ3Bvc3QnCiAgfSk7Cn0KCi8qKgogKiDmlofmoaPlop7lvLpBSeWvueivnQogKiBAcGFyYW0ge09iamVjdH0gZGF0YSAtIHsgbWVzc2FnZSwgY2hhdF9pZCwgZG9jdW1lbnRfaWRzIH0KICogQHJldHVybnMge1Byb21pc2V9CiAqLwpleHBvcnQgZnVuY3Rpb24gYWlDaGF0V2l0aERvY3VtZW50cyhkYXRhKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2FwaS9haS9jaGF0LXdpdGgtZG9jdW1lbnRzLycsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGEsCiAgICByZXNwb25zZVR5cGU6ICd0ZXh0JwogIH0pOwp9CgovKioKICog5rWB5byP5paH5qGj5aKe5by6QUnlr7nor50KICogQHBhcmFtIHtPYmplY3R9IGRhdGEgLSB7IG1lc3NhZ2UsIGNoYXRfaWQsIGRvY3VtZW50X2lkcyB9CiAqIEBwYXJhbSB7RnVuY3Rpb259IG9uQ2h1bmsgLSDlpITnkIbmr4/kuKrmlbDmja7lnZfnmoTlm57osIPlh73mlbAKICogQHBhcmFtIHtGdW5jdGlvbn0gb25Db21wbGV0ZSAtIOWkhOeQhuWujOaIkOaXtueahOWbnuiwg+WHveaVsAogKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkVycm9yIC0g5aSE55CG6ZSZ6K+v55qE5Zue6LCD5Ye95pWwCiAqIEByZXR1cm5zIHtBYm9ydENvbnRyb2xsZXJ9IOi/lOWbnuWPr+eUqOS6juWPlua2iOivt+axgueahOaOp+WItuWZqAogKi8KZXhwb3J0IGZ1bmN0aW9uIGFpQ2hhdFdpdGhEb2N1bWVudHNTdHJlYW0oZGF0YSwgb25DaHVuaywgb25Db21wbGV0ZSwgb25FcnJvcikgewogIC8vIOWIm+W7ukFib3J0Q29udHJvbGxlcu+8jOeUqOS6juWcqOmcgOimgeaXtuWPlua2iOivt+axggogIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7CiAgY29uc3Qgc2lnbmFsID0gY29udHJvbGxlci5zaWduYWw7CgogIC8vIOiOt+WPllRva2VuCiAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTsKCiAgLy8g5p6E5bu66K+35rGC5aS0CiAgY29uc3QgaGVhZGVycyA9IHsKICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICB9OwogIGlmICh0b2tlbikgewogICAgaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gYEJlYXJlciAke3Rva2VufWA7CiAgfQoKICAvLyDkvb/nlKhmZXRjaCBBUEnlj5Hotbfor7fmsYIKICBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9haS9jaGF0LXdpdGgtZG9jdW1lbnRzLycsIHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgaGVhZGVyczogaGVhZGVycywKICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLAogICAgc2lnbmFsOiBzaWduYWwKICB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgIC8vIOajgOafpeWTjeW6lOeKtuaAgQogICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIFN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7CiAgICB9CgogICAgLy8g5LuO5ZON5bqU5aS05Lit6I635Y+W6IGK5aSpSUQKICAgIGNvbnN0IGNoYXRJZCA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdYLUNoYXQtSUQnKTsKCiAgICAvLyDojrflj5blk43lupTkvZPnmoTlj6/or7vmtYEKICAgIGNvbnN0IHJlYWRlciA9IHJlc3BvbnNlLmJvZHkuZ2V0UmVhZGVyKCk7CgogICAgLy8g5paH5pys6Kej56CB5ZmoCiAgICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7CgogICAgLy8g6K+75Y+W5rWB5pWw5o2u55qE5Ye95pWwCiAgICBmdW5jdGlvbiByZWFkU3RyZWFtKCkgewogICAgICByZWFkZXIucmVhZCgpLnRoZW4oKHsKICAgICAgICBkb25lLAogICAgICAgIHZhbHVlCiAgICAgIH0pID0+IHsKICAgICAgICBpZiAoZG9uZSkgewogICAgICAgICAgLy8g5rWB57uT5p2f77yM6LCD55So5a6M5oiQ5Zue6LCDCiAgICAgICAgICBvbkNvbXBsZXRlICYmIG9uQ29tcGxldGUoY2hhdElkKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIOino+eggeS6jOi/m+WItuaVsOaNruS4uuaWh+acrAogICAgICAgIGxldCBjaHVuayA9IGRlY29kZXIuZGVjb2RlKHZhbHVlLCB7CiAgICAgICAgICBzdHJlYW06IHRydWUKICAgICAgICB9KTsKCiAgICAgICAgLy8g5qOA5p+l5bm25aSE55CG5YyF5ZCr5Zyo54m55q6K5qCH6K6w5Lit55qEY2hhdF9pZAogICAgICAgIGNvbnN0IGNoYXRJZE1hcmtlciA9ICdfX0NIQVRfSURfXyc7CiAgICAgICAgaWYgKGNodW5rLmluY2x1ZGVzKGNoYXRJZE1hcmtlcikpIHsKICAgICAgICAgIGNvbnN0IHBhcnRzID0gY2h1bmsuc3BsaXQoY2hhdElkTWFya2VyKTsKICAgICAgICAgIC8vIOagh+iusOWJjeeahOWGheWuueaYr+ato+W4uOaVsOaNrgogICAgICAgICAgY29uc3Qgbm9ybWFsQ2h1bmsgPSBwYXJ0c1swXTsKICAgICAgICAgIGlmIChub3JtYWxDaHVuaykgewogICAgICAgICAgICBvbkNodW5rICYmIG9uQ2h1bmsobm9ybWFsQ2h1bmssIGNoYXRJZCk7CiAgICAgICAgICB9CiAgICAgICAgICAvLyDmoIforrDlhoXnmoTlhoXlrrnmmK9KU09OCiAgICAgICAgICBjb25zdCBqc29uU3RyID0gcGFydHNbMV07CiAgICAgICAgICBpZiAoanNvblN0cikgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoanNvblN0cik7CiAgICAgICAgICAgICAgaWYgKHBhcnNlZC5jaGF0X2lkKSB7CiAgICAgICAgICAgICAgICBjb25zdCBmaW5hbENoYXRJZCA9IHBhcnNlZC5jaGF0X2lkLnRvU3RyaW5nKCk7CiAgICAgICAgICAgICAgICAvLyDnoa7kv51vbkNvbXBsZXRl6KKr6LCD55So5pe26IO95ou/5Yiw5pyA57uI55qESUQKICAgICAgICAgICAgICAgIG9uQ29tcGxldGUgJiYgb25Db21wbGV0ZShmaW5hbENoYXRJZCk7CiAgICAgICAgICAgICAgICAvLyDml6LnhLblt7Lnu4/mi7/liLDmnIDnu4hJROW5tuWujOaIkO+8jOWPr+S7peaPkOWJjee7k+adn+ivu+WPlgogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIuino+aekGNoYXRfaWQgSlNPTuWksei0pSIsIGUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOiwg+eUqOWdl+WkhOeQhuWbnuiwgwogICAgICAgICAgb25DaHVuayAmJiBvbkNodW5rKGNodW5rLCBjaGF0SWQpOwogICAgICAgIH0KCiAgICAgICAgLy8g57un57ut6K+75Y+W5LiL5LiA5Z2X5pWw5o2uCiAgICAgICAgcmVhZFN0cmVhbSgpOwogICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgb25FcnJvciAmJiBvbkVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9CgogICAgLy8g5byA5aeL6K+75Y+W5rWBCiAgICByZWFkU3RyZWFtKCk7CiAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgLy8g5aSE55CG6K+35rGC6ZSZ6K+vCiAgICBpZiAoZXJyb3IubmFtZSAhPT0gJ0Fib3J0RXJyb3InKSB7CiAgICAgIG9uRXJyb3IgJiYgb25FcnJvcihlcnJvcik7CiAgICB9CiAgfSk7CgogIC8vIOi/lOWbnuaOp+WItuWZqO+8jOS7peS+v+iwg+eUqOiAheWPr+S7peWPlua2iOivt+axggogIHJldHVybiBjb250cm9sbGVyOwp9CgovKioKICog6I635Y+WQUnogYrlpKnkvJror53liJfooagKICovCmV4cG9ydCBmdW5jdGlvbiBnZXRBSUNoYXRTZXNzaW9ucygpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvYXBpL2FpL2NoYXRzLycsCiAgICBtZXRob2Q6ICdnZXQnCiAgfSk7Cn0KCi8qKgogKiDojrflj5ZBSeiBiuWkqeS8muivneivpuaDhQogKiBAcGFyYW0ge051bWJlcn0gaWQgLSDogYrlpKnkvJror51JRAogKi8KZXhwb3J0IGZ1bmN0aW9uIGdldEFJQ2hhdFNlc3Npb24oaWQpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6IGAvYXBpL2FpL2NoYXRzLyR7aWR9L2AsCiAgICBtZXRob2Q6ICdnZXQnCiAgfSk7Cn0="},{"version":3,"names":["request","getScheduleReminders","url","method","aiChat","data","generateContent","markScheduleReminderAsRead","id","aiChatWithDocuments","responseType","aiChatWithDocumentsStream","onChunk","onComplete","onError","controller","AbortController","signal","token","localStorage","getItem","headers","fetch","body","JSON","stringify","then","response","ok","Error","status","chatId","get","reader","getReader","decoder","TextDecoder","readStream","read","done","value","chunk","decode","stream","chatIdMarker","includes","parts","split","normalChunk","jsonStr","parsed","parse","chat_id","finalChatId","toString","e","console","error","catch","name","getAIChatSessions","getAIChatSession"],"sources":["C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/api/ai.js"],"sourcesContent":["import request from '@/utils/request'\n\n/**\n * 获取AI日程提醒\n * @returns {Promise} 返回AI日程提醒列表\n */\nexport function getScheduleReminders() {\n  return request({\n    url: '/api/ai/schedule-reminder/',\n    method: 'get'\n  })\n}\n\n/**\n * 调用AI聊天\n * @param {Object} data - 聊天数据\n * @returns {Promise} 返回AI回复\n */\nexport function aiChat(data) {\n  return request({\n    url: '/api/ai/chat/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 生成AI内容\n * @param {Object} data - 生成请求数据\n * @returns {Promise} 返回生成的内容\n */\nexport function generateContent(data) {\n  return request({\n    url: '/api/ai/generate/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 标记AI日程提醒为已读\n * @param {number} id - 提醒ID\n * @returns {Promise}\n */\nexport function markScheduleReminderAsRead(id) {\n  return request({\n    url: `/api/ai/recommendations/${id}/mark_as_read/`,\n    method: 'post'\n  })\n}\n\n/**\n * 文档增强AI对话\n * @param {Object} data - { message, chat_id, document_ids }\n * @returns {Promise}\n */\nexport function aiChatWithDocuments(data) {\n  return request({\n    url: '/api/ai/chat-with-documents/',\n    method: 'post',\n    data,\n    responseType: 'text'\n  })\n}\n\n/**\n * 流式文档增强AI对话\n * @param {Object} data - { message, chat_id, document_ids }\n * @param {Function} onChunk - 处理每个数据块的回调函数\n * @param {Function} onComplete - 处理完成时的回调函数\n * @param {Function} onError - 处理错误的回调函数\n * @returns {AbortController} 返回可用于取消请求的控制器\n */\nexport function aiChatWithDocumentsStream(data, onChunk, onComplete, onError) {\n  // 创建AbortController，用于在需要时取消请求\n  const controller = new AbortController();\n  const signal = controller.signal;\n  \n  // 获取Token\n  const token = localStorage.getItem('token');\n  \n  // 构建请求头\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n  \n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  // 使用fetch API发起请求\n  fetch('http://localhost:8000/api/ai/chat-with-documents/', {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n    signal: signal\n  })\n  .then(response => {\n    // 检查响应状态\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    \n    // 从响应头中获取聊天ID\n    const chatId = response.headers.get('X-Chat-ID');\n    \n    // 获取响应体的可读流\n    const reader = response.body.getReader();\n    \n    // 文本解码器\n    const decoder = new TextDecoder();\n    \n    // 读取流数据的函数\n    function readStream() {\n      reader.read().then(({ done, value }) => {\n        if (done) {\n          // 流结束，调用完成回调\n          onComplete && onComplete(chatId);\n          return;\n        }\n        \n        // 解码二进制数据为文本\n        let chunk = decoder.decode(value, { stream: true });\n        \n        // 检查并处理包含在特殊标记中的chat_id\n        const chatIdMarker = '__CHAT_ID__';\n        if (chunk.includes(chatIdMarker)) {\n            const parts = chunk.split(chatIdMarker);\n            // 标记前的内容是正常数据\n            const normalChunk = parts[0];\n            if(normalChunk) {\n                onChunk && onChunk(normalChunk, chatId);\n            }\n            // 标记内的内容是JSON\n            const jsonStr = parts[1];\n            if (jsonStr) {\n                try {\n                    const parsed = JSON.parse(jsonStr);\n                    if (parsed.chat_id) {\n                        const finalChatId = parsed.chat_id.toString();\n                        // 确保onComplete被调用时能拿到最终的ID\n                        onComplete && onComplete(finalChatId);\n                        // 既然已经拿到最终ID并完成，可以提前结束读取\n                        return; \n                    }\n                } catch(e) {\n                    console.error(\"解析chat_id JSON失败\", e);\n                }\n            }\n        } else {\n            // 调用块处理回调\n            onChunk && onChunk(chunk, chatId);\n        }\n        \n        // 继续读取下一块数据\n        readStream();\n      }).catch(error => {\n        onError && onError(error);\n      });\n    }\n    \n    // 开始读取流\n    readStream();\n  })\n  .catch(error => {\n    // 处理请求错误\n    if (error.name !== 'AbortError') {\n      onError && onError(error);\n    }\n  });\n  \n  // 返回控制器，以便调用者可以取消请求\n  return controller;\n}\n\n/**\n * 获取AI聊天会话列表\n */\nexport function getAIChatSessions() {\n  return request({\n    url: '/api/ai/chats/',\n    method: 'get'\n  })\n}\n\n/**\n * 获取AI聊天会话详情\n * @param {Number} id - 聊天会话ID\n */\nexport function getAIChatSession(id) {\n  return request({\n    url: `/api/ai/chats/${id}/`,\n    method: 'get'\n  })\n} "],"mappings":"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","ignoreList":[]}]}