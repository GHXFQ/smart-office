{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\store\\modules\\user.js","mtime":1747455522731},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["authApi","userApi","state","token","localStorage","getItem","user","JSON","parse","loading","error","mutations","AUTH_REQUEST","AUTH_SUCCESS","AUTH_ERROR","LOGOUT","CLEAR_ERROR","UPDATE_USER_PROFILE","userData","setItem","stringify","SET_USER_PROFILE","profile","actions","login","commit","dispatch","credentials","response","success","userId","username","data","id","Promise","resolve","message","reject","errorMsg","detail","statusText","status","register","_error$response","_error$response$data","logout","console","removeItem","requestPasswordReset","email","_error$response2","_error$response2$data","resetPassword","resetData","_error$response3","_error$response3$data","getUserProfile","log","code","company","warn","updateUserProfile","profileData","errorFields","field","Array","isArray","push","join","length","updateUserAvatar","formData","avatar","_error$response4","_error$response4$data","changePassword","passwordData","isOldPasswordError","fieldErrors","old_password","includes","isValidationResult","_error$response5","_error$response5$data","clearError","getters","isAuthenticated","currentUser","namespaced"],"sources":["C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/store/modules/user.js"],"sourcesContent":["import authApi from '@/api/auth';\nimport userApi from '@/api/user';\n\nconst state = {\n  token: localStorage.getItem('token') || '',\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  loading: false,\n  error: null\n};\n\nconst mutations = {\n  AUTH_REQUEST(state, loading = true) {\n    state.loading = loading;\n    if (loading) {\n      state.error = null;\n    }\n  },\n  AUTH_SUCCESS(state, { token, user }) {\n    state.loading = false;\n    state.token = token;\n    state.user = user;\n    state.error = null;\n  },\n  AUTH_ERROR(state, error) {\n    state.loading = false;\n    state.error = error;\n  },\n  LOGOUT(state) {\n    state.token = '';\n    state.user = null;\n  },\n  CLEAR_ERROR(state) {\n    state.error = null;\n  },\n  UPDATE_USER_PROFILE(state, userData) {\n    state.user = { ...state.user, ...userData };\n    localStorage.setItem('user', JSON.stringify(state.user));\n  },\n  SET_USER_PROFILE(state, profile) {\n    state.user = { ...state.user, ...profile };\n    localStorage.setItem('user', JSON.stringify(state.user));\n  }\n};\n\nconst actions = {\n  // 登录\n  async login({ commit, dispatch }, credentials) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await authApi.login(credentials);\n      \n      if (response.success) {\n        const { token, userId, username } = response.data;\n        \n        // 保存认证信息\n        localStorage.setItem('token', token);\n        \n        // 创建简单用户对象\n        const user = {\n          id: userId,\n          username: username\n        };\n        \n        // 保存用户信息\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        commit('AUTH_SUCCESS', { token, user });\n        \n        // 登录成功后获取完整用户信息\n        dispatch('getUserProfile');\n        \n        return Promise.resolve(response);\n      } else {\n        commit('AUTH_ERROR', response.message || '登录失败');\n        return Promise.reject(response);\n      }\n    } catch (error) {\n      let errorMsg = '登录失败，请稍后重试';\n      \n      // 尝试从不同位置获取错误信息\n      if (error.response) {\n        if (error.response.data) {\n          if (error.response.data.message) {\n            errorMsg = error.response.data.message;\n          } else if (error.response.data.detail) {\n            errorMsg = error.response.data.detail;\n          } else if (typeof error.response.data === 'string') {\n            errorMsg = error.response.data;\n          }\n        } else if (error.response.statusText) {\n          errorMsg = `服务器错误 (${error.response.status}): ${error.response.statusText}`;\n        }\n      } else if (error.message) {\n        errorMsg = error.message;\n      }\n      \n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject({ ...error, message: errorMsg });\n    }\n  },\n  \n  // 注册\n  async register({ commit }, userData) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await authApi.register(userData);\n      \n      if (response.success) {\n        return Promise.resolve(response);\n      } else {\n        commit('AUTH_ERROR', response.message);\n        return Promise.reject(response);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || '注册失败，请稍后重试';\n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject(error);\n    }\n  },\n  \n  // 登出\n  async logout({ commit }) {\n    try {\n      await authApi.logout();\n    } catch (error) {\n      console.error('登出请求失败，但会继续清除本地会话', error);\n    }\n    \n    // 清除本地存储\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    \n    // 更新状态\n    commit('LOGOUT');\n    \n    return Promise.resolve();\n  },\n  \n  // 请求重置密码\n  async requestPasswordReset({ commit }, { email }) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await authApi.requestPasswordReset({ email });\n      \n      if (response.success) {\n        commit('AUTH_SUCCESS', { token: '', user: null });\n        return Promise.resolve(response);\n      } else {\n        commit('AUTH_ERROR', response.message);\n        return Promise.reject(response);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || '请求重置密码失败，请稍后重试';\n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject(error);\n    }\n  },\n  \n  // 重置密码\n  async resetPassword({ commit }, resetData) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await authApi.resetPassword(resetData);\n      \n      if (response.success) {\n        commit('AUTH_SUCCESS', { token: '', user: null });\n        return Promise.resolve(response);\n      } else {\n        commit('AUTH_ERROR', response.message);\n        return Promise.reject(response);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || '重置密码失败，请稍后重试';\n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject(error);\n    }\n  },\n  \n  // 获取用户个人信息\n  async getUserProfile({ commit }) {\n    commit('AUTH_REQUEST');\n    try {\n      console.log('开始获取用户个人信息');\n      const response = await userApi.getUserProfile();\n      console.log('获取用户个人信息响应:', response);\n      \n      // 检查不同响应格式\n      let userData = null;\n      \n      if (response && response.success && response.data) {\n        // 标准格式 {success: true, data: {...}}\n        console.log('检测到标准响应格式');\n        userData = response.data;\n      } else if (response && response.code === 200 && response.data) {\n        // 格式 {code: 200, data: {...}}\n        console.log('检测到code=200响应格式');\n        userData = response.data;\n      } else if (response && typeof response === 'object' && response.id) {\n        // 直接返回数据对象 {id: ..., username: ...}\n        console.log('检测到直接返回数据对象格式');\n        userData = response;\n      } else {\n        console.error('无法解析用户信息响应:', response);\n        commit('AUTH_ERROR', '获取用户信息失败：响应格式错误');\n        return Promise.reject({message: '响应格式错误'});\n      }\n      \n      // 检查公司ID\n      if (!userData.company) {\n        console.warn('用户数据中未包含公司ID:', userData);\n      }\n      \n      commit('SET_USER_PROFILE', userData);\n      console.log('用户信息已更新到Vuex和localStorage');\n      return Promise.resolve({success: true, data: userData});\n    } catch (error) {\n      console.error('获取用户信息失败, 详细错误:', error);\n      let errorMsg = '获取用户信息失败，请稍后重试';\n      \n      if (error.response) {\n        console.error('错误状态码:', error.response.status);\n        console.error('错误响应数据:', error.response.data);\n        \n        if (error.response.status === 403) {\n          errorMsg = '您没有权限获取用户信息，请重新登录';\n        } else if (error.response.data && typeof error.response.data === 'object') {\n          if (error.response.data.message) {\n            errorMsg = error.response.data.message;\n          } else if (error.response.data.detail) {\n            errorMsg = error.response.data.detail;\n          }\n        }\n      } else if (error.message) {\n        errorMsg = error.message;\n      }\n      \n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject({...error, message: errorMsg});\n    }\n  },\n  \n  // 更新用户个人信息\n  async updateUserProfile({ commit }, profileData) {\n    commit('AUTH_REQUEST');\n    try {\n      // 记录发送到API的数据\n      console.log('发送到API的数据:', profileData);\n      \n      const response = await userApi.updateUserProfile(profileData);\n      \n      if (response.success) {\n        commit('UPDATE_USER_PROFILE', response.data);\n        return Promise.resolve(response);\n      } else {\n        const errorMsg = response.message || '更新用户信息失败';\n        commit('AUTH_ERROR', errorMsg);\n        return Promise.reject(errorMsg);\n      }\n    } catch (error) {\n      // 更详细的错误处理\n      console.error('用户信息更新错误:', error);\n      \n      let errorMsg = '更新用户信息失败，请稍后重试';\n      \n      // 尝试从错误对象获取更详细的信息\n      if (typeof error === 'string') {\n        errorMsg = error;\n      } else if (error.message) {\n        errorMsg = error.message;\n      } else if (error.response && error.response.data) {\n        if (typeof error.response.data === 'string') {\n          errorMsg = error.response.data;\n        } else if (error.response.data.message) {\n          errorMsg = error.response.data.message;\n        } else if (error.response.data.detail) {\n          errorMsg = error.response.data.detail;\n        } else if (error.response.data.error) {\n          errorMsg = error.response.data.error;\n        } else {\n          // 尝试提取字段错误\n          const errorFields = [];\n          for (const field in error.response.data) {\n            if (Array.isArray(error.response.data[field])) {\n              errorFields.push(`${field}: ${error.response.data[field].join(', ')}`);\n            }\n          }\n          if (errorFields.length > 0) {\n            errorMsg = errorFields.join('; ');\n          }\n        }\n      }\n      \n      commit('AUTH_ERROR', errorMsg);\n      \n      // 返回字符串错误，而不是复杂对象\n      return Promise.reject(errorMsg);\n    }\n  },\n  \n  // 更新用户头像\n  async updateUserAvatar({ commit }, formData) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await userApi.updateUserAvatar(formData);\n      \n      if (response.success) {\n        commit('UPDATE_USER_PROFILE', { avatar: response.data.avatar });\n        return Promise.resolve(response);\n      } else {\n        commit('AUTH_ERROR', response.message || '更新头像失败');\n        return Promise.reject(response);\n      }\n    } catch (error) {\n      const errorMsg = error.response?.data?.message || '更新头像失败，请稍后重试';\n      commit('AUTH_ERROR', errorMsg);\n      return Promise.reject(error);\n    }\n  },\n  \n  // 修改密码\n  async changePassword({ commit }, passwordData) {\n    commit('AUTH_REQUEST');\n    try {\n      const response = await userApi.changePassword(passwordData);\n      \n      if (response.success) {\n        commit('CLEAR_ERROR');\n        return Promise.resolve(response);\n      } else {\n        // 检查是否是当前密码不正确的错误\n        const isOldPasswordError = response.fieldErrors && \n          response.fieldErrors.old_password && \n          Array.isArray(response.fieldErrors.old_password) && \n          response.fieldErrors.old_password.includes(\"Incorrect password.\");\n          \n        // 只有在不是当前密码错误的情况下才设置全局错误状态\n        if (!isOldPasswordError) {\n          commit('AUTH_ERROR', response.message || '修改密码失败');\n        } else {\n          // 清除可能存在的错误\n          commit('CLEAR_ERROR');\n        }\n        \n        return response; // 对于验证结果不使用Promise.reject，而是直接返回\n      }\n    } catch (error) {\n      // 检查是否是预期的密码验证结果\n      if (error.isValidationResult) {\n        // 清除错误状态\n        commit('CLEAR_ERROR');\n        // 直接返回验证结果\n        return error;\n      }\n      \n      // 检查是否是当前密码不正确的错误\n      const isOldPasswordError = error.fieldErrors && \n        error.fieldErrors.old_password && \n        Array.isArray(error.fieldErrors.old_password) && \n        error.fieldErrors.old_password.includes(\"Incorrect password.\");\n        \n      // 只有在不是当前密码错误的情况下才设置全局错误状态\n      if (!isOldPasswordError) {\n        const errorMsg = error.response?.data?.message || '修改密码失败，请稍后重试';\n        commit('AUTH_ERROR', errorMsg);\n      } else {\n        // 清除可能存在的错误\n        commit('CLEAR_ERROR');\n      }\n      \n      return Promise.reject(error);\n    } finally {\n      // 结束loading状态\n      commit('AUTH_REQUEST', false);\n    }\n  },\n  \n  // 清除错误\n  clearError({ commit }) {\n    commit('CLEAR_ERROR');\n  }\n};\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  currentUser: state => state.user,\n  loading: state => state.loading,\n  error: state => state.error\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n}; "],"mappings":"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","ignoreList":[]}]}