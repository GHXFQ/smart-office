{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue?vue&type=template&id=67a25b4b&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue","mtime":1751984522898},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","ref","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","backgroundColor","padding","$setup","sessionsLoading","_hoisted_2","_component_el_alert","title","type","closable","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_el_input","searchQuery","$event","placeholder","clearable","Search","_component_el_button","circle","size","onClick","refreshChatSessions","_component_el_icon","_component_Refresh","_hoisted_7","_Fragment","_renderList","tabs","tab","index","key","_normalizeClass","activeTab","_hoisted_8","_hoisted_9","Object","keys","groupedUsersByDepartment","length","_hoisted_10","departmentUsers","deptName","_hoisted_11","_toDisplayString","contact","id","selectedContact","selectContact","_hoisted_13","avatar","avatar_url","_normalizeStyle","color","_hoisted_14","initial","src","alt","status","_hoisted_16","_hoisted_17","name","_hoisted_18","lastTime","_hoisted_19","lastMessage","unread","_createBlock","_component_el_badge","value","_hoisted_20","_component_el_skeleton","rows","animated","filteredContacts","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_component_el_empty","description","image","_withCtx","_component_UserFilled","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","currentContact","_hoisted_34","_hoisted_36","getStatusText","_hoisted_37","_component_el_tooltip","content","placement","openSummaryDialog","_cache","xmlns","width","height","fill","viewBox","d","_hoisted_38","messages","message","sender","userId","_hoisted_39","_hoisted_40","getSenderColor","_hoisted_41","getSenderInitial","onContextmenu","_withModifiers","openContextMenu","message_type","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","toggleImageExpand","file","downloadFile","_hoisted_51","_hoisted_52","_component_Document","_hoisted_53","_hoisted_54","_hoisted_55","getFileName","file_name","_hoisted_56","getFileExtension","_hoisted_57","_hoisted_58","formatFileSize","file_size","viewKnowledge","_hoisted_60","_hoisted_61","_component_Reading","_hoisted_62","_hoisted_63","knowledge_detail","_hoisted_64","_hoisted_65","_hoisted_66","file_type","_hoisted_67","formatMessageTime","created_at","messagesLoading","_hoisted_68","_component_ChatLineSquare","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","openImageUpload","loading","imageUploading","_component_PictureFilled","openFileUpload","fileUploading","_component_FolderOpened","_hoisted_73","messageInput","resize","onKeyup","_withKeys","sendMessage","_hoisted_74","_component_Position","_hoisted_75","_hoisted_76","_component_ChatDotSquare","onChange","args","handleFileUpload","accept","handleImageUpload","_component_el_dialog","knowledgeDialogVisible","footer","_hoisted_77","_component_el_table","data","knowledgeList","onRowClick","selectKnowledge","_component_el_table_column","prop","label","default","scope","_component_el_tag","row","formatDate","shareKnowledge","knowledgeLoading","summaryDialogVisible","onClose","handleCloseSummaryDialog","top","_hoisted_82","handleSummarize","disabled","summaryLoading","_hoisted_78","_component_el_form","_component_el_form_item","_component_el_date_picker","summaryDateRange","pickerOptions","summaryContent","_hoisted_79","_hoisted_80","_hoisted_81","expandedImage","contextMenuStyle","addToCalendarFromMessage","_component_Calendar","copyMessageContent","_component_DocumentCopy","contextMenuVisible","calendarDialogVisible","_hoisted_85","submitCalendarEvent","isSubmitting","_hoisted_84","model","calendarEvent","rules","calendarRules","start","format","end","location","_component_el_select","_component_el_option","reminder","isAnalyzing"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n        <el-card class=\"chat-card\" :body-style=\"{backgroundColor: 'transparent', padding: 0}\">\n          <div class=\"chat-header-actions\" v-if=\"sessionsLoading\">\n            <el-alert\n              title=\"正在加载数据...\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n          <div class=\"chat-layout\">\n            <!-- 左侧联系人列表 -->\n            <div class=\"chat-sidebar\">\n              <!-- 搜索框 -->\n              <div class=\"search-box\">\n                <div class=\"search-header\">\n                  <el-input \n                    v-model=\"searchQuery\" \n                    placeholder=\"搜索联系人...\"\n                    clearable\n                    :prefix-icon=\"Search\"\n                  ></el-input>\n                  <el-button circle size=\"small\" @click=\"refreshChatSessions\" title=\"刷新列表\">\n                    <el-icon><Refresh /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 聊天标签页 -->\n              <div class=\"chat-tabs\">\n                <div \n                  v-for=\"(tab, index) in tabs\" \n                  :key=\"index\"\n                  class=\"chat-tab\"\n                  :class=\"{'active': activeTab === index}\"\n                  @click=\"activeTab = index\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              \n              <!-- 联系人列表 -->\n              <div class=\"contacts-list\">\n                <!-- 部门分组显示 (仅在同事标签页显示) -->\n                <template v-if=\"activeTab === 1\">\n                  <div v-if=\"!sessionsLoading && Object.keys(groupedUsersByDepartment).length > 0\">\n                    <div v-for=\"(departmentUsers, deptName) in groupedUsersByDepartment\" :key=\"deptName\" class=\"department-group\">\n                      <div class=\"department-header\">{{ deptName }}</div>\n                      <div \n                        v-for=\"contact in departmentUsers\" \n                        :key=\"contact.id\"\n                        class=\"contact-item\"\n                        :class=\"{'active': selectedContact === contact.id}\"\n                        @click=\"selectContact(contact)\"\n                      >\n                        <div class=\"contact-avatar\">\n                          <div \n                            v-if=\"!contact.avatar && !contact.avatar_url\" \n                            class=\"avatar\" \n                            :style=\"{backgroundColor: contact.color}\"\n                          >\n                            <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                          </div>\n                          <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                          <div \n                            class=\"contact-status\" \n                            :class=\"'status-' + contact.status\"\n                          ></div>\n                        </div>\n                        <div class=\"contact-info\">\n                          <div class=\"contact-name\">\n                            <span>{{ contact.name }}</span>\n                            <span class=\"time\">{{ contact.lastTime }}</span>\n                          </div>\n                          <div class=\"contact-message\">\n                            <span>{{ contact.lastMessage }}</span>\n                            <el-badge \n                              v-if=\"contact.unread\" \n                              :value=\"contact.unread\" \n                              class=\"message-badge\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div v-else-if=\"!sessionsLoading\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                </template>\n                \n                <!-- 最近聊天标签页 -->\n                <template v-else>\n                  <div \n                    v-for=\"contact in filteredContacts\" \n                    :key=\"contact.id\"\n                    class=\"contact-item\"\n                    :class=\"{'active': selectedContact === contact.id}\"\n                    @click=\"selectContact(contact)\"\n                  >\n                    <div class=\"contact-avatar\">\n                      <div \n                        v-if=\"!contact.avatar && !contact.avatar_url\" \n                        class=\"avatar\" \n                        :style=\"{backgroundColor: contact.color}\"\n                      >\n                        <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                      </div>\n                      <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                      <div \n                        class=\"contact-status\" \n                        :class=\"'status-' + contact.status\"\n                      ></div>\n                    </div>\n                    <div class=\"contact-info\">\n                      <div class=\"contact-name\">\n                        <span>{{ contact.name }}</span>\n                        <span class=\"time\">{{ contact.lastTime }}</span>\n                      </div>\n                      <div class=\"contact-message\">\n                        <span>{{ contact.lastMessage }}</span>\n                        <el-badge \n                          v-if=\"contact.unread\" \n                          :value=\"contact.unread\" \n                          class=\"message-badge\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- 在最近聊天标签页，如果没有聊天记录，显示提示 -->\n                  <div v-if=\"!sessionsLoading && filteredContacts.length === 0\" class=\"empty-contacts\">\n                    <el-empty \n                      description=\"暂无联系人\" \n                      :image-size=\"100\"\n                    >\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><UserFilled /></el-icon>\n                      </template>\n                    </el-empty>\n                  </div>\n                </template>\n\n                <!-- 无联系人提示 -->\n                <div v-if=\"sessionsLoading\" class=\"loading-container\">\n                  <el-skeleton :rows=\"5\" animated />\n                </div>\n              </div>\n            </div>\n            \n            <!-- 右侧聊天内容 -->\n            <div class=\"chat-content\">\n              <!-- 聊天头部 -->\n              <div class=\"chat-header\" v-if=\"selectedContact !== null\">\n                <div class=\"contact-avatar\">\n                  <div \n                    v-if=\"!currentContact.avatar && !currentContact.avatar_url\" \n                    class=\"avatar\" \n                    :style=\"{backgroundColor: currentContact.color}\"\n                  >\n                    <span class=\"avatar-initial\">{{ currentContact.initial || '?' }}</span>\n                  </div>\n                  <img \n                    v-else \n                    :src=\"currentContact.avatar_url || currentContact.avatar\" \n                    alt=\"avatar\" \n                    class=\"avatar\" \n                  />\n                  <div \n                    class=\"contact-status\" \n                    :class=\"'status-' + (currentContact.status || 'online')\"\n                  ></div>\n                </div>\n                <div class=\"contact-info\">\n              <h6>{{ currentContact.name || '未命名联系人' }}</h6>\n              <p>{{ getStatusText(currentContact.status || 'online') }}</p>\n                </div>\n                <div class=\"chat-actions\">\n                  <el-tooltip content=\"AI总结\" placement=\"bottom\">\n                    <el-button @click=\"openSummaryDialog\" circle>\n                      <el-icon><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-robot\" viewBox=\"0 0 16 16\">\n                        <path d=\"M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5M3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.6 26.6 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.93.93 0 0 1-.765.935c-.845.147-2.34.346-4.235.346s-3.39-.2-4.235-.346A.93.93 0 0 1 3 9.22z\"/>\n                        <path d=\"M4 1.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M12 1a2 2 0 0 1 2 2v10.5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zM4 0a1 1 0 0 0-1 1v10.5a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1z\"/>\n                      </svg></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n              </div>\n              \n              <!-- 聊天消息区域 -->\n              <div class=\"chat-messages\" v-if=\"selectedContact !== null\" ref=\"messageContainer\">\n                <!-- 有消息时显示消息列表 -->\n                <template v-if=\"messages.length > 0\">\n                  <div \n                    v-for=\"(message, index) in messages\" \n                    :key=\"message.id || index\"\n                    class=\"message\"\n                    :class=\"message.sender.id === userId ? 'message-sent' : 'message-received'\"\n                  >\n                    <div class=\"message-container\">\n                      <div v-if=\"message.sender.id !== userId\" class=\"message-avatar\">\n                        <div \n                          v-if=\"!message.sender.avatar && !message.sender.avatar_url\" \n                          class=\"avatar small\" \n                          :style=\"{backgroundColor: getSenderColor(message.sender)}\"\n                        >\n                          <span class=\"avatar-initial\">{{ getSenderInitial(message.sender) }}</span>\n                        </div>\n                        <img \n                          v-else \n                          :src=\"message.sender.avatar_url || message.sender.avatar\" \n                          alt=\"avatar\" \n                          class=\"avatar small\" \n                        />\n                      </div>\n                      <div class=\"message-content-wrapper\" @contextmenu.prevent=\"openContextMenu($event, message)\">\n                        <div \n                          class=\"message-content\"\n                          :class=\"message.sender.id === userId ? 'sent' : 'received'\"\n                        >\n                          <div v-if=\"message.message_type === 'text'\" class=\"text-card\">\n                            <div class=\"text-card-inner\">\n                              {{ message.content }}\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'image'\" class=\"image-card\">\n                            <div class=\"image-card-inner\">\n                              <div class=\"image-preview\" @click=\"toggleImageExpand(message.file)\">\n                                <img :src=\"message.file\" alt=\"image\" />\n                              </div>\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'file'\" class=\"file-card\" @click=\"downloadFile(message)\">\n                            <div class=\"file-card-inner\">\n                              <div class=\"file-icon\">\n                                <el-icon><Document /></el-icon>\n                              </div>\n                              <div class=\"file-info\">\n                                <div class=\"file-name\">\n                                  <span class=\"file-name-main\">{{ getFileName(message.file_name) }}</span><!--\n                                --><span class=\"file-name-ext\">{{ getFileExtension(message.file_name) }}</span>\n                                </div>\n                                <div class=\"file-meta\">\n                                  <span class=\"file-size\">{{ formatFileSize(message.file_size) }}</span>\n                                  <span class=\"file-download-hint\">点击下载</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'knowledge'\" class=\"knowledge-card\" @click=\"viewKnowledge(message)\">\n                            <div class=\"knowledge-card-inner\">\n                              <div class=\"knowledge-icon\">\n                                <el-icon><Reading /></el-icon>\n                              </div>\n                              <div class=\"knowledge-content\">\n                                <div class=\"knowledge-title\">{{ message.knowledge_detail.title }}</div>\n                                <div class=\"knowledge-desc\">{{ message.knowledge_detail.description }}</div>\n                                <div class=\"knowledge-footer\">\n                                  <span class=\"knowledge-type\">{{ message.knowledge_detail.file_type }}</span>\n                                  <span class=\"knowledge-view\">查看详情</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"message-time\">{{ formatMessageTime(message.created_at) }}</div>\n                      </div>\n                    </div>\n                  </div>\n                </template>\n                \n                <!-- 没有消息时显示空提示 -->\n                <template v-else-if=\"!messagesLoading\">\n                  <div class=\"empty-messages\">\n                    <el-empty description=\"暂无消息记录\">\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><ChatLineSquare /></el-icon>\n                      </template>\n                      <p>发送第一条消息开始对话吧</p>\n                    </el-empty>\n                  </div>\n                </template>\n                \n                <!-- 加载中显示骨架屏 -->\n                <template v-else>\n                  <div class=\"loading-messages\">\n                    <el-skeleton :rows=\"3\" animated />\n                    <el-skeleton style=\"margin-top: 20px\" :rows=\"2\" animated />\n                    <div style=\"text-align: right; margin-top: 20px\">\n                      <el-skeleton :rows=\"2\" animated />\n                    </div>\n                  </div>\n                </template>\n              </div>\n              \n              <!-- 聊天输入框 -->\n              <div class=\"chat-input\" v-if=\"selectedContact !== null\">\n                <div class=\"chat-tools\">\n                  <el-tooltip content=\"发送图片\" placement=\"top\">\n                    <el-button circle @click=\"openImageUpload\" :loading=\"imageUploading\">\n                      <el-icon><PictureFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"发送文件\" placement=\"top\">\n                    <el-button circle @click=\"openFileUpload\" :loading=\"fileUploading\">\n                      <el-icon><FolderOpened /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <!-- <el-tooltip content=\"分享知识库文件\" placement=\"top\">\n                    <el-button circle @click=\"openKnowledgeDialog\">\n                      <el-icon><Reading /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"语音消息\" placement=\"top\">\n                    <el-button circle>\n                      <el-icon><Microphone /></el-icon>\n                    </el-button>\n                  </el-tooltip> -->\n                </div>\n                <div class=\"input-area\">\n                  <el-input\n                    v-model=\"messageInput\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    placeholder=\"输入消息...\"\n                    resize=\"none\"\n                    @keyup.enter.prevent=\"sendMessage\"\n                  ></el-input>\n                </div>\n                <div class=\"send-button\">\n                  <el-button type=\"primary\" @click=\"sendMessage\">\n                    <el-icon><Position /></el-icon>\n                    发送\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 无选中联系人提示 -->\n              <div class=\"empty-chat\" v-if=\"selectedContact === null\">\n                <div class=\"empty-illustration\">\n                  <el-icon :size=\"64\"><ChatDotSquare /></el-icon>\n                </div>\n                <h4>选择一个联系人开始聊天</h4>\n                <p>从左侧列表选择联系人开始对话</p>\n              </div>\n            </div>\n          </div>\n        </el-card>\n  \n  <!-- 隐藏的文件上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"fileInput\" \n    style=\"display: none\" \n    @change=\"handleFileUpload\" \n  />\n  \n  <!-- 隐藏的图片上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"imageInput\" \n    style=\"display: none\" \n    accept=\"image/*\" \n    @change=\"handleImageUpload\" \n  />\n  \n  <!-- 知识库选择对话框 -->\n  <el-dialog\n    v-model=\"knowledgeDialogVisible\"\n    title=\"选择知识库文件\"\n    width=\"50%\"\n  >\n    <el-table\n      v-loading=\"knowledgeLoading\"\n      :data=\"knowledgeList\"\n      style=\"width: 100%\"\n      @row-click=\"selectKnowledge\"\n    >\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n      <el-table-column prop=\"file_type\" label=\"类型\">\n        <template #default=\"scope\">\n          <el-tag>{{ scope.row.file_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"shareKnowledge(scope.row)\">\n            分享\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"knowledgeDialogVisible = false\">取消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n\n  <!-- AI总结对话框 -->\n  <el-dialog\n    v-model=\"summaryDialogVisible\"\n    title=\"AI 聊天总结\"\n    width=\"50%\"\n    @close=\"handleCloseSummaryDialog\"\n    top=\"5vh\"\n  >\n    <div v-loading=\"summaryLoading\" element-loading-text=\"正在生成摘要，请稍候...\">\n      <el-form label-position=\"top\" style=\"margin-bottom: 20px;\">\n        <el-form-item label=\"选择要总结的消息时间范围\">\n          <el-date-picker\n            v-model=\"summaryDateRange\"\n            type=\"datetimerange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            :picker-options=\"pickerOptions\"\n            style=\"width: 100%;\"\n          />\n        </el-form-item>\n      </el-form>\n      <div v-if=\"summaryContent\" class=\"summary-content-wrapper\">\n        <el-alert title=\"AI 总结要点\" type=\"info\" :closable=\"false\" show-icon class=\"summary-title\"></el-alert>\n        <div class=\"summary-content\">\n          <p style=\"white-space: pre-wrap;\">{{ summaryContent }}</p>\n        </div>\n      </div>\n       <el-empty v-if=\"!summaryContent && !summaryLoading\" description=\"暂无摘要，请选择时间范围后点击\" />\n    </div>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"handleCloseSummaryDialog\">关闭</el-button>\n        <el-button type=\"primary\" @click=\"handleSummarize\" :disabled=\"summaryLoading\">\n          {{ summaryLoading ? '生成中...' : '生成摘要' }}\n        </el-button>\n      </span>\n    </template>\n  </el-dialog>\n\n  <!-- 替换图片预览对话框为内联展示 -->\n  <div class=\"fullscreen-image-preview\" v-if=\"expandedImage\" @click=\"expandedImage = null\">\n    <img :src=\"expandedImage\" alt=\"预览图片\" class=\"fullscreen-preview-image\" />\n  </div>\n  \n  <!-- 移除原有的图片预览对话框 -->\n  <!-- <el-dialog\n    v-model=\"imagePreviewVisible\"\n    :title=\"false\"\n    width=\"80%\"\n    center\n    append-to-body\n    :show-close=\"true\"\n    class=\"image-preview-dialog\"\n  >\n    <img :src=\"previewImageUrl\" alt=\"预览图片\" class=\"preview-image\" />\n  </el-dialog> -->\n\n  <!-- 聊天右键菜单 -->\n  <div class=\"chat-context-menu\" v-show=\"contextMenuVisible\" :style=\"contextMenuStyle\">\n    <div class=\"context-menu-item\" @click=\"addToCalendarFromMessage\">\n      <el-icon><Calendar /></el-icon>\n      <span>添加到日程</span>\n    </div>\n    <div class=\"context-menu-item\" @click=\"copyMessageContent\">\n      <el-icon><DocumentCopy /></el-icon>\n      <span>复制内容</span>\n    </div>\n  </div>\n\n  <!-- 添加日程对话框 -->\n  <el-dialog\n    v-model=\"calendarDialogVisible\"\n    title=\"添加日程\"\n    width=\"500px\"\n  >\n    <div v-loading=\"isAnalyzing\" element-loading-text=\"AI分析中...\">\n      <el-form :model=\"calendarEvent\" :rules=\"calendarRules\" ref=\"calendarFormRef\" label-width=\"80px\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"calendarEvent.title\" placeholder=\"请输入日程标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始时间\" prop=\"start\">\n          <el-date-picker\n            v-model=\"calendarEvent.start\"\n            type=\"datetime\"\n            placeholder=\"选择开始时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束时间\" prop=\"end\">\n          <el-date-picker\n            v-model=\"calendarEvent.end\"\n            type=\"datetime\"\n            placeholder=\"选择结束时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"地点\" prop=\"location\">\n          <el-input v-model=\"calendarEvent.location\" placeholder=\"请输入地点\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\">\n          <el-select v-model=\"calendarEvent.type\" placeholder=\"请选择日程类型\">\n            <el-option label=\"会议\" value=\"blue\"></el-option>\n            <el-option label=\"出差\" value=\"orange\"></el-option>\n            <el-option label=\"假期\" value=\"green\"></el-option>\n            <el-option label=\"截止日期\" value=\"red\"></el-option>\n            <el-option label=\"其他\" value=\"purple\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提醒\" prop=\"reminder\">\n          <el-select v-model=\"calendarEvent.reminder\" placeholder=\"请选择提醒时间\">\n            <el-option label=\"不提醒\" value=\"none\"></el-option>\n            <el-option label=\"10分钟前\" value=\"10min\"></el-option>\n            <el-option label=\"30分钟前\" value=\"30min\"></el-option>\n            <el-option label=\"1小时前\" value=\"1hour\"></el-option>\n            <el-option label=\"1天前\" value=\"1day\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input \n            v-model=\"calendarEvent.description\" \n            type=\"textarea\" \n            :rows=\"3\"\n            placeholder=\"请输入描述信息\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n    </div>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"calendarDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitCalendarEvent\" :loading=\"isSubmitting\">确认添加</el-button>\n      </div>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, nextTick, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, \n  Refresh, \n  ChatDotSquare, \n  UserFilled, \n  ChatLineSquare,\n  PictureFilled,\n  FolderOpened,\n  Reading,\n  Microphone,\n  Position,\n  Document,\n  Calendar,\n  DocumentCopy\n} from '@element-plus/icons-vue'\nimport { \n  getChatSessions, \n  getChatSession, \n  sendTextMessage, \n  sendImageMessage,\n  sendKnowledgeMessage,\n  downloadMessageFile,\n  sendFileMessage,\n  summarizeChat,\n  analyzeForCalendar,\n  createCalendarEvent\n} from '@/api/chat'\nimport { getKnowledgeList } from '@/api/knowledge'\n// eslint-disable-next-line no-unused-vars\nimport { formatDate } from '@/utils/date'\nimport request from '@/utils/request'\nimport { aiChatWithDocuments } from '@/api/ai'\n\nexport default {\n  name: 'Chat',\n  components: {\n    Calendar,\n    DocumentCopy\n  },\n  \n  setup() {\n    const store = useStore()\n    const currentUser = computed(() => store.getters.user)\n    \n    // 添加本地用户数据存储\n    const userInfo = ref(null)\n    \n    const searchQuery = ref('')\n    const activeTab = ref(0)\n    const selectedContact = ref(null)\n    const messageInput = ref('')\n    const messageContainer = ref(null)\n    const fileInput = ref(null)\n    const imageInput = ref(null)\n    const messages = ref([])\n    const sessionsLoading = ref(false)\n    const messagesLoading = ref(false)\n    const chatSessions = ref([])\n    const currentChatId = ref(null)\n    \n    // 知识库相关\n    const knowledgeDialogVisible = ref(false)\n    const knowledgeLoading = ref(false)\n    const knowledgeList = ref([])\n    const selectedKnowledge = ref(null)\n    \n    // 标签页\n    const tabs = ref(['最近聊天', '同事'])\n    \n    // 联系人列表\n    const contacts = ref([])\n    // 所有同事用户列表\n    const allColleagues = ref([])\n    \n    // 部门列表\n    const departments = ref([])\n    \n    // 当前选中的联系人\n    const currentContact = computed(() => {\n      if (selectedContact.value === null) return {}\n      return contacts.value.find(c => c.id === selectedContact.value) || {}\n    })\n    \n    // 安全地获取用户ID，避免模板中的null错误\n    const userId = computed(() => {\n      return userInfo.value?.id || null\n    })\n    \n    // 根据搜索过滤联系人\n    const filteredContacts = computed(() => {\n      if (!searchQuery.value) return contacts.value\n      return contacts.value.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n      )\n    })\n    \n    // 根据当前激活的标签页获取要显示的联系人\n    const getActiveContacts = computed(() => {\n      if (activeTab.value === 0) {\n        return filteredContacts.value\n      } else if (activeTab.value === 1) {\n        return filteredContacts.value.filter(contact => !contact.isGroup)\n      }\n      return filteredContacts.value\n    })\n    \n    \n    // 按部门分组的用户\n    const groupedUsersByDepartment = computed(() => {\n      // 合并聊天联系人和所有同事\n      const usersMap = new Map();\n      \n      // 先添加聊天联系人（非群组）\n      filteredContacts.value\n        .filter(contact => !contact.isGroup)\n        .forEach(contact => {\n          // 跳过自己\n          if (userInfo.value && contact.userId === userInfo.value.id) {\n            return;\n          }\n          // 使用ID作为唯一键\n          usersMap.set(contact.userId || contact.id, contact);\n        });\n      \n      // 再添加所有同事，但避免重复\n      allColleagues.value.forEach(colleague => {\n        // 跳过自己\n        if (userInfo.value && colleague.id === userInfo.value.id) {\n          return;\n        }\n        \n        // 只有在不存在时才添加（避免覆盖现有联系人）\n        if (!usersMap.has(colleague.id)) {\n          // 构造兼容格式的用户对象\n          const contact = {\n            id: 'user_' + colleague.id, // 添加前缀以避免与现有会话ID冲突\n            userId: colleague.id,\n            name: (colleague.name || colleague.username || '未命名联系人').trim(),\n            initial: ((colleague.name || colleague.username || '未命名联系人')[0]),\n            avatar: colleague.avatar || '',\n            color: getRandomColor(colleague.id),\n            status: 'online',\n            lastMessage: '',\n            lastTime: '',\n            unread: 0,\n            isGroup: false,\n            department: colleague.department || '其它'\n          };\n          usersMap.set(colleague.id, contact);\n        }\n      });\n      \n      // 创建一个部门ID到名称的映射\n      const departmentMap = new Map(departments.value.map(dept => [dept.id, dept.name]))\n      \n      // 按部门分组\n      const groupedUsers = {};\n      \n      // 将Map转为Array后分组\n      Array.from(usersMap.values()).forEach(user => {\n        const departmentName = departmentMap.get(user.department) || '其他';\n        if (!groupedUsers[departmentName]) {\n          groupedUsers[departmentName] = [];\n        }\n        groupedUsers[departmentName].push(user);\n      });\n      \n      return groupedUsers;\n    })\n    \n    // 路由\n    const route = useRoute()\n    \n    // 定义一个refreshInterval的引用，以便在组件卸载时清除\n    let refreshInterval = null\n    \n    // 组件卸载时清除定时器\n    onBeforeUnmount(() => {\n      if (refreshInterval) {\n        clearInterval(refreshInterval)\n      }\n    })\n    \n    // 路由相关操作\n    onMounted(async () => {\n      try {\n        // 先加载用户数据\n        const userData = await fetchCurrentUser()\n        \n        // 如果获取用户信息失败，显示错误并返回\n        if (!userData) {\n          ElMessage.error('无法加载用户信息，请刷新页面重试')\n          return\n        }\n        \n        console.log('组件挂载时获取的用户信息:', userData)\n        \n        // 确保用户数据已经更新\n        if (!userInfo.value || !userInfo.value.id) {\n          console.error('用户数据未正确加载:', userInfo.value)\n          ElMessage.error('用户数据加载异常，请刷新页面重试')\n          return\n        } else {\n          console.log('当前用户数据已正确加载:', userInfo.value)\n        }\n        \n        // 加载所有用户列表\n        await loadAllUsers()\n        \n        // 加载部门列表\n        await loadDepartments()\n        \n        // 再加载聊天会话列表\n        await loadChatSessions()\n        \n        // 检查URL参数中是否有会话ID\n        const sessionId = route.query.session || route.query.id\n        if (sessionId) {\n          // 查找对应的联系人\n          const foundContact = contacts.value.find(c => c.id === parseInt(sessionId))\n          if (foundContact) {\n            // 选中该联系人\n            selectedContact.value = foundContact.id\n            // 加载聊天记录\n            await loadChatMessages(sessionId)\n          } else {\n            // 如果未找到对应联系人，尝试直接加载会话\n            console.log('通过ID直接加载聊天会话:', sessionId)\n            await loadChatMessages(sessionId)\n          }\n        }\n      \n        // 设置定时刷新\n        refreshInterval = setInterval(async () => {\n          if (selectedContact.value) {\n            await loadChatMessages(selectedContact.value, true)\n          }\n          await loadChatSessions(true)\n        }, 30000)\n        \n        // 初始滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('初始化聊天组件失败:', error)\n        ElMessage.error('初始化聊天组件失败: ' + error.message)\n      }\n    })\n    \n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        console.log('开始获取当前用户信息...')\n        \n        // 检查localStorage中是否有token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          console.warn('本地存储中没有找到认证token')\n          ElMessage.warning('未登录或登录已过期，请重新登录')\n          return null\n        }\n        \n        const response = await request({\n          url: '/api/auth/users/me/',\n          method: 'get'\n        })\n        \n        console.log('获取用户信息响应:', response)\n        \n        // 检查响应格式并获取用户数据\n        let userData = null\n        if (response.data && response.data.id) {\n          // 直接从data字段获取用户数据\n          userData = response.data\n          console.log('从data字段获取用户数据:', userData)\n        } else if (response.data && response.data.data && response.data.data.id) {\n          // 从嵌套data字段获取用户数据\n          userData = response.data.data\n          console.log('从嵌套data字段获取用户数据:', userData)\n        } else if (response.id) {\n          // 直接响应就是用户数据\n          userData = response\n          console.log('直接获取用户数据:', userData)\n        } else {\n          console.error('获取用户信息响应格式异常:', response)\n          throw new Error('用户信息格式异常')\n        }\n        \n        if (!userData || !userData.id) {\n          console.error('获取的用户数据无效:', userData)\n          throw new Error('无效的用户数据')\n        }\n        \n        // 不使用未定义的mutation，而是直接更新本地状态\n        userInfo.value = userData\n        \n        // 保存到localStorage以便持久化\n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        console.log('用户数据已更新:', userInfo.value)\n        return userData\n      } catch (error) {\n        console.error('获取当前用户信息失败:', error)\n        ElMessage.error('获取用户信息失败: ' + (error.message || '未知错误'))\n        return null\n      }\n    }\n    \n    // 加载聊天会话列表\n    const loadChatSessions = async (isBackgroundRefresh = false) => {\n      try {\n        if (!isBackgroundRefresh) {\n          sessionsLoading.value = true\n        }\n        console.log('正在加载聊天会话列表...')\n        \n        const response = await getChatSessions()\n        console.log('获取聊天会话响应:', response)\n        \n        // 确保我们有响应数据\n        if (!response) {\n          console.error('获取聊天会话返回空响应')\n          contacts.value = []\n          return\n        }\n        \n        let data\n        if (response.success && response.data) {\n          data = response.data\n          console.log('使用包装格式的聊天数据:', data)\n        } else {\n          data = response\n          console.log('使用直接返回的聊天数据:', data)\n        }\n        \n        // 转换数据格式\n        chatSessions.value = data\n        \n        // 构建联系人列表\n        if (data && Array.isArray(data.results)) {\n          console.log('处理分页数据结构, 共有会话数:', data.results.length)\n          // 处理分页数据结构\n          contacts.value = data.results.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                userId: user.id, // 添加用户ID，用于检查是否是自己\n                name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n                initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false,\n                department: user.department || '其他' // 确保有默认部门\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group,\n              department: '其他'\n            }\n          })\n        } else if (data && Array.isArray(data)) {\n          console.log('处理非分页数据结构, 共有会话数:', data.length)\n          // 处理非分页数据结构\n          contacts.value = data.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n                initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false,\n                department: user.department || '其他'\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group,\n              department: '其他'\n            }\n          })\n        } else {\n          // 如果没有有效数据\n          console.error('获取聊天会话格式异常或为空:', data)\n          contacts.value = []\n        }\n        \n        console.log('处理后的联系人列表:', contacts.value)\n        \n        // 如果有未读消息，按未读数量排序\n        if (contacts.value.length > 0) {\n          contacts.value.sort((a, b) => b.unread - a.unread)\n        }\n      } catch (error) {\n        console.error('加载聊天会话失败:', error)\n        ElMessage.error('加载聊天会话失败: ' + (error.message || '未知错误'))\n        contacts.value = []\n      } finally {\n        if (!isBackgroundRefresh) {\n          sessionsLoading.value = false\n        }\n      }\n    }\n    \n    // 加载聊天消息\n    const loadChatMessages = async (chatId, isBackgroundRefresh = false) => {\n      if (!chatId) {\n        console.error('无法加载消息: chatId为空')\n        return\n      }\n      \n      try {\n        if (!isBackgroundRefresh) {\n          messagesLoading.value = true\n        }\n        console.log(`正在加载聊天会话 ${chatId} 的消息...`)\n        \n        const response = await getChatSession(chatId)\n        console.log('聊天会话详情响应:', response)\n        \n        if (!response) {\n          console.error('获取聊天会话详情返回空响应')\n          messages.value = []\n          return\n        }\n        \n        // 处理不同的响应格式\n        let messageData = []\n        let sessionData = null\n        \n        if (response.data && response.data.messages) {\n          // 标准格式：响应直接包含messages字段\n          messageData = response.data.messages\n          sessionData = response.data\n          console.log('标准格式消息数据，消息数量:', messageData.length)\n        } else if (response.data && response.data.data && response.data.data.messages) {\n          // 包装格式：{success: true, data: {messages: [...]}}\n          messageData = response.data.data.messages\n          sessionData = response.data.data\n          console.log('包装格式消息数据，消息数量:', messageData.length)\n        } else if (response.messages) {\n          // 直接返回格式: {messages: [...]}\n          messageData = response.messages\n          sessionData = response\n          console.log('直接返回格式消息数据，消息数量:', messageData.length)\n        } else {\n          console.warn('无法识别的消息数据格式:', response)\n          console.log('尝试检查是否有其他可能的消息字段...')\n          \n          // 尝试查找其他可能的消息字段\n          const possibleMessageFields = ['message', 'chat_messages', 'chats', 'content']\n          for (const field of possibleMessageFields) {\n            if (response[field] && Array.isArray(response[field])) {\n              console.log(`找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response[field]\n              sessionData = response\n              break\n            } else if (response.data && response.data[field] && Array.isArray(response.data[field])) {\n              console.log(`在data字段中找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response.data[field]\n              sessionData = response.data\n              break\n            }\n          }\n          \n          if (messageData.length === 0) {\n            console.warn('未找到任何消息数据，使用空数组')\n          }\n        }\n        \n        // 处理消息发送者的头像\n        messageData.forEach(message => {\n          if (message.sender && message.sender.avatar) {\n            const avatar = message.sender.avatar;\n            if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n              message.sender.avatar_url = avatar;\n            } else if (avatar.startsWith('/')) {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n            } else {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n            }\n          }\n        });\n        \n        // 记录会话和消息数据\n        console.log('处理后的会话数据:', sessionData)\n        console.log('处理后的消息数据:', messageData)\n        \n        // 如果会话不在联系人列表中，添加它\n        if (sessionData && !contacts.value.some(c => c.id === parseInt(chatId))) {\n          console.log('会话不在联系人列表中，添加它:', sessionData)\n          \n          // 创建临时联系人对象\n          const session = sessionData\n          // 找到对方用户（非当前用户）\n          let otherParticipant = null\n          \n          // 确保 session.participants 存在且是数组\n          if (session.participants && Array.isArray(session.participants) && session.participants.length > 0 && userInfo.value) {\n            otherParticipant = session.participants.find(p => p.user && p.user.id !== userInfo.value.id)\n          }\n          \n          let tempContact = null\n          \n          // 如果是群聊，使用群聊信息\n          if (session.is_group) {\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '群聊',\n              initial: (session.title || '群聊')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: true\n            }\n          // 单聊，使用对方信息\n          } else if (otherParticipant && otherParticipant.user) {\n            const user = otherParticipant.user\n            // 处理头像路径\n            let avatar_url = '';\n            if (user.avatar) {\n              const avatar = user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            \n            tempContact = {\n              id: parseInt(chatId),\n              name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n              initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n              avatar: user.avatar || '',\n              avatar_url: avatar_url,\n              color: getRandomColor(user.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: false\n            }\n          } else {\n            // 如果无法找到对方信息，使用默认值\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: session.is_group\n            }\n          }\n          \n          // 添加临时联系人到列表\n          if (tempContact) {\n            contacts.value.unshift(tempContact)\n            console.log('添加临时联系人:', tempContact)\n          }\n        }\n        \n        // 更新组件数据\n        messages.value = messageData || []\n        currentChatId.value = parseInt(chatId)\n        selectedContact.value = parseInt(chatId)\n        \n        // 加载当前会话已上传的文档ID\n        try {\n          const res = await request({\n            url: '/api/ai/documents/',\n            method: 'get',\n            params: { chat: chatId }\n          })\n          if (res && res.data && Array.isArray(res.data.results)) {\n            selectedDocumentIds.value = res.data.results.map(doc => doc.id)\n            console.log('当前会话文档ID:', selectedDocumentIds.value)\n          }\n        } catch (e) {\n          selectedDocumentIds.value = []\n        }\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载会话详情失败:', error)\n        \n        let errorMessage = '加载聊天消息失败'\n        if (error.response) {\n          const status = error.response.status\n          if (status === 404) {\n            errorMessage = '聊天会话不存在或已被删除'\n          } else if (status === 403) {\n            errorMessage = '无权访问此聊天会话'\n          } else if (error.response.data && error.response.data.message) {\n            errorMessage = error.response.data.message\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n        messages.value = []\n      } finally {\n        if (!isBackgroundRefresh) {\n          messagesLoading.value = false\n        }\n      }\n    }\n    \n    // 刷新聊天会话列表\n    const refreshChatSessions = async () => {\n      // 更新用户列表\n      await loadAllUsers()\n      \n      // 更新部门列表\n      await loadDepartments()\n      \n      // 更新聊天会话\n      await loadChatSessions()\n      \n      // 如果有当前聊天ID，确保选中正确的联系人\n      if (currentChatId.value) {\n        const contact = contacts.value.find(c => c.id === currentChatId.value)\n        if (contact) {\n          selectedContact.value = contact.id\n        }\n      }\n    }\n    \n    // 确保消息容器滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 在选择联系人后，滚动到底部\n    const selectContact = async (contact) => {\n      // 检查是否尝试与自己聊天\n      if (!contact.isGroup && userInfo.value && contact.userId === userInfo.value.id) {\n        ElMessage.warning('不能与自己聊天')\n        return\n      }\n      \n      console.log('选择联系人:', contact)\n      \n      // 处理两种类型的ID：现有对话ID和用户ID前缀的情况\n      let contactId = contact.id\n      \n      // 检查是否已有该联系人的对话\n      if (typeof contactId === 'string' && contactId.startsWith('user_')) {\n        // 这是直接选择了用户，而不是现有的聊天会话\n        let userId = contact.userId || contact.id.replace('user_', '')\n        console.log('尝试查找与用户的现有对话:', userId)\n        \n        // 尝试在现有会话中查找与该用户的对话\n        const existingChat = contacts.value.find(c => \n          !c.isGroup && \n          ((c.userId && c.userId == userId) || \n          (c.user && c.user.id == userId))\n        )\n        \n        if (existingChat) {\n          console.log('找到与用户的现有对话:', existingChat)\n          contactId = existingChat.id\n        } else {\n          console.log('未找到与用户的现有对话，创建新对话')\n          \n          // 创建新的聊天会话\n          try {\n            const response = await request({\n              url: '/api/chat/sessions/',\n              method: 'post',\n              data: {\n                participant_ids: [userId],\n                is_group: false\n              }\n            })\n            \n            console.log('创建会话响应:', response)\n            \n            // 处理API响应\n            let newSession = null\n            \n            if (response && response.data) {\n              newSession = response.data\n            } else if (response && response.id) {\n              newSession = response\n            }\n            \n            if (newSession && newSession.id) {\n              // 创建临时联系人对象\n              const tempContact = {\n                id: newSession.id,\n                userId: userId,\n                name: contact.name,\n                initial: contact.initial,\n                avatar: contact.avatar,\n                avatar_url: contact.avatar_url || '',\n                color: contact.color || getRandomColor(userId),\n                status: 'online',\n                lastMessage: '',\n                lastTime: formatMessageTime(new Date()),\n                unread: 0,\n                isGroup: false,\n                department: contact.department\n              }\n              \n              // 添加到联系人列表\n              contacts.value.unshift(tempContact)\n              \n              // 更新选中的联系人\n              contactId = newSession.id\n              ElMessage.success('已创建新的对话')\n            } else {\n              throw new Error('创建会话返回无效数据')\n            }\n          } catch (error) {\n            console.error('创建新会话失败:', error)\n            ElMessage.error('无法创建新对话: ' + (error.message || '未知错误'))\n            return\n          }\n        }\n      }\n      \n      // 加载选中的联系人\n      selectedContact.value = contactId\n      messageInput.value = ''\n      messages.value = []\n      \n      // 加载消息\n      try {\n        await loadChatMessages(contactId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载聊天消息失败:', error)\n        ElMessage.error('无法加载对话内容：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 在消息列表更新后，滚动到底部\n    watch(messages, () => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim() || !currentChatId.value) return\n\n      try {\n        console.log('发送消息时文档IDs:', selectedDocumentIds.value)\n        if (!userInfo.value || !userInfo.value.id) {\n          const userData = await fetchCurrentUser()\n          if (!userData || !userData.id) {\n            throw new Error('无法获取当前用户信息，请刷新页面重试')\n          }\n        }\n\n        const tempMessage = {\n          id: 'temp-' + Date.now(),\n          content: messageInput.value.trim(),\n          sender: {\n            id: userInfo.value.id,\n            username: userInfo.value.username || '用户',\n            first_name: userInfo.value.first_name || '',\n            last_name: userInfo.value.last_name || ''\n          },\n          message_type: 'text',\n          created_at: new Date().toISOString(),\n          is_temp: true\n        }\n\n        messages.value.push(tempMessage)\n        const messageCopy = messageInput.value\n        messageInput.value = ''\n        await nextTick()\n        scrollToBottom()\n\n        let response, aiMsg\n        if (selectedDocumentIds.value && selectedDocumentIds.value.length > 0) {\n          // 文档增强AI对话\n          response = await aiChatWithDocuments({\n            message: messageCopy,\n            chat_id: currentChatId.value,\n            document_ids: selectedDocumentIds.value\n          })\n          // 兼容流式文本响应\n          let aiContent = ''\n          if (response && typeof response.data === 'string') {\n            aiContent = response.data\n          } else if (response && response.data && response.data.message) {\n            aiContent = response.data.message\n          }\n          if (aiContent) {\n            aiMsg = {\n              id: 'ai-' + Date.now(),\n              content: aiContent,\n              sender: { id: 0, username: 'AI助手' },\n              message_type: 'text',\n              created_at: new Date().toISOString()\n            }\n            // 用AI回复替换临时消息\n            const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n            if (tempIndex !== -1) {\n              messages.value.splice(tempIndex, 1, aiMsg)\n            } else {\n              messages.value.push(aiMsg)\n            }\n          }\n        } else {\n          // 原有普通消息\n          response = await sendTextMessage({\n            chat: currentChatId.value,\n            content: messageCopy\n          })\n          let messageData = null\n          if (response && response.success && response.data) {\n            messageData = response.data\n          } else if (response && response.id) {\n            messageData = response\n          } else if (response && response.chat) {\n            messageData = {\n              id: response.id || 'msg-' + Date.now(),\n              content: response.content,\n              message_type: response.message_type,\n              file: response.file,\n              created_at: response.created_at || new Date().toISOString(),\n              sender: {\n                id: userInfo.value.id,\n                username: userInfo.value.username || '用户',\n                first_name: userInfo.value.first_name || '',\n                last_name: userInfo.value.last_name || ''\n              }\n            }\n          }\n          const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n          if (tempIndex !== -1 && messageData) {\n            messages.value.splice(tempIndex, 1, messageData)\n          } else if (messageData) {\n            messages.value.push(messageData)\n          }\n        }\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        messages.value = messages.value.filter(m => !m.is_temp)\n        messageInput.value = error.savedMessage || messageInput.value\n        ElMessage.error('发送消息失败，请重试')\n      }\n    }\n    \n    // 打开文件上传\n    const openFileUpload = () => {\n      fileInput.value.click()\n    }\n    \n    // 打开图片上传\n    const openImageUpload = () => {\n      imageInput.value.click()\n    }\n    \n    // 添加文件和图片上传加载状态\n    const fileUploading = ref(false)\n    const imageUploading = ref(false)\n    \n    // 处理文件上传\n    const handleFileUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      try {\n        // 显示加载动画\n        fileUploading.value = true\n        \n        // 直接使用sendFileMessage发送文件消息\n        await sendFileMessage(\n          currentChatId.value,\n          `发送文件: ${file.name}`,\n          file\n        )\n        \n        // 同时上传到AI文档系统（如果需要）\n        const formData = new FormData()\n        formData.append('file', file)\n        formData.append('chat', currentChatId.value)\n        await request({\n          url: '/api/ai/documents/upload/',\n          method: 'post',\n          data: formData,\n          headers: { 'Content-Type': 'multipart/form-data' }\n        })\n        \n        // 上传后强制刷新文档ID列表\n        const docRes = await request({\n          url: '/api/ai/documents/',\n          method: 'get',\n          params: { chat: currentChatId.value }\n        })\n        if (docRes && docRes.data && Array.isArray(docRes.data.results)) {\n          selectedDocumentIds.value = docRes.data.results.map(doc => doc.id)\n          console.log('上传后刷新文档IDs:', selectedDocumentIds.value)\n        }\n        \n        ElMessage.success('文件发送成功')\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送文件失败:', error)\n        ElMessage.error('发送文件失败')\n      } finally {\n        // 无论成功失败，都关闭加载动画\n        fileUploading.value = false\n      }\n    }\n    \n    // 处理图片上传\n    const handleImageUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        // 检查文件类型\n        if (!file.type.startsWith('image/')) {\n          ElMessage.error('只能上传图片文件')\n          event.target.value = ''\n          return\n        }\n        \n        // 检查文件大小（最大10MB）\n        const maxSize = 10 * 1024 * 1024 // 10MB\n        if (file.size > maxSize) {\n          ElMessage.error('图片大小不能超过10MB')\n          event.target.value = ''\n          return\n        }\n        \n        // 显示加载动画\n        imageUploading.value = true\n        \n        console.log('准备发送图片，聊天ID:', currentChatId.value, '文件:', file.name, '大小:', file.size)\n        \n        // 使用修改后的API参数\n        await sendImageMessage(\n          currentChatId.value, \n          `发送图片`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送图片失败:', error)\n        \n        // 更详细的错误信息\n        let errorMessage = '发送图片失败'\n        if (error.response) {\n          console.error('错误状态码:', error.response.status)\n          console.error('错误详情:', error.response.data)\n          \n          if (error.response.data && error.response.data.error) {\n            errorMessage = error.response.data.error\n          } else if (error.response.data && typeof error.response.data === 'string') {\n            errorMessage = error.response.data\n          } else if (error.response.status === 413) {\n            errorMessage = '图片太大，服务器拒绝接收'\n          }\n        }\n        \n        ElMessage.error(errorMessage)\n        event.target.value = ''\n      } finally {\n        // 无论成功失败，都关闭加载动画\n        imageUploading.value = false\n      }\n    }\n    \n    // 打开知识库对话框\n    const openKnowledgeDialog = async () => {\n      knowledgeDialogVisible.value = true\n      await loadKnowledgeList()\n    }\n    \n    // 加载知识库列表\n    const loadKnowledgeList = async () => {\n      try {\n        knowledgeLoading.value = true\n        const { data } = await getKnowledgeList()\n        knowledgeList.value = data\n      } catch (error) {\n        console.error('加载知识库列表失败:', error)\n        ElMessage.error('加载知识库列表失败')\n      } finally {\n        knowledgeLoading.value = false\n      }\n    }\n    \n    // 选择知识库文件\n    const selectKnowledge = (row) => {\n      selectedKnowledge.value = row\n    }\n    \n    // 分享知识库文件\n    const shareKnowledge = async (knowledge) => {\n      if (!currentChatId.value) return\n      \n      try {\n        await sendKnowledgeMessage(\n          currentChatId.value,\n          `分享知识库文件: ${knowledge.title}`,\n          knowledge.id\n        )\n        \n        // 关闭对话框\n        knowledgeDialogVisible.value = false\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n      } catch (error) {\n        console.error('分享知识库文件失败:', error)\n        ElMessage.error('分享知识库文件失败')\n      }\n    }\n    \n    // 下载文件\n    const downloadFile = async (message) => {\n      try {\n        const response = await downloadMessageFile(message.id)\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', message.file_name || 'download')\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 查看知识库文件\n    const viewKnowledge = (message) => {\n      if (message.knowledge_detail) {\n        // 可以跳转到知识库详情页面\n        ElMessageBox.alert(\n          `标题: ${message.knowledge_detail.title}<br>描述: ${message.knowledge_detail.description || '无'}`, \n          '知识库文件', \n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '确定'\n          }\n        )\n      }\n    }\n    \n    // 获取发送者颜色\n    const getSenderColor = (sender) => {\n      return getRandomColor(sender.id)\n    }\n    \n    // 获取发送者首字母\n    const getSenderInitial = (sender) => {\n      return (sender.first_name || sender.username)[0]\n    }\n    \n    // 根据ID生成随机颜色\n    const getRandomColor = (id) => {\n      const colors = [\n        '#007bff', '#28a745', '#dc3545', '#fd7e14', \n        '#6f42c1', '#20c997', '#17a2b8', '#6c757d'\n      ]\n      \n      // 使用ID作为索引，确保同一用户颜色一致\n      const index = typeof id === 'number' ? id % colors.length : 0\n      return colors[index]\n    }\n    \n    // 格式化消息时间\n    const formatMessageTime = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      const now = new Date()\n      const diff = now - date\n      \n      // 今天内的消息显示时间\n      if (diff < 24 * 60 * 60 * 1000) {\n      const hours = date.getHours().toString().padStart(2, '0')\n      const minutes = date.getMinutes().toString().padStart(2, '0')\n      return `${hours}:${minutes}`\n      }\n      \n      // 一周内的消息显示星期几\n      if (diff < 7 * 24 * 60 * 60 * 1000) {\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n        return days[date.getDay()]\n      }\n      \n      // 更早的消息显示日期\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    // 格式化日期\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取状态文字\n    const getStatusText = (status) => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'busy': '忙碌',\n        'away': '离开'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 添加强制刷新方法\n    const forceRefresh = async () => {\n      try {\n        ElMessage.info('正在强制刷新数据...')\n        \n        // 重新获取用户信息\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          ElMessage.error('无法获取用户信息，请尝试重新登录')\n          return\n        }\n        \n        // 重新加载聊天会话\n        await loadChatSessions()\n        \n        if (contacts.value.length === 0) {\n          ElMessage.warning('未找到任何聊天会话，您可能还没有开始任何对话')\n        } else {\n          ElMessage.success('刷新成功！找到 ' + contacts.value.length + ' 个聊天会话')\n        }\n      } catch (error) {\n        console.error('强制刷新失败:', error)\n        ElMessage.error('刷新失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 加载所有用户\n    const loadAllUsers = async () => {\n      try {\n        console.log('正在加载所有用户列表...')\n        \n        // 确保已获取当前用户信息及其公司ID\n        if (!userInfo.value || !userInfo.value.company) {\n          console.error('无法加载同事列表：缺少用户或公司信息。')\n          // 尝试重新获取用户信息\n          const userData = await fetchCurrentUser();\n          if (!userData || !userData.company) {\n            ElMessage.error('无法获取您的公司信息，无法加载同事列表。');\n            allColleagues.value = []; // 清空列表\n            return;\n          }\n        }\n        \n        const companyId = userInfo.value.company;\n        console.log('开始获取公司同事列表，公司ID:', companyId);\n\n        // 使用/api/auth/contacts/并传入公司ID来获取同事列表\n        const response = await request({\n          url: '/api/auth/contacts/',\n          method: 'get',\n          params: { company: companyId }\n        });\n\n        console.log('公司同事列表API响应:', response);\n\n        let users = [];\n        // 根据通讯录页面的经验，响应可能在 response.data 中\n        if (response && response.success && Array.isArray(response.data)) {\n          users = response.data;\n        } else if (response && Array.isArray(response.data)) {\n           users = response.data;\n        } else if (response && Array.isArray(response)) {\n           users = response;\n        } else {\n          console.warn('获取同事列表的响应格式未知或数据为空:', response);\n        }\n\n        if (users.length > 0) {\n          console.log(`成功获取到 ${users.length} 个同事`);\n          // 后端返回的contacts可能需要格式化以匹配allColleagues的期望结构\n          allColleagues.value = users.map(u => ({\n            id: u.id,\n            username: u.username,\n            name: u.name, // 直接使用通讯录接口提供的name字段\n            department: u.department,\n            avatar: u.avatar_url || u.avatar\n          }));\n        } else {\n          allColleagues.value = []; // 如果没有用户，则清空\n        }\n\n      } catch (error) {\n        console.error('加载公司同事列表过程中出错:', error);\n        ElMessage.error('加载同事列表失败，请稍后重试。');\n        allColleagues.value = []; // 出错时清空列表\n      }\n    }\n    \n    // 获取部门列表\n    const loadDepartments = async () => {\n      try {\n        console.log('正在加载部门列表...')\n        const response = await request({\n          url: '/api/auth/departments/',\n          method: 'get'\n        })\n        \n        console.log('获取部门响应:', response)\n        \n        // 处理响应数据\n        let depts = []\n        if (response && response.results) {\n          depts = response.results\n        } else if (Array.isArray(response)) {\n          depts = response\n        } else if (response && response.data) {\n          if (Array.isArray(response.data)) {\n            depts = response.data\n          } else if (response.data.results) {\n            depts = response.data.results\n          }\n        }\n        \n        if (depts && depts.length > 0) {\n          console.log(`成功获取到${depts.length}个部门`)\n          departments.value = depts\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n      }\n    }\n    \n    const selectedDocumentIds = ref([]) // 当前会话关联文档ID\n    \n    // AI总结相关\n    const summaryDialogVisible = ref(false)\n    const summaryDateRange = ref([new Date(new Date().setDate(new Date().getDate() - 7)), new Date()])\n    const summaryContent = ref('')\n    const summaryLoading = ref(false)\n    const pickerOptions = ref({\n      shortcuts: [{\n        text: '最近一周',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n          picker.$emit('pick', [start, end]);\n        }\n      }, {\n        text: '最近一个月',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n          picker.$emit('pick', [start, end]);\n        }\n      }, {\n        text: '最近三个月',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n          picker.$emit('pick', [start, end]);\n        }\n      }]\n    })\n    \n    const openSummaryDialog = () => {\n      // 重置内容，但保留日期范围\n      summaryContent.value = ''\n      summaryDialogVisible.value = true\n    }\n    \n    const handleCloseSummaryDialog = () => {\n      summaryDialogVisible.value = false\n    }\n    \n    const handleSummarize = async () => {\n      if (!selectedContact.value) {\n        ElMessage.warning('请先选择一个聊天');\n        return;\n      }\n      if (!summaryDateRange.value || summaryDateRange.value.length !== 2) {\n        ElMessage.warning('请选择一个有效的时间范围');\n        return;\n      }\n\n      summaryLoading.value = true;\n      summaryContent.value = ''; // Reset before fetching\n\n      const [startDate, endDate] = summaryDateRange.value;\n\n      try {\n        // 'summarizeChat' returns the full axios response\n        const response = await summarizeChat(selectedContact.value, startDate.toISOString(), endDate.toISOString());\n        \n        // The actual data from the backend is in response.data\n        const summary = response.data.summary;\n\n        if (summary) {\n          // If we have a summary, display it\n          summaryContent.value = summary;\n        } else {\n          // If the summary is empty or not present, display a clear message\n          summaryContent.value = '在选定时间范围内没有可总结的消息，或AI未能生成摘要。';\n        }\n      } catch (error) {\n        console.error('Summarization error:', error);\n        summaryContent.value = '生成摘要时遇到错误，请检查后台日志或稍后再试。';\n        ElMessage.error('生成摘要失败，请稍后再试');\n      } finally {\n        summaryLoading.value = false;\n      }\n    };\n    \n    // 替换图片预览方法\n    const expandedImage = ref(null)\n\n    // 切换图片放大显示\n    const toggleImageExpand = (imageUrl) => {\n      expandedImage.value = imageUrl\n    }\n    \n    const getFileName = (fullName) => {\n      if (!fullName) return '';\n      const lastDot = fullName.lastIndexOf('.');\n      if (lastDot === -1 || lastDot === 0) {\n        return fullName;\n      }\n      return fullName.substring(0, lastDot);\n    };\n\n    const getFileExtension = (fullName) => {\n      if (!fullName) return '';\n      const lastDot = fullName.lastIndexOf('.');\n      if (lastDot === -1 || lastDot === 0 || lastDot >= fullName.length - 1) {\n        return '';\n      }\n      return fullName.substring(lastDot); // includes the dot\n    };\n    \n    // 右键菜单相关\n    const contextMenuVisible = ref(false)\n    const contextMenuStyle = ref({\n      top: '0px',\n      left: '0px'\n    })\n    const selectedMessage = ref(null)\n    \n    // 处理右键菜单打开\n    const openContextMenu = (event, message) => {\n      event.preventDefault()\n      // 保存点击位置\n      contextMenuStyle.value = {\n        top: `${event.clientY}px`,\n        left: `${event.clientX}px`\n      }\n      // 保存选中的消息\n      selectedMessage.value = message\n      // 显示菜单\n      contextMenuVisible.value = true\n      \n      // 添加全局点击事件监听器关闭菜单\n      document.addEventListener('click', closeContextMenu, { once: true })\n    }\n    \n    // 关闭右键菜单\n    const closeContextMenu = () => {\n      contextMenuVisible.value = false\n    }\n    \n    // 复制消息内容\n    const copyMessageContent = () => {\n      if (!selectedMessage.value) return\n      \n      const content = selectedMessage.value.content || ''\n      navigator.clipboard.writeText(content)\n        .then(() => {\n          ElMessage.success('内容已复制到剪贴板')\n          closeContextMenu()\n        })\n        .catch(err => {\n          ElMessage.error('复制失败: ' + err)\n        })\n    }\n    \n    // 日程对话框相关\n    const calendarDialogVisible = ref(false);\n    const isAnalyzing = ref(false);\n    const isSubmitting = ref(false);\n    const calendarFormRef = ref(null); // Ref for the form\n    const calendarEvent = reactive({\n      title: '',\n      start: '',\n      end: '',\n      location: '',\n      type: 'blue',\n      reminder: '30min',\n      description: '',\n    });\n    \n    // Validation rules for the calendar form\n    const calendarRules = reactive({\n      title: [{ required: true, message: '请输入日程标题', trigger: 'blur' }],\n      start: [{ required: true, message: '请选择开始时间', trigger: 'change' }],\n      end: [{ required: true, message: '请选择结束时间', trigger: 'change' }],\n      location: [{ required: true, message: '请输入地点', trigger: 'blur' }],\n      type: [{ required: true, message: '请选择日程类型', trigger: 'change' }],\n      reminder: [{ required: true, message: '请选择提醒时间', trigger: 'change' }],\n      description: [{ required: true, message: '请输入描述信息', trigger: 'blur' }],\n    });\n    \n    // 自定义验证规则\n    const validateEndTime = (rule, value, callback) => {\n      if (!value) {\n        // 'required' rule will handle this\n        callback();\n      } else if (calendarEvent.start) {\n        const startDate = new Date(calendarEvent.start);\n        const endDate = new Date(value);\n        if (endDate <= startDate) {\n          callback(new Error('结束时间必须晚于开始时间'));\n        } else if (startDate.toDateString() !== endDate.toDateString()) {\n          callback(new Error('开始和结束时间必须是同一天'));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n\n    // 监听开始时间变化，以触发结束时间的验证\n    watch(() => calendarEvent.start, (newValue) => {\n      if (newValue && calendarFormRef.value) {\n        calendarFormRef.value.validateField('end');\n      }\n    });\n\n    // 更新验证规则\n    calendarRules.end = [\n      { required: true, message: '请选择结束时间', trigger: 'change' },\n      { validator: validateEndTime, trigger: 'change' }\n    ];\n    \n    // 从消息添加到日程\n    const addToCalendarFromMessage = async () => {\n      if (!selectedMessage.value) {\n        ElMessage.warning('无法识别消息');\n        return;\n      }\n      \n      isAnalyzing.value = true;\n      calendarDialogVisible.value = true;\n      \n      try {\n        const messageContent = selectedMessage.value.content;\n        const response = await analyzeForCalendar(messageContent);\n        \n        console.log('AI日程分析响应:', response);\n        \n        // 修复数据结构处理方式\n        const eventData = response?.data?.data || response?.data;\n        \n        if (!eventData || typeof eventData !== 'object') {\n            console.error(\"AI分析未能返回有效的日程数据。\", response);\n            ElMessage.warning('AI未能自动识别日程，请手动填写。');\n            // Populate with default values for manual entry\n            calendarEvent.title = '';\n            calendarEvent.start = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.end = formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.location = '';\n            calendarEvent.type = 'blue';\n            calendarEvent.reminder = '30min';\n            calendarEvent.description = messageContent || '';\n            calendarEvent.is_all_day = false;\n        } else {\n            console.log('AI成功识别日程数据:', eventData);\n            // Populate with data from AI\n            calendarEvent.title = eventData.title || '';\n            calendarEvent.start = eventData.start || formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.end = eventData.end || formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.location = eventData.location || '';\n            calendarEvent.type = eventData.type || 'blue';\n            calendarEvent.reminder = eventData.reminder || '30min';\n            calendarEvent.description = eventData.description || messageContent || '';\n            calendarEvent.is_all_day = eventData.is_all_day || false;\n            \n            // 添加参与者处理\n            if (eventData.participants && Array.isArray(eventData.participants)) {\n                calendarEvent.participants = eventData.participants;\n            } else {\n                calendarEvent.participants = userId.value ? [userId.value] : [];\n            }\n        }\n      } catch (error) {\n        console.error('获取日程信息失败:', error);\n        ElMessage.error('AI分析失败，请手动填写日程。');\n        // Populate with default values on API error\n        calendarEvent.title = '';\n        calendarEvent.start = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n        calendarEvent.end = formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n        calendarEvent.location = '';\n        calendarEvent.type = 'blue';\n        calendarEvent.reminder = '30min';\n        calendarEvent.description = selectedMessage.value?.content || '';\n        calendarEvent.is_all_day = false;\n      } finally {\n        isAnalyzing.value = false;\n        closeContextMenu();\n      }\n    };\n    \n    // 添加日程\n    const submitCalendarEvent = async () => {\n      if (!calendarFormRef.value) return;\n      await calendarFormRef.value.validate(async (valid) => {\n        if (valid) {\n          isSubmitting.value = true;\n          try {\n            const eventData = { ...calendarEvent };\n            if (!eventData.participants) {\n                eventData.participants = [];\n            }\n            if (userId.value && !eventData.participants.includes(userId.value)) {\n                eventData.participants.push(userId.value);\n            }\n\n            await createCalendarEvent(eventData);\n            \n            ElMessage.success('日程添加成功');\n            calendarDialogVisible.value = false;\n          } catch (error) {\n            ElMessage.error('添加日程失败: ' + (error.response?.data?.error || error.message));\n          } finally {\n            isSubmitting.value = false;\n          }\n        } else {\n          ElMessage.error('请填写所有必填项');\n          return false;\n        }\n      });\n    };\n    \n    // 全局点击事件监听 - 用于处理组件外部点击关闭右键菜单\n    onMounted(() => {\n      document.addEventListener('click', (event) => {\n        // 如果点击位置不在右键菜单内，关闭菜单\n        if (contextMenuVisible.value) {\n          const menuEl = document.querySelector('.chat-context-menu')\n          if (menuEl && !menuEl.contains(event.target)) {\n            contextMenuVisible.value = false\n          }\n        }\n      })\n    })\n    \n    return {\n      searchQuery,\n      activeTab,\n      selectedContact,\n      tabs,\n      contacts,\n      currentContact,\n      filteredContacts,\n      messages,\n      messageInput,\n      messageContainer,\n      fileInput,\n      imageInput,\n      currentUser,\n      userInfo,\n      userId,\n      knowledgeDialogVisible,\n      knowledgeLoading,\n      knowledgeList,\n      sessionsLoading,\n      messagesLoading,\n      // 图标\n      Search,\n      Document,\n      PictureFilled,\n      FolderOpened,\n      Microphone,\n      Position,\n      ChatDotSquare,\n      Reading,\n      UserFilled,\n      ChatLineSquare,\n      Refresh,\n      // 方法\n      sendMessage,\n      getStatusText,\n      selectContact,\n      openFileUpload,\n      openImageUpload,\n      handleFileUpload,\n      handleImageUpload,\n      openKnowledgeDialog,\n      selectKnowledge,\n      shareKnowledge,\n      downloadFile,\n      viewKnowledge,\n      getSenderColor,\n      getSenderInitial,\n      formatMessageTime,\n      formatDate,\n      formatFileSize,\n      refreshChatSessions,\n      forceRefresh,\n      groupedUsersByDepartment,\n      getActiveContacts,\n      loadAllUsers,\n      loadDepartments,\n      selectedDocumentIds,\n      fileUploading,\n      imageUploading,\n      summaryDialogVisible,\n      summaryDateRange,\n      summaryContent,\n      summaryLoading,\n      pickerOptions,\n      openSummaryDialog,\n      handleCloseSummaryDialog,\n      handleSummarize,\n      expandedImage,\n      toggleImageExpand,\n      getFileName,\n      getFileExtension,\n      contextMenuVisible,\n      contextMenuStyle,\n      openContextMenu,\n      copyMessageContent,\n      addToCalendarFromMessage,\n      calendarDialogVisible,\n      calendarEvent,\n      isAnalyzing,\n      isSubmitting,\n      submitCalendarEvent,\n      calendarFormRef,\n      calendarRules\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  height: calc(100vh - 64px); /* 减去顶部导航栏的高度 */\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n  background-color: transparent;\n}\n\n.chat-card {\n  height: 100%;\n  width: 100%;\n  border-radius: 8px;\n  margin: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 12px var(--shadow-color) !important;\n  background-color: transparent;\n}\n\n.chat-card :deep(.el-card__body) {\n  height: 100%;\n  padding: 0;\n  background-color: transparent;\n}\n\n.chat-layout {\n  display: flex;\n  height: 100%;\n  width: 100%;\n  background-color: transparent;\n}\n\n/* 侧边栏样式 */\n.chat-sidebar {\n  width: 280px;\n  border-right: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  height: 100%;\n  overflow: hidden;\n}\n\n.search-box {\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tab {\n  flex: 1;\n  text-align: center;\n  padding: 12px;\n  cursor: pointer;\n  font-weight: 500;\n  color: var(--text-color-secondary);\n  transition: all 0.3s ease;\n}\n\n.chat-tab.active {\n  color: var(--el-color-primary);\n  border-bottom: 2px solid var(--el-color-primary);\n}\n\n.contacts-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0;\n}\n\n.contact-item {\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color-light);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border-color: var(--border-color);\n}\n\n.contact-item:hover {\n  background-color: var(--hover-color);\n}\n\n.contact-item.active {\n  background-color: var(--primary-color-light, #f0f7ff);\n}\n\n.contact-avatar {\n  position: relative;\n  margin-right: 12px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n}\n\n.avatar.small {\n  width: 32px;\n  height: 32px;\n  font-size: 12px;\n}\n\n.avatar-initial {\n  font-size: 16px;\n}\n\n.contact-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid var(--bg-color);\n}\n\n.status-online {\n  background-color: #28a745;\n}\n\n.status-offline {\n  background-color: #6c757d;\n}\n\n.status-busy {\n  background-color: #dc3545;\n}\n\n.status-away {\n  background-color: #fd7e14;\n}\n\n.contact-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.contact-name {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.contact-name span {\n  font-weight: 500;\n}\n\n.time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.contact-message {\n  display: flex;\n  justify-content: space-between;\n  color: var(--text-color-secondary);\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  position: relative;\n  padding-right: 30px; \n}\n\n.message-badge {\n  position: absolute;\n  right: 5px;\n  top: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.message-badge :deep(.el-badge__content) {\n  position: static !important;\n  transform: none !important;\n}\n\n/* 聊天内容样式 */\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  background-color: transparent;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-color);\n}\n\n.chat-header .contact-info {\n  margin-right: auto;\n}\n\n.chat-header h6 {\n  margin: 0;\n  font-size: 16px;\n  color: var(--text-color);\n}\n\n.chat-header p {\n  margin: 0;\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.chat-actions {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin-left: auto;\n  padding-right: 15px;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  max-height: calc(100% - 150px); \n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n}\n\n.message {\n  margin-bottom: 15px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n}\n\n.message-container {\n  width: 100%;\n  display: flex;\n  background-color: transparent;\n}\n\n.message-sent .message-container {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.message-sent .message-avatar {\n  margin-right: 0;\n  margin-left: 10px;\n}\n\n.message-content-wrapper {\n  max-width: 100%;\n  width: auto;\n}\n\n.message-content {\n  padding: 0;\n  border-radius: 0;\n  background-color: transparent;\n  max-width: 280px;\n  width: 100%;\n}\n\n.message-content.received {\n  background-color: transparent;\n  border: none;\n}\n\n.message-content.sent {\n  background-color: transparent;\n  border: none;\n}\n\n.message-time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n  margin-top: 5px;\n  text-align: right;\n}\n\n.message-sent .message-time {\n  text-align: right;\n}\n\n.message-received .message-time {\n  text-align: left;\n}\n\n.image-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: transparent;\n  border-radius: 8px;\n  margin: 5px 0;\n  overflow: hidden;\n}\n\n.message-sent .image-card {\n  margin-left: auto;\n}\n\n.image-card-inner {\n  display: flex;\n  flex-direction: column;\n}\n\n.image-preview {\n  width: 100%;\n  height: 180px;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.image-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n}\n\n.image-preview img:hover {\n  transform: scale(1.03);\n}\n\n.file-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin: 5px 0;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: none;\n}\n\n.message-sent .file-card {\n  margin-left: auto;\n}\n\n.file-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.file-card-inner {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background-color: var(--el-color-primary-light-9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n}\n\n.file-icon .el-icon {\n  font-size: 24px;\n  color: var(--el-color-primary);\n}\n\n.file-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 4px;\n  display: flex;\n  align-items: baseline;\n  overflow: hidden;\n}\n\n.file-name-main {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-shrink: 1;\n}\n\n.file-name-ext {\n  white-space: nowrap;\n  flex-shrink: 0;\n}\n\n.file-meta {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n}\n\n.file-size {\n  color: var(--text-color-secondary);\n}\n\n.file-download-hint {\n  color: var(--el-color-primary);\n}\n\n.knowledge-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin: 5px 0;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: none;\n}\n\n.message-sent .knowledge-card {\n  margin-left: auto;\n}\n\n.knowledge-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.knowledge-card-inner {\n  display: flex;\n  padding: 15px;\n}\n\n.knowledge-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background-color: var(--el-color-success-light-9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.knowledge-icon .el-icon {\n  font-size: 24px;\n  color: var(--el-color-success);\n}\n\n.knowledge-content {\n  flex: 1;\n  overflow: hidden;\n}\n\n.knowledge-title {\n  font-weight: 500;\n  color: var(--text-color);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n}\n\n.knowledge-desc {\n  color: var(--text-color-secondary);\n  font-size: 12px;\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.knowledge-footer {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n}\n\n.knowledge-type {\n  color: var(--text-color-tertiary);\n  background-color: var(--bg-color-tertiary);\n  padding: 2px 8px;\n  border-radius: 4px;\n}\n\n.knowledge-view {\n  color: var(--el-color-primary);\n}\n\n.chat-input {\n  padding: 15px;\n  background-color: var(--bg-color);\n  border-top: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  min-height: 150px; /* 确保输入框有足够高度 */\n}\n\n.chat-tools {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.input-area {\n  margin-bottom: 10px;\n  flex: 1;\n}\n\n.send-button {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-illustration {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-chat h4 {\n  margin: 0 0 10px;\n}\n\n.empty-chat p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.empty-contacts {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-icon {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-contacts h4 {\n  margin: 0 0 10px;\n}\n\n.empty-contacts p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.loading-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.empty-messages {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.loading-messages {\n  flex: 1;\n  padding: 20px;\n}\n\n.mt-3 {\n  margin-top: 15px;\n}\n\n.search-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.search-header .el-input {\n  flex: 1;\n}\n\n.chat-header-actions {\n  margin-bottom: 10px;\n}\n\n.refresh-action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 5px;\n}\n\n.department-group {\n  margin-bottom: 10px;\n  border-color: var(--border-color);\n}\n\n.department-header {\n  padding: 5px 15px;\n  font-size: 13px;\n  color: var(--text-color-secondary);\n  background-color: var(--bg-color-tertiary);\n  border-radius: 4px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n.group-actions {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: 5px;\n}\n\n.group-action-btn {\n  padding: 6px;\n  color: #909399;\n}\n\n.group-action-btn:hover {\n  color: #409EFF;\n}\n\n/* 添加对话框全局样式以适配深色模式 */\n:deep(.el-dialog) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__body) {\n  color: var(--text-color);\n}\n\n/* 表格样式适配深色模式 */\n:deep(.el-table) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-table th.el-table__cell) {\n  background-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-table tr) {\n  background-color: var(--bg-color);\n}\n\n:deep(.el-table td.el-table__cell) {\n  background-color: var(--bg-color);\n  border-bottom: 1px solid var(--border-color);\n}\n\n/* 修复输入框和下拉菜单 */\n:deep(.el-select .el-input__wrapper) {\n  background-color: var(--bg-color-secondary);\n}\n\n:deep(.el-select-dropdown) {\n  background-color: var(--bg-color-secondary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-select-dropdown__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-select-dropdown__item.hover),\n:deep(.el-select-dropdown__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-input__wrapper) {\n  background-color: var(--bg-color-secondary) !important;\n  box-shadow: 0 0 0 1px var(--border-color) inset;\n}\n\n:deep(.el-input__inner) {\n  color: var(--text-color);\n}\n\n:deep(.el-select__input) {\n  color: var(--text-color) !important;\n}\n\n:deep(.el-textarea__inner) {\n  background-color: var(--bg-color-secondary);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复空白提示和图标颜色 */\n.empty-icon {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-icon) {\n  color: inherit;\n}\n\n:deep(.el-button--primary) {\n  color: white;\n}\n\n.chat-header h6 {\n  color: var(--text-color);\n}\n\n/* 修复badge和标签 */\n:deep(.el-badge__content) {\n  background-color: var(--error-color, #ef4444);\n}\n\n:deep(.el-tag) {\n  background-color: var(--primary-color-light);\n  border-color: var(--primary-color-light);\n  color: var(--primary-color);\n}\n\n/* 修复下拉菜单的样式 */\n:deep(.el-popper.is-light) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-popper__arrow::before) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n/* 修复搜索框内图标颜色 */\n.search-box :deep(.el-input__prefix-inner) {\n  color: var(--text-color-tertiary);\n}\n\n/* 修复表单组件 */\n:deep(.el-input),\n:deep(.el-select) {\n  --el-fill-color-blank: var(--bg-color-tertiary);\n  --el-text-color-regular: var(--text-color);\n  --el-border-color: var(--border-color);\n  --el-border-color-hover: var(--primary-color);\n  --el-fill-color-light: var(--bg-color-tertiary);\n}\n\n/* 修复部门组标题 */\n.department-header {\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n/* 修复El-Card组件样式 */\n:deep(.el-card) {\n  --el-card-bg-color: var(--bg-color);\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复El-Alert样式 */\n:deep(.el-alert) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n  color: var(--text-color);\n}\n\n:deep(.el-alert--info) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-empty__image svg) {\n  fill: var(--text-color-tertiary);\n}\n\n/* 修复下拉菜单 */\n:deep(.el-dropdown-menu) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-dropdown-menu__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-dropdown-menu__item--divided:before) {\n  background-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item.is-disabled) {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-divider) {\n  background-color: var(--border-color);\n}\n\n/* 修复消息框 */\n:deep(.el-message-box) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message-box__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-message-box__message) {\n  color: var(--text-color);\n}\n\n:deep(.el-message) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message__content) {\n  color: var(--text-color);\n}\n\n/* 修复输入区域的阴影 */\n.el-textarea__wrapper {\n  box-shadow: 0 0 0 1px var(--border-color) inset !important;\n}\n\n.summary-content-wrapper {\n  margin-top: 10px;\n  border: 1px solid #e4e7ed;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.summary-title {\n  border-radius: 0;\n  border-bottom: 1px solid #e4e7ed;\n}\n\n.summary-content {\n  padding: 15px;\n  background-color: #fafafa;\n  min-height: 150px;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\n/* 全屏图片预览样式 */\n.fullscreen-image-preview {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 20003; /* 确保在导航栏之上 */\n  overflow: auto;\n  text-align: center;\n  padding: 0;\n  font-size: 0; /* 消除因行高导致的垂直间隙 */\n  cursor: pointer;\n}\n\n.fullscreen-preview-image {\n  margin: 0; /* 确保图片没有外边距 */\n  /* 图片将使用其自然尺寸 */\n}\n\n/* 文本卡片样式 */\n.text-card {\n  max-width: 280px;\n  margin: 5px 0;\n  overflow: hidden;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.message-sent .text-card {\n  margin-left: auto;\n}\n\n.text-card-inner {\n  padding: 12px 15px;\n  word-break: break-word;\n}\n\n.received .text-card {\n  background-color: #fff;\n}\n\n.sent .text-card {\n  background-color: var(--el-color-primary);\n  color: white;\n}\n\n/* 消息内容样式 */\n.message-content {\n  padding: 0;\n  border-radius: 0;\n  background-color: transparent;\n  max-width: 280px;\n  width: 100%;\n}\n\n.message-content-wrapper {\n  max-width: 100%;\n  width: auto;\n}\n\n/* 统一所有卡片样式 */\n.image-card, .file-card, .knowledge-card, .text-card {\n  width: 100%;\n  max-width: 280px;\n  margin: 5px 0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n\n.message-sent .image-card,\n.message-sent .file-card,\n.message-sent .knowledge-card,\n.message-sent .text-card {\n  margin-left: auto;\n}\n\n/* 移除旧的文本消息样式 */\n.message-content span {\n  padding: 0;\n  border-radius: 0;\n  display: inline;\n  background-color: transparent;\n  color: inherit;\n}\n\n.file-name-ext {\n  white-space: nowrap;\n  flex-shrink: 0;\n}\n\n.file-card,\n.knowledge-card {\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n}\n\n.file-card-inner,\n.knowledge-card-inner {\n  width: 100%;\n}\n\n.file-card {\n  width: 100%;\n  max-width: 280px;\n}\n\n/* 右键菜单样式 */\n.chat-context-menu {\n  position: fixed;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  min-width: 150px;\n  z-index: 9999;\n  padding: 5px 0;\n}\n\n.context-menu-item {\n  padding: 8px 15px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n}\n\n.context-menu-item:hover {\n  background-color: #f5f7fa;\n}\n\n.context-menu-item .el-icon {\n  margin-right: 8px;\n  font-size: 16px;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}