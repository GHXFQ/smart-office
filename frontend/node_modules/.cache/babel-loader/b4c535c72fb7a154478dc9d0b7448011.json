{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=template&id=1dfab613&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1747743560155},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createBlock","_component_el_card","_hoisted_4","_createVNode","_component_el_input","$setup","searchQuery","$event","placeholder","clearable","_hoisted_5","_Fragment","_renderList","departments","dept","index","key","id","_normalizeClass","selectedDept","onClick","icon","_toDisplayString","name","_hoisted_7","count","loading","_hoisted_8","header","_withCtx","_$setup$departments$$","_hoisted_9","_hoisted_10","_hoisted_11","_cache","_hoisted_12","contacts","contact","selectedContact","_hoisted_14","getInitials","_hoisted_15","_hoisted_16","_hoisted_17","position","department_name","length","_component_el_empty","description","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_component_el_button","type","size","startChat","_component_el_divider","_hoisted_26","_hoisted_27","_hoisted_28","mobile","_hoisted_29","_hoisted_30","phone","_hoisted_31","_hoisted_32","email","_hoisted_33","_hoisted_34","office","_hoisted_35","_hoisted_36","_hoisted_37","employee_id","_hoisted_38","_hoisted_39","join_date","_hoisted_40","_hoisted_41","birthday","_hoisted_42","_hoisted_43","manager","_hoisted_44","_hoisted_45","skills","skill","_component_el_tag","_hoisted_46","_component_el_table","data","projects","style","_component_el_table_column","prop","label","default","scope","row","status"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"row\">\n      <!-- 左侧部门导航 -->\n      <div class=\"col-md-2\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\">\n          <div class=\"search-box mb-3\">\n            <i class=\"bi bi-search search-icon\"></i>\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索全公司联系人...\"\n              clearable\n              class=\"search-input\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <i :class=\"dept.icon\"></i>\n              <span>{{ dept.name }}</span>\n              <span class=\"badge\">{{ dept.count }}</span>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"col-md-4\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span>{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"col-md-6\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\">{{ getInitials(contacts[selectedContact].name) }}</div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <i class=\"bi bi-chat-dots\"></i> 发送消息\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-envelope\"></i> 发送邮件\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-telephone\"></i> 电话联系\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider></el-divider>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">联系方式</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">手机号码</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].mobile }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">工作电话</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].phone }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">电子邮箱</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].email }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">办公地点</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].office }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">个人信息</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">员工编号</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].employee_id }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">入职日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].join_date }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">出生日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].birthday }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">直系领导</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].manager }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">技能专长</div>\n            <div class=\"skills-tags\">\n              <el-tag \n                v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                :key=\"index\"\n                class=\"mr-2 mb-2\"\n              >\n                {{ skill }}\n              </el-tag>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">管理项目</div>\n            <el-table :data=\"contacts[selectedContact].projects || []\" style=\"width: 100%\">\n              <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\">\n                <template #default=\"scope\">\n                  <el-tag \n                    :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                  >\n                    {{ scope.row.status }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'Contact',\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        console.log('获取用户信息响应:', res)\n        \n        // 检查不同的响应格式\n        if (res && res.success && res.data) {\n          // 标准格式：{success: true, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从标准格式中获取到公司ID:', companyId.value)\n        } else if (res && res.code === 200 && res.data) {\n          // 另一种格式：{code: 200, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从code=200格式中获取到公司ID:', companyId.value)\n        } else if (res && typeof res === 'object') {\n          // 直接返回数据对象的格式\n          currentUser.value = res\n          companyId.value = res.company\n          console.log('从直接返回对象中获取到公司ID:', companyId.value)\n        } else {\n          console.error('无法解析用户信息响应:', res)\n          ElMessage.warning('用户信息格式异常')\n        }\n          \n          if (!companyId.value) {\n          console.error('当前用户没有关联公司信息:', currentUser.value)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n        return currentUser.value\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法加载部门列表')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        console.log('开始获取公司部门，公司ID:', companyId.value)\n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        console.log('获取公司部门响应:', res)\n        \n        if (res && res.success && res.data) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          console.log('联系人总数:', totalContactsCount)\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset',\n            '其他': 'bi bi-three-dots'  // 添加\"其他\"部门的图标\n          }\n          \n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count\n          }))\n          \n          // 统计没有部门的用户数量\n          const noDeptCount = await getContactsWithNoDept()\n          \n          // 添加\"其他\"部门选项 (如果有无部门用户)\n          if (noDeptCount > 0) {\n            formattedDepts.push({\n              id: 'no-dept', // 特殊ID用于标识没有部门的用户\n              name: '其他',\n              icon: deptIcons['其他'],\n              count: noDeptCount\n            })\n          }\n          \n          departments.value = [...allDepts, ...formattedDepts]\n          console.log('部门列表加载完成:', departments.value)\n        } else {\n          console.error('获取部门列表响应格式错误:', res)\n          ElMessage.error('获取部门列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人总数')\n          return 0\n        }\n        \n        console.log('开始获取联系人总数，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          return res.data.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取没有部门的用户数量\n    const getContactsWithNoDept = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人')\n          return 0\n        }\n        \n        console.log('开始获取无部门联系人，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 筛选没有部门的联系人\n          const contactsWithNoDept = res.data.filter(contact => \n            !contact.department || contact.department === null || contact.department === '' || \n            !contact.department_name || contact.department_name === null || contact.department_name === ''\n          )\n          return contactsWithNoDept.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取无部门联系人数量失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人列表')\n          ElMessage.warning('未找到当前用户所属公司，无法获取联系人')\n          loading.value.contacts = false\n          return\n        }\n        \n        console.log('开始获取联系人列表，公司ID:', companyId.value)\n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          const selectedDeptInfo = departments.value[selectedDept.value]\n          \n          if (selectedDeptInfo) {\n            if (selectedDeptInfo.id === 'no-dept') {\n              // 如果选择了\"其他\"部门，不需要添加部门参数，稍后会在结果中筛选\n              console.log('已选择\"其他\"部门，将筛选没有部门的联系人')\n            } else {\n              // 正常部门，添加部门ID参数\n              params.department = selectedDeptInfo.id\n            }\n          } else {\n            console.error('选择的部门索引无效:', selectedDept.value)\n          }\n        }\n        \n        console.log('请求联系人列表参数:', params)\n        const res = await request(url, { params })\n        console.log('获取联系人列表响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 如果选择了\"其他\"部门，筛选没有部门的联系人\n          if (selectedDept.value !== 0 && \n              departments.value[selectedDept.value] && \n              departments.value[selectedDept.value].id === 'no-dept') {\n            \n            contacts.value = res.data.filter(contact => \n              !contact.department || contact.department === null || contact.department === '' ||\n              !contact.department_name || contact.department_name === null || contact.department_name === ''\n            )\n            console.log('筛选出的无部门联系人:', contacts.value)\n          } else {\n            // 正常显示所有联系人或特定部门的联系人\n            contacts.value = res.data\n          }\n          \n          // 打印第一个联系人数据以查看结构\n          if (contacts.value && contacts.value.length > 0) {\n            console.log('联系人数据结构示例:', contacts.value[0])\n          } else {\n            console.log('未找到任何联系人')\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        } else {\n          console.error('获取联系人列表响应格式错误:', res)\n          ElMessage.error('获取联系人列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      try {\n      // 先获取当前用户信息\n        console.log('开始初始化联系人页面...')\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          console.error('未能获取到用户信息，中断初始化流程')\n          return\n        }\n        \n        if (!companyId.value) {\n          console.error('未找到用户所属公司ID，中断初始化流程')\n          return\n        }\n      \n      // 再加载部门列表\n        console.log('开始加载部门列表...')\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n        console.log('开始加载联系人列表...')\n      await fetchContacts()\n        \n        console.log('联系人页面初始化完成')\n      } catch (error) {\n        console.error('联系人页面初始化失败:', error)\n        ElMessage.error('页面加载失败：' + (error.message || '未知错误'))\n      }\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 直接使用联系人的ID创建聊天会话\n        // 因为联系人现在就是用户，所以ID直接用联系人的ID\n        const userId = parseInt(contact.id)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contact.id)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        // 首先获取现有的聊天会话列表\n        try {\n          console.log('正在检查是否已有与该联系人的聊天会话...')\n          const sessionsResponse = await axios.get('/api/chat/sessions/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n          \n          console.log('获取到的会话列表:', sessionsResponse.data)\n          \n          // 解析会话数据\n          let sessions = []\n          if (sessionsResponse.data && sessionsResponse.data.results) {\n            // 分页格式\n            sessions = sessionsResponse.data.results\n          } else if (sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n            // 直接数组格式\n            sessions = sessionsResponse.data\n          } else if (sessionsResponse.data && sessionsResponse.data.data && Array.isArray(sessionsResponse.data.data)) {\n            // 嵌套data格式\n            sessions = sessionsResponse.data.data\n          }\n          \n          // 查找是否有与当前联系人的单聊会话\n          // 单聊会话的特点是不是群组，且只有两个参与者\n          const existingSession = sessions.find(session => {\n            // 跳过群聊\n            if (session.is_group) return false\n            \n            // 确保有参与者数据且为数组\n            if (!session.participants || !Array.isArray(session.participants)) return false\n            \n            // 确保参与者数量为2（当前用户+目标联系人）\n            if (session.participants.length !== 2) return false\n            \n            // 查找是否有目标联系人在参与者中\n            const hasTargetUser = session.participants.some(participant => {\n              return participant.user && participant.user.id === userId\n            })\n            \n            return hasTargetUser\n          })\n          \n          if (existingSession) {\n            // 找到现有会话，直接跳转\n            console.log('找到现有会话:', existingSession)\n            router.push({\n              path: '/chat',\n              query: { id: existingSession.id }\n            })\n            return\n          } else {\n            console.log('未找到与该联系人的现有会话，将创建新会话')\n          }\n          \n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: contact.name ? `与${contact.name}的聊天` : '新聊天'\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n          throw error\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.contacts-nav-card {\n  height: 100%;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n.search-box {\n  position: relative;\n  margin-bottom: 15px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 9px;\n  color: var(--text-color-tertiary);\n  font-size: 14px;\n}\n\n.search-input {\n  :deep(.el-input__inner) {\n    padding-left: 30px;\n    background-color: var(--bg-color-tertiary);\n    color: var(--text-color);\n  }\n}\n\n.contacts-nav {\n  max-height: calc(100vh - 200px);\n  overflow-y: auto;\n}\n\n.dept-item {\n  padding: 10px;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  transition: all 0.3s ease;\n  color: var(--text-color);\n  background-color: var(--bg-color);\n  \n  &:hover {\n    background-color: var(--hover-color);\n  }\n  \n  &.active {\n    background-color: var(--primary-color);\n    color: #fff;\n    \n    .badge {\n      background-color: #fff;\n      color: var(--primary-color);\n    }\n  }\n  \n  i {\n    margin-right: 8px;\n    font-size: 14px;\n  }\n  \n  span {\n    flex: 1;\n  }\n  \n  .badge {\n    background-color: var(--bg-color-tertiary);\n    color: var(--text-color-secondary);\n    font-size: 12px;\n    border-radius: 10px;\n    padding: 2px 6px;\n    min-width: 20px;\n    text-align: center;\n  }\n}\n\n.contacts-list-card {\n  height: 100%;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--text-color);\n}\n\n.search-info {\n  background-color: var(--bg-color-secondary);\n  color: var(--text-color-secondary);\n  padding: 6px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-bottom: 10px;\n  \n  i {\n    margin-right: 5px;\n  }\n}\n\n.contacts-list {\n  max-height: calc(100vh - 200px);\n  overflow-y: auto;\n}\n\n.contact-item {\n  display: flex;\n  padding: 10px;\n  border-radius: 6px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background-color: var(--bg-color);\n  \n  &:hover {\n    background-color: var(--hover-color);\n  }\n  \n  &.active {\n    background-color: var(--bg-color-tertiary);\n  }\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-right: 10px;\n}\n\n.contact-info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.contact-name {\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 3px;\n}\n\n.contact-position {\n  font-size: 12px;\n  color: var(--text-color-secondary);\n}\n\n.contact-detail-card {\n  height: 100%;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n.contact-header {\n  display: flex;\n  margin-bottom: 20px;\n}\n\n.detail-avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 20px;\n}\n\n.detail-info {\n  flex: 1;\n}\n\n.detail-name {\n  font-size: 18px;\n  font-weight: 600;\n  color: var(--text-color);\n  margin-bottom: 5px;\n}\n\n.detail-position, .detail-department {\n  font-size: 14px;\n  color: var(--text-color-secondary);\n  margin-bottom: 5px;\n}\n\n.contact-actions {\n  margin-top: 10px;\n}\n\n.contact-section {\n  margin-bottom: 20px;\n}\n\n.section-title {\n  font-weight: 600;\n  font-size: 16px;\n  color: var(--text-color);\n  margin-bottom: 10px;\n}\n\n.contact-row {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.contact-label {\n  width: 100px;\n  font-weight: 500;\n  color: var(--text-color-secondary);\n}\n\n.contact-value {\n  flex: 1;\n  color: var(--text-color);\n}\n\n.skills-tags {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.mr-2 {\n  margin-right: 8px;\n}\n\n.mb-2 {\n  margin-bottom: 8px;\n}\n\n// 表格在深色模式下的适配\n:deep(.el-table) {\n  background-color: var(--bg-color-secondary) !important;\n  color: var(--text-color) !important;\n  \n  th.el-table__cell,\n  td.el-table__cell {\n    background-color: var(--bg-color-secondary) !important;\n    color: var(--text-color) !important;\n    border-bottom-color: var(--border-color) !important;\n  }\n  \n  .el-table__row:hover > td.el-table__cell {\n    background-color: var(--hover-color) !important;\n  }\n}\n\n// 深色模式下的卡片样式\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -10px;\n  \n  .col-md-2 {\n    width: 20%;\n    padding: 0 10px;\n  }\n  \n  .col-md-4 {\n    width: 36%;\n    padding: 0 10px;\n  }\n  \n  .col-md-6 {\n    width: 44%;\n    padding: 0 10px;\n  }\n  \n  @media (max-width: 992px) {\n    .col-md-2, .col-md-4, .col-md-6 {\n      width: 100%;\n      margin-bottom: 20px;\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]}]}