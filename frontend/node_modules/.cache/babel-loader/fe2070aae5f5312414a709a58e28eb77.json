{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue","mtime":1747804629124},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748076840894},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","nextTick","watch","ElMessage","dayjs","buildKnowledgeBase","getKnowledgeBaseStatus","Loading","CircleCheckFilled","CircleCloseFilled","name","components","props","modelValue","type","Boolean","default","emits","setup","emit","visible","get","set","val","buildingStatus","buildingProgress","buildingMessage","buildingOutput","fullOutput","buildingStats","pollTimer","clearPollTimer","clearTimeout","console","log","startBuild","value","response","setTimeout","pollBuildStatus","error","_error$response","_error$response$data","data","message","JSON","stringify","Object","keys","status","statusData","progress","full_output","graphrag_output","substring","outputElem","document","querySelector","scrollTop","scrollHeight","pollInterval","startTime","started_at","Date","endTime","finished_at","duration","calculateDuration","totalDocs","total_docs","totalChunks","total_chunks","success","detail","error_detail","warn","start","end","diff","Math","abs","minutes","floor","seconds","toFixed","formatBuildTime","dateObj","format","close","newVal"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-builder\">\n    <!-- 知识库构建对话框 -->\n    <el-dialog\n      v-model=\"visible\"\n      title=\"构建知识库\"\n      width=\"650px\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"buildingStatus !== 'processing'\"\n      class=\"builder-dialog\"\n    >\n      <div class=\"building-status\" :key=\"buildingStatus\">\n        <div class=\"status-icon\">\n          <el-icon v-if=\"buildingStatus === 'processing'\" class=\"spinning\"><Loading /></el-icon>\n          <el-icon v-else-if=\"buildingStatus === 'completed'\" class=\"success\"><CircleCheckFilled /></el-icon>\n          <el-icon v-else-if=\"buildingStatus === 'failed'\" class=\"error\"><CircleCloseFilled /></el-icon>\n        </div>\n        <div class=\"status-text\">\n          <h3>{{ buildingStatus === 'pending' ? '准备构建知识库' : \n                buildingStatus === 'processing' ? '正在构建知识库' : \n                buildingStatus === 'completed' ? '知识库构建完成' : '知识库构建失败' }}</h3>\n          <p>{{ buildingMessage }}</p>\n          \n          <div v-if=\"buildingStatus === 'processing'\" class=\"progress-container\">\n            <el-progress :percentage=\"buildingProgress\" :format=\"p => `${p}%`\"></el-progress>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'pending'\" class=\"info-container\">\n            <el-alert\n              title=\"构建知识库将处理所有已上传的文档，并将它们整合到一个统一的知识库中\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>这个过程可能需要一些时间，取决于文档数量和大小。</p>\n              <p>构建完成后，您将能够使用智能问答功能对知识库进行提问。</p>\n            </el-alert>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'completed'\" class=\"success-container\">\n            <el-alert\n              title=\"知识库已成功构建！\"\n              type=\"success\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>所有文档已被处理并整合到知识库中，您现在可以使用智能问答功能。</p>\n            </el-alert>\n            \n            <!-- GraphRAG命令输出内容 -->\n            <div class=\"graphrag-output-container\">\n              <h4 class=\"output-title\">GraphRAG 索引构建输出</h4>\n              <div class=\"graphrag-command\">\n                <el-tag type=\"info\">python -m graphrag index --root ./ragtest</el-tag>\n              </div>\n              <div class=\"output-content\">\n                <pre v-if=\"buildingOutput\" ref=\"outputPre\">{{ buildingOutput }}</pre>\n                <pre v-else-if=\"fullOutput\" ref=\"outputPre\">{{ fullOutput }}</pre>\n                <p v-else class=\"no-output\">没有可用的输出内容</p>\n              </div>\n              <div v-if=\"buildingStats\" class=\"output-stats\">\n                <h5>构建统计</h5>\n                <ul>\n                  <li><strong>处理时间:</strong> {{ buildingStats.duration || '未知' }}</li>\n                  <li><strong>文档总数:</strong> {{ buildingStats.totalDocs || 0 }}</li>\n                  <li><strong>内容块数:</strong> {{ buildingStats.totalChunks || 0 }}</li>\n                  <li><strong>开始时间:</strong> {{ formatBuildTime(buildingStats.startTime) }}</li>\n                  <li><strong>完成时间:</strong> {{ formatBuildTime(buildingStats.endTime) }}</li>\n                </ul>\n              </div>\n              \n              <!-- 索引文件位置信息 -->\n              <div class=\"index-location-info\">\n                <el-alert\n                  title=\"索引文件位置\"\n                  type=\"info\"\n                  :closable=\"false\"\n                  show-icon\n                >\n                  <p>索引文件已保存到 <code>graphrag-main/ragtest/index</code> 目录，可用于智能问答系统</p>\n                  <p>命令: <code>python -m graphrag index --root ./ragtest</code></p>\n                </el-alert>\n              </div>\n            </div>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'failed'\" class=\"error-container\">\n            <el-alert\n              title=\"知识库构建失败\"\n              type=\"error\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>{{ buildingMessage }}</p>\n              <p>请检查日志或联系管理员解决问题。</p>\n            </el-alert>\n          </div>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button v-if=\"buildingStatus !== 'processing'\" @click=\"close\">关闭</el-button>\n          <el-button \n            v-if=\"buildingStatus === 'pending'\" \n            type=\"primary\" \n            @click=\"startBuild\">开始构建</el-button>\n          <el-button \n            v-if=\"buildingStatus === 'failed'\" \n            type=\"primary\" \n            @click=\"startBuild\">重试</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, watch } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport dayjs from 'dayjs'\nimport { buildKnowledgeBase, getKnowledgeBaseStatus } from '@/api/knowledge'\nimport { \n  Loading, \n  CircleCheckFilled, \n  CircleCloseFilled \n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'KnowledgeBuilder',\n  components: {\n    Loading,\n    CircleCheckFilled,\n    CircleCloseFilled\n  },\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'build-completed', 'build-failed'],\n  setup(props, { emit }) {\n    // 构建相关状态\n    const visible = computed({\n      get: () => props.modelValue,\n      set: (val) => emit('update:modelValue', val)\n    })\n    const buildingStatus = ref('pending') // pending, processing, completed, failed\n    const buildingProgress = ref(0)\n    const buildingMessage = ref('正在初始化...') // 初始化消息\n    const buildingOutput = ref('') // GraphRAG命令输出\n    const fullOutput = ref('') // 完整GraphRAG命令输出 (备用)\n    const buildingStats = ref(null) // 构建统计信息\n    \n    // 定时器ID\n    let pollTimer = null\n\n    // 清除轮询定时器\n    const clearPollTimer = () => {\n      if (pollTimer) {\n        clearTimeout(pollTimer)\n        pollTimer = null\n        console.log('Polling timer cleared.');\n      }\n    }\n\n    // 启动知识库构建\n    const startBuild = async () => {\n      console.log('startBuild called');\n      try {\n        buildingStatus.value = 'processing'\n        buildingMessage.value = '正在启动知识库构建，请稍候...' // 更明确的启动消息\n        buildingProgress.value = 0\n        buildingOutput.value = '' // 清空旧输出\n        fullOutput.value = ''   // 清空旧输出\n        buildingStats.value = null\n        \n        clearPollTimer(); // 开始构建前先清除旧的定时器\n        console.log('Calling buildKnowledgeBase API...');\n        const response = await buildKnowledgeBase()\n        console.log('buildKnowledgeBase API response:', response)\n        \n        // API调用成功后立即开始轮询，初始延迟短一点\n        pollTimer = setTimeout(pollBuildStatus, 100); \n        console.log('Initial pollBuildStatus scheduled.');\n\n      } catch (error) {\n        console.error('启动知识库构建时出错:', error)\n        buildingStatus.value = 'failed'\n        buildingMessage.value = error.response?.data?.message || error.message || '启动构建失败'\n        emit('build-failed', error)\n        clearPollTimer();\n      }\n    }\n\n    // 轮询构建状态\n    const pollBuildStatus = async () => {\n      console.log('pollBuildStatus called. Current status:', buildingStatus.value);\n      // 如果已经是完成或失败状态，或者对话框不可见，则不应再轮询\n      if ((buildingStatus.value === 'completed' || buildingStatus.value === 'failed') && pollTimer) {\n          console.log('Build already completed or failed, clearing timer from pollBuildStatus.')\n          clearPollTimer();\n          return;\n      }\n      if (!visible.value && pollTimer) {\n          console.log('Dialog not visible, clearing timer from pollBuildStatus.');\n          clearPollTimer();\n          return;\n      }\n\n      try {\n        console.log('Calling getKnowledgeBaseStatus API...');\n        const response = await getKnowledgeBaseStatus()\n        // 新增的详细日志\n        console.log('DEBUG: Full getKnowledgeBaseStatus API response object:', JSON.stringify(response, null, 2));\n        console.log('DEBUG: typeof response:', typeof response);\n        if (response) {\n          console.log('DEBUG: Keys in response object:', Object.keys(response));\n          console.log('DEBUG: response.status (HTTP status):', response.status);\n          console.log('DEBUG: response.data value is:', response.data);\n          console.log('DEBUG: typeof response.data:', typeof response.data);\n        } else {\n          console.log('DEBUG: Response object itself is null or undefined.');\n        }\n        // 原有的日志\n        console.log('getKnowledgeBaseStatus API response data:', response.data)\n        \n        // response 对象本身就是我们期望的数据\n        if (response && typeof response === 'object' && response.status) { \n          const statusData = response; \n          \n          console.log('Received statusData from backend (using direct response):', JSON.stringify(statusData));\n          console.log('Backend status received (from direct response):', statusData.status);\n          \n          buildingStatus.value = statusData.status || 'processing';\n          console.log('Frontend buildingStatus.value updated to:', buildingStatus.value);\n          buildingMessage.value = statusData.message || (buildingStatus.value === 'processing' ? '正在处理中，请稍候...' : '等待状态更新...');\n          buildingProgress.value = statusData.progress || buildingProgress.value;\n          \n          console.log('Updated frontend status:', buildingStatus.value, 'Progress:', buildingProgress.value, 'Message:', buildingMessage.value);\n\n          // 处理GraphRAG命令输出\n          if (statusData.full_output) {\n            console.log('Using full_output for display.');\n            buildingOutput.value = statusData.full_output;\n            fullOutput.value = statusData.full_output;\n          } else if (statusData.graphrag_output) {\n            console.log('Using graphrag_output for display.');\n            buildingOutput.value = statusData.graphrag_output;\n          } else {\n            console.log('No specific output field (full_output or graphrag_output) from backend yet.');\n          }\n          console.log('Current buildingOutput (first 100 chars): ', buildingOutput.value ? buildingOutput.value.substring(0,100) : \"N/A\");\n          \n          // 滚动输出框到底部\n          nextTick(() => {\n            const outputElem = document.querySelector('.output-content pre')\n            if (outputElem) {\n              outputElem.scrollTop = outputElem.scrollHeight\n            }\n          })\n          \n          // 如果还在处理中，继续轮询\n          if (buildingStatus.value === 'processing') {\n            const pollInterval = 1000 // 统一轮询间隔为1秒\n            console.log(`Status is 'processing'. Scheduling next poll in ${pollInterval}ms.`);\n            clearPollTimer(); // 清除旧的，避免重复\n            pollTimer = setTimeout(pollBuildStatus, pollInterval)\n          } else if (buildingStatus.value === 'completed') {\n            console.log('Status is', buildingStatus.value, '. Build finished successfully.');\n            buildingProgress.value = 100; //  确保完成时进度为100%\n            // 构建完成，处理统计数据\n            const startTime = statusData.started_at ? new Date(statusData.started_at) : null\n            const endTime = statusData.finished_at ? new Date(statusData.finished_at) : null\n            \n            buildingStats.value = {\n              startTime: startTime,\n              endTime: endTime,\n              duration: startTime && endTime ? calculateDuration(startTime, endTime) : '未知',\n              totalDocs: statusData.total_docs || 0,\n              totalChunks: statusData.total_chunks || 0\n            }\n            \n            ElMessage.success(statusData.message || '知识库构建完成！')\n            emit('build-completed')\n            clearPollTimer(); // 确保停止轮询\n          } else if (buildingStatus.value === 'failed') {\n            console.log('Status is', buildingStatus.value, '. Build failed.');\n            ElMessage.error(statusData.message || '知识库构建失败，请查看输出或日志。')\n            emit('build-failed', { message: statusData.message, detail: statusData.error_detail })\n            clearPollTimer(); // 确保停止轮询\n          } else {\n            console.warn('Unknown status from backend:', buildingStatus.value, 'Stopping poll.');\n            clearPollTimer(); // 未知状态，停止轮询以防意外\n          }\n        } else {\n          console.warn('Invalid or empty response object from getKnowledgeBaseStatus. Response:', JSON.stringify(response));\n          buildingMessage.value = '获取状态响应格式无效...';\n          if(buildingStatus.value === 'processing'){\n             const pollInterval = 3000; \n             clearPollTimer();\n             pollTimer = setTimeout(pollBuildStatus, pollInterval);\n          } else if (buildingStatus.value !== 'completed' && buildingStatus.value !== 'failed') {\n            buildingStatus.value = 'failed';\n            buildingMessage.value = '获取状态失败，响应无效。';\n            emit('build-failed', { message: '获取状态失败，响应无效。'});\n            clearPollTimer();\n          }\n        }\n      } catch (error) {\n        console.error('获取构建状态时出错 (pollBuildStatus catch):', error)\n        // 这里不轻易改变 buildingStatus.value 为 'failed'\n        // 除非错误非常严重，否则依赖下一次轮询或用户操作\n        buildingMessage.value = '获取构建状态失败: ' + (error.message || '未知错误') + '. 将尝试再次轮询。'\n        // 即使出错，如果还在processing，也尝试继续轮询，但间隔长一点\n        if(buildingStatus.value === 'processing'){\n            const pollInterval = 3000;\n            clearPollTimer();\n            pollTimer = setTimeout(pollBuildStatus, pollInterval);\n        } else {\n            // 如果不是processing状态了，可能就是真的失败了或者完成了但通信出错了\n            buildingStatus.value = 'failed'; // 标记为失败，以便用户可以重试\n            emit('build-failed', error);\n            clearPollTimer();\n        }\n      }\n    }\n    \n    // 计算持续时间\n    const calculateDuration = (start, end) => {\n      const diff = Math.abs(end - start)\n      const minutes = Math.floor(diff / 60000)\n      const seconds = ((diff % 60000) / 1000).toFixed(0)\n      return `${minutes}分${seconds}秒`\n    }\n    \n    // 格式化构建时间\n    const formatBuildTime = (dateObj) => {\n      if (!dateObj) return '未知'\n      return dayjs(dateObj).format('YYYY-MM-DD HH:mm:ss')\n    }\n    \n    // 关闭对话框\n    const close = () => {\n      visible.value = false\n    }\n    \n    // 组件挂载时\n    onMounted(() => {\n      console.log('KnowledgeBuilder onMounted. Initial modelValue:', props.modelValue);\n      // 不自动开始轮询，等待startBuild被调用\n    })\n    \n    // 组件销毁前清理\n    onBeforeUnmount(() => {\n      console.log('KnowledgeBuilder onBeforeUnmount. Clearing poll timer.');\n      clearPollTimer()\n    })\n\n    watch(visible, (newVal) => {\n      if (newVal) {\n        // 当对话框打开时\n        console.log('Dialog became visible. Current status:', buildingStatus.value);\n        if (buildingStatus.value !== 'processing') {\n          // 如果不是正在处理中 (例如是 completed, failed, 或初始的 pending)，\n          // 则重置为初始待构建状态，以便用户可以开始新的构建。\n          console.log('Resetting status to pending for new build session.');\n          buildingStatus.value = 'pending';\n          buildingMessage.value = '准备开始新的知识库构建。'; // 或者更合适的初始消息\n          buildingProgress.value = 0;\n          buildingOutput.value = '';\n          fullOutput.value = '';\n          buildingStats.value = null;\n          clearPollTimer(); // 确保没有意外的轮询\n        }\n        // 如果是 processing，则什么都不做，让它继续处理或轮询\n      } else {\n        // 当对话框关闭时\n        console.log('Dialog closed. Current status:', buildingStatus.value);\n        // 如果正在处理中，用户关闭了对话框，最好停止轮询，避免后台继续请求\n        if (buildingStatus.value === 'processing') {\n            console.log('Dialog closed during processing, stopping poll timer.');\n            clearPollTimer();\n        }\n      }\n    });\n\n    return {\n      visible,\n      buildingStatus,\n      buildingProgress,\n      buildingMessage,\n      buildingOutput,\n      fullOutput,\n      buildingStats,\n      startBuild,\n      formatBuildTime,\n      close\n    }\n  }\n}\n</script>\n\n<style scoped>\n.builder-dialog {\n  max-width: 90vw;\n}\n\n.building-status {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.status-icon {\n  margin-bottom: 20px;\n  font-size: 48px;\n  display: flex;\n  justify-content: center;\n  color: #6c757d;\n}\n\n.status-icon .spinning {\n  animation: spin 2s linear infinite;\n}\n\n.status-icon .success {\n  color: #67C23A;\n}\n\n.status-icon .error {\n  color: #F56C6C;\n}\n\n.status-text {\n  text-align: center;\n  width: 100%;\n}\n\n.status-text h3 {\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 600;\n}\n\n.status-text p {\n  margin: 5px 0;\n}\n\n.progress-container {\n  margin: 20px 0;\n  width: 100%;\n}\n\n.info-container, .success-container, .error-container {\n  margin: 20px 0;\n  width: 100%;\n}\n\n.graphrag-output-container {\n  margin-top: 20px;\n  padding: 15px;\n  border-radius: 6px;\n  background-color: #f8f9fa;\n}\n\n.output-title {\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.graphrag-command {\n  margin-bottom: 10px;\n}\n\n.output-content {\n  margin-bottom: 10px;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.output-content pre {\n  white-space: pre-wrap;\n  background-color: #2d2d2d;\n  color: #f8f8f2;\n  padding: 15px;\n  border-radius: 5px;\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n  line-height: 1.4;\n  overflow-x: auto;\n}\n\n.no-output {\n  color: #909399;\n  font-size: 12px;\n}\n\n.output-stats {\n  margin-top: 10px;\n}\n\n.index-location-info {\n  margin-top: 15px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n  padding: 12px;\n  border-left: 4px solid #67c23a;\n}\n\n.index-location-info p {\n  margin: 5px 0;\n  font-size: 14px;\n  color: #6c757d;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> "],"mappings":"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","ignoreList":[]}]}