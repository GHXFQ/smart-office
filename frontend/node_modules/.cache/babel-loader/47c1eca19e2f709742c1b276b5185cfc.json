{"remainingRequest":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue","mtime":1747048534989},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728272},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202324},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","computed","nextTick","onMounted","onBeforeUnmount","watch","useStore","ElMessage","ElMessageBox","Search","Phone","VideoCamera","InfoFilled","Document","PictureFilled","FolderOpened","Microphone","Position","ChatDotSquare","Reading","UserFilled","ChatLineSquare","Refresh","getChatSessions","getChatSession","sendTextMessage","sendFileMessage","sendImageMessage","sendKnowledgeMessage","downloadMessageFile","getKnowledgeList","useRoute","request","name","setup","store","currentUser","getters","user","userInfo","searchQuery","activeTab","selectedContact","messageInput","messageContainer","fileInput","imageInput","messages","loading","chatSessions","currentChatId","knowledgeDialogVisible","knowledgeLoading","knowledgeList","selectedKnowledge","tabs","contacts","currentContact","value","find","c","id","userId","_userInfo$value","filteredContacts","filter","contact","toLowerCase","includes","route","refreshInterval","clearInterval","fetchCurrentUser","console","log","token","localStorage","getItem","warn","warning","response","url","method","userData","data","error","Error","setItem","JSON","stringify","message","loadChatSessions","success","Array","isArray","results","length","map","session","otherParticipant","participants","p","is_group","title","initial","avatar","color","getRandomColor","status","lastMessage","last_message","content","lastTime","formatMessageTime","created_at","updated_at","unread","unread_count","isGroup","first_name","last_name","trim","username","sort","a","b","loadChatMessages","chatId","messageData","sessionData","possibleMessageFields","field","some","parseInt","tempContact","unshift","scrollToBottom","errorMessage","refreshChatSessions","scrollTop","scrollHeight","selectContact","sendMessage","tempMessage","Date","now","sender","message_type","toISOString","is_temp","push","messageCopy","chat","file","tempIndex","findIndex","m","splice","contactIndex","savedMessage","openFileUpload","click","openImageUpload","handleFileUpload","event","target","files","handleImageUpload","openKnowledgeDialog","loadKnowledgeList","selectKnowledge","row","shareKnowledge","knowledge","downloadFile","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","file_name","body","appendChild","removeChild","viewKnowledge","knowledge_detail","alert","description","dangerouslyUseHTMLString","confirmButtonText","getSenderColor","getSenderInitial","colors","index","timestamp","date","diff","hours","getHours","toString","padStart","minutes","getMinutes","days","getDay","getMonth","getDate","formatDate","getFullYear","formatFileSize","sizeInKB","toFixed","getStatusText","statusMap","forceRefresh","info","sessionId","query","foundContact","setInterval"],"sources":["C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n        <el-card class=\"chat-card\">\n          <div class=\"chat-header-actions\" v-if=\"loading\">\n            <el-alert\n              title=\"正在加载数据...\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n          <div class=\"chat-header-actions\" v-else-if=\"!loading && contacts.length === 0\">\n            <el-alert\n              title=\"未找到任何聊天会话\"\n              type=\"warning\"\n              :closable=\"false\"\n              show-icon\n            >\n              <template #default>\n                <div class=\"refresh-action\">\n                  <span>可能是服务器连接问题或身份认证已过期</span>\n                  <el-button type=\"primary\" size=\"small\" @click=\"forceRefresh\">\n                    <el-icon><Refresh /></el-icon> 强制刷新\n                  </el-button>\n                </div>\n              </template>\n            </el-alert>\n          </div>\n          <div class=\"chat-layout\">\n            <!-- 左侧联系人列表 -->\n            <div class=\"chat-sidebar\">\n              <!-- 搜索框 -->\n              <div class=\"search-box\">\n                <div class=\"search-header\">\n                  <el-input \n                    v-model=\"searchQuery\" \n                    placeholder=\"搜索联系人...\"\n                    clearable\n                    :prefix-icon=\"Search\"\n                  ></el-input>\n                  <el-button circle size=\"small\" @click=\"refreshChatSessions\" title=\"刷新列表\">\n                    <el-icon><Refresh /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 聊天标签页 -->\n              <div class=\"chat-tabs\">\n                <div \n                  v-for=\"(tab, index) in tabs\" \n                  :key=\"index\"\n                  class=\"chat-tab\"\n                  :class=\"{'active': activeTab === index}\"\n                  @click=\"activeTab = index\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              \n              <!-- 联系人列表 -->\n              <div class=\"contacts-list\">\n                <div \n                  v-for=\"(contact, index) in filteredContacts\" \n              :key=\"contact.id || index\"\n                  class=\"contact-item\"\n              :class=\"{'active': selectedContact === contact.id}\"\n              @click=\"selectContact(contact)\"\n                >\n                  <div class=\"contact-avatar\">\n                    <div \n                      v-if=\"!contact.avatar\" \n                      class=\"avatar\" \n                      :style=\"{backgroundColor: contact.color}\"\n                    >\n                      <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                    </div>\n                    <img v-else :src=\"contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                    <div \n                      class=\"contact-status\" \n                      :class=\"'status-' + contact.status\"\n                    ></div>\n                  </div>\n                  <div class=\"contact-info\">\n                    <div class=\"contact-name\">\n                      <span>{{ contact.name }}</span>\n                      <span class=\"time\">{{ contact.lastTime }}</span>\n                    </div>\n                    <div class=\"contact-message\">\n                      <span>{{ contact.lastMessage }}</span>\n                      <el-badge \n                        v-if=\"contact.unread\" \n                        :value=\"contact.unread\" \n                        class=\"message-badge\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n            <!-- 无联系人提示 -->\n            <div v-if=\"!loading && filteredContacts.length === 0\" class=\"empty-contacts\">\n              <el-empty \n                description=\"暂无联系人\" \n                :image-size=\"100\"\n              >\n                <template #image>\n                  <el-icon :size=\"64\" class=\"empty-icon\"><UserFilled /></el-icon>\n                </template>\n              </el-empty>\n            </div>\n\n            <!-- 加载中提示 -->\n            <div v-if=\"loading\" class=\"loading-container\">\n              <el-skeleton :rows=\"5\" animated />\n            </div>\n              </div>\n            </div>\n            \n            <!-- 右侧聊天内容 -->\n            <div class=\"chat-content\">\n              <!-- 聊天头部 -->\n              <div class=\"chat-header\" v-if=\"selectedContact !== null\">\n                <div class=\"contact-avatar\">\n                  <div \n                v-if=\"!currentContact.avatar\" \n                    class=\"avatar\" \n                :style=\"{backgroundColor: currentContact.color}\"\n                  >\n                <span class=\"avatar-initial\">{{ currentContact.initial }}</span>\n                  </div>\n                  <img \n                    v-else \n                :src=\"currentContact.avatar\" \n                    alt=\"avatar\" \n                    class=\"avatar\" \n                  />\n                  <div \n                    class=\"contact-status\" \n                :class=\"'status-' + currentContact.status\"\n                  ></div>\n                </div>\n                <div class=\"contact-info\">\n              <h6>{{ currentContact.name }}</h6>\n              <p>{{ getStatusText(currentContact.status) }}</p>\n                </div>\n                <div class=\"chat-actions\">\n                  <el-tooltip content=\"语音通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><Phone /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"视频通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><VideoCamera /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"聊天信息\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><InfoFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n              </div>\n              \n              <!-- 聊天消息区域 -->\n              <div class=\"chat-messages\" v-if=\"selectedContact !== null\" ref=\"messageContainer\">\n                <div \n                  v-for=\"(message, index) in messages\" \n                  :key=\"message.id || index\"\n                  class=\"message\"\n                  :class=\"message.sender.id === userId ? 'message-sent' : 'message-received'\"\n                >\n                  <div class=\"message-container\">\n                    <div v-if=\"message.sender.id !== userId\" class=\"message-avatar\">\n                      <div \n                        class=\"avatar small\" \n                        :style=\"{backgroundColor: getSenderColor(message.sender)}\"\n                      >\n                        <span class=\"avatar-initial\">{{ getSenderInitial(message.sender) }}</span>\n                      </div>\n                    </div>\n                    <div class=\"message-content-wrapper\">\n                      <div \n                        class=\"message-content\"\n                        :class=\"message.sender.id === userId ? 'sent' : 'received'\"\n                      >\n                        <span v-if=\"message.message_type === 'text'\">{{ message.content }}</span>\n                    \n                        <div v-else-if=\"message.message_type === 'image'\" class=\"message-image\">\n                          <img :src=\"message.file\" alt=\"image\" />\n                        </div>\n                    \n                        <div v-else-if=\"message.message_type === 'file'\" class=\"message-file\" @click=\"downloadFile(message)\">\n                          <el-icon><Document /></el-icon>\n                          <span>{{ message.file_name }}</span>\n                          <span class=\"file-size\">{{ formatFileSize(message.file_size) }}</span>\n                        </div>\n                    \n                        <div v-else-if=\"message.message_type === 'knowledge'\" class=\"message-knowledge\" @click=\"viewKnowledge(message)\">\n                          <el-icon><Reading /></el-icon>\n                          <div class=\"knowledge-info\">\n                            <div class=\"knowledge-title\">{{ message.knowledge_detail.title }}</div>\n                            <div class=\"knowledge-desc\">{{ message.knowledge_detail.description }}</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"message-time\">{{ formatMessageTime(message.created_at) }}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 聊天输入框 -->\n              <div class=\"chat-input\" v-if=\"selectedContact !== null\">\n                <div class=\"chat-tools\">\n              <el-tooltip content=\"发送图片\" placement=\"top\">\n                <el-button circle @click=\"openImageUpload\">\n                    <el-icon><PictureFilled /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"发送文件\" placement=\"top\">\n                <el-button circle @click=\"openFileUpload\">\n                    <el-icon><FolderOpened /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享知识库文件\" placement=\"top\">\n                <el-button circle @click=\"openKnowledgeDialog\">\n                  <el-icon><Reading /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"语音消息\" placement=\"top\">\n                  <el-button circle>\n                    <el-icon><Microphone /></el-icon>\n                  </el-button>\n              </el-tooltip>\n                </div>\n                <div class=\"input-area\">\n                  <el-input\n                    v-model=\"messageInput\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    placeholder=\"输入消息...\"\n                    resize=\"none\"\n                    @keyup.enter.prevent=\"sendMessage\"\n                  ></el-input>\n                </div>\n                <div class=\"send-button\">\n                  <el-button type=\"primary\" @click=\"sendMessage\">\n                    <el-icon><Position /></el-icon>\n                    发送\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 无选中联系人提示 -->\n              <div class=\"empty-chat\" v-if=\"selectedContact === null\">\n                <div class=\"empty-illustration\">\n                  <el-icon :size=\"64\"><ChatDotSquare /></el-icon>\n                </div>\n                <h4>选择一个联系人开始聊天</h4>\n            <p>从左侧列表选择联系人开始对话</p>\n              </div>\n          \n          <!-- 无消息提示 -->\n          <div v-if=\"selectedContact !== null && !loading && messages.length === 0\" class=\"empty-messages\">\n            <el-empty description=\"暂无消息记录\">\n              <template #image>\n                <el-icon :size=\"64\" class=\"empty-icon\"><ChatLineSquare /></el-icon>\n              </template>\n              <p>发送第一条消息开始对话吧</p>\n            </el-empty>\n            </div>\n          \n          <!-- 消息加载中 -->\n          <div v-if=\"selectedContact !== null && loading\" class=\"loading-messages\">\n            <el-skeleton :rows=\"3\" animated />\n            <el-skeleton style=\"margin-top: 20px\" :rows=\"2\" animated />\n            <div style=\"text-align: right; margin-top: 20px\">\n              <el-skeleton :rows=\"2\" animated />\n          </div>\n      </div>\n    </div>\n      </div>\n    </el-card>\n  \n  <!-- 隐藏的文件上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"fileInput\" \n    style=\"display: none\" \n    @change=\"handleFileUpload\" \n  />\n  \n  <!-- 隐藏的图片上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"imageInput\" \n    style=\"display: none\" \n    accept=\"image/*\" \n    @change=\"handleImageUpload\" \n  />\n  \n  <!-- 知识库选择对话框 -->\n  <el-dialog\n    v-model=\"knowledgeDialogVisible\"\n    title=\"选择知识库文件\"\n    width=\"50%\"\n  >\n    <el-table\n      v-loading=\"knowledgeLoading\"\n      :data=\"knowledgeList\"\n      style=\"width: 100%\"\n      @row-click=\"selectKnowledge\"\n    >\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n      <el-table-column prop=\"file_type\" label=\"类型\">\n        <template #default=\"scope\">\n          <el-tag>{{ scope.row.file_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"shareKnowledge(scope.row)\">\n            分享\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"knowledgeDialogVisible = false\">取消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, nextTick, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, Phone, VideoCamera, InfoFilled, Document, PictureFilled, \n  FolderOpened, Microphone, Position, ChatDotSquare, Reading, UserFilled, ChatLineSquare,\n  Refresh\n} from '@element-plus/icons-vue'\nimport { \n  getChatSessions, \n  getChatSession, \n  sendTextMessage, \n  sendFileMessage,\n  sendImageMessage,\n  sendKnowledgeMessage,\n  downloadMessageFile\n} from '@/api/chat'\nimport { getKnowledgeList } from '@/api/knowledge'\nimport { useRoute } from 'vue-router'\nimport request from '@/utils/request'\n\nexport default {\n  name: 'Chat',\n  setup() {\n    const store = useStore()\n    const currentUser = computed(() => store.getters.user)\n    \n    // 添加本地用户数据存储\n    const userInfo = ref(null)\n    \n    const searchQuery = ref('')\n    const activeTab = ref(0)\n    const selectedContact = ref(null)\n    const messageInput = ref('')\n    const messageContainer = ref(null)\n    const fileInput = ref(null)\n    const imageInput = ref(null)\n    const messages = ref([])\n    const loading = ref(false)\n    const chatSessions = ref([])\n    const currentChatId = ref(null)\n    \n    // 知识库相关\n    const knowledgeDialogVisible = ref(false)\n    const knowledgeLoading = ref(false)\n    const knowledgeList = ref([])\n    const selectedKnowledge = ref(null)\n    \n    // 标签页\n    const tabs = ref(['最近聊天', '同事', '群组'])\n    \n    // 联系人列表\n    const contacts = ref([])\n    \n    // 当前选中的联系人\n    const currentContact = computed(() => {\n      if (selectedContact.value === null) return {}\n      return contacts.value.find(c => c.id === selectedContact.value) || {}\n    })\n    \n    // 安全地获取用户ID，避免模板中的null错误\n    const userId = computed(() => {\n      return userInfo.value?.id || null\n    })\n    \n    // 根据搜索过滤联系人\n    const filteredContacts = computed(() => {\n      if (!searchQuery.value) return contacts.value\n      return contacts.value.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n      )\n    })\n    \n    // 路由\n    const route = useRoute()\n    \n    // 定义一个refreshInterval的引用，以便在组件卸载时清除\n    let refreshInterval = null\n    \n    // 组件卸载时清除定时器\n    onBeforeUnmount(() => {\n      if (refreshInterval) {\n        clearInterval(refreshInterval)\n      }\n    })\n    \n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        console.log('开始获取当前用户信息...')\n        \n        // 检查localStorage中是否有token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          console.warn('本地存储中没有找到认证token')\n          ElMessage.warning('未登录或登录已过期，请重新登录')\n          return null\n        }\n        \n        const response = await request({\n          url: '/api/auth/users/me/',\n          method: 'get'\n        })\n        \n        console.log('获取用户信息响应:', response)\n        \n        // 检查响应格式并获取用户数据\n        let userData = null\n        if (response.data && response.data.id) {\n          // 直接从data字段获取用户数据\n          userData = response.data\n          console.log('从data字段获取用户数据:', userData)\n        } else if (response.data && response.data.data && response.data.data.id) {\n          // 从嵌套data字段获取用户数据\n          userData = response.data.data\n          console.log('从嵌套data字段获取用户数据:', userData)\n        } else if (response.id) {\n          // 直接响应就是用户数据\n          userData = response\n          console.log('直接获取用户数据:', userData)\n        } else {\n          console.error('获取用户信息响应格式异常:', response)\n          throw new Error('用户信息格式异常')\n        }\n        \n        if (!userData || !userData.id) {\n          console.error('获取的用户数据无效:', userData)\n          throw new Error('无效的用户数据')\n        }\n        \n        // 不使用未定义的mutation，而是直接更新本地状态\n        userInfo.value = userData\n        \n        // 保存到localStorage以便持久化\n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        console.log('用户数据已更新:', userInfo.value)\n        return userData\n      } catch (error) {\n        console.error('获取当前用户信息失败:', error)\n        ElMessage.error('获取用户信息失败: ' + (error.message || '未知错误'))\n        return null\n      }\n    }\n    \n    // 加载聊天会话列表\n    const loadChatSessions = async () => {\n      try {\n        loading.value = true\n        console.log('正在加载聊天会话列表...')\n        \n        const response = await getChatSessions()\n        console.log('获取聊天会话响应:', response)\n        \n        // 确保我们有响应数据\n        if (!response) {\n          console.error('获取聊天会话返回空响应')\n          contacts.value = []\n          return\n        }\n        \n        let data\n        if (response.success && response.data) {\n          data = response.data\n          console.log('使用包装格式的聊天数据:', data)\n        } else {\n          data = response\n          console.log('使用直接返回的聊天数据:', data)\n        }\n        \n        // 转换数据格式\n        chatSessions.value = data\n        \n        // 构建联系人列表\n        if (data && Array.isArray(data.results)) {\n          console.log('处理分页数据结构, 共有会话数:', data.results.length)\n          // 处理分页数据结构\n          contacts.value = data.results.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              return {\n                id: session.id,\n                name: `${user.first_name} ${user.last_name}`.trim() || user.username,\n                initial: (user.first_name || user.username)[0],\n                avatar: user.avatar,\n                color: getRandomColor(user.id),\n                status: 'online', // 假设所有用户都在线\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else if (data && Array.isArray(data)) {\n          console.log('处理非分页数据结构, 共有会话数:', data.length)\n          // 处理非分页数据结构\n          contacts.value = data.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              return {\n                id: session.id,\n                name: `${user.first_name} ${user.last_name}`.trim() || user.username,\n                initial: (user.first_name || user.username)[0],\n                avatar: user.avatar,\n                color: getRandomColor(user.id),\n                status: 'online', // 假设所有用户都在线\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else {\n          // 如果没有有效数据\n          console.error('获取聊天会话格式异常或为空:', data)\n          contacts.value = []\n        }\n        \n        console.log('处理后的联系人列表:', contacts.value)\n        \n        // 如果有未读消息，按未读数量排序\n        if (contacts.value.length > 0) {\n          contacts.value.sort((a, b) => b.unread - a.unread)\n        }\n      } catch (error) {\n        console.error('加载聊天会话失败:', error)\n        ElMessage.error('加载聊天会话失败: ' + (error.message || '未知错误'))\n        contacts.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 加载聊天消息\n    const loadChatMessages = async (chatId) => {\n      if (!chatId) {\n        console.error('无法加载消息: chatId为空')\n        return\n      }\n      \n      try {\n        loading.value = true\n        console.log(`正在加载聊天会话 ${chatId} 的消息...`)\n        \n        const response = await getChatSession(chatId)\n        console.log('聊天会话详情响应:', response)\n        \n        if (!response) {\n          console.error('获取聊天会话详情返回空响应')\n          messages.value = []\n          return\n        }\n        \n        // 处理不同的响应格式\n        let messageData = []\n        let sessionData = null\n        \n        if (response.data && response.data.messages) {\n          // 标准格式：响应直接包含messages字段\n          messageData = response.data.messages\n          sessionData = response.data\n          console.log('标准格式消息数据，消息数量:', messageData.length)\n        } else if (response.data && response.data.data && response.data.data.messages) {\n          // 包装格式：{success: true, data: {messages: [...]}}\n          messageData = response.data.data.messages\n          sessionData = response.data.data\n          console.log('包装格式消息数据，消息数量:', messageData.length)\n        } else if (response.messages) {\n          // 直接返回格式: {messages: [...]}\n          messageData = response.messages\n          sessionData = response\n          console.log('直接返回格式消息数据，消息数量:', messageData.length)\n        } else {\n          console.warn('无法识别的消息数据格式:', response)\n          console.log('尝试检查是否有其他可能的消息字段...')\n          \n          // 尝试查找其他可能的消息字段\n          const possibleMessageFields = ['message', 'chat_messages', 'chats', 'content']\n          for (const field of possibleMessageFields) {\n            if (response[field] && Array.isArray(response[field])) {\n              console.log(`找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response[field]\n              sessionData = response\n              break\n            } else if (response.data && response.data[field] && Array.isArray(response.data[field])) {\n              console.log(`在data字段中找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response.data[field]\n              sessionData = response.data\n              break\n            }\n          }\n          \n          if (messageData.length === 0) {\n            console.warn('未找到任何消息数据，使用空数组')\n          }\n        }\n        \n        // 记录会话和消息数据\n        console.log('处理后的会话数据:', sessionData)\n        console.log('处理后的消息数据:', messageData)\n        \n        // 如果会话不在联系人列表中，添加它\n        if (sessionData && !contacts.value.some(c => c.id === parseInt(chatId))) {\n          console.log('会话不在联系人列表中，添加它:', sessionData)\n          \n          // 创建临时联系人对象\n          const session = sessionData\n          // 找到对方用户（非当前用户）\n          let otherParticipant = null\n          \n          // 确保 session.participants 存在且是数组\n          if (session.participants && Array.isArray(session.participants) && session.participants.length > 0 && userInfo.value) {\n            otherParticipant = session.participants.find(p => p.user && p.user.id !== userInfo.value.id)\n          }\n          \n          let tempContact = null\n          \n          // 如果是群聊，使用群聊信息\n          if (session.is_group) {\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '群聊',\n              initial: (session.title || '群聊')[0],\n              avatar: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: true\n            }\n          // 单聊，使用对方信息\n          } else if (otherParticipant && otherParticipant.user) {\n            const user = otherParticipant.user\n            tempContact = {\n              id: parseInt(chatId),\n              name: `${user.first_name || ''} ${user.last_name || ''}`.trim() || user.username,\n              initial: ((user.first_name || user.username) || '用户')[0],\n              avatar: user.avatar,\n              color: getRandomColor(user.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: false\n            }\n          } else {\n            // 如果无法找到对方信息，使用默认值\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: session.is_group\n            }\n          }\n          \n          // 添加临时联系人到列表\n          if (tempContact) {\n            contacts.value.unshift(tempContact)\n            console.log('添加临时联系人:', tempContact)\n          }\n        }\n        \n        // 更新组件数据\n        messages.value = messageData || []\n        currentChatId.value = parseInt(chatId)\n        selectedContact.value = parseInt(chatId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载会话详情失败:', error)\n        \n        let errorMessage = '加载聊天消息失败'\n        if (error.response) {\n          const status = error.response.status\n          if (status === 404) {\n            errorMessage = '聊天会话不存在或已被删除'\n          } else if (status === 403) {\n            errorMessage = '无权访问此聊天会话'\n          } else if (error.response.data && error.response.data.message) {\n            errorMessage = error.response.data.message\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n        messages.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 刷新聊天会话列表\n    const refreshChatSessions = async () => {\n      await loadChatSessions()\n      \n      // 如果有当前聊天ID，确保选中正确的联系人\n      if (currentChatId.value) {\n        const contact = contacts.value.find(c => c.id === currentChatId.value)\n        if (contact) {\n          selectedContact.value = contact.id\n        }\n      }\n    }\n    \n    // 确保消息容器滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 在选择联系人后，滚动到底部\n    const selectContact = async (contact) => {\n      if (selectedContact.value === contact.id) return\n      \n      selectedContact.value = contact.id\n      currentChatId.value = contact.id\n      \n      // 加载会话消息\n      await loadChatMessages(contact.id)\n      \n      // 等待DOM更新后滚动到底部\n      await nextTick()\n      scrollToBottom()\n      \n      // 清空输入框\n      messageInput.value = ''\n    }\n    \n    // 在消息列表更新后，滚动到底部\n    watch(messages, () => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim() || !currentChatId.value) return\n      \n      try {\n        // 检查当前用户信息是否存在\n        if (!userInfo.value || !userInfo.value.id) {\n          console.log('当前用户信息不存在，尝试重新获取...')\n          // 尝试重新获取用户信息\n          const userData = await fetchCurrentUser()\n          if (!userData || !userData.id) {\n            throw new Error('无法获取当前用户信息，请刷新页面重试')\n          }\n          \n          console.log('成功获取用户信息:', userData)\n        }\n        \n        // 创建临时消息对象\n        // 再次检查用户信息是否已更新\n        if (!userInfo.value || !userInfo.value.id) {\n          throw new Error('用户信息未更新，请刷新页面重试')\n        }\n        \n        const tempMessage = {\n          id: 'temp-' + Date.now(),\n          content: messageInput.value.trim(),\n          sender: {\n            id: userInfo.value.id,\n            username: userInfo.value.username || '用户',\n            first_name: userInfo.value.first_name || '',\n            last_name: userInfo.value.last_name || ''\n          },\n          message_type: 'text',\n          created_at: new Date().toISOString(),\n          is_temp: true\n        }\n        \n        // 先将临时消息添加到列表中\n        messages.value.push(tempMessage)\n        \n        // 清空输入框\n        const messageCopy = messageInput.value\n        messageInput.value = ''\n        \n        // 滚动到底部\n        await nextTick()\n        scrollToBottom()\n        \n        // 发送消息到服务器\n        const response = await sendTextMessage(currentChatId.value, messageCopy)\n        console.log('发送消息响应:', response)\n        \n        // 适应不同的响应格式\n        let messageData = null\n        \n        if (response && response.success && response.data) {\n          // 标准包装格式: {success: true, data: {}}\n          messageData = response.data\n        } else if (response && response.id) {\n          // 包含ID的DRF格式\n          messageData = response\n        } else if (response && response.chat) {\n          // 新API格式: {chat, content, message_type, file, ...}\n          // 构造完整的消息对象\n          messageData = {\n            id: response.id || 'msg-' + Date.now(),\n            content: response.content,\n            message_type: response.message_type,\n            file: response.file,\n            created_at: response.created_at || new Date().toISOString(),\n            sender: {\n              id: userInfo.value.id,\n              username: userInfo.value.username || '用户',\n              first_name: userInfo.value.first_name || '',\n              last_name: userInfo.value.last_name || ''\n            }\n          }\n        } else {\n          console.warn('无法识别的消息响应格式:', response)\n          throw new Error('发送消息响应格式异常')\n        }\n        \n        // 用服务器返回的消息替换临时消息\n        const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n        if (tempIndex !== -1) {\n          messages.value.splice(tempIndex, 1, messageData)\n        } else {\n          messages.value.push(messageData)\n        }\n        \n        // 更新联系人最新消息\n        const contactIndex = contacts.value.findIndex(c => c.id === selectedContact.value)\n        if (contactIndex !== -1) {\n          contacts.value[contactIndex].lastMessage = messageCopy\n          contacts.value[contactIndex].lastTime = formatMessageTime(new Date())\n        }\n        \n        // 再次滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        \n        // 移除临时消息\n        messages.value = messages.value.filter(m => !m.is_temp)\n        \n        // 将消息内容放回输入框\n        messageInput.value = error.savedMessage || messageInput.value\n        \n        ElMessage.error('发送消息失败，请重试')\n      }\n    }\n    \n    // 打开文件上传\n    const openFileUpload = () => {\n      fileInput.value.click()\n    }\n    \n    // 打开图片上传\n    const openImageUpload = () => {\n      imageInput.value.click()\n    }\n    \n    // 处理文件上传\n    const handleFileUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendFileMessage(\n          currentChatId.value, \n          `发送文件: ${file.name}`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送文件失败:', error)\n        ElMessage.error('发送文件失败')\n      }\n    }\n    \n    // 处理图片上传\n    const handleImageUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendImageMessage(\n          currentChatId.value, \n          `发送图片`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送图片失败:', error)\n        ElMessage.error('发送图片失败')\n      }\n    }\n    \n    // 打开知识库对话框\n    const openKnowledgeDialog = async () => {\n      knowledgeDialogVisible.value = true\n      await loadKnowledgeList()\n    }\n    \n    // 加载知识库列表\n    const loadKnowledgeList = async () => {\n      try {\n        knowledgeLoading.value = true\n        const { data } = await getKnowledgeList()\n        knowledgeList.value = data\n      } catch (error) {\n        console.error('加载知识库列表失败:', error)\n        ElMessage.error('加载知识库列表失败')\n      } finally {\n        knowledgeLoading.value = false\n      }\n    }\n    \n    // 选择知识库文件\n    const selectKnowledge = (row) => {\n      selectedKnowledge.value = row\n    }\n    \n    // 分享知识库文件\n    const shareKnowledge = async (knowledge) => {\n      if (!currentChatId.value) return\n      \n      try {\n        await sendKnowledgeMessage(\n          currentChatId.value,\n          `分享知识库文件: ${knowledge.title}`,\n          knowledge.id\n        )\n        \n        // 关闭对话框\n        knowledgeDialogVisible.value = false\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n      } catch (error) {\n        console.error('分享知识库文件失败:', error)\n        ElMessage.error('分享知识库文件失败')\n      }\n    }\n    \n    // 下载文件\n    const downloadFile = async (message) => {\n      try {\n        const response = await downloadMessageFile(message.id)\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', message.file_name || 'download')\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 查看知识库文件\n    const viewKnowledge = (message) => {\n      if (message.knowledge_detail) {\n        // 可以跳转到知识库详情页面\n        ElMessageBox.alert(\n          `标题: ${message.knowledge_detail.title}<br>描述: ${message.knowledge_detail.description || '无'}`, \n          '知识库文件', \n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '确定'\n          }\n        )\n      }\n    }\n    \n    // 获取发送者颜色\n    const getSenderColor = (sender) => {\n      return getRandomColor(sender.id)\n    }\n    \n    // 获取发送者首字母\n    const getSenderInitial = (sender) => {\n      return (sender.first_name || sender.username)[0]\n    }\n    \n    // 根据ID生成随机颜色\n    const getRandomColor = (id) => {\n      const colors = [\n        '#007bff', '#28a745', '#dc3545', '#fd7e14', \n        '#6f42c1', '#20c997', '#17a2b8', '#6c757d'\n      ]\n      \n      // 使用ID作为索引，确保同一用户颜色一致\n      const index = typeof id === 'number' ? id % colors.length : 0\n      return colors[index]\n    }\n    \n    // 格式化消息时间\n    const formatMessageTime = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      const now = new Date()\n      const diff = now - date\n      \n      // 今天内的消息显示时间\n      if (diff < 24 * 60 * 60 * 1000) {\n      const hours = date.getHours().toString().padStart(2, '0')\n      const minutes = date.getMinutes().toString().padStart(2, '0')\n      return `${hours}:${minutes}`\n      }\n      \n      // 一周内的消息显示星期几\n      if (diff < 7 * 24 * 60 * 60 * 1000) {\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n        return days[date.getDay()]\n      }\n      \n      // 更早的消息显示日期\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    // 格式化日期\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取状态文字\n    const getStatusText = (status) => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'busy': '忙碌',\n        'away': '离开'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 添加强制刷新方法\n    const forceRefresh = async () => {\n      try {\n        ElMessage.info('正在强制刷新数据...')\n        \n        // 重新获取用户信息\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          ElMessage.error('无法获取用户信息，请尝试重新登录')\n          return\n        }\n        \n        // 重新加载聊天会话\n        await loadChatSessions()\n        \n        if (contacts.value.length === 0) {\n          ElMessage.warning('未找到任何聊天会话，您可能还没有开始任何对话')\n        } else {\n          ElMessage.success('刷新成功！找到 ' + contacts.value.length + ' 个聊天会话')\n        }\n      } catch (error) {\n        console.error('强制刷新失败:', error)\n        ElMessage.error('刷新失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 路由相关操作\n    onMounted(async () => {\n      try {\n        // 先加载用户数据\n        const userData = await fetchCurrentUser()\n        \n        // 如果获取用户信息失败，显示错误并返回\n        if (!userData) {\n          ElMessage.error('无法加载用户信息，请刷新页面重试')\n          return\n        }\n        \n        console.log('组件挂载时获取的用户信息:', userData)\n        \n        // 确保用户数据已经更新\n        if (!userInfo.value || !userInfo.value.id) {\n          console.error('用户数据未正确加载:', userInfo.value)\n          ElMessage.error('用户数据加载异常，请刷新页面重试')\n          return\n        } else {\n          console.log('当前用户数据已正确加载:', userInfo.value)\n        }\n        \n        // 再加载聊天会话列表\n        await loadChatSessions()\n        \n        // 检查URL参数中是否有会话ID\n        const sessionId = route.query.session || route.query.id\n        if (sessionId) {\n          // 查找对应的联系人\n          const foundContact = contacts.value.find(c => c.id === parseInt(sessionId))\n          if (foundContact) {\n            // 选中该联系人\n            selectedContact.value = foundContact.id\n            // 加载聊天记录\n            await loadChatMessages(sessionId)\n          } else {\n            // 如果未找到对应联系人，尝试直接加载会话\n            console.log('通过ID直接加载聊天会话:', sessionId)\n            await loadChatMessages(sessionId)\n          }\n        }\n      \n        // 设置定时刷新\n        refreshInterval = setInterval(async () => {\n          if (selectedContact.value) {\n            await loadChatMessages(selectedContact.value)\n          }\n          await loadChatSessions()\n        }, 30000)\n        \n        // 初始滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('初始化聊天组件失败:', error)\n        ElMessage.error('初始化聊天组件失败: ' + error.message)\n      }\n    })\n    \n    return {\n      searchQuery,\n      activeTab,\n      selectedContact,\n      tabs,\n      contacts,\n      currentContact,\n      filteredContacts,\n      messages,\n      messageInput,\n      messageContainer,\n      fileInput,\n      imageInput,\n      currentUser,\n      userInfo,\n      userId,\n      knowledgeDialogVisible,\n      knowledgeLoading,\n      knowledgeList,\n      loading,\n      // 图标\n      Search,\n      Phone,\n      VideoCamera,\n      InfoFilled,\n      Document,\n      PictureFilled,\n      FolderOpened,\n      Microphone,\n      Position,\n      ChatDotSquare,\n      Reading,\n      UserFilled,\n      ChatLineSquare,\n      Refresh,\n      // 方法\n      sendMessage,\n      getStatusText,\n      selectContact,\n      openFileUpload,\n      openImageUpload,\n      handleFileUpload,\n      handleImageUpload,\n      openKnowledgeDialog,\n      selectKnowledge,\n      shareKnowledge,\n      downloadFile,\n      viewKnowledge,\n      getSenderColor,\n      getSenderInitial,\n      formatMessageTime,\n      formatDate,\n      formatFileSize,\n      refreshChatSessions,\n      forceRefresh\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  height: calc(100vh - 64px); /* 减去顶部导航栏的高度 */\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n.chat-card {\n  height: 100%;\n  width: 100%;\n  border-radius: 8px;\n  margin: 0;\n  overflow: hidden;\n}\n\n.chat-card :deep(.el-card__body) {\n  height: 100%;\n  padding: 0;\n}\n\n.chat-layout {\n  display: flex;\n  height: 100%;\n  width: 100%;\n}\n\n/* 侧边栏样式 */\n.chat-sidebar {\n  width: 280px;\n  border-right: 1px solid #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  height: 100%;\n  overflow: hidden;\n}\n\n.search-box {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.chat-tabs {\n  display: flex;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.chat-tab {\n  flex: 1;\n  text-align: center;\n  padding: 12px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #666;\n  transition: all 0.3s ease;\n}\n\n.chat-tab.active {\n  color: var(--el-color-primary);\n  border-bottom: 2px solid var(--el-color-primary);\n}\n\n.contacts-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0;\n}\n\n.contact-item {\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid #f5f5f5;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.contact-item:hover {\n  background-color: #f9f9f9;\n}\n\n.contact-item.active {\n  background-color: #f0f7ff;\n}\n\n.contact-avatar {\n  position: relative;\n  margin-right: 12px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n}\n\n.avatar.small {\n  width: 32px;\n  height: 32px;\n  font-size: 12px;\n}\n\n.avatar-initial {\n  font-size: 16px;\n}\n\n.contact-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid white;\n}\n\n.status-online {\n  background-color: #28a745;\n}\n\n.status-offline {\n  background-color: #6c757d;\n}\n\n.status-busy {\n  background-color: #dc3545;\n}\n\n.status-away {\n  background-color: #fd7e14;\n}\n\n.contact-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.contact-name {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.contact-name span {\n  font-weight: 500;\n}\n\n.time {\n  font-size: 12px;\n  color: #999;\n}\n\n.contact-message {\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.message-badge {\n  margin-left: 5px;\n}\n\n/* 聊天内容样式 */\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #f5f7fa;\n  height: 100%;\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  background-color: #fff;\n}\n\n.chat-header .contact-info {\n  margin-right: auto;\n}\n\n.chat-header h6 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.chat-header p {\n  margin: 0;\n  font-size: 12px;\n  color: #666;\n}\n\n.chat-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  max-height: calc(100% - 150px); /* 调整聊天框高度 */\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  margin-bottom: 20px;\n}\n\n.message-container {\n  display: flex;\n}\n\n.message-sent .message-container {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.message-sent .message-avatar {\n  margin-right: 0;\n  margin-left: 10px;\n}\n\n.message-content-wrapper {\n  max-width: 70%;\n}\n\n.message-content {\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n  word-break: break-word;\n}\n\n.message-content.received {\n  background-color: #fff;\n  border-top-left-radius: 4px;\n}\n\n.message-content.sent {\n  background-color: var(--el-color-primary);\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.message-time {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n  text-align: right;\n}\n\n.message-sent .message-time {\n  text-align: right;\n}\n\n.message-received .message-time {\n  text-align: left;\n}\n\n.message-image img {\n  max-width: 100%;\n  max-height: 300px;\n  border-radius: 8px;\n}\n\n.message-file {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-file .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.file-size {\n  margin-left: 8px;\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.message-knowledge {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 10px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-knowledge .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.knowledge-info {\n  flex: 1;\n}\n\n.knowledge-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\n.knowledge-desc {\n  font-size: 12px;\n  opacity: 0.8;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.chat-input {\n  padding: 15px;\n  background-color: #fff;\n  border-top: 1px solid #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  min-height: 150px; /* 确保输入框有足够高度 */\n}\n\n.chat-tools {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.input-area {\n  margin-bottom: 10px;\n  flex: 1;\n}\n\n.send-button {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-illustration {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-chat h4 {\n  margin: 0 0 10px;\n}\n\n.empty-chat p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.empty-contacts {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-icon {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-contacts h4 {\n  margin: 0 0 10px;\n}\n\n.empty-contacts p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.loading-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.empty-messages {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.loading-messages {\n  flex: 1;\n  padding: 20px;\n}\n\n.mt-3 {\n  margin-top: 15px;\n}\n\n.search-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.search-header .el-input {\n  flex: 1;\n}\n\n.chat-header-actions {\n  margin-bottom: 10px;\n}\n\n.refresh-action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 5px;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}