{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue","mtime":1748008419489},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","computed","nextTick","onMounted","onBeforeUnmount","watch","useStore","ElMessage","ElMessageBox","Search","Phone","VideoCamera","InfoFilled","Document","PictureFilled","FolderOpened","Microphone","Position","ChatDotSquare","Reading","UserFilled","ChatLineSquare","Refresh","MoreFilled","getChatSessions","getChatSession","sendTextMessage","sendFileMessage","sendImageMessage","sendKnowledgeMessage","downloadMessageFile","getKnowledgeList","useRoute","request","ChatCalendarEvent","name","components","setup","store","currentUser","getters","user","userInfo","searchQuery","activeTab","selectedContact","messageInput","messageContainer","fileInput","imageInput","messages","loading","chatSessions","currentChatId","knowledgeDialogVisible","knowledgeLoading","knowledgeList","selectedKnowledge","tabs","contacts","allColleagues","currentContact","value","find","c","id","userId","_userInfo$value","filteredContacts","filter","contact","toLowerCase","includes","getActiveContacts","isGroup","groupedUsersByDepartment","usersMap","Map","forEach","set","colleague","has","first_name","last_name","trim","username","initial","avatar","color","getRandomColor","status","lastMessage","lastTime","unread","department","groupedUsers","Array","from","values","departmentName","push","route","refreshInterval","clearInterval","userData","fetchCurrentUser","error","console","log","loadAllUsers","loadChatSessions","sessionId","query","session","foundContact","parseInt","loadChatMessages","setInterval","scrollToBottom","message","token","localStorage","getItem","warn","warning","response","url","method","data","Error","setItem","JSON","stringify","success","isArray","results","length","map","otherParticipant","participants","p","is_group","title","avatar_url","last_message","content","formatMessageTime","created_at","updated_at","unread_count","startsWith","process","env","VUE_APP_BASE_API","sort","a","b","chatId","messageData","sessionData","possibleMessageFields","field","sender","some","tempContact","unshift","errorMessage","refreshChatSessions","scrollTop","scrollHeight","selectContact","contactId","replace","existingChat","participant_ids","newSession","Date","sendMessage","tempMessage","now","message_type","toISOString","is_temp","messageCopy","chat","file","tempIndex","findIndex","m","splice","contactIndex","config","savedMessage","openFileUpload","click","openImageUpload","handleFileUpload","event","target","files","handleImageUpload","openKnowledgeDialog","loadKnowledgeList","selectKnowledge","row","shareKnowledge","knowledge","downloadFile","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","file_name","body","appendChild","removeChild","viewKnowledge","knowledge_detail","alert","description","dangerouslyUseHTMLString","confirmButtonText","getSenderColor","getSenderInitial","colors","index","timestamp","date","diff","hours","getHours","toString","padStart","minutes","getMinutes","days","getDay","getMonth","getDate","formatDate","getFullYear","formatFileSize","sizeInKB","toFixed","getStatusText","statusMap","forceRefresh","info","users","hiddenCalendarEvents","handleCalendarEventAdded","handleCalendarEventHidden","messageId"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n        <el-card class=\"chat-card\">\n          <div class=\"chat-header-actions\" v-if=\"loading\">\n            <el-alert\n              title=\"正在加载数据...\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n          <div class=\"chat-layout\">\n            <!-- 左侧联系人列表 -->\n            <div class=\"chat-sidebar\">\n              <!-- 搜索框 -->\n              <div class=\"search-box\">\n                <div class=\"search-header\">\n                  <el-input \n                    v-model=\"searchQuery\" \n                    placeholder=\"搜索联系人...\"\n                    clearable\n                    :prefix-icon=\"Search\"\n                  ></el-input>\n                  <el-button circle size=\"small\" @click=\"refreshChatSessions\" title=\"刷新列表\">\n                    <el-icon><Refresh /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 聊天标签页 -->\n              <div class=\"chat-tabs\">\n                <div \n                  v-for=\"(tab, index) in tabs\" \n                  :key=\"index\"\n                  class=\"chat-tab\"\n                  :class=\"{'active': activeTab === index}\"\n                  @click=\"activeTab = index\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              \n              <!-- 联系人列表 -->\n              <div class=\"contacts-list\">\n                <!-- 部门分组显示 (仅在同事标签页显示) -->\n                <template v-if=\"activeTab === 1\">\n                  <div v-if=\"!loading && Object.keys(groupedUsersByDepartment).length > 0\">\n                    <div v-for=\"(departmentUsers, deptName) in groupedUsersByDepartment\" :key=\"deptName\" class=\"department-group\">\n                      <div class=\"department-header\">{{ deptName }}</div>\n                      <div \n                        v-for=\"contact in departmentUsers\" \n                        :key=\"contact.id\"\n                        class=\"contact-item\"\n                        :class=\"{'active': selectedContact === contact.id}\"\n                        @click=\"selectContact(contact)\"\n                      >\n                        <div class=\"contact-avatar\">\n                          <div \n                            v-if=\"!contact.avatar && !contact.avatar_url\" \n                            class=\"avatar\" \n                            :style=\"{backgroundColor: contact.color}\"\n                          >\n                            <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                          </div>\n                          <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                          <div \n                            class=\"contact-status\" \n                            :class=\"'status-' + contact.status\"\n                          ></div>\n                        </div>\n                        <div class=\"contact-info\">\n                          <div class=\"contact-name\">\n                            <span>{{ contact.name }}</span>\n                            <span class=\"time\">{{ contact.lastTime }}</span>\n                          </div>\n                          <div class=\"contact-message\">\n                            <span>{{ contact.lastMessage }}</span>\n                            <el-badge \n                              v-if=\"contact.unread\" \n                              :value=\"contact.unread\" \n                              class=\"message-badge\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div v-else-if=\"!loading\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                </template>\n                \n                <!-- 最近聊天标签页 -->\n                <template v-else>\n                  <div \n                    v-for=\"contact in filteredContacts\" \n                    :key=\"contact.id\"\n                    class=\"contact-item\"\n                    :class=\"{'active': selectedContact === contact.id}\"\n                    @click=\"selectContact(contact)\"\n                  >\n                    <div class=\"contact-avatar\">\n                      <div \n                        v-if=\"!contact.avatar && !contact.avatar_url\" \n                        class=\"avatar\" \n                        :style=\"{backgroundColor: contact.color}\"\n                      >\n                        <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                      </div>\n                      <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                      <div \n                        class=\"contact-status\" \n                        :class=\"'status-' + contact.status\"\n                      ></div>\n                    </div>\n                    <div class=\"contact-info\">\n                      <div class=\"contact-name\">\n                        <span>{{ contact.name }}</span>\n                        <span class=\"time\">{{ contact.lastTime }}</span>\n                      </div>\n                      <div class=\"contact-message\">\n                        <span>{{ contact.lastMessage }}</span>\n                        <el-badge \n                          v-if=\"contact.unread\" \n                          :value=\"contact.unread\" \n                          class=\"message-badge\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- 在最近聊天标签页，如果没有聊天记录，显示提示 -->\n                  <div v-if=\"!loading && filteredContacts.length === 0\" class=\"empty-contacts\">\n                    <el-empty \n                      description=\"暂无联系人\" \n                      :image-size=\"100\"\n                    >\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><UserFilled /></el-icon>\n                      </template>\n                    </el-empty>\n                  </div>\n                </template>\n\n                <!-- 无联系人提示 -->\n                <div v-if=\"loading\" class=\"loading-container\">\n                  <el-skeleton :rows=\"5\" animated />\n                </div>\n              </div>\n            </div>\n            \n            <!-- 右侧聊天内容 -->\n            <div class=\"chat-content\">\n              <!-- 聊天头部 -->\n              <div class=\"chat-header\" v-if=\"selectedContact !== null\">\n                <div class=\"contact-avatar\">\n                  <div \n                    v-if=\"!currentContact.avatar && !currentContact.avatar_url\" \n                    class=\"avatar\" \n                    :style=\"{backgroundColor: currentContact.color}\"\n                  >\n                    <span class=\"avatar-initial\">{{ currentContact.initial || '?' }}</span>\n                  </div>\n                  <img \n                    v-else \n                    :src=\"currentContact.avatar_url || currentContact.avatar\" \n                    alt=\"avatar\" \n                    class=\"avatar\" \n                  />\n                  <div \n                    class=\"contact-status\" \n                    :class=\"'status-' + (currentContact.status || 'online')\"\n                  ></div>\n                </div>\n                <div class=\"contact-info\">\n              <h6>{{ currentContact.name || '未命名联系人' }}</h6>\n              <p>{{ getStatusText(currentContact.status || 'online') }}</p>\n                </div>\n                <div class=\"chat-actions\">\n                  <el-tooltip content=\"语音通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><Phone /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"视频通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><VideoCamera /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"聊天信息\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><InfoFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n              </div>\n              \n              <!-- 聊天消息区域 -->\n              <div class=\"chat-messages\" v-if=\"selectedContact !== null\" ref=\"messageContainer\">\n                <!-- 有消息时显示消息列表 -->\n                <template v-if=\"messages.length > 0\">\n                  <div \n                    v-for=\"(message, index) in messages\" \n                    :key=\"message.id || index\"\n                    class=\"message\"\n                    :class=\"message.sender.id === userId ? 'message-sent' : 'message-received'\"\n                  >\n                    <div class=\"message-container\">\n                      <div v-if=\"message.sender.id !== userId\" class=\"message-avatar\">\n                        <div \n                          v-if=\"!message.sender.avatar && !message.sender.avatar_url\" \n                          class=\"avatar small\" \n                          :style=\"{backgroundColor: getSenderColor(message.sender)}\"\n                        >\n                          <span class=\"avatar-initial\">{{ getSenderInitial(message.sender) }}</span>\n                        </div>\n                        <img \n                          v-else \n                          :src=\"message.sender.avatar_url || message.sender.avatar\" \n                          alt=\"avatar\" \n                          class=\"avatar small\" \n                        />\n                      </div>\n                      <div class=\"message-content-wrapper\">\n                        <div \n                          class=\"message-content\"\n                          :class=\"message.sender.id === userId ? 'sent' : 'received'\"\n                        >\n                          <span v-if=\"message.message_type === 'text'\">{{ message.content }}</span>\n                      \n                          <div v-else-if=\"message.message_type === 'image'\" class=\"message-image\">\n                            <img :src=\"message.file\" alt=\"image\" />\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'file'\" class=\"message-file\" @click=\"downloadFile(message)\">\n                            <el-icon><Document /></el-icon>\n                            <span>{{ message.file_name }}</span>\n                            <span class=\"file-size\">{{ formatFileSize(message.file_size) }}</span>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'knowledge'\" class=\"message-knowledge\" @click=\"viewKnowledge(message)\">\n                            <el-icon><Reading /></el-icon>\n                            <div class=\"knowledge-info\">\n                              <div class=\"knowledge-title\">{{ message.knowledge_detail.title }}</div>\n                              <div class=\"knowledge-desc\">{{ message.knowledge_detail.description }}</div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"message-time\">{{ formatMessageTime(message.created_at) }}</div>\n                        \n                        <!-- 日程事件组件 -->\n                        <ChatCalendarEvent \n                          v-if=\"message.calendar_data && !hiddenCalendarEvents.includes(message.id)\"\n                          :messageId=\"message.id\"\n                          :eventData=\"message.calendar_data\"\n                          @calendar-event-added=\"handleCalendarEventAdded\"\n                          @calendar-event-hidden=\"handleCalendarEventHidden(message.id)\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </template>\n                \n                <!-- 没有消息时显示空提示 -->\n                <template v-else-if=\"!loading\">\n                  <div class=\"empty-messages\">\n                    <el-empty description=\"暂无消息记录\">\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><ChatLineSquare /></el-icon>\n                      </template>\n                      <p>发送第一条消息开始对话吧</p>\n                    </el-empty>\n                  </div>\n                </template>\n                \n                <!-- 加载中显示骨架屏 -->\n                <template v-else>\n                  <div class=\"loading-messages\">\n                    <el-skeleton :rows=\"3\" animated />\n                    <el-skeleton style=\"margin-top: 20px\" :rows=\"2\" animated />\n                    <div style=\"text-align: right; margin-top: 20px\">\n                      <el-skeleton :rows=\"2\" animated />\n                    </div>\n                  </div>\n                </template>\n              </div>\n              \n              <!-- 聊天输入框 -->\n              <div class=\"chat-input\" v-if=\"selectedContact !== null\">\n                <div class=\"chat-tools\">\n                  <el-tooltip content=\"发送图片\" placement=\"top\">\n                    <el-button circle @click=\"openImageUpload\">\n                      <el-icon><PictureFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"发送文件\" placement=\"top\">\n                    <el-button circle @click=\"openFileUpload\">\n                      <el-icon><FolderOpened /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"分享知识库文件\" placement=\"top\">\n                    <el-button circle @click=\"openKnowledgeDialog\">\n                      <el-icon><Reading /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"语音消息\" placement=\"top\">\n                    <el-button circle>\n                      <el-icon><Microphone /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n                <div class=\"input-area\">\n                  <el-input\n                    v-model=\"messageInput\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    placeholder=\"输入消息...\"\n                    resize=\"none\"\n                    @keyup.enter.prevent=\"sendMessage\"\n                  ></el-input>\n                </div>\n                <div class=\"send-button\">\n                  <el-button type=\"primary\" @click=\"sendMessage\">\n                    <el-icon><Position /></el-icon>\n                    发送\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 无选中联系人提示 -->\n              <div class=\"empty-chat\" v-if=\"selectedContact === null\">\n                <div class=\"empty-illustration\">\n                  <el-icon :size=\"64\"><ChatDotSquare /></el-icon>\n                </div>\n                <h4>选择一个联系人开始聊天</h4>\n                <p>从左侧列表选择联系人开始对话</p>\n              </div>\n            </div>\n          </div>\n        </el-card>\n  \n  <!-- 隐藏的文件上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"fileInput\" \n    style=\"display: none\" \n    @change=\"handleFileUpload\" \n  />\n  \n  <!-- 隐藏的图片上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"imageInput\" \n    style=\"display: none\" \n    accept=\"image/*\" \n    @change=\"handleImageUpload\" \n  />\n  \n  <!-- 知识库选择对话框 -->\n  <el-dialog\n    v-model=\"knowledgeDialogVisible\"\n    title=\"选择知识库文件\"\n    width=\"50%\"\n  >\n    <el-table\n      v-loading=\"knowledgeLoading\"\n      :data=\"knowledgeList\"\n      style=\"width: 100%\"\n      @row-click=\"selectKnowledge\"\n    >\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n      <el-table-column prop=\"file_type\" label=\"类型\">\n        <template #default=\"scope\">\n          <el-tag>{{ scope.row.file_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"shareKnowledge(scope.row)\">\n            分享\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"knowledgeDialogVisible = false\">取消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, nextTick, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, Phone, VideoCamera, InfoFilled, Document, PictureFilled, \n  FolderOpened, Microphone, Position, ChatDotSquare, Reading, UserFilled, ChatLineSquare,\n  Refresh, MoreFilled\n} from '@element-plus/icons-vue'\nimport { \n  getChatSessions, \n  getChatSession, \n  sendTextMessage, \n  sendFileMessage,\n  sendImageMessage,\n  sendKnowledgeMessage,\n  downloadMessageFile\n} from '@/api/chat'\nimport { getKnowledgeList } from '@/api/knowledge'\nimport { useRoute } from 'vue-router'\nimport request from '@/utils/request'\nimport ChatCalendarEvent from '@/components/ChatCalendarEvent.vue'\n\nexport default {\n  name: 'Chat',\n  components: {\n    ChatCalendarEvent\n  },\n  setup() {\n    const store = useStore()\n    const currentUser = computed(() => store.getters.user)\n    \n    // 添加本地用户数据存储\n    const userInfo = ref(null)\n    \n    const searchQuery = ref('')\n    const activeTab = ref(0)\n    const selectedContact = ref(null)\n    const messageInput = ref('')\n    const messageContainer = ref(null)\n    const fileInput = ref(null)\n    const imageInput = ref(null)\n    const messages = ref([])\n    const loading = ref(false)\n    const chatSessions = ref([])\n    const currentChatId = ref(null)\n    \n    // 知识库相关\n    const knowledgeDialogVisible = ref(false)\n    const knowledgeLoading = ref(false)\n    const knowledgeList = ref([])\n    const selectedKnowledge = ref(null)\n    \n    // 标签页\n    const tabs = ref(['最近聊天', '同事'])\n    \n    // 联系人列表\n    const contacts = ref([])\n    // 所有同事用户列表\n    const allColleagues = ref([])\n    \n    // 当前选中的联系人\n    const currentContact = computed(() => {\n      if (selectedContact.value === null) return {}\n      return contacts.value.find(c => c.id === selectedContact.value) || {}\n    })\n    \n    // 安全地获取用户ID，避免模板中的null错误\n    const userId = computed(() => {\n      return userInfo.value?.id || null\n    })\n    \n    // 根据搜索过滤联系人\n    const filteredContacts = computed(() => {\n      if (!searchQuery.value) return contacts.value\n      return contacts.value.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n      )\n    })\n    \n    // 根据当前激活的标签页获取要显示的联系人\n    const getActiveContacts = computed(() => {\n      if (activeTab.value === 0) {\n        return filteredContacts.value\n      } else if (activeTab.value === 1) {\n        return filteredContacts.value.filter(contact => !contact.isGroup)\n      }\n      return filteredContacts.value\n    })\n    \n    \n    // 按部门分组的用户\n    const groupedUsersByDepartment = computed(() => {\n      // 合并聊天联系人和所有同事\n      const usersMap = new Map();\n      \n      // 先添加聊天联系人（非群组）\n      filteredContacts.value\n        .filter(contact => !contact.isGroup)\n        .forEach(contact => {\n          // 跳过自己\n          if (userInfo.value && contact.userId === userInfo.value.id) {\n            return;\n          }\n          // 使用ID作为唯一键\n          usersMap.set(contact.userId || contact.id, contact);\n        });\n      \n      // 再添加所有同事，但避免重复\n      allColleagues.value.forEach(colleague => {\n        // 跳过自己\n        if (userInfo.value && colleague.id === userInfo.value.id) {\n          return;\n        }\n        \n        // 只有在不存在时才添加（避免覆盖现有联系人）\n        if (!usersMap.has(colleague.id)) {\n          // 构造兼容格式的用户对象\n          const contact = {\n            id: 'user_' + colleague.id, // 添加前缀以避免与现有会话ID冲突\n            userId: colleague.id,\n            name: ((colleague.first_name || '') + ' ' + (colleague.last_name || '')).trim() || colleague.username || '未命名联系人',\n            initial: ((colleague.first_name || colleague.username || '未命名联系人')[0]),\n            avatar: colleague.avatar || '',\n            color: getRandomColor(colleague.id),\n            status: 'online',\n            lastMessage: '',\n            lastTime: '',\n            unread: 0,\n            isGroup: false,\n            department: colleague.department || '其它'\n          };\n          usersMap.set(colleague.id, contact);\n        }\n      });\n      \n      // 按部门分组\n      const groupedUsers = {};\n      \n      // 将Map转为Array后分组\n      Array.from(usersMap.values()).forEach(user => {\n        const departmentName = user.department || '其它';\n        if (!groupedUsers[departmentName]) {\n          groupedUsers[departmentName] = [];\n        }\n        groupedUsers[departmentName].push(user);\n      });\n      \n      return groupedUsers;\n    })\n    \n    // 路由\n    const route = useRoute()\n    \n    // 定义一个refreshInterval的引用，以便在组件卸载时清除\n    let refreshInterval = null\n    \n    // 组件卸载时清除定时器\n    onBeforeUnmount(() => {\n      if (refreshInterval) {\n        clearInterval(refreshInterval)\n      }\n    })\n    \n    // 路由相关操作\n    onMounted(async () => {\n      try {\n        // 先加载用户数据\n        const userData = await fetchCurrentUser()\n        \n        // 如果获取用户信息失败，显示错误并返回\n        if (!userData) {\n          ElMessage.error('无法加载用户信息，请刷新页面重试')\n          return\n        }\n        \n        console.log('组件挂载时获取的用户信息:', userData)\n        \n        // 确保用户数据已经更新\n        if (!userInfo.value || !userInfo.value.id) {\n          console.error('用户数据未正确加载:', userInfo.value)\n          ElMessage.error('用户数据加载异常，请刷新页面重试')\n          return\n        } else {\n          console.log('当前用户数据已正确加载:', userInfo.value)\n        }\n        \n        // 加载所有用户列表\n        await loadAllUsers()\n        \n        // 再加载聊天会话列表\n        await loadChatSessions()\n        \n        // 检查URL参数中是否有会话ID\n        const sessionId = route.query.session || route.query.id\n        if (sessionId) {\n          // 查找对应的联系人\n          const foundContact = contacts.value.find(c => c.id === parseInt(sessionId))\n          if (foundContact) {\n            // 选中该联系人\n            selectedContact.value = foundContact.id\n            // 加载聊天记录\n            await loadChatMessages(sessionId)\n          } else {\n            // 如果未找到对应联系人，尝试直接加载会话\n            console.log('通过ID直接加载聊天会话:', sessionId)\n            await loadChatMessages(sessionId)\n          }\n        }\n      \n        // 设置定时刷新\n        refreshInterval = setInterval(async () => {\n          if (selectedContact.value) {\n            await loadChatMessages(selectedContact.value)\n          }\n          await loadChatSessions()\n        }, 30000)\n        \n        // 初始滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('初始化聊天组件失败:', error)\n        ElMessage.error('初始化聊天组件失败: ' + error.message)\n      }\n    })\n    \n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        console.log('开始获取当前用户信息...')\n        \n        // 检查localStorage中是否有token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          console.warn('本地存储中没有找到认证token')\n          ElMessage.warning('未登录或登录已过期，请重新登录')\n          return null\n        }\n        \n        const response = await request({\n          url: '/api/auth/users/me/',\n          method: 'get'\n        })\n        \n        console.log('获取用户信息响应:', response)\n        \n        // 检查响应格式并获取用户数据\n        let userData = null\n        if (response.data && response.data.id) {\n          // 直接从data字段获取用户数据\n          userData = response.data\n          console.log('从data字段获取用户数据:', userData)\n        } else if (response.data && response.data.data && response.data.data.id) {\n          // 从嵌套data字段获取用户数据\n          userData = response.data.data\n          console.log('从嵌套data字段获取用户数据:', userData)\n        } else if (response.id) {\n          // 直接响应就是用户数据\n          userData = response\n          console.log('直接获取用户数据:', userData)\n        } else {\n          console.error('获取用户信息响应格式异常:', response)\n          throw new Error('用户信息格式异常')\n        }\n        \n        if (!userData || !userData.id) {\n          console.error('获取的用户数据无效:', userData)\n          throw new Error('无效的用户数据')\n        }\n        \n        // 不使用未定义的mutation，而是直接更新本地状态\n        userInfo.value = userData\n        \n        // 保存到localStorage以便持久化\n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        console.log('用户数据已更新:', userInfo.value)\n        return userData\n      } catch (error) {\n        console.error('获取当前用户信息失败:', error)\n        ElMessage.error('获取用户信息失败: ' + (error.message || '未知错误'))\n        return null\n      }\n    }\n    \n    // 加载聊天会话列表\n    const loadChatSessions = async () => {\n      try {\n        loading.value = true\n        console.log('正在加载聊天会话列表...')\n        \n        const response = await getChatSessions()\n        console.log('获取聊天会话响应:', response)\n        \n        // 确保我们有响应数据\n        if (!response) {\n          console.error('获取聊天会话返回空响应')\n          contacts.value = []\n          return\n        }\n        \n        let data\n        if (response.success && response.data) {\n          data = response.data\n          console.log('使用包装格式的聊天数据:', data)\n        } else {\n          data = response\n          console.log('使用直接返回的聊天数据:', data)\n        }\n        \n        // 转换数据格式\n        chatSessions.value = data\n        \n        // 构建联系人列表\n        if (data && Array.isArray(data.results)) {\n          console.log('处理分页数据结构, 共有会话数:', data.results.length)\n          // 处理分页数据结构\n          contacts.value = data.results.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                userId: user.id, // 添加用户ID，用于检查是否是自己\n                name: ((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username || '未命名联系人',\n                initial: ((user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false,\n                department: user.department // 添加部门信息\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else if (data && Array.isArray(data)) {\n          console.log('处理非分页数据结构, 共有会话数:', data.length)\n          // 处理非分页数据结构\n          contacts.value = data.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                name: ((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username || '未命名联系人',\n                initial: ((user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else {\n          // 如果没有有效数据\n          console.error('获取聊天会话格式异常或为空:', data)\n          contacts.value = []\n        }\n        \n        console.log('处理后的联系人列表:', contacts.value)\n        \n        // 如果有未读消息，按未读数量排序\n        if (contacts.value.length > 0) {\n          contacts.value.sort((a, b) => b.unread - a.unread)\n        }\n      } catch (error) {\n        console.error('加载聊天会话失败:', error)\n        ElMessage.error('加载聊天会话失败: ' + (error.message || '未知错误'))\n        contacts.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 加载聊天消息\n    const loadChatMessages = async (chatId) => {\n      if (!chatId) {\n        console.error('无法加载消息: chatId为空')\n        return\n      }\n      \n      try {\n        loading.value = true\n        console.log(`正在加载聊天会话 ${chatId} 的消息...`)\n        \n        const response = await getChatSession(chatId)\n        console.log('聊天会话详情响应:', response)\n        \n        if (!response) {\n          console.error('获取聊天会话详情返回空响应')\n          messages.value = []\n          return\n        }\n        \n        // 处理不同的响应格式\n        let messageData = []\n        let sessionData = null\n        \n        if (response.data && response.data.messages) {\n          // 标准格式：响应直接包含messages字段\n          messageData = response.data.messages\n          sessionData = response.data\n          console.log('标准格式消息数据，消息数量:', messageData.length)\n        } else if (response.data && response.data.data && response.data.data.messages) {\n          // 包装格式：{success: true, data: {messages: [...]}}\n          messageData = response.data.data.messages\n          sessionData = response.data.data\n          console.log('包装格式消息数据，消息数量:', messageData.length)\n        } else if (response.messages) {\n          // 直接返回格式: {messages: [...]}\n          messageData = response.messages\n          sessionData = response\n          console.log('直接返回格式消息数据，消息数量:', messageData.length)\n        } else {\n          console.warn('无法识别的消息数据格式:', response)\n          console.log('尝试检查是否有其他可能的消息字段...')\n          \n          // 尝试查找其他可能的消息字段\n          const possibleMessageFields = ['message', 'chat_messages', 'chats', 'content']\n          for (const field of possibleMessageFields) {\n            if (response[field] && Array.isArray(response[field])) {\n              console.log(`找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response[field]\n              sessionData = response\n              break\n            } else if (response.data && response.data[field] && Array.isArray(response.data[field])) {\n              console.log(`在data字段中找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response.data[field]\n              sessionData = response.data\n              break\n            }\n          }\n          \n          if (messageData.length === 0) {\n            console.warn('未找到任何消息数据，使用空数组')\n          }\n        }\n        \n        // 处理消息发送者的头像\n        messageData.forEach(message => {\n          if (message.sender && message.sender.avatar) {\n            const avatar = message.sender.avatar;\n            if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n              message.sender.avatar_url = avatar;\n            } else if (avatar.startsWith('/')) {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n            } else {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n            }\n          }\n        });\n        \n        // 记录会话和消息数据\n        console.log('处理后的会话数据:', sessionData)\n        console.log('处理后的消息数据:', messageData)\n        \n        // 如果会话不在联系人列表中，添加它\n        if (sessionData && !contacts.value.some(c => c.id === parseInt(chatId))) {\n          console.log('会话不在联系人列表中，添加它:', sessionData)\n          \n          // 创建临时联系人对象\n          const session = sessionData\n          // 找到对方用户（非当前用户）\n          let otherParticipant = null\n          \n          // 确保 session.participants 存在且是数组\n          if (session.participants && Array.isArray(session.participants) && session.participants.length > 0 && userInfo.value) {\n            otherParticipant = session.participants.find(p => p.user && p.user.id !== userInfo.value.id)\n          }\n          \n          let tempContact = null\n          \n          // 如果是群聊，使用群聊信息\n          if (session.is_group) {\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '群聊',\n              initial: (session.title || '群聊')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: true\n            }\n          // 单聊，使用对方信息\n          } else if (otherParticipant && otherParticipant.user) {\n            const user = otherParticipant.user\n            // 处理头像路径\n            let avatar_url = '';\n            if (user.avatar) {\n              const avatar = user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            \n            tempContact = {\n              id: parseInt(chatId),\n              name: ((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username || '未命名联系人',\n              initial: ((user.first_name || user.username || '未命名联系人')[0]),\n              avatar: user.avatar || '',\n              avatar_url: avatar_url,\n              color: getRandomColor(user.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: false\n            }\n          } else {\n            // 如果无法找到对方信息，使用默认值\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: session.is_group\n            }\n          }\n          \n          // 添加临时联系人到列表\n          if (tempContact) {\n            contacts.value.unshift(tempContact)\n            console.log('添加临时联系人:', tempContact)\n          }\n        }\n        \n        // 更新组件数据\n        messages.value = messageData || []\n        currentChatId.value = parseInt(chatId)\n        selectedContact.value = parseInt(chatId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载会话详情失败:', error)\n        \n        let errorMessage = '加载聊天消息失败'\n        if (error.response) {\n          const status = error.response.status\n          if (status === 404) {\n            errorMessage = '聊天会话不存在或已被删除'\n          } else if (status === 403) {\n            errorMessage = '无权访问此聊天会话'\n          } else if (error.response.data && error.response.data.message) {\n            errorMessage = error.response.data.message\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n        messages.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 刷新聊天会话列表\n    const refreshChatSessions = async () => {\n      // 更新用户列表\n      await loadAllUsers()\n      \n      // 更新聊天会话\n      await loadChatSessions()\n      \n      // 如果有当前聊天ID，确保选中正确的联系人\n      if (currentChatId.value) {\n        const contact = contacts.value.find(c => c.id === currentChatId.value)\n        if (contact) {\n          selectedContact.value = contact.id\n        }\n      }\n    }\n    \n    // 确保消息容器滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 在选择联系人后，滚动到底部\n    const selectContact = async (contact) => {\n      // 检查是否尝试与自己聊天\n      if (!contact.isGroup && userInfo.value && contact.userId === userInfo.value.id) {\n        ElMessage.warning('不能与自己聊天')\n        return\n      }\n      \n      console.log('选择联系人:', contact)\n      \n      // 处理两种类型的ID：现有对话ID和用户ID前缀的情况\n      let contactId = contact.id\n      \n      // 检查是否已有该联系人的对话\n      if (typeof contactId === 'string' && contactId.startsWith('user_')) {\n        // 这是直接选择了用户，而不是现有的聊天会话\n        let userId = contact.userId || contact.id.replace('user_', '')\n        console.log('尝试查找与用户的现有对话:', userId)\n        \n        // 尝试在现有会话中查找与该用户的对话\n        const existingChat = contacts.value.find(c => \n          !c.isGroup && \n          ((c.userId && c.userId == userId) || \n          (c.user && c.user.id == userId))\n        )\n        \n        if (existingChat) {\n          console.log('找到与用户的现有对话:', existingChat)\n          contactId = existingChat.id\n        } else {\n          console.log('未找到与用户的现有对话，创建新对话')\n          \n          // 创建新的聊天会话\n          try {\n            const response = await request({\n              url: '/api/chat/sessions/',\n              method: 'post',\n              data: {\n                participant_ids: [userId],\n                is_group: false\n              }\n            })\n            \n            console.log('创建会话响应:', response)\n            \n            // 处理API响应\n            let newSession = null\n            \n            if (response && response.data) {\n              newSession = response.data\n            } else if (response && response.id) {\n              newSession = response\n            }\n            \n            if (newSession && newSession.id) {\n              // 创建临时联系人对象\n              const tempContact = {\n                id: newSession.id,\n                userId: userId,\n                name: contact.name,\n                initial: contact.initial,\n                avatar: contact.avatar,\n                avatar_url: contact.avatar_url || '',\n                color: contact.color || getRandomColor(userId),\n                status: 'online',\n                lastMessage: '',\n                lastTime: formatMessageTime(new Date()),\n                unread: 0,\n                isGroup: false,\n                department: contact.department\n              }\n              \n              // 添加到联系人列表\n              contacts.value.unshift(tempContact)\n              \n              // 更新选中的联系人\n              contactId = newSession.id\n              ElMessage.success('已创建新的对话')\n            } else {\n              throw new Error('创建会话返回无效数据')\n            }\n          } catch (error) {\n            console.error('创建新会话失败:', error)\n            ElMessage.error('无法创建新对话: ' + (error.message || '未知错误'))\n            return\n          }\n        }\n      }\n      \n      // 加载选中的联系人\n      selectedContact.value = contactId\n      messageInput.value = ''\n      messages.value = []\n      \n      // 加载消息\n      try {\n        await loadChatMessages(contactId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载聊天消息失败:', error)\n        ElMessage.error('无法加载对话内容：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 在消息列表更新后，滚动到底部\n    watch(messages, () => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim() || !currentChatId.value) return\n      \n      try {\n        // 检查当前用户信息是否存在\n        if (!userInfo.value || !userInfo.value.id) {\n          console.log('当前用户信息不存在，尝试重新获取...')\n          // 尝试重新获取用户信息\n          const userData = await fetchCurrentUser()\n          if (!userData || !userData.id) {\n            throw new Error('无法获取当前用户信息，请刷新页面重试')\n          }\n          \n          console.log('成功获取用户信息:', userData)\n        }\n        \n        // 创建临时消息对象\n        // 再次检查用户信息是否已更新\n        if (!userInfo.value || !userInfo.value.id) {\n          throw new Error('用户信息未更新，请刷新页面重试')\n        }\n        \n        // 记录当前会话ID\n        console.log('当前会话ID:', currentChatId.value, '类型:', typeof currentChatId.value)\n        \n        const tempMessage = {\n          id: 'temp-' + Date.now(),\n          content: messageInput.value.trim(),\n          sender: {\n            id: userInfo.value.id,\n            username: userInfo.value.username || '用户',\n            first_name: userInfo.value.first_name || '',\n            last_name: userInfo.value.last_name || ''\n          },\n          message_type: 'text',\n          created_at: new Date().toISOString(),\n          is_temp: true\n        }\n        \n        // 先将临时消息添加到列表中\n        messages.value.push(tempMessage)\n        \n        // 清空输入框\n        const messageCopy = messageInput.value\n        messageInput.value = ''\n        \n        // 滚动到底部\n        await nextTick()\n        scrollToBottom()\n        \n        // 详细记录发送信息\n        console.log('准备发送消息到服务器，会话ID:', currentChatId.value, '消息内容:', messageCopy)\n        \n        try {\n          // 发送消息到服务器\n          const response = await sendTextMessage({\n            chat: currentChatId.value,\n            content: messageCopy\n          })\n          console.log('发送消息响应:', response)\n          \n          // 适应不同的响应格式\n          let messageData = null\n          \n          if (response && response.success && response.data) {\n            // 标准包装格式: {success: true, data: {}}\n            messageData = response.data\n          } else if (response && response.id) {\n            // 包含ID的DRF格式\n            messageData = response\n          } else if (response && response.chat) {\n            // 新API格式: {chat, content, message_type, file, ...}\n            // 构造完整的消息对象\n            messageData = {\n              id: response.id || 'msg-' + Date.now(),\n              content: response.content,\n              message_type: response.message_type,\n              file: response.file,\n              created_at: response.created_at || new Date().toISOString(),\n              sender: {\n                id: userInfo.value.id,\n                username: userInfo.value.username || '用户',\n                first_name: userInfo.value.first_name || '',\n                last_name: userInfo.value.last_name || ''\n              }\n            }\n          } else {\n            console.warn('无法识别的消息响应格式:', response)\n            throw new Error('发送消息响应格式异常')\n          }\n          \n          // 用服务器返回的消息替换临时消息\n          const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n          if (tempIndex !== -1) {\n            messages.value.splice(tempIndex, 1, messageData)\n          } else {\n            messages.value.push(messageData)\n          }\n          \n          // 更新联系人最新消息\n          const contactIndex = contacts.value.findIndex(c => c.id === selectedContact.value)\n          if (contactIndex !== -1) {\n            contacts.value[contactIndex].lastMessage = messageCopy\n            contacts.value[contactIndex].lastTime = formatMessageTime(new Date())\n          }\n          \n          // 再次滚动到底部\n          await nextTick()\n          scrollToBottom()\n        } catch (error) {\n          // 详细记录发送消息错误\n          console.error('发送消息API调用失败:', error)\n          if (error.response) {\n            console.error('错误状态码:', error.response.status)\n            console.error('错误详情:', error.response.data)\n            console.error('请求URL:', error.response.config.url)\n            console.error('请求方法:', error.response.config.method)\n            console.error('请求数据:', error.response.config.data)\n            \n            if (error.response.status === 404) {\n              // 404错误处理\n              console.error('API端点不存在，检查URL配置是否正确')\n              ElMessage.error('消息发送失败: API端点不存在，请联系管理员')\n            } else {\n              throw error  // 将错误传递给外部catch\n            }\n          } else {\n            throw error  // 将错误传递给外部catch\n          }\n        }\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        \n        // 移除临时消息\n        messages.value = messages.value.filter(m => !m.is_temp)\n        \n        // 将消息内容放回输入框\n        messageInput.value = error.savedMessage || messageInput.value\n        \n        ElMessage.error('发送消息失败，请重试')\n      }\n    }\n    \n    // 打开文件上传\n    const openFileUpload = () => {\n      fileInput.value.click()\n    }\n    \n    // 打开图片上传\n    const openImageUpload = () => {\n      imageInput.value.click()\n    }\n    \n    // 处理文件上传\n    const handleFileUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendFileMessage(\n          currentChatId.value, \n          `发送文件: ${file.name}`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送文件失败:', error)\n        ElMessage.error('发送文件失败')\n      }\n    }\n    \n    // 处理图片上传\n    const handleImageUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendImageMessage(\n          currentChatId.value, \n          `发送图片`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送图片失败:', error)\n        ElMessage.error('发送图片失败')\n      }\n    }\n    \n    // 打开知识库对话框\n    const openKnowledgeDialog = async () => {\n      knowledgeDialogVisible.value = true\n      await loadKnowledgeList()\n    }\n    \n    // 加载知识库列表\n    const loadKnowledgeList = async () => {\n      try {\n        knowledgeLoading.value = true\n        const { data } = await getKnowledgeList()\n        knowledgeList.value = data\n      } catch (error) {\n        console.error('加载知识库列表失败:', error)\n        ElMessage.error('加载知识库列表失败')\n      } finally {\n        knowledgeLoading.value = false\n      }\n    }\n    \n    // 选择知识库文件\n    const selectKnowledge = (row) => {\n      selectedKnowledge.value = row\n    }\n    \n    // 分享知识库文件\n    const shareKnowledge = async (knowledge) => {\n      if (!currentChatId.value) return\n      \n      try {\n        await sendKnowledgeMessage(\n          currentChatId.value,\n          `分享知识库文件: ${knowledge.title}`,\n          knowledge.id\n        )\n        \n        // 关闭对话框\n        knowledgeDialogVisible.value = false\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n      } catch (error) {\n        console.error('分享知识库文件失败:', error)\n        ElMessage.error('分享知识库文件失败')\n      }\n    }\n    \n    // 下载文件\n    const downloadFile = async (message) => {\n      try {\n        const response = await downloadMessageFile(message.id)\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', message.file_name || 'download')\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 查看知识库文件\n    const viewKnowledge = (message) => {\n      if (message.knowledge_detail) {\n        // 可以跳转到知识库详情页面\n        ElMessageBox.alert(\n          `标题: ${message.knowledge_detail.title}<br>描述: ${message.knowledge_detail.description || '无'}`, \n          '知识库文件', \n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '确定'\n          }\n        )\n      }\n    }\n    \n    // 获取发送者颜色\n    const getSenderColor = (sender) => {\n      return getRandomColor(sender.id)\n    }\n    \n    // 获取发送者首字母\n    const getSenderInitial = (sender) => {\n      return (sender.first_name || sender.username)[0]\n    }\n    \n    // 根据ID生成随机颜色\n    const getRandomColor = (id) => {\n      const colors = [\n        '#007bff', '#28a745', '#dc3545', '#fd7e14', \n        '#6f42c1', '#20c997', '#17a2b8', '#6c757d'\n      ]\n      \n      // 使用ID作为索引，确保同一用户颜色一致\n      const index = typeof id === 'number' ? id % colors.length : 0\n      return colors[index]\n    }\n    \n    // 格式化消息时间\n    const formatMessageTime = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      const now = new Date()\n      const diff = now - date\n      \n      // 今天内的消息显示时间\n      if (diff < 24 * 60 * 60 * 1000) {\n      const hours = date.getHours().toString().padStart(2, '0')\n      const minutes = date.getMinutes().toString().padStart(2, '0')\n      return `${hours}:${minutes}`\n      }\n      \n      // 一周内的消息显示星期几\n      if (diff < 7 * 24 * 60 * 60 * 1000) {\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n        return days[date.getDay()]\n      }\n      \n      // 更早的消息显示日期\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    // 格式化日期\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取状态文字\n    const getStatusText = (status) => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'busy': '忙碌',\n        'away': '离开'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 添加强制刷新方法\n    const forceRefresh = async () => {\n      try {\n        ElMessage.info('正在强制刷新数据...')\n        \n        // 重新获取用户信息\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          ElMessage.error('无法获取用户信息，请尝试重新登录')\n          return\n        }\n        \n        // 重新加载聊天会话\n        await loadChatSessions()\n        \n        if (contacts.value.length === 0) {\n          ElMessage.warning('未找到任何聊天会话，您可能还没有开始任何对话')\n        } else {\n          ElMessage.success('刷新成功！找到 ' + contacts.value.length + ' 个聊天会话')\n        }\n      } catch (error) {\n        console.error('强制刷新失败:', error)\n        ElMessage.error('刷新失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 加载所有用户\n    const loadAllUsers = async () => {\n      try {\n        console.log('正在加载所有用户列表...')\n        \n        // 尝试直接获取所有用户，不需要公司ID\n        try {\n          console.log('尝试直接获取所有用户...')\n          const response = await request({\n            url: '/api/auth/users/',\n            method: 'get'\n          })\n          \n          console.log('用户API响应:', response)\n          \n          // 处理响应数据\n          let users = []\n          if (response && response.results) {\n            users = response.results\n          } else if (Array.isArray(response)) {\n            users = response\n          } else if (response && response.data) {\n            if (Array.isArray(response.data)) {\n              users = response.data\n            } else if (response.data.results) {\n              users = response.data.results\n            }\n          }\n          \n          if (users && users.length > 0) {\n            console.log(`成功获取到${users.length}个用户`)\n            allColleagues.value = users\n            return\n          }\n        } catch (error) {\n          console.error('获取用户列表失败:', error)\n        }\n        \n        // 如果直接获取失败，使用模拟数据\n        console.warn('API获取用户列表失败，使用模拟数据')\n        allColleagues.value = [\n          {\n            id: 1,\n            username: 'zhangsan',\n            first_name: '张',\n            last_name: '三',\n            department: '技术部',\n            avatar: ''\n          },\n          {\n            id: 2,\n            username: 'lisi',\n            first_name: '李',\n            last_name: '四',\n            department: '市场部',\n            avatar: ''\n          },\n          {\n            id: 3,\n            username: 'wangwu',\n            first_name: '王',\n            last_name: '五',\n            department: '财务部',\n            avatar: ''\n          },\n          {\n            id: 4,\n            username: 'zhaoliu',\n            first_name: '赵',\n            last_name: '六',\n            department: '',\n            avatar: ''\n          }\n        ]\n        console.log('已加载模拟数据')\n      } catch (error) {\n        console.error('加载用户列表过程中出错:', error)\n        // 确保我们至少有一些数据\n        allColleagues.value = [\n          { id: 1, username: 'user1', first_name: '用户', last_name: '1', department: '技术部' },\n          { id: 2, username: 'user2', first_name: '用户', last_name: '2', department: '市场部' },\n          { id: 3, username: 'user3', first_name: '用户', last_name: '3', department: '财务部' },\n          { id: 4, username: 'user4', first_name: '用户', last_name: '4', department: '' }\n        ]\n      }\n    }\n    \n    // 日程事件相关\n    const hiddenCalendarEvents = ref([])\n    \n    // 处理日程事件添加成功\n    const handleCalendarEventAdded = () => {\n      // 可以在这里做一些额外处理，例如通知其他人等\n    }\n    \n    // 处理日程事件隐藏\n    const handleCalendarEventHidden = (messageId) => {\n      hiddenCalendarEvents.value.push(messageId)\n    }\n    \n    return {\n      searchQuery,\n      activeTab,\n      selectedContact,\n      tabs,\n      contacts,\n      currentContact,\n      filteredContacts,\n      messages,\n      messageInput,\n      messageContainer,\n      fileInput,\n      imageInput,\n      currentUser,\n      userInfo,\n      userId,\n      knowledgeDialogVisible,\n      knowledgeLoading,\n      knowledgeList,\n      loading,\n      // 图标\n      Search,\n      Phone,\n      VideoCamera,\n      InfoFilled,\n      Document,\n      PictureFilled,\n      FolderOpened,\n      Microphone,\n      Position,\n      ChatDotSquare,\n      Reading,\n      UserFilled,\n      ChatLineSquare,\n      Refresh,\n      MoreFilled,\n      // 方法\n      sendMessage,\n      getStatusText,\n      selectContact,\n      openFileUpload,\n      openImageUpload,\n      handleFileUpload,\n      handleImageUpload,\n      openKnowledgeDialog,\n      selectKnowledge,\n      shareKnowledge,\n      downloadFile,\n      viewKnowledge,\n      getSenderColor,\n      getSenderInitial,\n      formatMessageTime,\n      formatDate,\n      formatFileSize,\n      refreshChatSessions,\n      forceRefresh,\n      groupedUsersByDepartment,\n      getActiveContacts,\n      loadAllUsers,\n      hiddenCalendarEvents,\n      handleCalendarEventAdded,\n      handleCalendarEventHidden\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  height: calc(100vh - 64px); /* 减去顶部导航栏的高度 */\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n.chat-card {\n  height: 100%;\n  width: 100%;\n  border-radius: 8px;\n  margin: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 12px var(--shadow-color) !important;\n}\n\n.chat-card :deep(.el-card__body) {\n  height: 100%;\n  padding: 0;\n}\n\n.chat-layout {\n  display: flex;\n  height: 100%;\n  width: 100%;\n}\n\n/* 侧边栏样式 */\n.chat-sidebar {\n  width: 280px;\n  border-right: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  height: 100%;\n  overflow: hidden;\n}\n\n.search-box {\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tab {\n  flex: 1;\n  text-align: center;\n  padding: 12px;\n  cursor: pointer;\n  font-weight: 500;\n  color: var(--text-color-secondary);\n  transition: all 0.3s ease;\n}\n\n.chat-tab.active {\n  color: var(--el-color-primary);\n  border-bottom: 2px solid var(--el-color-primary);\n}\n\n.contacts-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0;\n}\n\n.contact-item {\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color-light);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border-color: var(--border-color);\n}\n\n.contact-item:hover {\n  background-color: var(--hover-color);\n}\n\n.contact-item.active {\n  background-color: var(--primary-color-light, #f0f7ff);\n}\n\n.contact-avatar {\n  position: relative;\n  margin-right: 12px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n}\n\n.avatar.small {\n  width: 32px;\n  height: 32px;\n  font-size: 12px;\n}\n\n.avatar-initial {\n  font-size: 16px;\n}\n\n.contact-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid var(--bg-color);\n}\n\n.status-online {\n  background-color: #28a745;\n}\n\n.status-offline {\n  background-color: #6c757d;\n}\n\n.status-busy {\n  background-color: #dc3545;\n}\n\n.status-away {\n  background-color: #fd7e14;\n}\n\n.contact-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.contact-name {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.contact-name span {\n  font-weight: 500;\n}\n\n.time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.contact-message {\n  display: flex;\n  justify-content: space-between;\n  color: var(--text-color-secondary);\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.message-badge {\n  margin-left: 5px;\n}\n\n/* 聊天内容样式 */\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color-secondary);\n  height: 100%;\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-color);\n}\n\n.chat-header .contact-info {\n  margin-right: auto;\n}\n\n.chat-header h6 {\n  margin: 0;\n  font-size: 16px;\n  color: var(--text-color);\n}\n\n.chat-header p {\n  margin: 0;\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.chat-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  max-height: calc(100% - 150px); /* 调整聊天框高度 */\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  margin-bottom: 20px;\n}\n\n.message-container {\n  display: flex;\n}\n\n.message-sent .message-container {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.message-sent .message-avatar {\n  margin-right: 0;\n  margin-left: 10px;\n}\n\n.message-content-wrapper {\n  max-width: 70%;\n}\n\n.message-content {\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n  word-break: break-word;\n}\n\n.message-content.received {\n  background-color: var(--bg-color-tertiary);\n  border-top-left-radius: 4px;\n  color: var(--text-color);\n}\n\n.message-content.sent {\n  background-color: var(--el-color-primary);\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.message-time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n  margin-top: 5px;\n  text-align: right;\n}\n\n.message-sent .message-time {\n  text-align: right;\n}\n\n.message-received .message-time {\n  text-align: left;\n}\n\n.message-image img {\n  max-width: 100%;\n  max-height: 300px;\n  border-radius: 8px;\n}\n\n.message-file {\n  display: flex;\n  align-items: center;\n  background-color: var(--bg-color-tertiary);\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-file .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.file-size {\n  margin-left: 8px;\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.message-knowledge {\n  display: flex;\n  align-items: center;\n  background-color: var(--bg-color-tertiary);\n  padding: 10px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-knowledge .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.knowledge-info {\n  flex: 1;\n}\n\n.knowledge-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\n.knowledge-desc {\n  font-size: 12px;\n  opacity: 0.8;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.chat-input {\n  padding: 15px;\n  background-color: var(--bg-color);\n  border-top: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  min-height: 150px; /* 确保输入框有足够高度 */\n}\n\n.chat-tools {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.input-area {\n  margin-bottom: 10px;\n  flex: 1;\n}\n\n.send-button {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-illustration {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-chat h4 {\n  margin: 0 0 10px;\n}\n\n.empty-chat p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.empty-contacts {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-icon {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-contacts h4 {\n  margin: 0 0 10px;\n}\n\n.empty-contacts p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.loading-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.empty-messages {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.loading-messages {\n  flex: 1;\n  padding: 20px;\n}\n\n.mt-3 {\n  margin-top: 15px;\n}\n\n.search-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.search-header .el-input {\n  flex: 1;\n}\n\n.chat-header-actions {\n  margin-bottom: 10px;\n}\n\n.refresh-action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 5px;\n}\n\n.department-group {\n  margin-bottom: 10px;\n  border-color: var(--border-color);\n}\n\n.department-header {\n  padding: 5px 15px;\n  font-size: 13px;\n  color: var(--text-color-secondary);\n  background-color: var(--bg-color-tertiary);\n  border-radius: 4px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n.group-actions {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: 5px;\n}\n\n.group-action-btn {\n  padding: 6px;\n  color: #909399;\n}\n\n.group-action-btn:hover {\n  color: #409EFF;\n}\n\n/* 添加对话框全局样式以适配深色模式 */\n:deep(.el-dialog) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__body) {\n  color: var(--text-color);\n}\n\n/* 表格样式适配深色模式 */\n:deep(.el-table) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-table th.el-table__cell) {\n  background-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-table tr) {\n  background-color: var(--bg-color);\n}\n\n:deep(.el-table td.el-table__cell) {\n  background-color: var(--bg-color);\n  border-bottom: 1px solid var(--border-color);\n}\n\n/* 修复输入框和下拉菜单 */\n:deep(.el-select .el-input__wrapper) {\n  background-color: var(--bg-color-secondary);\n}\n\n:deep(.el-select-dropdown) {\n  background-color: var(--bg-color-secondary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-select-dropdown__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-select-dropdown__item.hover),\n:deep(.el-select-dropdown__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-input__wrapper) {\n  background-color: var(--bg-color-secondary) !important;\n  box-shadow: 0 0 0 1px var(--border-color) inset;\n}\n\n:deep(.el-input__inner) {\n  color: var(--text-color);\n}\n\n:deep(.el-select__input) {\n  color: var(--text-color) !important;\n}\n\n:deep(.el-textarea__inner) {\n  background-color: var(--bg-color-secondary);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复空白提示和图标颜色 */\n.empty-icon {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-icon) {\n  color: inherit;\n}\n\n:deep(.el-button--primary) {\n  color: white;\n}\n\n.chat-header h6 {\n  color: var(--text-color);\n}\n\n/* 修复badge和标签 */\n:deep(.el-badge__content) {\n  background-color: var(--error-color, #ef4444);\n}\n\n:deep(.el-tag) {\n  background-color: var(--primary-color-light);\n  border-color: var(--primary-color-light);\n  color: var(--primary-color);\n}\n\n/* 修复下拉菜单的样式 */\n:deep(.el-popper.is-light) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-popper__arrow::before) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n/* 修复搜索框内图标颜色 */\n.search-box :deep(.el-input__prefix-inner) {\n  color: var(--text-color-tertiary);\n}\n\n/* 修复表单组件 */\n:deep(.el-input),\n:deep(.el-select) {\n  --el-fill-color-blank: var(--bg-color-tertiary);\n  --el-text-color-regular: var(--text-color);\n  --el-border-color: var(--border-color);\n  --el-border-color-hover: var(--primary-color);\n  --el-fill-color-light: var(--bg-color-tertiary);\n}\n\n/* 修复部门组标题 */\n.department-header {\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n/* 修复El-Card组件样式 */\n:deep(.el-card) {\n  --el-card-bg-color: var(--bg-color);\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复El-Alert样式 */\n:deep(.el-alert) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n  color: var(--text-color);\n}\n\n:deep(.el-alert--info) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-empty__image svg) {\n  fill: var(--text-color-tertiary);\n}\n\n/* 修复下拉菜单 */\n:deep(.el-dropdown-menu) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-dropdown-menu__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-dropdown-menu__item--divided:before) {\n  background-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item.is-disabled) {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-divider) {\n  background-color: var(--border-color);\n}\n\n/* 修复消息框 */\n:deep(.el-message-box) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message-box__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-message-box__message) {\n  color: var(--text-color);\n}\n\n:deep(.el-message) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message__content) {\n  color: var(--text-color);\n}\n\n/* 修复输入区域的阴影 */\n.el-textarea__wrapper {\n  box-shadow: 0 0 0 1px var(--border-color) inset !important;\n}\n</style> "],"mappings":";;;;;;;;;;;AAgZA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,EAAEC,KAAI,QAAS,KAAI;AAC/E,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAS,EAAEC,YAAW,QAAS,cAAa;AACrD,SACEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAC/DC,YAAY,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,OAAO,EAAEC,UAAU,EAAEC,cAAc,EACtFC,OAAO,EAAEC,UAAS,QACb,yBAAwB;AAC/B,SACEC,eAAe,EACfC,cAAc,EACdC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,oBAAoB,EACpBC,mBAAkB,QACb,YAAW;AAClB,SAASC,gBAAe,QAAS,iBAAgB;AACjD,SAASC,QAAO,QAAS,YAAW;AACpC,OAAOC,OAAM,MAAO,iBAAgB;AACpC,OAAOC,iBAAgB,MAAO,oCAAmC;AAEjE,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIhC,QAAQ,CAAC;IACvB,MAAMiC,WAAU,GAAItC,QAAQ,CAAC,MAAMqC,KAAK,CAACE,OAAO,CAACC,IAAI;;IAErD;IACA,MAAMC,QAAO,GAAI1C,GAAG,CAAC,IAAI;IAEzB,MAAM2C,WAAU,GAAI3C,GAAG,CAAC,EAAE;IAC1B,MAAM4C,SAAQ,GAAI5C,GAAG,CAAC,CAAC;IACvB,MAAM6C,eAAc,GAAI7C,GAAG,CAAC,IAAI;IAChC,MAAM8C,YAAW,GAAI9C,GAAG,CAAC,EAAE;IAC3B,MAAM+C,gBAAe,GAAI/C,GAAG,CAAC,IAAI;IACjC,MAAMgD,SAAQ,GAAIhD,GAAG,CAAC,IAAI;IAC1B,MAAMiD,UAAS,GAAIjD,GAAG,CAAC,IAAI;IAC3B,MAAMkD,QAAO,GAAIlD,GAAG,CAAC,EAAE;IACvB,MAAMmD,OAAM,GAAInD,GAAG,CAAC,KAAK;IACzB,MAAMoD,YAAW,GAAIpD,GAAG,CAAC,EAAE;IAC3B,MAAMqD,aAAY,GAAIrD,GAAG,CAAC,IAAI;;IAE9B;IACA,MAAMsD,sBAAqB,GAAItD,GAAG,CAAC,KAAK;IACxC,MAAMuD,gBAAe,GAAIvD,GAAG,CAAC,KAAK;IAClC,MAAMwD,aAAY,GAAIxD,GAAG,CAAC,EAAE;IAC5B,MAAMyD,iBAAgB,GAAIzD,GAAG,CAAC,IAAI;;IAElC;IACA,MAAM0D,IAAG,GAAI1D,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC;;IAE/B;IACA,MAAM2D,QAAO,GAAI3D,GAAG,CAAC,EAAE;IACvB;IACA,MAAM4D,aAAY,GAAI5D,GAAG,CAAC,EAAE;;IAE5B;IACA,MAAM6D,cAAa,GAAI5D,QAAQ,CAAC,MAAM;MACpC,IAAI4C,eAAe,CAACiB,KAAI,KAAM,IAAI,EAAE,OAAO,CAAC;MAC5C,OAAOH,QAAQ,CAACG,KAAK,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMpB,eAAe,CAACiB,KAAK,KAAK,CAAC;IACtE,CAAC;;IAED;IACA,MAAMI,MAAK,GAAIjE,QAAQ,CAAC,MAAM;MAAA,IAAAkE,eAAA;MAC5B,OAAO,EAAAA,eAAA,GAAAzB,QAAQ,CAACoB,KAAK,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,EAAC,KAAK,IAAG;IAClC,CAAC;;IAED;IACA,MAAMG,gBAAe,GAAInE,QAAQ,CAAC,MAAM;MACtC,IAAI,CAAC0C,WAAW,CAACmB,KAAK,EAAE,OAAOH,QAAQ,CAACG,KAAI;MAC5C,OAAOH,QAAQ,CAACG,KAAK,CAACO,MAAM,CAACC,OAAM,IACjCA,OAAO,CAACnC,IAAI,CAACoC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7B,WAAW,CAACmB,KAAK,CAACS,WAAW,CAAC,CAAC,CACrE;IACF,CAAC;;IAED;IACA,MAAME,iBAAgB,GAAIxE,QAAQ,CAAC,MAAM;MACvC,IAAI2C,SAAS,CAACkB,KAAI,KAAM,CAAC,EAAE;QACzB,OAAOM,gBAAgB,CAACN,KAAI;MAC9B,OAAO,IAAIlB,SAAS,CAACkB,KAAI,KAAM,CAAC,EAAE;QAChC,OAAOM,gBAAgB,CAACN,KAAK,CAACO,MAAM,CAACC,OAAM,IAAK,CAACA,OAAO,CAACI,OAAO;MAClE;MACA,OAAON,gBAAgB,CAACN,KAAI;IAC9B,CAAC;;IAGD;IACA,MAAMa,wBAAuB,GAAI1E,QAAQ,CAAC,MAAM;MAC9C;MACA,MAAM2E,QAAO,GAAI,IAAIC,GAAG,CAAC,CAAC;;MAE1B;MACAT,gBAAgB,CAACN,KAAI,CAClBO,MAAM,CAACC,OAAM,IAAK,CAACA,OAAO,CAACI,OAAO,EAClCI,OAAO,CAACR,OAAM,IAAK;QAClB;QACA,IAAI5B,QAAQ,CAACoB,KAAI,IAAKQ,OAAO,CAACJ,MAAK,KAAMxB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;UAC1D;QACF;QACA;QACAW,QAAQ,CAACG,GAAG,CAACT,OAAO,CAACJ,MAAK,IAAKI,OAAO,CAACL,EAAE,EAAEK,OAAO,CAAC;MACrD,CAAC,CAAC;;MAEJ;MACAV,aAAa,CAACE,KAAK,CAACgB,OAAO,CAACE,SAAQ,IAAK;QACvC;QACA,IAAItC,QAAQ,CAACoB,KAAI,IAAKkB,SAAS,CAACf,EAAC,KAAMvB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;UACxD;QACF;;QAEA;QACA,IAAI,CAACW,QAAQ,CAACK,GAAG,CAACD,SAAS,CAACf,EAAE,CAAC,EAAE;UAC/B;UACA,MAAMK,OAAM,GAAI;YACdL,EAAE,EAAE,OAAM,GAAIe,SAAS,CAACf,EAAE;YAAE;YAC5BC,MAAM,EAAEc,SAAS,CAACf,EAAE;YACpB9B,IAAI,EAAE,CAAC,CAAC6C,SAAS,CAACE,UAAS,IAAK,EAAE,IAAI,GAAE,IAAKF,SAAS,CAACG,SAAQ,IAAK,EAAE,CAAC,EAAEC,IAAI,CAAC,KAAKJ,SAAS,CAACK,QAAO,IAAK,QAAQ;YACjHC,OAAO,EAAG,CAACN,SAAS,CAACE,UAAS,IAAKF,SAAS,CAACK,QAAO,IAAK,QAAQ,EAAE,CAAC,CAAE;YACtEE,MAAM,EAAEP,SAAS,CAACO,MAAK,IAAK,EAAE;YAC9BC,KAAK,EAAEC,cAAc,CAACT,SAAS,CAACf,EAAE,CAAC;YACnCyB,MAAM,EAAE,QAAQ;YAChBC,WAAW,EAAE,EAAE;YACfC,QAAQ,EAAE,EAAE;YACZC,MAAM,EAAE,CAAC;YACTnB,OAAO,EAAE,KAAK;YACdoB,UAAU,EAAEd,SAAS,CAACc,UAAS,IAAK;UACtC,CAAC;UACDlB,QAAQ,CAACG,GAAG,CAACC,SAAS,CAACf,EAAE,EAAEK,OAAO,CAAC;QACrC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMyB,YAAW,GAAI,CAAC,CAAC;;MAEvB;MACAC,KAAK,CAACC,IAAI,CAACrB,QAAQ,CAACsB,MAAM,CAAC,CAAC,CAAC,CAACpB,OAAO,CAACrC,IAAG,IAAK;QAC5C,MAAM0D,cAAa,GAAI1D,IAAI,CAACqD,UAAS,IAAK,IAAI;QAC9C,IAAI,CAACC,YAAY,CAACI,cAAc,CAAC,EAAE;UACjCJ,YAAY,CAACI,cAAc,IAAI,EAAE;QACnC;QACAJ,YAAY,CAACI,cAAc,CAAC,CAACC,IAAI,CAAC3D,IAAI,CAAC;MACzC,CAAC,CAAC;MAEF,OAAOsD,YAAY;IACrB,CAAC;;IAED;IACA,MAAMM,KAAI,GAAIrE,QAAQ,CAAC;;IAEvB;IACA,IAAIsE,eAAc,GAAI,IAAG;;IAEzB;IACAlG,eAAe,CAAC,MAAM;MACpB,IAAIkG,eAAe,EAAE;QACnBC,aAAa,CAACD,eAAe;MAC/B;IACF,CAAC;;IAED;IACAnG,SAAS,CAAC,YAAY;MACpB,IAAI;QACF;QACA,MAAMqG,QAAO,GAAI,MAAMC,gBAAgB,CAAC;;QAExC;QACA,IAAI,CAACD,QAAQ,EAAE;UACbjG,SAAS,CAACmG,KAAK,CAAC,kBAAkB;UAClC;QACF;QAEAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ;;QAErC;QACA,IAAI,CAAC9D,QAAQ,CAACoB,KAAI,IAAK,CAACpB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;UACzC0C,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEhE,QAAQ,CAACoB,KAAK;UAC1CvD,SAAS,CAACmG,KAAK,CAAC,kBAAkB;UAClC;QACF,OAAO;UACLC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAElE,QAAQ,CAACoB,KAAK;QAC5C;;QAEA;QACA,MAAM+C,YAAY,CAAC;;QAEnB;QACA,MAAMC,gBAAgB,CAAC;;QAEvB;QACA,MAAMC,SAAQ,GAAIV,KAAK,CAACW,KAAK,CAACC,OAAM,IAAKZ,KAAK,CAACW,KAAK,CAAC/C,EAAC;QACtD,IAAI8C,SAAS,EAAE;UACb;UACA,MAAMG,YAAW,GAAIvD,QAAQ,CAACG,KAAK,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMkD,QAAQ,CAACJ,SAAS,CAAC;UAC1E,IAAIG,YAAY,EAAE;YAChB;YACArE,eAAe,CAACiB,KAAI,GAAIoD,YAAY,CAACjD,EAAC;YACtC;YACA,MAAMmD,gBAAgB,CAACL,SAAS;UAClC,OAAO;YACL;YACAJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,SAAS;YACtC,MAAMK,gBAAgB,CAACL,SAAS;UAClC;QACF;;QAEA;QACAT,eAAc,GAAIe,WAAW,CAAC,YAAY;UACxC,IAAIxE,eAAe,CAACiB,KAAK,EAAE;YACzB,MAAMsD,gBAAgB,CAACvE,eAAe,CAACiB,KAAK;UAC9C;UACA,MAAMgD,gBAAgB,CAAC;QACzB,CAAC,EAAE,KAAK;;QAER;QACA,MAAM5G,QAAQ,CAAC;QACfoH,cAAc,CAAC;MACjB,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjCnG,SAAS,CAACmG,KAAK,CAAC,aAAY,GAAIA,KAAK,CAACa,OAAO;MAC/C;IACF,CAAC;;IAED;IACA,MAAMd,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,IAAI;QACFE,OAAO,CAACC,GAAG,CAAC,eAAe;;QAE3B;QACA,MAAMY,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,IAAI,CAACF,KAAK,EAAE;UACVb,OAAO,CAACgB,IAAI,CAAC,kBAAkB;UAC/BpH,SAAS,CAACqH,OAAO,CAAC,iBAAiB;UACnC,OAAO,IAAG;QACZ;QAEA,MAAMC,QAAO,GAAI,MAAM5F,OAAO,CAAC;UAC7B6F,GAAG,EAAE,qBAAqB;UAC1BC,MAAM,EAAE;QACV,CAAC;QAEDpB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEiB,QAAQ;;QAEjC;QACA,IAAIrB,QAAO,GAAI,IAAG;QAClB,IAAIqB,QAAQ,CAACG,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAAC/D,EAAE,EAAE;UACrC;UACAuC,QAAO,GAAIqB,QAAQ,CAACG,IAAG;UACvBrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,QAAQ;QACxC,OAAO,IAAIqB,QAAQ,CAACG,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAACA,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC/D,EAAE,EAAE;UACvE;UACAuC,QAAO,GAAIqB,QAAQ,CAACG,IAAI,CAACA,IAAG;UAC5BrB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ;QAC1C,OAAO,IAAIqB,QAAQ,CAAC5D,EAAE,EAAE;UACtB;UACAuC,QAAO,GAAIqB,QAAO;UAClBlB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ;QACnC,OAAO;UACLG,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEmB,QAAQ;UACvC,MAAM,IAAII,KAAK,CAAC,UAAU;QAC5B;QAEA,IAAI,CAACzB,QAAO,IAAK,CAACA,QAAQ,CAACvC,EAAE,EAAE;UAC7B0C,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEF,QAAQ;UACpC,MAAM,IAAIyB,KAAK,CAAC,SAAS;QAC3B;;QAEA;QACAvF,QAAQ,CAACoB,KAAI,GAAI0C,QAAO;;QAExB;QACAiB,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC5B,QAAQ,CAAC;QAErDG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAElE,QAAQ,CAACoB,KAAK;QACtC,OAAO0C,QAAO;MAChB,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK;QAClCnG,SAAS,CAACmG,KAAK,CAAC,YAAW,IAAKA,KAAK,CAACa,OAAM,IAAK,MAAM,CAAC;QACxD,OAAO,IAAG;MACZ;IACF;;IAEA;IACA,MAAMT,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF3D,OAAO,CAACW,KAAI,GAAI,IAAG;QACnB6C,OAAO,CAACC,GAAG,CAAC,eAAe;QAE3B,MAAMiB,QAAO,GAAI,MAAMrG,eAAe,CAAC;QACvCmF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEiB,QAAQ;;QAEjC;QACA,IAAI,CAACA,QAAQ,EAAE;UACblB,OAAO,CAACD,KAAK,CAAC,aAAa;UAC3B/C,QAAQ,CAACG,KAAI,GAAI,EAAC;UAClB;QACF;QAEA,IAAIkE,IAAG;QACP,IAAIH,QAAQ,CAACQ,OAAM,IAAKR,QAAQ,CAACG,IAAI,EAAE;UACrCA,IAAG,GAAIH,QAAQ,CAACG,IAAG;UACnBrB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEoB,IAAI;QAClC,OAAO;UACLA,IAAG,GAAIH,QAAO;UACdlB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEoB,IAAI;QAClC;;QAEA;QACA5E,YAAY,CAACU,KAAI,GAAIkE,IAAG;;QAExB;QACA,IAAIA,IAAG,IAAKhC,KAAK,CAACsC,OAAO,CAACN,IAAI,CAACO,OAAO,CAAC,EAAE;UACvC5B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEoB,IAAI,CAACO,OAAO,CAACC,MAAM;UACnD;UACA7E,QAAQ,CAACG,KAAI,GAAIkE,IAAI,CAACO,OAAO,CAACE,GAAG,CAACxB,OAAM,IAAK;YAC3C;YACA,IAAIyB,gBAAe,GAAI,IAAG;YAC1B,IAAIzB,OAAO,CAAC0B,YAAW,IAAK3C,KAAK,CAACsC,OAAO,CAACrB,OAAO,CAAC0B,YAAY,CAAC,EAAE;cAC/D,IAAIjG,QAAQ,CAACoB,KAAI,IAAKpB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;gBACvCyE,gBAAe,GAAIzB,OAAO,CAAC0B,YAAY,CAAC5E,IAAI,CAC1C6E,CAAA,IAAKA,CAAC,CAACnG,IAAG,IAAKmG,CAAC,CAACnG,IAAI,CAACwB,EAAC,KAAMvB,QAAQ,CAACoB,KAAK,CAACG,EAC9C;cACF,OAAO;gBACL;gBACAyE,gBAAe,GAAIzB,OAAO,CAAC0B,YAAY,CAAC,CAAC;cAC3C;YACF;;YAEA;YACA,IAAI1B,OAAO,CAAC4B,QAAQ,EAAE;cACpB,OAAO;gBACL5E,EAAE,EAAEgD,OAAO,CAAChD,EAAE;gBACd9B,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;gBAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;gBACnCvD,MAAM,EAAE,EAAE;gBACVwD,UAAU,EAAE,EAAE;gBACdvD,KAAK,EAAEC,cAAc,CAACwB,OAAO,CAAChD,EAAE,CAAC;gBACjCyB,MAAM,EAAE,QAAQ;gBAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;gBACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;gBAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;gBAC5B3E,OAAO,EAAE;cACX;YACF;;YAEA;YACA,IAAIgE,gBAAgB,EAAE;cACpB,MAAMjG,IAAG,GAAIiG,gBAAgB,CAACjG,IAAG;cACjC;cACA,IAAIsG,UAAS,GAAI,EAAE;cACnB,IAAItG,IAAI,CAAC8C,MAAM,EAAE;gBACf,MAAMA,MAAK,GAAI9C,IAAI,CAAC8C,MAAM;gBAC1B,IAAIA,MAAM,CAAC+D,UAAU,CAAC,SAAS,KAAK/D,MAAM,CAAC+D,UAAU,CAAC,UAAU,CAAC,EAAE;kBACjEP,UAAS,GAAIxD,MAAM;gBACrB,OAAO,IAAIA,MAAM,CAAC+D,UAAU,CAAC,GAAG,CAAC,EAAE;kBACjCP,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,GAAGlE,MAAM,EAAE;gBACpF,OAAO;kBACLwD,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,IAAIlE,MAAM,EAAE;gBACrF;cACF;cAEA,OAAO;gBACLtB,EAAE,EAAEgD,OAAO,CAAChD,EAAE;gBACdC,MAAM,EAAEzB,IAAI,CAACwB,EAAE;gBAAE;gBACjB9B,IAAI,EAAE,CAAC,CAACM,IAAI,CAACyC,UAAS,IAAK,EAAE,IAAI,GAAE,IAAKzC,IAAI,CAAC0C,SAAQ,IAAK,EAAE,CAAC,EAAEC,IAAI,CAAC,KAAK3C,IAAI,CAAC4C,QAAO,IAAK,QAAQ;gBAClGC,OAAO,EAAG,CAAC7C,IAAI,CAACyC,UAAS,IAAKzC,IAAI,CAAC4C,QAAO,IAAK,QAAQ,EAAE,CAAC,CAAE;gBAC5DE,MAAM,EAAE9C,IAAI,CAAC8C,MAAK,IAAK,EAAE;gBACzBwD,UAAU,EAAEA,UAAU;gBACtBvD,KAAK,EAAEC,cAAc,CAAChD,IAAI,CAACwB,EAAE,CAAC;gBAC9ByB,MAAM,EAAE,QAAQ;gBAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;gBACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;gBAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;gBAC5B3E,OAAO,EAAE,KAAK;gBACdoB,UAAU,EAAErD,IAAI,CAACqD,UAAS,CAAE;cAC9B;YACF;;YAEA;YACA,OAAO;cACL7B,EAAE,EAAEgD,OAAO,CAAChD,EAAE;cACd9B,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;cAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;cACnCvD,MAAM,EAAE,EAAE;cACVwD,UAAU,EAAE,EAAE;cACdvD,KAAK,EAAEC,cAAc,CAACwB,OAAO,CAAChD,EAAE,CAAC;cACjCyB,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;cACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;cAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;cAC5B3E,OAAO,EAAEuC,OAAO,CAAC4B;YACnB;UACF,CAAC;QACH,OAAO,IAAIb,IAAG,IAAKhC,KAAK,CAACsC,OAAO,CAACN,IAAI,CAAC,EAAE;UACtCrB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEoB,IAAI,CAACQ,MAAM;UAC5C;UACA7E,QAAQ,CAACG,KAAI,GAAIkE,IAAI,CAACS,GAAG,CAACxB,OAAM,IAAK;YACnC;YACA,IAAIyB,gBAAe,GAAI,IAAG;YAC1B,IAAIzB,OAAO,CAAC0B,YAAW,IAAK3C,KAAK,CAACsC,OAAO,CAACrB,OAAO,CAAC0B,YAAY,CAAC,EAAE;cAC/D,IAAIjG,QAAQ,CAACoB,KAAI,IAAKpB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;gBACvCyE,gBAAe,GAAIzB,OAAO,CAAC0B,YAAY,CAAC5E,IAAI,CAC1C6E,CAAA,IAAKA,CAAC,CAACnG,IAAG,IAAKmG,CAAC,CAACnG,IAAI,CAACwB,EAAC,KAAMvB,QAAQ,CAACoB,KAAK,CAACG,EAC9C;cACF,OAAO;gBACL;gBACAyE,gBAAe,GAAIzB,OAAO,CAAC0B,YAAY,CAAC,CAAC;cAC3C;YACF;;YAEA;YACA,IAAI1B,OAAO,CAAC4B,QAAQ,EAAE;cACpB,OAAO;gBACL5E,EAAE,EAAEgD,OAAO,CAAChD,EAAE;gBACd9B,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;gBAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;gBACnCvD,MAAM,EAAE,EAAE;gBACVwD,UAAU,EAAE,EAAE;gBACdvD,KAAK,EAAEC,cAAc,CAACwB,OAAO,CAAChD,EAAE,CAAC;gBACjCyB,MAAM,EAAE,QAAQ;gBAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;gBACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;gBAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;gBAC5B3E,OAAO,EAAE;cACX;YACF;;YAEA;YACA,IAAIgE,gBAAgB,EAAE;cACpB,MAAMjG,IAAG,GAAIiG,gBAAgB,CAACjG,IAAG;cACjC;cACA,IAAIsG,UAAS,GAAI,EAAE;cACnB,IAAItG,IAAI,CAAC8C,MAAM,EAAE;gBACf,MAAMA,MAAK,GAAI9C,IAAI,CAAC8C,MAAM;gBAC1B,IAAIA,MAAM,CAAC+D,UAAU,CAAC,SAAS,KAAK/D,MAAM,CAAC+D,UAAU,CAAC,UAAU,CAAC,EAAE;kBACjEP,UAAS,GAAIxD,MAAM;gBACrB,OAAO,IAAIA,MAAM,CAAC+D,UAAU,CAAC,GAAG,CAAC,EAAE;kBACjCP,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,GAAGlE,MAAM,EAAE;gBACpF,OAAO;kBACLwD,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,IAAIlE,MAAM,EAAE;gBACrF;cACF;cAEA,OAAO;gBACLtB,EAAE,EAAEgD,OAAO,CAAChD,EAAE;gBACd9B,IAAI,EAAE,CAAC,CAACM,IAAI,CAACyC,UAAS,IAAK,EAAE,IAAI,GAAE,IAAKzC,IAAI,CAAC0C,SAAQ,IAAK,EAAE,CAAC,EAAEC,IAAI,CAAC,KAAK3C,IAAI,CAAC4C,QAAO,IAAK,QAAQ;gBAClGC,OAAO,EAAG,CAAC7C,IAAI,CAACyC,UAAS,IAAKzC,IAAI,CAAC4C,QAAO,IAAK,QAAQ,EAAE,CAAC,CAAE;gBAC5DE,MAAM,EAAE9C,IAAI,CAAC8C,MAAK,IAAK,EAAE;gBACzBwD,UAAU,EAAEA,UAAU;gBACtBvD,KAAK,EAAEC,cAAc,CAAChD,IAAI,CAACwB,EAAE,CAAC;gBAC9ByB,MAAM,EAAE,QAAQ;gBAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;gBACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;gBAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;gBAC5B3E,OAAO,EAAE;cACX;YACF;;YAEA;YACA,OAAO;cACLT,EAAE,EAAEgD,OAAO,CAAChD,EAAE;cACd9B,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;cAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;cACnCvD,MAAM,EAAE,EAAE;cACVwD,UAAU,EAAE,EAAE;cACdvD,KAAK,EAAEC,cAAc,CAACwB,OAAO,CAAChD,EAAE,CAAC;cACjCyB,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;cACrErD,QAAQ,EAAEqB,OAAO,CAAC+B,YAAW,GAAIE,iBAAiB,CAACjC,OAAO,CAAC+B,YAAY,CAACG,UAAU,IAAID,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;cAC3HvD,MAAM,EAAEoB,OAAO,CAACoC,YAAY;cAC5B3E,OAAO,EAAEuC,OAAO,CAAC4B;YACnB;UACF,CAAC;QACH,OAAO;UACL;UACAlC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEsB,IAAI;UACpCrE,QAAQ,CAACG,KAAI,GAAI,EAAC;QACpB;QAEA6C,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEjD,QAAQ,CAACG,KAAK;;QAExC;QACA,IAAIH,QAAQ,CAACG,KAAK,CAAC0E,MAAK,GAAI,CAAC,EAAE;UAC7B7E,QAAQ,CAACG,KAAK,CAAC4F,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/D,MAAK,GAAI8D,CAAC,CAAC9D,MAAM;QACnD;MACF,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChCnG,SAAS,CAACmG,KAAK,CAAC,YAAW,IAAKA,KAAK,CAACa,OAAM,IAAK,MAAM,CAAC;QACxD5D,QAAQ,CAACG,KAAI,GAAI,EAAC;MACpB,UAAU;QACRX,OAAO,CAACW,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMsD,gBAAe,GAAI,MAAOyC,MAAM,IAAK;MACzC,IAAI,CAACA,MAAM,EAAE;QACXlD,OAAO,CAACD,KAAK,CAAC,kBAAkB;QAChC;MACF;MAEA,IAAI;QACFvD,OAAO,CAACW,KAAI,GAAI,IAAG;QACnB6C,OAAO,CAACC,GAAG,CAAC,YAAYiD,MAAM,SAAS;QAEvC,MAAMhC,QAAO,GAAI,MAAMpG,cAAc,CAACoI,MAAM;QAC5ClD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEiB,QAAQ;QAEjC,IAAI,CAACA,QAAQ,EAAE;UACblB,OAAO,CAACD,KAAK,CAAC,eAAe;UAC7BxD,QAAQ,CAACY,KAAI,GAAI,EAAC;UAClB;QACF;;QAEA;QACA,IAAIgG,WAAU,GAAI,EAAC;QACnB,IAAIC,WAAU,GAAI,IAAG;QAErB,IAAIlC,QAAQ,CAACG,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAAC9E,QAAQ,EAAE;UAC3C;UACA4G,WAAU,GAAIjC,QAAQ,CAACG,IAAI,CAAC9E,QAAO;UACnC6G,WAAU,GAAIlC,QAAQ,CAACG,IAAG;UAC1BrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkD,WAAW,CAACtB,MAAM;QAClD,OAAO,IAAIX,QAAQ,CAACG,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAACA,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC9E,QAAQ,EAAE;UAC7E;UACA4G,WAAU,GAAIjC,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC9E,QAAO;UACxC6G,WAAU,GAAIlC,QAAQ,CAACG,IAAI,CAACA,IAAG;UAC/BrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkD,WAAW,CAACtB,MAAM;QAClD,OAAO,IAAIX,QAAQ,CAAC3E,QAAQ,EAAE;UAC5B;UACA4G,WAAU,GAAIjC,QAAQ,CAAC3E,QAAO;UAC9B6G,WAAU,GAAIlC,QAAO;UACrBlB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEkD,WAAW,CAACtB,MAAM;QACpD,OAAO;UACL7B,OAAO,CAACgB,IAAI,CAAC,cAAc,EAAEE,QAAQ;UACrClB,OAAO,CAACC,GAAG,CAAC,qBAAqB;;UAEjC;UACA,MAAMoD,qBAAoB,GAAI,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,SAAS;UAC7E,KAAK,MAAMC,KAAI,IAAKD,qBAAqB,EAAE;YACzC,IAAInC,QAAQ,CAACoC,KAAK,KAAKjE,KAAK,CAACsC,OAAO,CAACT,QAAQ,CAACoC,KAAK,CAAC,CAAC,EAAE;cACrDtD,OAAO,CAACC,GAAG,CAAC,aAAaqD,KAAK,UAAU;cACxCH,WAAU,GAAIjC,QAAQ,CAACoC,KAAK;cAC5BF,WAAU,GAAIlC,QAAO;cACrB;YACF,OAAO,IAAIA,QAAQ,CAACG,IAAG,IAAKH,QAAQ,CAACG,IAAI,CAACiC,KAAK,KAAKjE,KAAK,CAACsC,OAAO,CAACT,QAAQ,CAACG,IAAI,CAACiC,KAAK,CAAC,CAAC,EAAE;cACvFtD,OAAO,CAACC,GAAG,CAAC,qBAAqBqD,KAAK,UAAU;cAChDH,WAAU,GAAIjC,QAAQ,CAACG,IAAI,CAACiC,KAAK;cACjCF,WAAU,GAAIlC,QAAQ,CAACG,IAAG;cAC1B;YACF;UACF;UAEA,IAAI8B,WAAW,CAACtB,MAAK,KAAM,CAAC,EAAE;YAC5B7B,OAAO,CAACgB,IAAI,CAAC,iBAAiB;UAChC;QACF;;QAEA;QACAmC,WAAW,CAAChF,OAAO,CAACyC,OAAM,IAAK;UAC7B,IAAIA,OAAO,CAAC2C,MAAK,IAAK3C,OAAO,CAAC2C,MAAM,CAAC3E,MAAM,EAAE;YAC3C,MAAMA,MAAK,GAAIgC,OAAO,CAAC2C,MAAM,CAAC3E,MAAM;YACpC,IAAIA,MAAM,CAAC+D,UAAU,CAAC,SAAS,KAAK/D,MAAM,CAAC+D,UAAU,CAAC,UAAU,CAAC,EAAE;cACjE/B,OAAO,CAAC2C,MAAM,CAACnB,UAAS,GAAIxD,MAAM;YACpC,OAAO,IAAIA,MAAM,CAAC+D,UAAU,CAAC,GAAG,CAAC,EAAE;cACjC/B,OAAO,CAAC2C,MAAM,CAACnB,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,GAAGlE,MAAM,EAAE;YACnG,OAAO;cACLgC,OAAO,CAAC2C,MAAM,CAACnB,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,IAAIlE,MAAM,EAAE;YACpG;UACF;QACF,CAAC,CAAC;;QAEF;QACAoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEmD,WAAW;QACpCpD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkD,WAAW;;QAEpC;QACA,IAAIC,WAAU,IAAK,CAACpG,QAAQ,CAACG,KAAK,CAACqG,IAAI,CAACnG,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMkD,QAAQ,CAAC0C,MAAM,CAAC,CAAC,EAAE;UACvElD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEmD,WAAW;;UAE1C;UACA,MAAM9C,OAAM,GAAI8C,WAAU;UAC1B;UACA,IAAIrB,gBAAe,GAAI,IAAG;;UAE1B;UACA,IAAIzB,OAAO,CAAC0B,YAAW,IAAK3C,KAAK,CAACsC,OAAO,CAACrB,OAAO,CAAC0B,YAAY,KAAK1B,OAAO,CAAC0B,YAAY,CAACH,MAAK,GAAI,KAAK9F,QAAQ,CAACoB,KAAK,EAAE;YACpH4E,gBAAe,GAAIzB,OAAO,CAAC0B,YAAY,CAAC5E,IAAI,CAAC6E,CAAA,IAAKA,CAAC,CAACnG,IAAG,IAAKmG,CAAC,CAACnG,IAAI,CAACwB,EAAC,KAAMvB,QAAQ,CAACoB,KAAK,CAACG,EAAE;UAC7F;UAEA,IAAImG,WAAU,GAAI,IAAG;;UAErB;UACA,IAAInD,OAAO,CAAC4B,QAAQ,EAAE;YACpBuB,WAAU,GAAI;cACZnG,EAAE,EAAEkD,QAAQ,CAAC0C,MAAM,CAAC;cACpB1H,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;cAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;cACnCvD,MAAM,EAAE,EAAE;cACVwD,UAAU,EAAE,EAAE;cACdvD,KAAK,EAAEC,cAAc,CAAC0B,QAAQ,CAAC0C,MAAM,CAAC,CAAC;cACvCnE,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;cACrErD,QAAQ,EAAEsD,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;cAC/CvD,MAAM,EAAE,CAAC;cACTnB,OAAO,EAAE;YACX;YACF;UACA,OAAO,IAAIgE,gBAAe,IAAKA,gBAAgB,CAACjG,IAAI,EAAE;YACpD,MAAMA,IAAG,GAAIiG,gBAAgB,CAACjG,IAAG;YACjC;YACA,IAAIsG,UAAS,GAAI,EAAE;YACnB,IAAItG,IAAI,CAAC8C,MAAM,EAAE;cACf,MAAMA,MAAK,GAAI9C,IAAI,CAAC8C,MAAM;cAC1B,IAAIA,MAAM,CAAC+D,UAAU,CAAC,SAAS,KAAK/D,MAAM,CAAC+D,UAAU,CAAC,UAAU,CAAC,EAAE;gBACjEP,UAAS,GAAIxD,MAAM;cACrB,OAAO,IAAIA,MAAM,CAAC+D,UAAU,CAAC,GAAG,CAAC,EAAE;gBACjCP,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,GAAGlE,MAAM,EAAE;cACpF,OAAO;gBACLwD,UAAS,GAAI,GAAGQ,OAAO,CAACC,GAAG,CAACC,gBAAe,IAAK,uBAAuB,IAAIlE,MAAM,EAAE;cACrF;YACF;YAEA6E,WAAU,GAAI;cACZnG,EAAE,EAAEkD,QAAQ,CAAC0C,MAAM,CAAC;cACpB1H,IAAI,EAAE,CAAC,CAACM,IAAI,CAACyC,UAAS,IAAK,EAAE,IAAI,GAAE,IAAKzC,IAAI,CAAC0C,SAAQ,IAAK,EAAE,CAAC,EAAEC,IAAI,CAAC,KAAK3C,IAAI,CAAC4C,QAAO,IAAK,QAAQ;cAClGC,OAAO,EAAG,CAAC7C,IAAI,CAACyC,UAAS,IAAKzC,IAAI,CAAC4C,QAAO,IAAK,QAAQ,EAAE,CAAC,CAAE;cAC5DE,MAAM,EAAE9C,IAAI,CAAC8C,MAAK,IAAK,EAAE;cACzBwD,UAAU,EAAEA,UAAU;cACtBvD,KAAK,EAAEC,cAAc,CAAChD,IAAI,CAACwB,EAAE,CAAC;cAC9ByB,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAEsB,OAAO,CAAC+B,YAAW,GAAI/B,OAAO,CAAC+B,YAAY,CAACC,OAAM,GAAI,EAAE;cACrErD,QAAQ,EAAEsD,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;cAC/CvD,MAAM,EAAE,CAAC;cACTnB,OAAO,EAAE;YACX;UACF,OAAO;YACL;YACA0F,WAAU,GAAI;cACZnG,EAAE,EAAEkD,QAAQ,CAAC0C,MAAM,CAAC;cACpB1H,IAAI,EAAE8E,OAAO,CAAC6B,KAAI,IAAK,IAAI;cAC3BxD,OAAO,EAAE,CAAC2B,OAAO,CAAC6B,KAAI,IAAK,IAAI,EAAE,CAAC,CAAC;cACnCvD,MAAM,EAAE,EAAE;cACVwD,UAAU,EAAE,EAAE;cACdvD,KAAK,EAAEC,cAAc,CAAC0B,QAAQ,CAAC0C,MAAM,CAAC,CAAC;cACvCnE,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAE,EAAE;cACfC,QAAQ,EAAEsD,iBAAiB,CAACjC,OAAO,CAACmC,UAAU,CAAC;cAC/CvD,MAAM,EAAE,CAAC;cACTnB,OAAO,EAAEuC,OAAO,CAAC4B;YACnB;UACF;;UAEA;UACA,IAAIuB,WAAW,EAAE;YACfzG,QAAQ,CAACG,KAAK,CAACuG,OAAO,CAACD,WAAW;YAClCzD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEwD,WAAW;UACrC;QACF;;QAEA;QACAlH,QAAQ,CAACY,KAAI,GAAIgG,WAAU,IAAK,EAAC;QACjCzG,aAAa,CAACS,KAAI,GAAIqD,QAAQ,CAAC0C,MAAM;QACrChH,eAAe,CAACiB,KAAI,GAAIqD,QAAQ,CAAC0C,MAAM;;QAEvC;QACA3J,QAAQ,CAAC,MAAM;UACboH,cAAc,CAAC;QACjB,CAAC;MACH,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;QAEhC,IAAI4D,YAAW,GAAI,UAAS;QAC5B,IAAI5D,KAAK,CAACmB,QAAQ,EAAE;UAClB,MAAMnC,MAAK,GAAIgB,KAAK,CAACmB,QAAQ,CAACnC,MAAK;UACnC,IAAIA,MAAK,KAAM,GAAG,EAAE;YAClB4E,YAAW,GAAI,cAAa;UAC9B,OAAO,IAAI5E,MAAK,KAAM,GAAG,EAAE;YACzB4E,YAAW,GAAI,WAAU;UAC3B,OAAO,IAAI5D,KAAK,CAACmB,QAAQ,CAACG,IAAG,IAAKtB,KAAK,CAACmB,QAAQ,CAACG,IAAI,CAACT,OAAO,EAAE;YAC7D+C,YAAW,GAAI5D,KAAK,CAACmB,QAAQ,CAACG,IAAI,CAACT,OAAM;UAC3C;QACF,OAAO,IAAIb,KAAK,CAACa,OAAO,EAAE;UACxB+C,YAAW,GAAI5D,KAAK,CAACa,OAAM;QAC7B;QAEAhH,SAAS,CAACmG,KAAK,CAAC4D,YAAY;QAC5BpH,QAAQ,CAACY,KAAI,GAAI,EAAC;MACpB,UAAU;QACRX,OAAO,CAACW,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMyG,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC;MACA,MAAM1D,YAAY,CAAC;;MAEnB;MACA,MAAMC,gBAAgB,CAAC;;MAEvB;MACA,IAAIzD,aAAa,CAACS,KAAK,EAAE;QACvB,MAAMQ,OAAM,GAAIX,QAAQ,CAACG,KAAK,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMZ,aAAa,CAACS,KAAK;QACrE,IAAIQ,OAAO,EAAE;UACXzB,eAAe,CAACiB,KAAI,GAAIQ,OAAO,CAACL,EAAC;QACnC;MACF;IACF;;IAEA;IACA,MAAMqD,cAAa,GAAIA,CAAA,KAAM;MAC3B,IAAIvE,gBAAgB,CAACe,KAAK,EAAE;QAC1Bf,gBAAgB,CAACe,KAAK,CAAC0G,SAAQ,GAAIzH,gBAAgB,CAACe,KAAK,CAAC2G,YAAW;MACvE;IACF;;IAEA;IACA,MAAMC,aAAY,GAAI,MAAOpG,OAAO,IAAK;MACvC;MACA,IAAI,CAACA,OAAO,CAACI,OAAM,IAAKhC,QAAQ,CAACoB,KAAI,IAAKQ,OAAO,CAACJ,MAAK,KAAMxB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;QAC9E1D,SAAS,CAACqH,OAAO,CAAC,SAAS;QAC3B;MACF;MAEAjB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEtC,OAAO;;MAE7B;MACA,IAAIqG,SAAQ,GAAIrG,OAAO,CAACL,EAAC;;MAEzB;MACA,IAAI,OAAO0G,SAAQ,KAAM,QAAO,IAAKA,SAAS,CAACrB,UAAU,CAAC,OAAO,CAAC,EAAE;QAClE;QACA,IAAIpF,MAAK,GAAII,OAAO,CAACJ,MAAK,IAAKI,OAAO,CAACL,EAAE,CAAC2G,OAAO,CAAC,OAAO,EAAE,EAAE;QAC7DjE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE1C,MAAM;;QAEnC;QACA,MAAM2G,YAAW,GAAIlH,QAAQ,CAACG,KAAK,CAACC,IAAI,CAACC,CAAA,IACvC,CAACA,CAAC,CAACU,OAAM,KACPV,CAAC,CAACE,MAAK,IAAKF,CAAC,CAACE,MAAK,IAAKA,MAAM,IAC/BF,CAAC,CAACvB,IAAG,IAAKuB,CAAC,CAACvB,IAAI,CAACwB,EAAC,IAAKC,MAAO,CACjC;QAEA,IAAI2G,YAAY,EAAE;UAChBlE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEiE,YAAY;UACvCF,SAAQ,GAAIE,YAAY,CAAC5G,EAAC;QAC5B,OAAO;UACL0C,OAAO,CAACC,GAAG,CAAC,mBAAmB;;UAE/B;UACA,IAAI;YACF,MAAMiB,QAAO,GAAI,MAAM5F,OAAO,CAAC;cAC7B6F,GAAG,EAAE,qBAAqB;cAC1BC,MAAM,EAAE,MAAM;cACdC,IAAI,EAAE;gBACJ8C,eAAe,EAAE,CAAC5G,MAAM,CAAC;gBACzB2E,QAAQ,EAAE;cACZ;YACF,CAAC;YAEDlC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiB,QAAQ;;YAE/B;YACA,IAAIkD,UAAS,GAAI,IAAG;YAEpB,IAAIlD,QAAO,IAAKA,QAAQ,CAACG,IAAI,EAAE;cAC7B+C,UAAS,GAAIlD,QAAQ,CAACG,IAAG;YAC3B,OAAO,IAAIH,QAAO,IAAKA,QAAQ,CAAC5D,EAAE,EAAE;cAClC8G,UAAS,GAAIlD,QAAO;YACtB;YAEA,IAAIkD,UAAS,IAAKA,UAAU,CAAC9G,EAAE,EAAE;cAC/B;cACA,MAAMmG,WAAU,GAAI;gBAClBnG,EAAE,EAAE8G,UAAU,CAAC9G,EAAE;gBACjBC,MAAM,EAAEA,MAAM;gBACd/B,IAAI,EAAEmC,OAAO,CAACnC,IAAI;gBAClBmD,OAAO,EAAEhB,OAAO,CAACgB,OAAO;gBACxBC,MAAM,EAAEjB,OAAO,CAACiB,MAAM;gBACtBwD,UAAU,EAAEzE,OAAO,CAACyE,UAAS,IAAK,EAAE;gBACpCvD,KAAK,EAAElB,OAAO,CAACkB,KAAI,IAAKC,cAAc,CAACvB,MAAM,CAAC;gBAC9CwB,MAAM,EAAE,QAAQ;gBAChBC,WAAW,EAAE,EAAE;gBACfC,QAAQ,EAAEsD,iBAAiB,CAAC,IAAI8B,IAAI,CAAC,CAAC,CAAC;gBACvCnF,MAAM,EAAE,CAAC;gBACTnB,OAAO,EAAE,KAAK;gBACdoB,UAAU,EAAExB,OAAO,CAACwB;cACtB;;cAEA;cACAnC,QAAQ,CAACG,KAAK,CAACuG,OAAO,CAACD,WAAW;;cAElC;cACAO,SAAQ,GAAII,UAAU,CAAC9G,EAAC;cACxB1D,SAAS,CAAC8H,OAAO,CAAC,SAAS;YAC7B,OAAO;cACL,MAAM,IAAIJ,KAAK,CAAC,YAAY;YAC9B;UACF,EAAE,OAAOvB,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;YAC/BnG,SAAS,CAACmG,KAAK,CAAC,WAAU,IAAKA,KAAK,CAACa,OAAM,IAAK,MAAM,CAAC;YACvD;UACF;QACF;MACF;;MAEA;MACA1E,eAAe,CAACiB,KAAI,GAAI6G,SAAQ;MAChC7H,YAAY,CAACgB,KAAI,GAAI,EAAC;MACtBZ,QAAQ,CAACY,KAAI,GAAI,EAAC;;MAElB;MACA,IAAI;QACF,MAAMsD,gBAAgB,CAACuD,SAAS;;QAEhC;QACAzK,QAAQ,CAAC,MAAM;UACboH,cAAc,CAAC;QACjB,CAAC;MACH,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChCnG,SAAS,CAACmG,KAAK,CAAC,WAAU,IAAKA,KAAK,CAACa,OAAM,IAAK,MAAM,CAAC;MACzD;IACF;;IAEA;IACAlH,KAAK,CAAC6C,QAAQ,EAAE,MAAM;MACpBhD,QAAQ,CAAC,MAAM;QACboH,cAAc,CAAC;MACjB,CAAC;IACH,CAAC;;IAED;IACA,MAAM2D,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACnI,YAAY,CAACgB,KAAK,CAACsB,IAAI,CAAC,KAAK,CAAC/B,aAAa,CAACS,KAAK,EAAE;MAExD,IAAI;QACF;QACA,IAAI,CAACpB,QAAQ,CAACoB,KAAI,IAAK,CAACpB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;UACzC0C,OAAO,CAACC,GAAG,CAAC,qBAAqB;UACjC;UACA,MAAMJ,QAAO,GAAI,MAAMC,gBAAgB,CAAC;UACxC,IAAI,CAACD,QAAO,IAAK,CAACA,QAAQ,CAACvC,EAAE,EAAE;YAC7B,MAAM,IAAIgE,KAAK,CAAC,oBAAoB;UACtC;UAEAtB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ;QACnC;;QAEA;QACA;QACA,IAAI,CAAC9D,QAAQ,CAACoB,KAAI,IAAK,CAACpB,QAAQ,CAACoB,KAAK,CAACG,EAAE,EAAE;UACzC,MAAM,IAAIgE,KAAK,CAAC,iBAAiB;QACnC;;QAEA;QACAtB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEvD,aAAa,CAACS,KAAK,EAAE,KAAK,EAAE,OAAOT,aAAa,CAACS,KAAK;QAE7E,MAAMoH,WAAU,GAAI;UAClBjH,EAAE,EAAE,OAAM,GAAI+G,IAAI,CAACG,GAAG,CAAC,CAAC;UACxBlC,OAAO,EAAEnG,YAAY,CAACgB,KAAK,CAACsB,IAAI,CAAC,CAAC;UAClC8E,MAAM,EAAE;YACNjG,EAAE,EAAEvB,QAAQ,CAACoB,KAAK,CAACG,EAAE;YACrBoB,QAAQ,EAAE3C,QAAQ,CAACoB,KAAK,CAACuB,QAAO,IAAK,IAAI;YACzCH,UAAU,EAAExC,QAAQ,CAACoB,KAAK,CAACoB,UAAS,IAAK,EAAE;YAC3CC,SAAS,EAAEzC,QAAQ,CAACoB,KAAK,CAACqB,SAAQ,IAAK;UACzC,CAAC;UACDiG,YAAY,EAAE,MAAM;UACpBjC,UAAU,EAAE,IAAI6B,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;UACpCC,OAAO,EAAE;QACX;;QAEA;QACApI,QAAQ,CAACY,KAAK,CAACsC,IAAI,CAAC8E,WAAW;;QAE/B;QACA,MAAMK,WAAU,GAAIzI,YAAY,CAACgB,KAAI;QACrChB,YAAY,CAACgB,KAAI,GAAI,EAAC;;QAEtB;QACA,MAAM5D,QAAQ,CAAC;QACfoH,cAAc,CAAC;;QAEf;QACAX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEvD,aAAa,CAACS,KAAK,EAAE,OAAO,EAAEyH,WAAW;QAEzE,IAAI;UACF;UACA,MAAM1D,QAAO,GAAI,MAAMnG,eAAe,CAAC;YACrC8J,IAAI,EAAEnI,aAAa,CAACS,KAAK;YACzBmF,OAAO,EAAEsC;UACX,CAAC;UACD5E,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiB,QAAQ;;UAE/B;UACA,IAAIiC,WAAU,GAAI,IAAG;UAErB,IAAIjC,QAAO,IAAKA,QAAQ,CAACQ,OAAM,IAAKR,QAAQ,CAACG,IAAI,EAAE;YACjD;YACA8B,WAAU,GAAIjC,QAAQ,CAACG,IAAG;UAC5B,OAAO,IAAIH,QAAO,IAAKA,QAAQ,CAAC5D,EAAE,EAAE;YAClC;YACA6F,WAAU,GAAIjC,QAAO;UACvB,OAAO,IAAIA,QAAO,IAAKA,QAAQ,CAAC2D,IAAI,EAAE;YACpC;YACA;YACA1B,WAAU,GAAI;cACZ7F,EAAE,EAAE4D,QAAQ,CAAC5D,EAAC,IAAK,MAAK,GAAI+G,IAAI,CAACG,GAAG,CAAC,CAAC;cACtClC,OAAO,EAAEpB,QAAQ,CAACoB,OAAO;cACzBmC,YAAY,EAAEvD,QAAQ,CAACuD,YAAY;cACnCK,IAAI,EAAE5D,QAAQ,CAAC4D,IAAI;cACnBtC,UAAU,EAAEtB,QAAQ,CAACsB,UAAS,IAAK,IAAI6B,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;cAC3DnB,MAAM,EAAE;gBACNjG,EAAE,EAAEvB,QAAQ,CAACoB,KAAK,CAACG,EAAE;gBACrBoB,QAAQ,EAAE3C,QAAQ,CAACoB,KAAK,CAACuB,QAAO,IAAK,IAAI;gBACzCH,UAAU,EAAExC,QAAQ,CAACoB,KAAK,CAACoB,UAAS,IAAK,EAAE;gBAC3CC,SAAS,EAAEzC,QAAQ,CAACoB,KAAK,CAACqB,SAAQ,IAAK;cACzC;YACF;UACF,OAAO;YACLwB,OAAO,CAACgB,IAAI,CAAC,cAAc,EAAEE,QAAQ;YACrC,MAAM,IAAII,KAAK,CAAC,YAAY;UAC9B;;UAEA;UACA,MAAMyD,SAAQ,GAAIxI,QAAQ,CAACY,KAAK,CAAC6H,SAAS,CAACC,CAAA,IAAKA,CAAC,CAAC3H,EAAC,KAAMiH,WAAW,CAACjH,EAAE;UACvE,IAAIyH,SAAQ,KAAM,CAAC,CAAC,EAAE;YACpBxI,QAAQ,CAACY,KAAK,CAAC+H,MAAM,CAACH,SAAS,EAAE,CAAC,EAAE5B,WAAW;UACjD,OAAO;YACL5G,QAAQ,CAACY,KAAK,CAACsC,IAAI,CAAC0D,WAAW;UACjC;;UAEA;UACA,MAAMgC,YAAW,GAAInI,QAAQ,CAACG,KAAK,CAAC6H,SAAS,CAAC3H,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMpB,eAAe,CAACiB,KAAK;UACjF,IAAIgI,YAAW,KAAM,CAAC,CAAC,EAAE;YACvBnI,QAAQ,CAACG,KAAK,CAACgI,YAAY,CAAC,CAACnG,WAAU,GAAI4F,WAAU;YACrD5H,QAAQ,CAACG,KAAK,CAACgI,YAAY,CAAC,CAAClG,QAAO,GAAIsD,iBAAiB,CAAC,IAAI8B,IAAI,CAAC,CAAC;UACtE;;UAEA;UACA,MAAM9K,QAAQ,CAAC;UACfoH,cAAc,CAAC;QACjB,EAAE,OAAOZ,KAAK,EAAE;UACd;UACAC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK;UACnC,IAAIA,KAAK,CAACmB,QAAQ,EAAE;YAClBlB,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACmB,QAAQ,CAACnC,MAAM;YAC7CiB,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACmB,QAAQ,CAACG,IAAI;YAC1CrB,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACmB,QAAQ,CAACkE,MAAM,CAACjE,GAAG;YACjDnB,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACmB,QAAQ,CAACkE,MAAM,CAAChE,MAAM;YACnDpB,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACmB,QAAQ,CAACkE,MAAM,CAAC/D,IAAI;YAEjD,IAAItB,KAAK,CAACmB,QAAQ,CAACnC,MAAK,KAAM,GAAG,EAAE;cACjC;cACAiB,OAAO,CAACD,KAAK,CAAC,sBAAsB;cACpCnG,SAAS,CAACmG,KAAK,CAAC,yBAAyB;YAC3C,OAAO;cACL,MAAMA,KAAI,EAAG;YACf;UACF,OAAO;YACL,MAAMA,KAAI,EAAG;UACf;QACF;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;;QAE9B;QACAxD,QAAQ,CAACY,KAAI,GAAIZ,QAAQ,CAACY,KAAK,CAACO,MAAM,CAACuH,CAAA,IAAK,CAACA,CAAC,CAACN,OAAO;;QAEtD;QACAxI,YAAY,CAACgB,KAAI,GAAI4C,KAAK,CAACsF,YAAW,IAAKlJ,YAAY,CAACgB,KAAI;QAE5DvD,SAAS,CAACmG,KAAK,CAAC,YAAY;MAC9B;IACF;;IAEA;IACA,MAAMuF,cAAa,GAAIA,CAAA,KAAM;MAC3BjJ,SAAS,CAACc,KAAK,CAACoI,KAAK,CAAC;IACxB;;IAEA;IACA,MAAMC,eAAc,GAAIA,CAAA,KAAM;MAC5BlJ,UAAU,CAACa,KAAK,CAACoI,KAAK,CAAC;IACzB;;IAEA;IACA,MAAME,gBAAe,GAAI,MAAOC,KAAK,IAAK;MACxC,MAAMZ,IAAG,GAAIY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACd,IAAG,IAAK,CAACpI,aAAa,CAACS,KAAK,EAAE;MAEnC,IAAI;QACF,MAAMnC,eAAe,CACnB0B,aAAa,CAACS,KAAK,EACnB,SAAS2H,IAAI,CAACtJ,IAAI,EAAE,EACpBsJ,IACF;;QAEA;QACArE,gBAAgB,CAAC/D,aAAa,CAACS,KAAK;;QAEpC;QACAuI,KAAK,CAACC,MAAM,CAACxI,KAAI,GAAI,EAAC;MACxB,EAAE,OAAO4C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BnG,SAAS,CAACmG,KAAK,CAAC,QAAQ;MAC1B;IACF;;IAEA;IACA,MAAM8F,iBAAgB,GAAI,MAAOH,KAAK,IAAK;MACzC,MAAMZ,IAAG,GAAIY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAI,CAACd,IAAG,IAAK,CAACpI,aAAa,CAACS,KAAK,EAAE;MAEnC,IAAI;QACF,MAAMlC,gBAAgB,CACpByB,aAAa,CAACS,KAAK,EACnB,MAAM,EACN2H,IACF;;QAEA;QACArE,gBAAgB,CAAC/D,aAAa,CAACS,KAAK;;QAEpC;QACAuI,KAAK,CAACC,MAAM,CAACxI,KAAI,GAAI,EAAC;MACxB,EAAE,OAAO4C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BnG,SAAS,CAACmG,KAAK,CAAC,QAAQ;MAC1B;IACF;;IAEA;IACA,MAAM+F,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtCnJ,sBAAsB,CAACQ,KAAI,GAAI,IAAG;MAClC,MAAM4I,iBAAiB,CAAC;IAC1B;;IAEA;IACA,MAAMA,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACFnJ,gBAAgB,CAACO,KAAI,GAAI,IAAG;QAC5B,MAAM;UAAEkE;QAAK,IAAI,MAAMjG,gBAAgB,CAAC;QACxCyB,aAAa,CAACM,KAAI,GAAIkE,IAAG;MAC3B,EAAE,OAAOtB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjCnG,SAAS,CAACmG,KAAK,CAAC,WAAW;MAC7B,UAAU;QACRnD,gBAAgB,CAACO,KAAI,GAAI,KAAI;MAC/B;IACF;;IAEA;IACA,MAAM6I,eAAc,GAAKC,GAAG,IAAK;MAC/BnJ,iBAAiB,CAACK,KAAI,GAAI8I,GAAE;IAC9B;;IAEA;IACA,MAAMC,cAAa,GAAI,MAAOC,SAAS,IAAK;MAC1C,IAAI,CAACzJ,aAAa,CAACS,KAAK,EAAE;MAE1B,IAAI;QACF,MAAMjC,oBAAoB,CACxBwB,aAAa,CAACS,KAAK,EACnB,YAAYgJ,SAAS,CAAChE,KAAK,EAAE,EAC7BgE,SAAS,CAAC7I,EACZ;;QAEA;QACAX,sBAAsB,CAACQ,KAAI,GAAI,KAAI;;QAEnC;QACAsD,gBAAgB,CAAC/D,aAAa,CAACS,KAAK;MACtC,EAAE,OAAO4C,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjCnG,SAAS,CAACmG,KAAK,CAAC,WAAW;MAC7B;IACF;;IAEA;IACA,MAAMqG,YAAW,GAAI,MAAOxF,OAAO,IAAK;MACtC,IAAI;QACF,MAAMM,QAAO,GAAI,MAAM/F,mBAAmB,CAACyF,OAAO,CAACtD,EAAE;;QAErD;QACA,MAAM6D,GAAE,GAAIkF,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACtF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAChE,MAAMoF,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG;QACvCF,IAAI,CAACG,IAAG,GAAIzF,GAAE;QACdsF,IAAI,CAACI,YAAY,CAAC,UAAU,EAAEjG,OAAO,CAACkG,SAAQ,IAAK,UAAU;QAC7DJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,IAAI;QAC9BA,IAAI,CAAClB,KAAK,CAAC;QACXmB,QAAQ,CAACK,IAAI,CAACE,WAAW,CAACR,IAAI;MAChC,EAAE,OAAO1G,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BnG,SAAS,CAACmG,KAAK,CAAC,QAAQ;MAC1B;IACF;;IAEA;IACA,MAAMmH,aAAY,GAAKtG,OAAO,IAAK;MACjC,IAAIA,OAAO,CAACuG,gBAAgB,EAAE;QAC5B;QACAtN,YAAY,CAACuN,KAAK,CAChB,OAAOxG,OAAO,CAACuG,gBAAgB,CAAChF,KAAK,WAAWvB,OAAO,CAACuG,gBAAgB,CAACE,WAAU,IAAK,GAAG,EAAE,EAC7F,OAAO,EACP;UACEC,wBAAwB,EAAE,IAAI;UAC9BC,iBAAiB,EAAE;QACrB,CACF;MACF;IACF;;IAEA;IACA,MAAMC,cAAa,GAAKjE,MAAM,IAAK;MACjC,OAAOzE,cAAc,CAACyE,MAAM,CAACjG,EAAE;IACjC;;IAEA;IACA,MAAMmK,gBAAe,GAAKlE,MAAM,IAAK;MACnC,OAAO,CAACA,MAAM,CAAChF,UAAS,IAAKgF,MAAM,CAAC7E,QAAQ,EAAE,CAAC;IACjD;;IAEA;IACA,MAAMI,cAAa,GAAKxB,EAAE,IAAK;MAC7B,MAAMoK,MAAK,GAAI,CACb,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAC1C,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAQ,CAC3C;;MAEA;MACA,MAAMC,KAAI,GAAI,OAAOrK,EAAC,KAAM,QAAO,GAAIA,EAAC,GAAIoK,MAAM,CAAC7F,MAAK,GAAI;MAC5D,OAAO6F,MAAM,CAACC,KAAK;IACrB;;IAEA;IACA,MAAMpF,iBAAgB,GAAKqF,SAAS,IAAK;MACvC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAC;MAExB,MAAMC,IAAG,GAAI,IAAIxD,IAAI,CAACuD,SAAS;MAC/B,MAAMpD,GAAE,GAAI,IAAIH,IAAI,CAAC;MACrB,MAAMyD,IAAG,GAAItD,GAAE,GAAIqD,IAAG;;MAEtB;MACA,IAAIC,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI,EAAE;QAChC,MAAMC,KAAI,GAAIF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG;QACxD,MAAMC,OAAM,GAAIN,IAAI,CAACO,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG;QAC5D,OAAO,GAAGH,KAAK,IAAII,OAAO,EAAC;MAC3B;;MAEA;MACA,IAAIL,IAAG,GAAI,IAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI,EAAE;QAClC,MAAMO,IAAG,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QACtD,OAAOA,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,CAAC;MAC3B;;MAEA;MACA,OAAO,GAAGT,IAAI,CAACU,QAAQ,CAAC,IAAI,CAAC,IAAIV,IAAI,CAACW,OAAO,CAAC,CAAC,GAAE;IACnD;;IAEA;IACA,MAAMC,UAAS,GAAKb,SAAS,IAAK;MAChC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAC;MAExB,MAAMC,IAAG,GAAI,IAAIxD,IAAI,CAACuD,SAAS;MAC/B,OAAO,GAAGC,IAAI,CAACa,WAAW,CAAC,CAAC,IAAI,CAACb,IAAI,CAACU,QAAQ,CAAC,IAAI,CAAC,EAAEN,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIL,IAAI,CAACW,OAAO,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;IAClI;;IAEA;IACA,MAAMS,cAAa,GAAKC,QAAQ,IAAK;MACnC,IAAIA,QAAO,GAAI,IAAI,EAAE;QACnB,OAAO,GAAGA,QAAQ,KAAI;MACxB,OAAO;QACL,OAAO,GAAG,CAACA,QAAO,GAAI,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,KAAI;MAC5C;IACF;;IAEA;IACA,MAAMC,aAAY,GAAK/J,MAAM,IAAK;MAChC,MAAMgK,SAAQ,GAAI;QAChB,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;QACf,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE;MACV;MACA,OAAOA,SAAS,CAAChK,MAAM,KAAKA,MAAK;IACnC;;IAEA;IACA,MAAMiK,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFpP,SAAS,CAACqP,IAAI,CAAC,aAAa;;QAE5B;QACA,MAAMpJ,QAAO,GAAI,MAAMC,gBAAgB,CAAC;QAExC,IAAI,CAACD,QAAQ,EAAE;UACbjG,SAAS,CAACmG,KAAK,CAAC,kBAAkB;UAClC;QACF;;QAEA;QACA,MAAMI,gBAAgB,CAAC;QAEvB,IAAInD,QAAQ,CAACG,KAAK,CAAC0E,MAAK,KAAM,CAAC,EAAE;UAC/BjI,SAAS,CAACqH,OAAO,CAAC,wBAAwB;QAC5C,OAAO;UACLrH,SAAS,CAAC8H,OAAO,CAAC,UAAS,GAAI1E,QAAQ,CAACG,KAAK,CAAC0E,MAAK,GAAI,QAAQ;QACjE;MACF,EAAE,OAAO9B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BnG,SAAS,CAACmG,KAAK,CAAC,QAAO,IAAKA,KAAK,CAACa,OAAM,IAAK,MAAM,CAAC;MACtD;IACF;;IAEA;IACA,MAAMV,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFF,OAAO,CAACC,GAAG,CAAC,eAAe;;QAE3B;QACA,IAAI;UACFD,OAAO,CAACC,GAAG,CAAC,eAAe;UAC3B,MAAMiB,QAAO,GAAI,MAAM5F,OAAO,CAAC;YAC7B6F,GAAG,EAAE,kBAAkB;YACvBC,MAAM,EAAE;UACV,CAAC;UAEDpB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEiB,QAAQ;;UAEhC;UACA,IAAIgI,KAAI,GAAI,EAAC;UACb,IAAIhI,QAAO,IAAKA,QAAQ,CAACU,OAAO,EAAE;YAChCsH,KAAI,GAAIhI,QAAQ,CAACU,OAAM;UACzB,OAAO,IAAIvC,KAAK,CAACsC,OAAO,CAACT,QAAQ,CAAC,EAAE;YAClCgI,KAAI,GAAIhI,QAAO;UACjB,OAAO,IAAIA,QAAO,IAAKA,QAAQ,CAACG,IAAI,EAAE;YACpC,IAAIhC,KAAK,CAACsC,OAAO,CAACT,QAAQ,CAACG,IAAI,CAAC,EAAE;cAChC6H,KAAI,GAAIhI,QAAQ,CAACG,IAAG;YACtB,OAAO,IAAIH,QAAQ,CAACG,IAAI,CAACO,OAAO,EAAE;cAChCsH,KAAI,GAAIhI,QAAQ,CAACG,IAAI,CAACO,OAAM;YAC9B;UACF;UAEA,IAAIsH,KAAI,IAAKA,KAAK,CAACrH,MAAK,GAAI,CAAC,EAAE;YAC7B7B,OAAO,CAACC,GAAG,CAAC,QAAQiJ,KAAK,CAACrH,MAAM,KAAK;YACrC5E,aAAa,CAACE,KAAI,GAAI+L,KAAI;YAC1B;UACF;QACF,EAAE,OAAOnJ,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;QAClC;;QAEA;QACAC,OAAO,CAACgB,IAAI,CAAC,oBAAoB;QACjC/D,aAAa,CAACE,KAAI,GAAI,CACpB;UACEG,EAAE,EAAE,CAAC;UACLoB,QAAQ,EAAE,UAAU;UACpBH,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,GAAG;UACdW,UAAU,EAAE,KAAK;UACjBP,MAAM,EAAE;QACV,CAAC,EACD;UACEtB,EAAE,EAAE,CAAC;UACLoB,QAAQ,EAAE,MAAM;UAChBH,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,GAAG;UACdW,UAAU,EAAE,KAAK;UACjBP,MAAM,EAAE;QACV,CAAC,EACD;UACEtB,EAAE,EAAE,CAAC;UACLoB,QAAQ,EAAE,QAAQ;UAClBH,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,GAAG;UACdW,UAAU,EAAE,KAAK;UACjBP,MAAM,EAAE;QACV,CAAC,EACD;UACEtB,EAAE,EAAE,CAAC;UACLoB,QAAQ,EAAE,SAAS;UACnBH,UAAU,EAAE,GAAG;UACfC,SAAS,EAAE,GAAG;UACdW,UAAU,EAAE,EAAE;UACdP,MAAM,EAAE;QACV,EACF;QACAoB,OAAO,CAACC,GAAG,CAAC,SAAS;MACvB,EAAE,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK;QACnC;QACA9C,aAAa,CAACE,KAAI,GAAI,CACpB;UAAEG,EAAE,EAAE,CAAC;UAAEoB,QAAQ,EAAE,OAAO;UAAEH,UAAU,EAAE,IAAI;UAAEC,SAAS,EAAE,GAAG;UAAEW,UAAU,EAAE;QAAM,CAAC,EACjF;UAAE7B,EAAE,EAAE,CAAC;UAAEoB,QAAQ,EAAE,OAAO;UAAEH,UAAU,EAAE,IAAI;UAAEC,SAAS,EAAE,GAAG;UAAEW,UAAU,EAAE;QAAM,CAAC,EACjF;UAAE7B,EAAE,EAAE,CAAC;UAAEoB,QAAQ,EAAE,OAAO;UAAEH,UAAU,EAAE,IAAI;UAAEC,SAAS,EAAE,GAAG;UAAEW,UAAU,EAAE;QAAM,CAAC,EACjF;UAAE7B,EAAE,EAAE,CAAC;UAAEoB,QAAQ,EAAE,OAAO;UAAEH,UAAU,EAAE,IAAI;UAAEC,SAAS,EAAE,GAAG;UAAEW,UAAU,EAAE;QAAG,EAC/E;MACF;IACF;;IAEA;IACA,MAAMgK,oBAAmB,GAAI9P,GAAG,CAAC,EAAE;;IAEnC;IACA,MAAM+P,wBAAuB,GAAIA,CAAA,KAAM;MACrC;IAAA,CACF;;IAEA;IACA,MAAMC,yBAAwB,GAAKC,SAAS,IAAK;MAC/CH,oBAAoB,CAAChM,KAAK,CAACsC,IAAI,CAAC6J,SAAS;IAC3C;IAEA,OAAO;MACLtN,WAAW;MACXC,SAAS;MACTC,eAAe;MACfa,IAAI;MACJC,QAAQ;MACRE,cAAc;MACdO,gBAAgB;MAChBlB,QAAQ;MACRJ,YAAY;MACZC,gBAAgB;MAChBC,SAAS;MACTC,UAAU;MACVV,WAAW;MACXG,QAAQ;MACRwB,MAAM;MACNZ,sBAAsB;MACtBC,gBAAgB;MAChBC,aAAa;MACbL,OAAO;MACP;MACA1C,MAAM;MACNC,KAAK;MACLC,WAAW;MACXC,UAAU;MACVC,QAAQ;MACRC,aAAa;MACbC,YAAY;MACZC,UAAU;MACVC,QAAQ;MACRC,aAAa;MACbC,OAAO;MACPC,UAAU;MACVC,cAAc;MACdC,OAAO;MACPC,UAAU;MACV;MACA0J,WAAW;MACXwE,aAAa;MACb/E,aAAa;MACbuB,cAAc;MACdE,eAAe;MACfC,gBAAgB;MAChBI,iBAAiB;MACjBC,mBAAmB;MACnBE,eAAe;MACfE,cAAc;MACdE,YAAY;MACZc,aAAa;MACbM,cAAc;MACdC,gBAAgB;MAChBlF,iBAAiB;MACjBkG,UAAU;MACVE,cAAc;MACd/E,mBAAmB;MACnBoF,YAAY;MACZhL,wBAAwB;MACxBF,iBAAiB;MACjBoC,YAAY;MACZiJ,oBAAoB;MACpBC,wBAAwB;MACxBC;IACF;EACF;AACF","ignoreList":[]}]}