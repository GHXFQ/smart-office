{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Detail.vue?vue&type=template&id=1d87880e&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Detail.vue","mtime":1751005359277},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","isDocListCollapsed","_hoisted_2","_hoisted_3","onClick","_cache","args","toggleDocList","_createVNode","_component_el_icon","_createBlock","_component_ArrowLeft","key","_component_ArrowRight","_hoisted_4","_hoisted_5","_component_el_input","placeholder","searchQuery","$event","clearable","onInput","debouncedSearch","prefix","_withCtx","_component_Search","_hoisted_6","docTypeFilter","size","_component_el_select","sortOption","_component_el_option","label","value","_component_el_scrollbar","documentsLoading","_hoisted_7","_component_el_skeleton","rows","animated","_hoisted_8","_Fragment","_renderList","filteredDocuments","doc","_$setup$currentDoc","id","currentDoc","selectDocument","_hoisted_10","_component_Document","_hoisted_11","_toDisplayString","title","_hoisted_12","type","formatDate","update_time","length","_hoisted_13","_component_el_empty","description","_component_el_button","_ctx","fetchDocuments","_hoisted_14","_hoisted_15","openNewDocumentDialog","_component_Plus","_hoisted_16","_component_el_tooltip","content","placement","_hoisted_17","slice","_$setup$currentDoc2","_hoisted_19","_hoisted_20","loading","_hoisted_21","_hoisted_22","goBack","circle","_component_ArrowLeftBold","_hoisted_23","_hoisted_24","onChange","onTitleChange","_hoisted_25","onTypeChange","_hoisted_26","disabled","documentChanged","saveLoading","saveDocument","_component_CircleCheck","shareDocument","_component_ShareIcon","exportDocument","_component_Download","_component_el_dropdown","trigger","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","deleteDocument","_component_More","_hoisted_27","_component_QuillEditor","options","editorOptions","contentType","theme","onTextChange","onContentChange","onReady","onEditorReady","_hoisted_28","isAssistantCollapsed","_hoisted_29","_hoisted_30","toggleAssistant","_hoisted_31","_hoisted_32","_hoisted_33","hasValidSelection","effect","expandContent","expandLoading","_component_Edit","_hoisted_34","polishText","polishLoading","_component_StarFilled","_hoisted_35","grammarCheckText","grammarCheckLoading","_hoisted_36","openTranslateDialog","_component_ChatDotRound","_hoisted_37","openQaDialog","_component_QuestionFilled","_hoisted_38","_component_Loading","_component_el_dialog","newDocumentDialogVisible","width","footer","_hoisted_39","createNewDocument","createLoading","_component_el_form","model","newDocumentForm","rules","documentFormRules","ref","_component_el_form_item","prop","shareDialogVisible","_hoisted_44","confirmShare","shareLoading","_hoisted_40","_component_el_radio_group","shareMode","handleShareModeChange","_component_el_radio","selectedUsers","number","multiple","handleUserSelectionChange","availableUsers","user","username","_hoisted_41","selectedUsersWithPermissions","userPerm","index","_hoisted_42","getUsernameById","user_id","permission","_hoisted_43","deleteDialogVisible","_hoisted_46","confirmDelete","deleteLoading","_hoisted_45","compareDialogVisible","compareDialogData","fullscreen","_hoisted_53","closeCompareDialog","applyCompareChanges","_hoisted_47","_hoisted_48","_hoisted_49","original","readOnly","_hoisted_50","modifiedContent","suggestions","_hoisted_51","_component_el_alert","closable","innerHTML","translateDialogVisible","_hoisted_58","translateModifiedContent","replaceSelectionWithTranslation","_hoisted_54","targetLang","translateLoading","doTranslate","_hoisted_55","_hoisted_56","translateInput","_hoisted_57","qaDialogVisible","qaQuestion","onKeyup","_withKeys","doQa","qaLoading","qaAnswer","_hoisted_59","qaAnswerHtml","_hoisted_60"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Detail.vue"],"sourcesContent":["<template>\n  <div class=\"smart-doc-container\">\n    <!-- 文档列表侧边栏 -->\n    <div class=\"sidebar\" :class=\"{ 'collapsed': isDocListCollapsed }\">\n      <!-- 侧边栏头部 -->\n      <div class=\"sidebar-header\">\n        <h4 v-if=\"!isDocListCollapsed\">我的文档</h4>\n        <div class=\"toggle-btn\" @click=\"toggleDocList\">\n          <el-icon><ArrowLeft v-if=\"!isDocListCollapsed\" /><ArrowRight v-else /></el-icon>\n        </div>\n      </div>\n\n      <!-- 展开状态的文档列表 -->\n      <div class=\"sidebar-content\" v-show=\"!isDocListCollapsed\">\n        <!-- 搜索和筛选区域 -->\n        <div class=\"search-area\">\n          <el-input\n            placeholder=\"搜索文档...\"\n            v-model=\"searchQuery\"\n            clearable\n            @input=\"debouncedSearch\"\n          >\n            <template #prefix>\n              <el-icon><Search /></el-icon>\n            </template>\n          </el-input>\n          <div class=\"filter-options\">\n            <el-input v-model=\"docTypeFilter\" placeholder=\"文档类型\" size=\"small\" clearable />\n            <el-select v-model=\"sortOption\" placeholder=\"排序\" size=\"small\">\n              <el-option label=\"最近更新\" value=\"update\" />\n              <el-option label=\"最近创建\" value=\"create\" />\n              <el-option label=\"名称升序\" value=\"name-asc\" />\n            </el-select>\n          </div>\n        </div>\n\n        <!-- 文档列表区域 -->\n        <el-scrollbar class=\"document-list-scrollbar\">\n          <div v-if=\"documentsLoading\" class=\"loading-state\">\n            <el-skeleton :rows=\"10\" animated />\n          </div>\n          <div v-else class=\"document-list\">\n            <div \n              v-for=\"doc in filteredDocuments\" \n              :key=\"doc.id\" \n              class=\"doc-item\"\n              :class=\"{ 'active': currentDoc?.id === doc.id }\"\n              @click=\"selectDocument(doc.id)\"\n            >\n              <div class=\"doc-icon\">\n                <el-icon><Document /></el-icon>\n              </div>\n              <div class=\"doc-info\">\n                <h5>{{ doc.title }}</h5>\n                <div class=\"doc-meta\">\n                  <span>{{ doc.type }}</span>\n                  <span>{{ formatDate(doc.update_time) }}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div v-if=\"filteredDocuments.length === 0\" class=\"empty-state\">\n              <el-empty description=\"暂无文档\" :image-size=\"60\">\n                <el-button size=\"small\" @click=\"fetchDocuments(1, [])\">重新加载</el-button>\n              </el-empty>\n            </div>\n            \n            <div v-if=\"filteredDocuments.length > 0\" class=\"document-count\">\n              共 {{ filteredDocuments.length }} 个文档\n            </div>\n          </div>\n        </el-scrollbar>\n\n        <!-- 创建按钮区域 -->\n        <div class=\"action-buttons\">\n          <el-button type=\"primary\" @click=\"openNewDocumentDialog\">\n            <el-icon><Plus /></el-icon> 新建文档\n          </el-button>\n        </div>\n      </div>\n\n      <!-- 折叠状态的文档图标列表 -->\n      <div class=\"collapsed-sidebar\" v-if=\"isDocListCollapsed\">\n        <el-tooltip content=\"新建文档\" placement=\"right\">\n          <div class=\"icon-btn create-btn\" @click=\"openNewDocumentDialog\">\n            <el-icon><Plus /></el-icon>\n          </div>\n        </el-tooltip>\n        \n        <div class=\"recent-docs\">\n          <el-tooltip \n            v-for=\"doc in filteredDocuments.slice(0, 5)\" \n            :key=\"doc.id\" \n            :content=\"doc.title\"\n            placement=\"right\"\n          >\n            <div \n              class=\"icon-btn doc-btn\"\n              :class=\"{ 'active': currentDoc?.id === doc.id }\"\n              @click=\"selectDocument(doc.id)\"\n            >\n              <el-icon><Document /></el-icon>\n            </div>\n          </el-tooltip>\n        </div>\n      </div>\n    </div>\n\n    <!-- 主内容区域 -->\n    <div class=\"main-content\">\n      <!-- 文档内容显示区域 -->\n      <div class=\"document-content\">\n        <el-skeleton v-if=\"loading\" :rows=\"6\" animated style=\"margin:40px\" />\n        <template v-else-if=\"currentDoc\">\n          <!-- 文档标题和操作栏 -->\n          <div class=\"document-header\">\n            <div class=\"header-left-actions\">\n              <el-tooltip content=\"返回列表\" placement=\"bottom\">\n                <el-button @click=\"goBack\" circle>\n                  <el-icon><ArrowLeftBold /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n            <div class=\"doc-info-area\">\n              <div class=\"doc-title-label\">标题：</div>\n              <div class=\"doc-title\">\n                <el-input \n                  v-model=\"currentDoc.title\"\n                  placeholder=\"文档标题\"\n                  size=\"large\"\n                  @change=\"onTitleChange\"\n                />\n              </div>\n              <div class=\"doc-type-label\">类型：</div>\n              <div class=\"doc-type-selector\">\n                <el-input \n                  v-model=\"currentDoc.type\" \n                  placeholder=\"输入文档类型\"\n                  size=\"default\"\n                  @change=\"onTypeChange\"\n                />\n              </div>\n            </div>\n            <div class=\"doc-actions\">\n              <el-tooltip content=\"保存文档\" placement=\"bottom\">\n                <el-button \n                  circle\n                  :disabled=\"!documentChanged\" \n                  :loading=\"saveLoading\"\n                  @click=\"saveDocument\"\n                >\n                  <el-icon><CircleCheck /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享文档\" placement=\"bottom\">\n                <el-button circle @click=\"shareDocument\"><el-icon><ShareIcon /></el-icon></el-button>\n              </el-tooltip>\n              <el-tooltip content=\"导出文档\" placement=\"bottom\">\n                <el-button circle @click=\"exportDocument\"><el-icon><Download /></el-icon></el-button>\n              </el-tooltip>\n              <el-tooltip content=\"更多操作\" placement=\"bottom\">\n                <el-dropdown trigger=\"click\">\n                  <el-button circle><el-icon><More /></el-icon></el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                      <el-dropdown-item @click=\"deleteDocument\" class=\"text-red-500\">删除文档</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </el-tooltip>\n            </div>\n          </div>\n          \n          <!-- 编辑器区域 -->\n          <div class=\"editor-area\">\n            <QuillEditor\n              v-model:content=\"currentDoc.content\"\n              :options=\"editorOptions\"\n              contentType=\"html\"\n              theme=\"snow\"\n              class=\"quill-editor\"\n              @textChange=\"onContentChange\"\n              @ready=\"onEditorReady\"\n              placeholder=\" \"\n            />\n          </div>\n        </template>\n        \n        <!-- 无文档时的提示 -->\n        <div v-else class=\"empty-doc-state\">\n          <el-empty description=\"请选择或创建一个文档\">\n            <el-button type=\"primary\" @click=\"openNewDocumentDialog\">新建文档</el-button>\n          </el-empty>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 智能助手面板 -->\n    <div class=\"assistant-panel\" :class=\"{ 'collapsed': isAssistantCollapsed }\">\n      <div class=\"assistant-header\">\n        <h5 v-if=\"!isAssistantCollapsed\">AI功能</h5>\n        <div class=\"toggle-btn\" @click=\"toggleAssistant\">\n          <el-icon><ArrowRight v-if=\"!isAssistantCollapsed\" /><ArrowLeft v-else /></el-icon>\n        </div>\n      </div>\n      \n      <div class=\"assistant-body\" v-show=\"!isAssistantCollapsed\">\n        <div class=\"ai-features-beauty\">\n          <div class=\"ai-feature-card\">\n            <el-tooltip content=\"请先在编辑器中选择文本后再使用此功能\" :disabled=\"hasValidSelection\" placement=\"top\" effect=\"dark\">\n              <el-button type=\"primary\" class=\"ai-feature-btn\" @click=\"expandContent\" :loading=\"expandLoading\" :disabled=\"!hasValidSelection\">\n                <el-icon class=\"ai-icon\"><Edit /></el-icon>\n                内容扩写\n              </el-button>\n            </el-tooltip>\n            <div class=\"ai-feature-desc\">将选中文本智能扩展为更丰富内容，适合写作、报告等场景。</div>\n          </div>\n          <div class=\"ai-feature-card\">\n            <el-tooltip content=\"请先在编辑器中选择文本后再使用此功能\" :disabled=\"hasValidSelection\" placement=\"top\" effect=\"dark\">\n              <el-button type=\"success\" class=\"ai-feature-btn\" @click=\"polishText\" :loading=\"polishLoading\" :disabled=\"!hasValidSelection\">\n                <el-icon class=\"ai-icon\"><StarFilled /></el-icon>\n                文本润色\n              </el-button>\n            </el-tooltip>\n            <div class=\"ai-feature-desc\">让表达更专业、流畅，提升文档整体质量。</div>\n          </div>\n          <div class=\"ai-feature-card\">\n            <el-tooltip content=\"请先在编辑器中选择文本后再使用此功能\" :disabled=\"hasValidSelection\" placement=\"top\" effect=\"dark\">\n              <el-button type=\"warning\" class=\"ai-feature-btn\" @click=\"grammarCheckText\" :loading=\"grammarCheckLoading\" :disabled=\"!hasValidSelection\">\n                <el-icon class=\"ai-icon\"><Edit /></el-icon>\n                智能纠错\n              </el-button>\n            </el-tooltip>\n            <div class=\"ai-feature-desc\">AI自动检查语法、错别字、表达不通顺并给出优化建议。</div>\n          </div>\n          <div class=\"ai-feature-card\">\n            <el-button type=\"info\" class=\"ai-feature-btn\" @click=\"openTranslateDialog\">\n              <el-icon class=\"ai-icon\"><ChatDotRound /></el-icon>\n              多语言翻译\n            </el-button>\n            <div class=\"ai-feature-desc\">支持多语种精准互译，助力国际化办公。</div>\n          </div>\n          <div class=\"ai-feature-card\">\n            <el-button type=\"success\" class=\"ai-feature-btn\" @click=\"openQaDialog\">\n              <el-icon class=\"ai-icon\"><QuestionFilled /></el-icon>\n              智能问答\n            </el-button>\n            <div class=\"ai-feature-desc\">基于文档内容，AI即时解答你的问题。</div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 折叠状态的AI功能图标列表 -->\n      <div class=\"collapsed-assistant\" v-if=\"isAssistantCollapsed\">\n        <el-tooltip :content=\"hasValidSelection ? '内容扩写' : '请先在编辑器中选择文本'\" placement=\"left\">\n          <div class=\"icon-btn\" @click=\"expandContent\" :class=\"{ 'disabled': !hasValidSelection || expandLoading }\">\n            <el-icon v-if=\"expandLoading\" class=\"is-loading\"><Loading /></el-icon>\n            <el-icon v-else><Edit /></el-icon>\n          </div>\n        </el-tooltip>\n        <el-tooltip :content=\"hasValidSelection ? '文本润色' : '请先在编辑器中选择文本'\" placement=\"left\">\n          <div class=\"icon-btn\" @click=\"polishText\" :class=\"{ 'disabled': !hasValidSelection || polishLoading }\">\n            <el-icon v-if=\"polishLoading\" class=\"is-loading\"><Loading /></el-icon>\n            <el-icon v-else><StarFilled /></el-icon>\n          </div>\n        </el-tooltip>\n        <el-tooltip :content=\"hasValidSelection ? '智能纠错' : '请先在编辑器中选择文本'\" placement=\"left\">\n          <div class=\"icon-btn\" @click=\"grammarCheckText\" :class=\"{ 'disabled': !hasValidSelection || grammarCheckLoading }\">\n            <el-icon v-if=\"grammarCheckLoading\" class=\"is-loading\"><Loading /></el-icon>\n            <el-icon v-else><Edit /></el-icon>\n          </div>\n        </el-tooltip>\n        <el-tooltip content=\"多语言翻译\" placement=\"left\">\n          <div class=\"icon-btn\" @click=\"openTranslateDialog\">\n            <el-icon><ChatDotRound /></el-icon>\n          </div>\n        </el-tooltip>\n        <el-tooltip content=\"智能问答\" placement=\"left\">\n          <div class=\"icon-btn\" @click=\"openQaDialog\">\n            <el-icon><QuestionFilled /></el-icon>\n          </div>\n        </el-tooltip>\n      </div>\n    </div>\n\n    <!-- 创建新文档对话框 -->\n    <el-dialog\n      v-model=\"newDocumentDialogVisible\"\n      title=\"新建智能文档\"\n      width=\"35%\"\n    >\n      <el-form \n        :model=\"newDocumentForm\" \n        label-width=\"80px\" \n        :rules=\"documentFormRules\"\n        ref=\"documentFormRef\"\n      >\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"newDocumentForm.title\" placeholder=\"请输入文档标题\" />\n        </el-form-item>\n        <el-form-item label=\"文档类型\">\n          <el-input v-model=\"newDocumentForm.type\" placeholder=\"请输入文档类型\" />\n          <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"newDocumentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"createNewDocument\" :loading=\"createLoading\">\n            创建\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分享文档对话框 -->\n    <el-dialog\n      v-model=\"shareDialogVisible\"\n      title=\"分享文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"currentDoc\">\n        <p>您即将分享文档: <strong>{{ currentDoc.title }}</strong></p>\n        <el-form label-width=\"120px\" class=\"mt-4\">\n          <el-form-item label=\"分享方式\">\n            <el-radio-group v-model=\"shareMode\" @change=\"handleShareModeChange\">\n              <el-radio :label=\"'permission'\">授予权限</el-radio>\n              <el-radio :label=\"'chat'\">发送到聊天</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"选择用户\">\n            <el-select\n              v-model.number=\"selectedUsers\"\n              multiple\n              placeholder=\"请选择用户\"\n              style=\"width: 100%\"\n              @change=\"handleUserSelectionChange\"\n            >\n              <el-option\n                v-for=\"user in availableUsers\"\n                :key=\"user.id\"\n                :label=\"user.username\"\n                :value=\"user.id\"\n              />\n            </el-select>\n          </el-form-item>\n          <!-- 仅在选择了用户且分享模式为\"授予权限\"时显示 -->\n          <template v-if=\"shareMode === 'permission' && selectedUsers && selectedUsers.length > 0\">\n            <el-form-item label=\"设置权限\" class=\"user-permissions-form\">\n              <div class=\"user-permissions-list\">\n                <div v-for=\"(userPerm, index) in selectedUsersWithPermissions\" :key=\"index\" class=\"user-permission-item\">\n                  <span class=\"user-name\">{{ getUsernameById(userPerm.user_id) }}</span>\n                  <el-select v-model=\"userPerm.permission\" placeholder=\"选择权限\" style=\"width: 120px\">\n                    <el-option label=\"只读\" value=\"read\" />\n                    <el-option label=\"编辑\" value=\"edit\" />\n                  </el-select>\n                </div>\n                <div v-if=\"selectedUsersWithPermissions.length === 0 && selectedUsers.length > 0\" style=\"color: #f56c6c\">\n                  权限设置数据未同步，请重新选择用户\n                </div>\n              </div>\n            </el-form-item>\n          </template>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"shareDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmShare\" :loading=\"shareLoading\">\n            分享\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"删除文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"currentDoc\">\n        <p>您确定要删除文档 <strong>{{ currentDoc.title }}</strong> 吗?</p>\n        <p class=\"warning-text\">此操作不可撤销!</p>\n        </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">\n            删除\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 比较弹窗 -->\n    <el-dialog\n      v-model=\"compareDialogVisible\"\n      :title=\"compareDialogData.title\"\n      width=\"90%\"\n      class=\"compare-dialog large-dialog\"\n      :fullscreen=\"false\"\n      :append-to-body=\"true\"\n      :destroy-on-close=\"false\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"true\"\n    >\n      <div v-if=\"compareDialogData\" class=\"dialog-container\">\n        <div class=\"compare-content\">\n          <div class=\"original-content\">\n            <h6>原始内容</h6>\n            <QuillEditor\n              v-model:content=\"compareDialogData.original\"\n              contentType=\"text\"\n              theme=\"snow\"\n              :readOnly=\"true\"\n              class=\"quill-editor-in-dialog\"\n              style=\"background:#f9f9f9;\"\n            />\n          </div>\n          <div class=\"modified-content\">\n            <h6>优化建议内容（可编辑）</h6>\n            <QuillEditor\n              v-model:content=\"compareDialogData.modifiedContent\"\n              contentType=\"text\"\n              theme=\"snow\"\n              class=\"quill-editor-in-dialog\"\n            />\n          </div>\n        </div>\n        <div v-if=\"compareDialogData.suggestions\" class=\"ai-suggestions\" style=\"margin-top:16px;\">\n          <el-alert\n            title=\"AI纠错建议\"\n            type=\"info\"\n            :closable=\"false\"\n            show-icon\n            style=\"font-size:15px;line-height:1.8;\"\n          >\n            <div v-html=\"compareDialogData.suggestions\"></div>\n          </el-alert>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"closeCompareDialog\">取消</el-button>\n          <el-button type=\"primary\" @click=\"applyCompareChanges\">应用更改</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 多语言翻译弹窗（对比模式） -->\n    <el-dialog v-model=\"translateDialogVisible\" title=\"多语言智能翻译\" width=\"900px\" destroy-on-close>\n      <div style=\"margin-bottom:12px; display:flex; align-items:center; gap:12px;\">\n        <el-select v-model=\"targetLang\" placeholder=\"选择目标语言\" style=\"width:180px;\">\n          <el-option label=\"英文\" value=\"en\" />\n          <el-option label=\"中文\" value=\"zh\" />\n          <el-option label=\"日文\" value=\"ja\" />\n          <el-option label=\"法文\" value=\"fr\" />\n          <el-option label=\"德文\" value=\"de\" />\n          <el-option label=\"西班牙文\" value=\"es\" />\n          <el-option label=\"俄文\" value=\"ru\" />\n          <el-option label=\"韩文\" value=\"ko\" />\n        </el-select>\n        <el-button type=\"primary\" :loading=\"translateLoading\" @click=\"doTranslate\">翻译</el-button>\n      </div>\n      <div class=\"compare-content\">\n        <div class=\"original-content\">\n          <h6>原文内容</h6>\n          <QuillEditor\n            v-model:content=\"translateInput\"\n            contentType=\"text\"\n            theme=\"snow\"\n            :readOnly=\"true\"\n            class=\"quill-editor-in-dialog\"\n            style=\"background:#f9f9f9;\"\n          />\n        </div>\n        <div class=\"modified-content\">\n          <h6>翻译内容（可编辑）</h6>\n          <QuillEditor\n            v-model:content=\"translateModifiedContent\"\n            contentType=\"text\"\n            theme=\"snow\"\n            class=\"quill-editor-in-dialog\"\n          />\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"translateDialogVisible = false\">取消</el-button>\n          <el-button v-if=\"translateModifiedContent\" type=\"success\" @click=\"replaceSelectionWithTranslation\">应用翻译</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 智能问答弹窗 -->\n    <el-dialog v-model=\"qaDialogVisible\" title=\"文档智能问答\" width=\"500px\">\n      <el-input\n        v-model=\"qaQuestion\"\n        placeholder=\"请输入您的问题\"\n        style=\"margin-bottom:12px;\"\n        @keyup.enter=\"doQa\"\n      />\n      <el-button type=\"primary\" :loading=\"qaLoading\" @click=\"doQa\">提问</el-button>\n      <div v-if=\"qaAnswer\" style=\"margin-top:16px;\">\n        <el-alert title=\"AI答案\" type=\"info\" :closable=\"false\" show-icon>\n          <div v-html=\"qaAnswerHtml\"></div>\n        </el-alert>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, watch, onMounted, nextTick } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport _ from 'lodash'\nimport { \n  getDocuments, \n  getDocumentDetail, \n  createDocument, \n  updateDocument,\n  deleteDocument as apiDeleteDocument,\n  shareDocument as apiShareDocument,\n  getUsers as apiGetUsers,\n  expandContent as apiExpandContent,\n  polishText as apiPolishText,\n  grammarCheck,\n  translateText,\n  docQa\n} from '@/api/smartdoc'\nimport { Document, Plus, CircleCheck, Download, More, Search, ArrowLeft, ArrowRight, Share as ShareIcon, Edit, StarFilled, ChatDotRound, QuestionFilled, ArrowLeftBold, Loading } from '@element-plus/icons-vue'\nimport { QuillEditor } from '@vueup/vue-quill'\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\nimport { marked } from 'marked'\nimport { markedHighlight } from 'marked-highlight'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/github.css' // 导入代码高亮样式表\n\n// 配置marked\nmarked.use(\n  markedHighlight({\n    langPrefix: 'hljs language-',\n    highlight(code, lang) {\n      const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n      return hljs.highlight(code, { language }).value;\n    }\n  })\n);\n\n// 设置安全选项\nmarked.use({\n  gfm: true,\n  breaks: true,\n  pedantic: false,\n  sanitize: false, // marked v4.3.0不再支持sanitize选项\n  smartLists: true,\n  smartypants: false\n});\n\nexport default {\n  name: 'SmartDocDetail',\n  components: {\n    Document, Plus, CircleCheck, Download, More, \n    Search, ArrowLeft, ArrowRight, ShareIcon, QuillEditor, Edit, StarFilled, ChatDotRound, QuestionFilled, ArrowLeftBold, Loading\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    \n    const goBack = () => {\n      router.push('/smartdoc');\n    };\n    \n    // 状态数据\n    const documents = ref([])\n    const currentDoc = ref(null)\n    const documentChanged = ref(false)\n    const isDocListCollapsed = ref(false)\n    const isAssistantCollapsed = ref(false)\n    const searchQuery = ref('')\n    const docTypeFilter = ref('')\n    const sortOption = ref('update')\n    const newDocumentDialogVisible = ref(false)\n    const shareDialogVisible = ref(false)\n    const deleteDialogVisible = ref(false)\n    // 确保始终初始化为数组类型\n    const selectedUsers = ref([])\n    const selectedUsersWithPermissions = ref([])\n    const availableUsers = ref([])\n    const shareMode = ref('permission') // 分享方式：'permission' 或 'chat'\n    const documentsLoading = ref(true) // 文档加载状态\n    \n    // 加载状态\n    const saveLoading = ref(false)\n    const createLoading = ref(false)\n    const shareLoading = ref(false)\n    const deleteLoading = ref(false)\n    const expandLoading = ref(false)\n    const polishLoading = ref(false)\n    const grammarCheckLoading = ref(false)\n    \n    // 表单数据\n    const newDocumentForm = ref({\n        title: '',\n      type: ''\n    })\n    \n    // 表单验证规则\n    const documentFormRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '标题长度须在2到50个字符之间', trigger: 'blur' }\n      ]\n    }\n    \n    const documentFormRef = ref(null)\n      \n    const uploadImage = async (file) => {\n      try {\n        // 使用FileReader将文件转换为base64\n        const reader = new FileReader()\n        return new Promise((resolve, reject) => {\n          reader.onload = (e) => {\n            const base64Data = e.target.result\n            // 直接返回base64数据作为图片URL\n            resolve({ url: base64Data })\n          }\n          reader.onerror = () => {\n            reject(new Error('文件读取失败'))\n          }\n          reader.readAsDataURL(file)\n        })\n      } catch (error) {\n        console.error('图片处理失败:', error)\n        throw error\n      }\n    }\n    \n      // 编辑器配置\n    const editorOptions = {\n      placeholder: ' ',\n        modules: {\n        toolbar: {\n          container: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n          [{ 'header': 1 }, { 'header': 2 }],\n          [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n          [{ 'script': 'sub' }, { 'script': 'super' }],\n          [{ 'indent': '-1' }, { 'indent': '+1' }],\n          [{ 'direction': 'rtl' }],\n          [{ 'size': ['small', false, 'large', 'huge'] }],\n          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n          [{ 'color': [] }, { 'background': [] }],\n          [{ 'font': [] }],\n          [{ 'align': [] }],\n            ['clean'],\n          ['link', 'image']\n          ],\n          handlers: {\n            image: function () {\n              const input = document.createElement('input')\n              input.setAttribute('type', 'file')\n              input.setAttribute('accept', 'image/*')\n              input.click()\n              input.onchange = async () => {\n                const file = input.files[0]\n                if (!file) return\n                \n                // 检查文件大小和类型\n                if (file.size > 5 * 1024 * 1024) { // 5MB限制\n                  ElMessage.error('图片不能超过5MB')\n                  return\n                }\n                \n                // 支持的图片类型\n                const supportedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp']\n                if (!supportedTypes.includes(file.type)) {\n                  ElMessage.error('只支持JPG、PNG、GIF和WEBP格式图片')\n                  return\n                }\n                \n                ElMessage.info('正在处理图片...')\n                \n                try {\n                  // 直接传递文件对象而不是FormData\n                  const res = await uploadImage(file)\n                  const url = res.url\n                  if (!url) throw new Error('无效的图片URL')\n                  \n                  // 获取编辑器实例并插入图片\n                  const quill = quillInstance.value\n                  const range = quill.getSelection(true)\n                  quill.insertEmbed(range.index, 'image', url)\n                  \n                  // 标记文档已修改\n                  documentChanged.value = true\n                  \n                  ElMessage.success('图片插入成功')\n                } catch (e) {\n                  console.error('图片处理失败:', e)\n                  ElMessage.error('图片处理失败: ' + e.message)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    // 计算属性\n    const filteredDocuments = computed(() => {\n      let result = [...documents.value]\n      \n      // 搜索筛选\n      if (searchQuery.value) {\n        const query = searchQuery.value.toLowerCase()\n        result = result.filter(doc => \n          doc.title.toLowerCase().includes(query) || \n          doc.type.toLowerCase().includes(query)\n        )\n      }\n      \n      // 类型筛选\n      if (docTypeFilter.value) {\n        const typeFilter = docTypeFilter.value.toLowerCase()\n        result = result.filter(doc => \n          doc.type.toLowerCase().includes(typeFilter)\n        )\n      }\n      \n      // 排序\n      if (sortOption.value === 'update') {\n        result.sort((a, b) => new Date(b.update_time) - new Date(a.update_time))\n      } else if (sortOption.value === 'create') {\n        result.sort((a, b) => new Date(b.create_time) - new Date(a.create_time))\n      } else if (sortOption.value === 'name-asc') {\n        result.sort((a, b) => a.title.localeCompare(b.title))\n      }\n      \n      return result\n    })\n    \n    // 添加未定义的变量\n    const filteredCount = computed(() => {\n      return filteredDocuments.value.length;\n    });\n    \n    // 方法\n    const fetchDocuments = async (page = 1, allDocs = []) => {\n      if (page === 1) {\n        documentsLoading.value = true\n      }\n      \n      try {\n        console.log(`开始获取文档列表 第${page}页...`)\n        const params = {\n          page: page,\n          limit: 100,  // 尝试请求更多，尽管后端可能只会返回10条（默认PAGE_SIZE）\n          _t: new Date().getTime() // 添加时间戳，确保不使用缓存\n        }\n        \n        const response = await getDocuments(params)\n        console.log(`文档列表响应(第${page}页):`, response)\n        \n        // 处理获取到的数据\n        let docsList = [...allDocs]\n        let totalCount = 0\n        let currentPageDocs = []\n        let hasMore = false\n        \n        // 处理不同格式的响应\n        if (response.data && Array.isArray(response.data)) {\n          currentPageDocs = response.data\n          totalCount = response.count || response.total || 0\n          hasMore = docsList.length + currentPageDocs.length < totalCount\n        } else if (response.results && Array.isArray(response.results)) {\n          currentPageDocs = response.results\n          totalCount = response.count || 0\n          hasMore = !!response.next\n        } else if (response.data && response.data.results && Array.isArray(response.data.results)) {\n          currentPageDocs = response.data.results\n          totalCount = response.data.count || 0\n          hasMore = !!response.data.next\n        }\n        \n        // 确保不添加重复的文档\n        const existingIds = new Set(docsList.map(doc => doc.id))\n        const newDocs = currentPageDocs.filter(doc => !existingIds.has(doc.id))\n        \n        if (newDocs.length > 0) {\n          docsList = [...docsList, ...newDocs]\n          console.log(`第${page}页添加了${newDocs.length}个新文档，当前共有${docsList.length}个文档`)\n        } else {\n          console.log(`第${page}页没有新文档，可能是达到了末尾或出现了重复数据`)\n        }\n        \n        // 更新文档列表\n        documents.value = docsList\n        \n        // 如果没有更多数据或已经加载了足够多的文档，则停止递归\n        if (!hasMore || currentPageDocs.length === 0 || page >= 50) {\n          console.log(`文档加载完成，共${docsList.length}个文档${hasMore ? '（但还有更多）' : ''}`)\n          documentsLoading.value = false\n          return docsList\n        }\n        \n        // 如果文档数量太少（比如小于50），并且有更多数据，继续加载下一页\n        if (docsList.length < 200 && hasMore) {\n          console.log(`已获取 ${docsList.length}/${totalCount || '未知'} 个文档，加载下一页...`)\n          // 延迟100ms避免请求过于频繁\n          await new Promise(resolve => setTimeout(resolve, 100))\n          // 递归加载下一页\n          return fetchDocuments(page + 1, docsList)\n        } else {\n          console.log(`已加载足够的文档(${docsList.length}个)或达到限制，停止加载更多`)\n          documentsLoading.value = false\n          return docsList\n        }\n      } catch (error) {\n        console.error('获取文档列表失败', error)\n        ElMessage.error('获取文档列表失败，已加载部分数据')\n        documentsLoading.value = false\n        documents.value = allDocs // 保留已加载的文档\n        return allDocs\n      }\n    }\n    \n    const loading = ref(false)\n    \n    // 添加一个文档缓存对象\n    const documentCache = ref(new Map());\n    \n    const selectDocument = async (id) => {\n      console.log(`选择文档: ${id}, 当前文档: ${currentDoc.value?.id}`);\n      \n      // 如果点击的是当前文档，不执行任何操作\n      if (currentDoc.value && currentDoc.value.id === id) {\n        console.log('已经选中该文档，不执行任何操作');\n        return;\n      }\n      \n      // 如果当前文档已修改，提示保存\n      if (documentChanged.value && currentDoc.value) {\n        try {\n          await ElMessageBox.confirm(\n            '当前文档已修改但未保存，是否保存更改？',\n            '保存提示',\n            {\n              confirmButtonText: '保存',\n              cancelButtonText: '不保存',\n              type: 'warning',\n              distinguishCancelAndClose: true // 允许区分取消和关闭\n            }\n          )\n          await saveDocument()\n        } catch (error) {\n          // 用户选择不保存或点×，撤销本地更改，恢复原内容\n          if (error === 'cancel' || error === 'close') {\n            if (currentDoc.value && originalDoc.value) {\n              currentDoc.value.title = originalDoc.value.title\n              currentDoc.value.type = originalDoc.value.type\n              currentDoc.value.content = originalDoc.value.content\n              documentChanged.value = false\n            }\n          }\n          // 用户选择不保存，继续切换文档\n        }\n      }\n      \n      // 快速显示缓存中的文档（如果有）\n      if (documentCache.value.has(id)) {\n        console.log(`使用缓存的文档数据: ${id}`);\n        const cachedDoc = documentCache.value.get(id);\n        \n        // 先设置当前文档为缓存数据，提高用户体验\n        currentDoc.value = cachedDoc;\n        originalDoc.value = {\n          title: cachedDoc.title || '',\n          type: cachedDoc.type || '通用',\n          content: cachedDoc.content || ''\n        };\n        documentChanged.value = false;\n      }\n      \n      // 更新路由以反映新选中的文档\n      router.push({ name: 'SmartDocDetail', params: { id }, replace: true })\n    }\n    \n    // 记录初始内容用于对比\n    const originalDoc = ref({ title: '', type: '', content: '' })\n    \n    const fetchDocumentDetail = async (id, retry = 0) => {\n      // 如果是同一个文档，且已加载，不重复加载\n      if (currentDoc.value && currentDoc.value.id === id && !loading.value) {\n        console.log(`文档 ${id} 已加载，不重复获取`);\n        return;\n      }\n      \n      loading.value = true\n      try {\n        console.log(`正在获取文档详情，ID: ${id}`)\n        const response = await getDocumentDetail(id)\n        console.log('文档详情响应:', response)\n        \n        if (response && response.data) {\n          // 确保文档数据完整\n          if (!response.data.content) {\n            console.warn('文档内容为空，设置为默认空字符串')\n            response.data.content = ''\n          }\n          \n          // 保存文档数据\n          currentDoc.value = response.data\n          \n          // 更新缓存\n          documentCache.value.set(id, { ...response.data });\n          \n          // 如果缓存过大，清理旧缓存\n          if (documentCache.value.size > 20) {\n            // 转换为数组，保留最近的10个\n            const entries = Array.from(documentCache.value.entries());\n            const recentEntries = entries.slice(-10);\n            documentCache.value = new Map(recentEntries);\n          }\n          \n          // 记录初始内容\n          originalDoc.value = {\n            title: response.data.title || '',\n            type: response.data.type || '通用',\n            content: response.data.content || ''\n          }\n          \n          documentChanged.value = false\n          loading.value = false\n          \n          // 检查数据完整性\n          if (!currentDoc.value.content) {\n            console.warn('文档内容可能缺失，尝试重新获取')\n            // 设置一个定时器，在编辑器加载完成后检查内容\n            setTimeout(() => {\n              if (quillInstance.value && (!currentDoc.value.content || currentDoc.value.content.trim() === '')) {\n                ElMessage.warning('文档内容可能不完整，请尝试刷新页面')\n              }\n            }, 2000)\n          }\n        } else {\n          throw new Error('文档不存在或数据无效')\n        }\n      } catch (error) {\n        console.error('获取文档详情失败', error)\n        \n        if (retry < 3) {\n          console.log(`获取文档详情失败，${retry + 1}秒后重试...`)\n          setTimeout(() => fetchDocumentDetail(id, retry + 1), 1000 * (retry + 1))\n        } else {\n          loading.value = false\n          console.error('多次重试后获取文档详情仍然失败', error)\n          const errorMsg = error.response && error.response.status === 404 \n            ? '文档不存在' \n            : error.response && error.response.data && error.response.data.detail \n              ? error.response.data.detail \n              : '获取文档详情失败'\n          \n          ElMessage.error(errorMsg)\n          // 如果是404，导航回文档列表页\n          if (error.response && error.response.status === 404) {\n            router.push('/smartdoc')\n          }\n        }\n      }\n    }\n    \n    const saveDocument = async () => {\n      if (!currentDoc.value || !documentChanged.value) return\n      \n      saveLoading.value = true\n      try {\n        await updateDocument(currentDoc.value.id, {\n          title: currentDoc.value.title,\n          type: currentDoc.value.type,\n          content: currentDoc.value.content\n        })\n        \n        // 保存成功后，更新原始文档记录\n        originalDoc.value = {\n          title: currentDoc.value.title,\n          type: currentDoc.value.type,\n          content: currentDoc.value.content\n        }\n        documentChanged.value = false\n        ElMessage.success('文档保存成功')\n      } catch (error) {\n        console.error('保存文档失败', error)\n        ElMessage.error('保存文档失败')\n      } finally {\n        saveLoading.value = false\n      }\n    }\n    \n    const toggleDocList = () => {\n      isDocListCollapsed.value = !isDocListCollapsed.value\n    }\n    \n    const toggleAssistant = () => {\n      isAssistantCollapsed.value = !isAssistantCollapsed.value\n    }\n    \n    const onEditorChange = () => {\n      documentChanged.value = true\n    }\n    \n    const openNewDocumentDialog = () => {\n      newDocumentForm.value = { title: '', type: '' }\n      newDocumentDialogVisible.value = true\n    }\n    \n    const createNewDocument = async () => {\n      if (!documentFormRef.value) return\n      \n      await documentFormRef.value.validate(async (valid) => {\n        if (valid) {\n          createLoading.value = true\n          try {\n            const response = await createDocument({\n              title: newDocumentForm.value.title,\n              type: newDocumentForm.value.type || '通用',\n              content: ''\n            })\n            \n            ElMessage.success('文档创建成功')\n            newDocumentDialogVisible.value = false\n            \n            // 刷新文档列表并打开新文档\n            await fetchDocuments()\n            router.push({ name: 'SmartDocDetail', params: { id: response.data.id } })\n      } catch (error) {\n            console.error('创建文档失败', error)\n            ElMessage.error('创建文档失败')\n          } finally {\n            createLoading.value = false\n          }\n        }\n      })\n    }\n    \n    // 获取可分享的用户列表\n    const fetchUsers = async () => {\n      try {\n        console.log('开始获取用户列表...');\n        const response = await apiGetUsers();\n        console.log('获取用户列表成功:', response);\n        \n        if (response && response.data && Array.isArray(response.data)) {\n          availableUsers.value = response.data;\n          console.log(`成功获取到${availableUsers.value.length}个可分享用户`);\n          \n          if (availableUsers.value.length === 0) {\n            ElMessage.warning('没有找到可分享的用户');\n          }\n        } else {\n          console.error('获取用户列表返回格式错误:', response);\n          ElMessage.error('获取用户列表返回格式错误');\n          availableUsers.value = [];\n        }\n      } catch (error) {\n        console.error('获取用户列表失败', error);\n        \n        if (error.response) {\n          console.error('错误响应:', error.response.data);\n        }\n        \n        ElMessage.error('获取用户列表失败');\n        availableUsers.value = [];\n      }\n    }\n\n    // 通过ID获取用户名\n    const getUsernameById = (userId) => {\n      const user = availableUsers.value.find(u => u.id === userId)\n      return user ? user.username : '未知用户'\n    }\n\n    // 处理用户选择变化\n    const handleUserSelectionChange = (val) => {\n      console.log('选择变化 - 原始值:', val);\n      console.log('选择变化 - selectedUsers:', selectedUsers.value);\n      console.log('选择变化 - 类型:', typeof selectedUsers.value, Array.isArray(selectedUsers.value));\n      \n      // 确保selectedUsers是数组\n      if (!Array.isArray(selectedUsers.value)) {\n        console.warn('selectedUsers不是数组，强制转换为数组');\n        selectedUsers.value = Array.isArray(val) ? val : [];\n      }\n      \n      // 更新权限控制数组\n      selectedUsersWithPermissions.value = selectedUsers.value.map(userId => {\n        console.log('处理用户ID:', userId, '类型:', typeof userId);\n        return {\n          user_id: userId,\n          permission: 'read' // 默认为只读权限\n        };\n      });\n      \n      console.log('用户选择变化，已选择用户:', selectedUsers.value);\n      console.log('用户权限数组:', selectedUsersWithPermissions.value);\n    }\n\n    // 处理分享模式变化\n    const handleShareModeChange = () => {\n      if (shareMode.value === 'chat') {\n        // 聊天模式暂不实现\n      }\n    }\n\n    const shareDocument = async () => {\n      if (!currentDoc.value) return\n      \n      // 设置加载状态\n      shareLoading.value = true\n      \n      try {\n        // 重置状态为空数组，确保类型正确\n        selectedUsers.value = []\n        selectedUsersWithPermissions.value = []\n        shareMode.value = 'permission'\n        \n        // 获取可用用户列表\n        await fetchUsers()\n        \n        // 确保用户列表已正确加载\n        console.log('分享对话框 - 可用用户列表:', availableUsers.value);\n        \n        // 获取成功后再显示对话框\n        shareDialogVisible.value = true\n        \n        // 确保DOM更新后再打印调试信息\n        nextTick(() => {\n          console.log('分享对话框已打开 - 选择状态:', {\n            selectedUsers: selectedUsers.value,\n            shareMode: shareMode.value\n          });\n        });\n      } catch(error) {\n        console.error('获取用户列表失败', error);\n        if (error.response) {\n          console.error('错误响应详情:', error.response.data);\n        }\n        ElMessage.error('获取用户列表失败')\n      } finally {\n        shareLoading.value = false\n      }\n    }\n\n    const confirmShare = async () => {\n      if (!currentDoc.value) {\n        ElMessage.warning('当前没有选择的文档')\n        return\n      }\n      \n      if (selectedUsers.value.length === 0) {\n        ElMessage.warning('请选择至少一个用户')\n        return\n      }\n      \n      shareLoading.value = true\n      try {\n        // 根据分享模式发送不同的请求\n        if (shareMode.value === 'permission') {\n          await apiShareDocument(currentDoc.value.id, selectedUsersWithPermissions.value)\n          ElMessage.success('文档授权成功')\n        } else if (shareMode.value === 'chat') {\n          // 聊天分享功能待实现\n          ElMessage.info('发送到聊天功能尚未实现')\n        }\n        \n        shareDialogVisible.value = false\n      } catch (error) {\n        console.error('分享文档失败', error)\n        ElMessage.error('分享文档失败')\n      } finally {\n        shareLoading.value = false\n      }\n    }\n    \n    const deleteDocument = () => {\n      if (!currentDoc.value) return\n      \n      deleteDialogVisible.value = true\n    }\n    \n    const confirmDelete = async () => {\n      if (!currentDoc.value) return\n      \n      deleteLoading.value = true\n      try {\n        // 记录将要删除的文档ID，便于调试\n        const deletedDocId = currentDoc.value.id\n        \n        // 执行删除API调用\n        await apiDeleteDocument(deletedDocId)\n        ElMessage.success('文档删除成功')\n        deleteDialogVisible.value = false\n        \n        console.log(`文档已删除，ID: ${deletedDocId}，准备返回列表页面并刷新`)\n        \n        // 清除可能的缓存数据\n        if (window.localStorage) {\n          try {\n            // 移除可能存在的相关缓存\n            localStorage.removeItem(`doc_cache_${deletedDocId}`);\n            // 移除文档列表缓存，确保再次加载时获取最新数据\n            localStorage.removeItem(`doc_list_cache`);\n          } catch (e) {\n            console.error('清除本地缓存失败:', e);\n          }\n        }\n        \n        // 清除当前文档状态，避免可能的内存泄漏\n        currentDoc.value = null;\n        \n        // 使用window.location.href而不是router.replace，强制整个页面刷新\n        // 添加时间戳参数，确保不走缓存\n        window.location.href = '/smartdoc?_refresh=' + new Date().getTime();\n      } catch (error) {\n        console.error('删除文档失败', error)\n        ElMessage.error('删除文档失败')\n      } finally {\n        deleteLoading.value = false\n      }\n    }\n    \n    const exportDocument = () => {\n      ElMessageBox({\n        title: '导出文档',\n        message: '请选择导出格式',\n        showCancelButton: true,\n        confirmButtonText: '导出为PDF',\n        cancelButtonText: '导出为Word',\n        closeOnClickModal: true,\n        callback: (action) => {\n          if (action === 'confirm') {\n            exportToPdf()\n          } else if (action === 'cancel') {\n            exportToWord()\n          }\n        }\n      })\n    }\n    \n    // 导出为PDF\n    const exportToPdf = () => {\n      if (!currentDoc.value || !currentDoc.value.content) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      const docTitle = currentDoc.value.title || '未命名文档'\n      const filename = `${docTitle}.pdf`\n      // 直接克隆quill编辑器内容\n      const editorDom = document.querySelector('.ql-editor')\n      if (!editorDom) {\n        ElMessage.error('未找到编辑器内容')\n        return\n      }\n      const contentElement = editorDom.cloneNode(true)\n      const options = {\n        margin: [15, 15, 15, 15],\n        filename: filename,\n        image: { type: 'jpeg', quality: 0.98 },\n        html2canvas: { scale: 2, useCORS: true },\n        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n      }\n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在生成PDF...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      import('html2pdf.js').then(html2pdfModule => {\n        const html2pdf = html2pdfModule.default\n        html2pdf().from(contentElement).set(options).save().then(() => {\n          loading.close()\n          ElMessage.success('PDF导出成功')\n        }).catch(error => {\n          console.error('PDF导出失败:', error)\n          loading.close()\n          ElMessage.error('PDF导出失败')\n        })\n      }).catch(error => {\n        console.error('加载html2pdf.js失败:', error)\n        loading.close()\n        ElMessage.error('PDF导出功能加载失败')\n      })\n    }\n    \n    // 导出为Word（保留图片）\n    const exportToWord = async () => {\n      if (!currentDoc.value || !currentDoc.value.content) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      const docTitle = currentDoc.value.title || '未命名文档'\n      const filename = `${docTitle}.doc`\n      \n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在生成Word文档...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 创建一个临时文档容器处理内容\n        const contentContainer = document.createElement('div')\n        contentContainer.innerHTML = currentDoc.value.content\n        // 不再替换图片为占位符，直接保留<img>标签\n        // 创建微软Word兼容的HTML文档\n        const msWordHtml = `\n          <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                xmlns=\"http://www.w3.org/TR/REC-html40\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>${docTitle}</title>\n            <style>\n              body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n              img { max-width: 100%; height: auto; }\n              p { margin: 0; padding: 0; }\n              h1 { font-size: 18pt; }\n              h2 { font-size: 16pt; }\n              h3 { font-size: 14pt; }\n              table { border-collapse: collapse; width: 100%; }\n              td, th { border: 1px solid #000; padding: 5px; }\n            </style>\n          </head>\n          <body>\n            <h1>${docTitle}</h1>\n            ${contentContainer.innerHTML}\n          </body>\n          </html>\n        `\n        // 使用file-saver保存文件\n        const FileSaver = await import('file-saver')\n        const saveAs = FileSaver.saveAs || FileSaver.default\n        const blob = new Blob([msWordHtml], { type: 'application/msword' })\n        saveAs(blob, filename)\n        loading.close()\n        ElMessage.success('Word文档导出成功')\n      } catch (error) {\n        console.error('Word导出失败:', error)\n        loading.close()\n        ElMessage.error(`Word导出失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    const printDocument = () => {\n      ElMessage.info('打印文档功能暂未实现')\n    }\n    \n    const addCollaborator = () => {\n      ElMessage.info('添加协作者功能暂未实现')\n    }\n    \n    const viewHistory = () => {\n      ElMessage.info('查看历史版本功能暂未实现')\n    }\n    \n    // 1. 在setup里加缓存变量\n    const quillSelection = ref(null);\n    const quillSelectedText = ref('');\n\n    // 计算属性：判断是否有有效的选择文本（去除空白字符后不为空）\n    const hasValidSelection = computed(() => {\n      return quillSelectedText.value && quillSelectedText.value.trim().length > 0;\n    });\n\n    // 2. 监听Quill的selection-change事件\n    const onSelectionChange = (range, oldRange, source) => {\n      console.log('=== Quill Selection Change ===');\n      console.log('Range:', range);\n      console.log('Old Range:', oldRange);\n      console.log('Source:', source);\n\n      if (!quillInstance.value) {\n        console.log('Quill实例不存在');\n        return;\n      }\n\n      // 防止在程序化操作时清除选择状态\n      if (source === 'api' && !range) {\n        console.log('API操作导致的空选择，忽略');\n        return;\n      }\n\n      if (range && range.length > 0) {\n        const text = quillInstance.value.getText(range.index, range.length);\n        console.log('选中文本长度:', text.length);\n        console.log('选中文本内容:', JSON.stringify(text));\n        console.log('选中文本(显示):', text);\n\n        // 保存原始文本，不进行trim处理，确保与实际选择一致\n        quillSelectedText.value = text;\n        quillSelection.value = { ...range }; // 深拷贝避免引用问题\n\n        console.log('已保存选择状态');\n      } else {\n        console.log('清除选择状态');\n        quillSelectedText.value = '';\n        quillSelection.value = null;\n      }\n      console.log('=== End Selection Change ===');\n    };\n\n    // 1. 最大长度常量\n    const MAX_AI_TEXT_LENGTH = 2000;\n\n    // 辅助函数：获取当前有效的选择和对应文本\n    const getCurrentSelectionWithText = () => {\n      if (!quillInstance.value) return { selection: null, text: '' };\n\n      let selection = quillInstance.value.getSelection();\n      let text = '';\n\n      // 如果当前有选择，直接使用\n      if (selection && selection.length > 0) {\n        text = quillInstance.value.getText(selection.index, selection.length);\n        console.log('使用当前选择:', { selection, text: JSON.stringify(text) });\n        return { selection, text };\n      }\n\n      // 如果当前没有选择，尝试使用缓存的选择和文本\n      if (quillSelection.value && quillSelection.value.length > 0 && quillSelectedText.value) {\n        // 验证缓存的选择是否仍然有效\n        const textLength = quillInstance.value.getLength();\n        if (quillSelection.value.index + quillSelection.value.length <= textLength) {\n          // 直接使用缓存的文本，而不是重新获取，确保一致性\n          selection = quillSelection.value;\n          text = quillSelectedText.value;\n          console.log('使用缓存的选择和文本:', { selection, text: JSON.stringify(text) });\n          return { selection, text };\n        }\n      }\n\n      console.log('没有有效的选择');\n      return { selection: null, text: '' };\n    };\n\n    // 保持向后兼容的getCurrentSelection函数\n    const getCurrentSelection = () => {\n      const result = getCurrentSelectionWithText();\n      return result.selection;\n    };\n\n    // 辅助函数：安全地设置选择状态\n    const safeSetSelection = (index, length = 0, source = 'api') => {\n      if (!quillInstance.value) return;\n\n      try {\n        const textLength = quillInstance.value.getLength();\n        const safeIndex = Math.max(0, Math.min(index, textLength - 1));\n        const safeLength = Math.max(0, Math.min(length, textLength - safeIndex));\n\n        quillInstance.value.setSelection(safeIndex, safeLength, source);\n      } catch (error) {\n        console.warn('设置选择状态失败:', error);\n      }\n    };\n\n    // 刷新编辑器实例的函数\n    const refreshQuillEditor = () => {\n      if (quillInstance.value) {\n        try {\n          // 清除选择状态\n          quillSelectedText.value = '';\n          quillSelection.value = null;\n\n          // 重新获取焦点\n          nextTick(() => {\n            if (quillInstance.value) {\n              quillInstance.value.focus();\n              console.log('Quill编辑器已刷新');\n            }\n          });\n        } catch (error) {\n          console.warn('刷新Quill编辑器失败:', error);\n        }\n      }\n    };\n\n    // 2. expandContent方法加截断\n    const expandContent = async () => {\n      if (!currentDoc.value || expandLoading.value) return;\n      try {\n        expandLoading.value = true;\n        if (!quillInstance.value) {\n          ElMessage.error('编辑器未就绪，请稍后再试');\n          expandLoading.value = false;\n          return;\n        }\n\n        // 使用新的辅助函数获取选择和文本\n        const { selection, text } = getCurrentSelectionWithText();\n\n        console.log('=== 扩写内容 - 获取选择 ===');\n        console.log('Selection:', selection);\n        console.log('原始文本:', JSON.stringify(text));\n        console.log('缓存的选择文本:', JSON.stringify(quillSelectedText.value));\n\n        let selectedText = text.trim();\n        let range = null;\n        if (selection && selection.length > 0 && selectedText) {\n          range = { ...selection };\n        }\n\n        console.log('处理后的文本:', JSON.stringify(selectedText));\n        console.log('=== End 扩写内容获取 ===');\n\n        if (!selectedText) {\n          ElMessage.warning('请先选择要扩写的文本内容');\n          expandLoading.value = false;\n          return;\n        }\n        if (selectedText.length > MAX_AI_TEXT_LENGTH) {\n          ElMessage.warning(`选中文本过长，已自动截断为前${MAX_AI_TEXT_LENGTH}字`);\n          selectedText = selectedText.slice(0, MAX_AI_TEXT_LENGTH);\n        }\n        ElMessage.info('正在扩写内容，请稍候...');\n        const response = await apiExpandContent(currentDoc.value.id, {\n          selection: selectedText,\n          length: 'medium'\n        });\n        showCompareDialog({\n          title: '内容扩写结果',\n          original: selectedText,\n          modified: response.data.content,\n          onApply: (finalContent) => {\n            if (\n              range &&\n              typeof range.index === 'number' &&\n              typeof range.length === 'number' &&\n              range.index >= 0 &&\n              range.length > 0\n            ) {\n              const quillLen = quillInstance.value.getLength();\n              let insertPos = range.index;\n              if (insertPos > quillLen) insertPos = quillLen - 1;\n\n              // 使用 API 源标记，避免触发不必要的选择变化事件\n              quillInstance.value.deleteText(insertPos, range.length, 'api');\n              quillInstance.value.insertText(insertPos, finalContent, 'api');\n\n              // 设置新的选择位置\n              let selPos = insertPos + finalContent.length;\n              selPos = Math.max(0, Math.min(selPos, quillInstance.value.getLength()));\n\n              // 延迟设置选择，确保文本插入完成\n              nextTick(() => {\n                safeSetSelection(selPos, 0, 'api');\n                documentChanged.value = true;\n                ElMessage.success('内容扩写已应用');\n                // 刷新编辑器实例\n                setTimeout(() => {\n                  refreshQuillEditor();\n                }, 100);\n              });\n            } else {\n              ElMessage.error('选区无效，无法插入内容');\n            }\n          }\n        });\n      } catch (error) {\n        console.error('[内容扩写] 异常:', error);\n        if (error && error.response) {\n          ElMessage.error('内容扩写失败: ' + (error.response.data.detail || error.message));\n        } else {\n          ElMessage.error('内容扩写失败，请稍后再试');\n        }\n      } finally {\n        expandLoading.value = false;\n      }\n    };\n\n    // 3. polishText同理\n    const polishText = async () => {\n      if (!currentDoc.value || polishLoading.value) return;\n      try {\n        polishLoading.value = true;\n        if (!quillInstance.value) {\n          ElMessage.error('编辑器未就绪，请稍后再试');\n          polishLoading.value = false;\n          return;\n        }\n\n        // 使用新的辅助函数获取选择和文本\n        const { selection, text } = getCurrentSelectionWithText();\n\n        let selectedText = text.trim();\n        let range = null;\n        if (selection && selection.length > 0 && selectedText) {\n          range = { ...selection };\n        }\n        if (!selectedText) {\n          ElMessage.warning('请先选择要润色的文本内容');\n          polishLoading.value = false;\n          return;\n        }\n        if (selectedText.length > MAX_AI_TEXT_LENGTH) {\n          ElMessage.warning(`选中文本过长，已自动截断为前${MAX_AI_TEXT_LENGTH}字`);\n          selectedText = selectedText.slice(0, MAX_AI_TEXT_LENGTH);\n        }\n        ElMessage.info('正在润色文本，请稍候...');\n        const response = await apiPolishText(currentDoc.value.id, {\n          selection: selectedText,\n          style: 'professional'\n        });\n        showCompareDialog({\n          title: '文本润色结果',\n          original: selectedText,\n          modified: response.data.content,\n          onApply: (finalContent) => {\n            if (\n              range &&\n              typeof range.index === 'number' &&\n              typeof range.length === 'number' &&\n              range.index >= 0 &&\n              range.length > 0\n            ) {\n              const quillLen = quillInstance.value.getLength();\n              let insertPos = range.index;\n              if (insertPos > quillLen) insertPos = quillLen - 1;\n\n              // 使用 API 源标记，避免触发不必要的选择变化事件\n              quillInstance.value.deleteText(insertPos, range.length, 'api');\n              quillInstance.value.insertText(insertPos, finalContent, 'api');\n\n              // 设置新的选择位置\n              let selPos = insertPos + finalContent.length;\n              selPos = Math.max(0, Math.min(selPos, quillInstance.value.getLength()));\n\n              // 延迟设置选择，确保文本插入完成\n              nextTick(() => {\n                safeSetSelection(selPos, 0, 'api');\n                documentChanged.value = true;\n                ElMessage.success('文本润色已应用');\n                // 刷新编辑器实例\n                setTimeout(() => {\n                  refreshQuillEditor();\n                }, 100);\n              });\n            } else {\n              ElMessage.error('选区无效，无法插入内容');\n            }\n          }\n        });\n      } catch (error) {\n        console.error('[文本润色] 异常:', error);\n        if (error && error.response) {\n          ElMessage.error('文本润色失败: ' + (error.response.data.detail || error.message));\n        } else {\n          ElMessage.error('文本润色失败，请稍后再试');\n        }\n      } finally {\n        polishLoading.value = false;\n      }\n    };\n    \n    // 添加比较弹窗的状态变量和方法\n    const compareDialogVisible = ref(false)\n    const compareDialogData = ref({\n      title: '',\n      original: '',\n      modified: '',\n      modifiedContent: '',\n      onApply: () => {}\n    })\n    \n    // 显示比较弹窗\n    const showCompareDialog = (data) => {\n      compareDialogData.value = {\n        ...data,\n        modifiedContent: data.modified\n      };\n      compareDialogVisible.value = true;\n    }\n    \n    // 应用比较弹窗的更改\n    const applyCompareChanges = () => {\n      compareDialogData.value.onApply(compareDialogData.value.modifiedContent);\n      compareDialogVisible.value = false;\n    }\n    \n    // 关闭比较弹窗\n    const closeCompareDialog = () => {\n      compareDialogVisible.value = false\n    }\n    \n    // 防抖搜索\n    const debouncedSearch = _.debounce(() => {\n      // 搜索逻辑已通过计算属性处理\n    }, 300)\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 同一天显示时间\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天'\n      }\n      \n      // 一周内显示星期\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const diffDays = Math.round((now - date) / (1000 * 60 * 60 * 24))\n      if (diffDays < 7) {\n        return weekDays[date.getDay()]\n      }\n      \n      // 其他情况显示日期\n      return date.toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' })\n    }\n    \n    // 监听路由变化\n    watch(() => route.params.id, (newId, oldId) => {\n      console.log(`路由参数ID变化: ${oldId} -> ${newId}`)\n      if (newId) {\n        // 检查ID是否为有效正整数\n        const idNum = Number(newId)\n        if (isNaN(idNum) || idNum <= 0 || !Number.isInteger(idNum)) {\n          ElMessage.error('无效的文档ID')\n          router.push('/smartdoc')\n          return\n        }\n        \n        // 如果ID发生了变化，重新获取文档\n        if (newId !== oldId) {\n          console.log(`文档ID变化，获取文档详情: ${newId}`)\n          // 检查是否已有缓存\n          if (documentCache.value.has(newId)) {\n            console.log(`使用缓存的文档数据: ${newId}`);\n            currentDoc.value = documentCache.value.get(newId);\n            originalDoc.value = {\n              title: currentDoc.value.title || '',\n              type: currentDoc.value.type || '通用',\n              content: currentDoc.value.content || ''\n            };\n            documentChanged.value = false;\n            \n            // 在后台异步刷新数据\n            setTimeout(() => {\n              fetchDocumentDetail(newId);\n            }, 500);\n          } else {\n            // 没有缓存，直接获取\n            fetchDocumentDetail(newId);\n          }\n        }\n      } else {\n        currentDoc.value = null\n      }\n    }, { immediate: false }) // 设为false避免重复加载\n    \n    // 监听query参数变化，处理强制刷新\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal) {\n        console.log('检测到强制刷新参数:', newVal)\n        const docId = route.params.id\n        if (docId) {\n          console.log('强制刷新文档详情:', docId)\n          fetchDocumentDetail(docId)\n        }\n        // 同时刷新文档列表\n        fetchDocuments()\n      }\n    })\n    \n    // 自动保存功能\n    setInterval(() => {\n      if (documentChanged.value && currentDoc.value && !saveLoading.value) {\n        saveDocument()\n      }\n    }, 60000) // 每分钟自动保存一次\n    \n    // 生命周期钩子\n    onMounted(() => {\n      fetchInitialData();\n      \n      // 监听路由参数变化，当ID变化时刷新页面数据\n      watch(() => route.params.id, (newId, oldId) => {\n        if (newId && newId !== oldId) {\n          refreshDocumentData(newId);\n        }\n      });\n    })\n    \n    // 滚动到当前选中的文档\n    const scrollToActiveDocument = () => {\n      try {\n        if (!currentDoc.value) return;\n        \n        // 查找当前激活的文档元素\n        const activeDoc = document.querySelector('.doc-item.active');\n        if (activeDoc) {\n          // 使用scrollIntoView滚动到该元素\n          activeDoc.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n      } catch (error) {\n        console.error('滚动到活动文档失败:', error);\n      }\n    }\n    \n    // 只有内容实际变化才标记为已修改\n    const onTitleChange = (val) => {\n      documentChanged.value = val !== originalDoc.value.title\n    }\n    const onTypeChange = (val) => {\n      documentChanged.value = val !== originalDoc.value.type\n    }\n    const onContentChange = () => {\n      // 修复：正确比较编辑器内容\n      if (currentDoc.value && originalDoc.value) {\n        // 比较当前内容与原始内容是否真的不同\n        const currentContent = currentDoc.value.content\n        const originalContent = originalDoc.value.content\n        documentChanged.value = currentContent !== originalContent\n      }\n      scrollQuillToBottom();\n    }\n    \n    // 编辑器实例\n    const quillInstance = ref(null);\n\n    // 2. 编辑器ready时赋值\n    const onEditorReady = (quill) => {\n      console.log('编辑器就绪');\n      quillInstance.value = quill;\n      quill.on('selection-change', onSelectionChange);\n\n      // 延迟执行，确保工具栏DOM已完全渲染\n      setTimeout(() => {\n        // 为工具栏按钮添加提示\n        const toolbarTooltips = {\n          '.ql-bold': '加粗 (Ctrl+B)',\n          '.ql-italic': '斜体 (Ctrl+I)',\n          '.ql-underline': '下划线 (Ctrl+U)',\n          '.ql-strike': '删除线',\n          '.ql-blockquote': '块级引用',\n          '.ql-code-block': '代码块',\n          '.ql-header[value=\"1\"]': '标题1',\n          '.ql-header[value=\"2\"]': '标题2',\n          '.ql-list[value=\"ordered\"]': '有序列表',\n          '.ql-list[value=\"bullet\"]': '无序列表',\n          '.ql-script[value=\"sub\"]': '下标',\n          '.ql-script[value=\"super\"]': '上标',\n          '.ql-indent[value=\"-1\"]': '减少缩进',\n          '.ql-indent[value=\"+1\"]': '增加缩进',\n          '.ql-direction': '文本方向',\n          '.ql-clean': '清除格式',\n          '.ql-link': '超链接',\n          '.ql-image': '图片',\n          // Pickers (less specific selectors)\n          '.ql-size': '字号',\n          '.ql-header': '段落格式',\n          '.ql-color': '字体颜色',\n          '.ql-background': '背景颜色',\n          '.ql-font': '字体',\n          '.ql-align': '对齐方式',\n        };\n\n        try {\n          const toolbar = quill.getModule('toolbar').container;\n          if (!toolbar) {\n            console.error(\"未能获取编辑器工具栏容器。\");\n            return;\n          }\n          for (const selector in toolbarTooltips) {\n            const elements = toolbar.querySelectorAll(selector);\n            elements.forEach(el => {\n              // 避免覆盖更具体选择器的提示\n              if (!el.hasAttribute('title')) {\n                 el.title = toolbarTooltips[selector];\n              }\n            });\n          }\n        } catch (error) {\n          console.error(\"为编辑器工具栏添加提示时出错:\", error);\n        }\n      }, 200); // 延迟200毫秒\n    };\n    \n    // 智能滚动函数 - 避免干扰文本选择\n    function scrollQuillToBottom() {\n      if (quillInstance.value) {\n        // 保存当前选择状态\n        const currentSelection = quillInstance.value.getSelection();\n\n        const container = quillInstance.value.root;\n        container.scrollTop = container.scrollHeight;\n\n        // 恢复选择状态（如果存在）\n        if (currentSelection && currentSelection.length > 0) {\n          // 使用 nextTick 确保滚动完成后再恢复选择\n          nextTick(() => {\n            try {\n              quillInstance.value.setSelection(currentSelection.index, currentSelection.length);\n            } catch (error) {\n              console.warn('恢复选择状态失败:', error);\n            }\n          });\n        }\n      }\n    }\n    \n    const grammarCheckText = async () => {\n      if (!currentDoc.value || grammarCheckLoading.value) return;\n      try {\n        grammarCheckLoading.value = true;\n        if (!quillInstance.value) {\n          ElMessage.error('编辑器未就绪，请稍后再试');\n          grammarCheckLoading.value = false;\n          return;\n        }\n\n        // 使用新的辅助函数获取选择和文本\n        const { selection, text } = getCurrentSelectionWithText();\n\n        let selectedText = text.trim();\n        let range = null;\n        if (selection && selection.length > 0 && selectedText) {\n          range = { ...selection };\n        }\n        if (!selectedText) {\n          ElMessage.warning('请先选择要纠错的文本内容');\n          grammarCheckLoading.value = false;\n          return;\n        }\n        if (selectedText.length > MAX_AI_TEXT_LENGTH) {\n          ElMessage.warning(`选中文本过长，已自动截断为前${MAX_AI_TEXT_LENGTH}字`);\n          selectedText = selectedText.slice(0, MAX_AI_TEXT_LENGTH);\n        }\n        ElMessage.info('正在智能纠错，请稍候...');\n        const response = await grammarCheck(currentDoc.value.id, { selection: selectedText });\n        // 只保留建议部分，去除\"优化后的文本\"字样，并将md转为html\n        let suggestions = response.suggestions || '';\n        suggestions = suggestions.replace(/\\*\\*优化后的文本\\*\\*[:：]?([\\s\\S]*)$/, '').trim();\n        const suggestionsHtml = marked.parse(suggestions);\n\n        // 从修正文本中只提取优化后的文本\n        let correctedText = response.corrected || '';\n        const optimizedTextMatch = correctedText.match(/优化后的文本[:：]([\\s\\S]*)/);\n        const finalCorrectedText = optimizedTextMatch ? optimizedTextMatch[1].trim() : correctedText;\n\n        showCompareDialog({\n          title: '智能纠错建议',\n          original: selectedText,\n          modified: finalCorrectedText, // 右侧编辑器直接填优化后文本\n          suggestions: suggestionsHtml, // AI建议区只显示建议，且为html\n          onApply: (finalContent) => {\n            if (\n              range &&\n              typeof range.index === 'number' &&\n              typeof range.length === 'number' &&\n              range.index >= 0 &&\n              range.length > 0\n            ) {\n              const quillLen = quillInstance.value.getLength();\n              let insertPos = range.index;\n              if (insertPos > quillLen) insertPos = quillLen - 1;\n\n              // 使用 API 源标记，避免触发不必要的选择变化事件\n              quillInstance.value.deleteText(insertPos, range.length, 'api');\n              quillInstance.value.insertText(insertPos, finalContent, 'api');\n\n              // 设置新的选择位置\n              let selPos = insertPos + finalContent.length;\n              selPos = Math.max(0, Math.min(selPos, quillInstance.value.getLength()));\n\n              // 延迟设置选择，确保文本插入完成\n              nextTick(() => {\n                safeSetSelection(selPos, 0, 'api');\n                documentChanged.value = true;\n                ElMessage.success('智能纠错已应用');\n                // 刷新编辑器实例\n                setTimeout(() => {\n                  refreshQuillEditor();\n                }, 100);\n              });\n            } else {\n              ElMessage.error('选区无效，无法插入内容');\n            }\n          }\n        });\n      } catch (error) {\n        console.error('[智能纠错] 异常:', error);\n        if (error && error.response) {\n          ElMessage.error('智能纠错失败: ' + (error.response.data.detail || error.message));\n        } else {\n          ElMessage.error('智能纠错失败，请稍后再试');\n        }\n      } finally {\n        grammarCheckLoading.value = false;\n      }\n    }\n    \n    // 多语言翻译\n    const translateDialogVisible = ref(false)\n    const translateInput = ref('')\n    const translateResult = ref('')\n    const translateLoading = ref(false)\n    const targetLang = ref('en')\n    const translateModifiedContent = ref('')\n    const openTranslateDialog = () => {\n      if (!quillInstance.value) {\n        ElMessage.error('编辑器未就绪，请稍后重试');\n        return;\n      }\n\n      // 使用新的辅助函数获取选择和文本\n      const { selection, text } = getCurrentSelectionWithText();\n\n      // 清空旧数据\n      translateResult.value = '';\n      translateModifiedContent.value = '';\n\n      if (selection && selection.length > 0) {\n        translateInput.value = text.trim();\n      } else {\n        translateInput.value = '';\n      }\n\n      // 显示对话框\n      translateDialogVisible.value = true;\n    }\n    const useSelectedTextForTranslate = () => {\n      if (!quillInstance.value) return\n      const selection = quillInstance.value.getSelection()\n      if (selection && selection.length > 0) {\n        translateInput.value = quillInstance.value.getText(selection.index, selection.length)\n      }\n    }\n    const doTranslate = async () => {\n      if (!currentDoc.value || !translateInput.value) return\n      translateLoading.value = true\n      try {\n        const res = await translateText(currentDoc.value.id, { selection: translateInput.value, target_lang: targetLang.value })\n        translateResult.value = res.translated\n        translateModifiedContent.value = res.translated\n      } catch (e) {\n        ElMessage.error('翻译失败')\n      } finally {\n        translateLoading.value = false\n      }\n    }\n    const replaceSelectionWithTranslation = () => {\n      if (!quillInstance.value || !translateModifiedContent.value) return\n\n      // 使用辅助函数获取当前有效选择\n      const selection = getCurrentSelection();\n\n      if (selection && selection.length > 0) {\n        const quillLen = quillInstance.value.getLength()\n        let insertPos = selection.index\n        if (insertPos > quillLen) insertPos = quillLen - 1\n\n        // 使用 API 源标记，避免触发不必要的选择变化事件\n        quillInstance.value.deleteText(insertPos, selection.length, 'api')\n        quillInstance.value.clipboard.dangerouslyPasteHTML(insertPos, translateModifiedContent.value, 'api')\n\n        let selPos = insertPos + translateModifiedContent.value.replace(/<[^>]+>/g, '').length\n        if (selPos > quillInstance.value.getLength() - 1) selPos = quillInstance.value.getLength() - 1\n\n        // 延迟设置选择，确保文本插入完成\n        nextTick(() => {\n          safeSetSelection(selPos, 0, 'api')\n          documentChanged.value = true\n          ElMessage.success('已替换为翻译内容')\n          translateDialogVisible.value = false\n          // 刷新编辑器实例\n          setTimeout(() => {\n            refreshQuillEditor();\n          }, 100);\n        });\n      } else {\n        // 未选中内容时插入到光标处\n        const cursor = quillInstance.value.getSelection(true)\n        let insertPos = cursor ? cursor.index : quillInstance.value.getLength() - 1\n        quillInstance.value.insertEmbed(insertPos, 'text', translateModifiedContent.value, 'api')\n\n        nextTick(() => {\n          safeSetSelection(insertPos + translateModifiedContent.value.replace(/<[^>]+>/g, '').length, 0, 'api')\n          documentChanged.value = true\n          ElMessage.success('已插入翻译内容')\n          translateDialogVisible.value = false\n          // 刷新编辑器实例\n          setTimeout(() => {\n            refreshQuillEditor();\n          }, 100);\n        });\n      }\n    }\n\n    // 智能问答\n    const qaDialogVisible = ref(false)\n    const qaQuestion = ref('')\n    const qaAnswer = ref('')\n    const qaLoading = ref(false)\n    \n    // 计算属性：将Markdown格式的回答转换为HTML\n    const qaAnswerHtml = computed(() => {\n      return qaAnswer.value ? marked.parse(qaAnswer.value) : ''\n    })\n    \n    const openQaDialog = () => {\n      qaDialogVisible.value = true\n      qaQuestion.value = ''\n      qaAnswer.value = ''\n    }\n    const doQa = async () => {\n      if (!currentDoc.value || !qaQuestion.value) return\n      qaLoading.value = true\n      try {\n        const res = await docQa(currentDoc.value.id, { question: qaQuestion.value, context: currentDoc.value.content })\n        qaAnswer.value = res.answer\n      } catch (e) {\n        ElMessage.error('问答失败')\n      } finally {\n        qaLoading.value = false\n      }\n    }\n    \n    // 刷新文档数据\n    const refreshDocumentData = async (docId) => {\n      loading.value = true;\n      try {\n        if (docId) {\n          await fetchDocumentDetail(docId);\n        }\n      } catch (error) {\n        console.error('刷新文档数据失败:', error);\n        ElMessage.error('刷新文档数据失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    \n    // 初始化数据加载\n    const fetchInitialData = () => {\n      console.log('组件挂载，开始加载数据');\n      \n      // 获取当前文档ID\n      const docId = route.params.id;\n      \n      // 如果有文档ID，优先加载文档详情\n      if (docId) {\n        console.log('有文档ID，优先加载文档详情:', docId);\n        fetchDocumentDetail(docId).then(() => {\n          // 文档详情加载完成后，异步加载文档列表\n          console.log('文档详情加载完成，开始加载文档列表');\n          fetchDocuments().then(() => {\n            // 文档列表加载完成后，滚动到当前文档\n            console.log('文档列表加载完成');\n            nextTick(() => {\n              scrollToActiveDocument();\n            });\n          });\n        });\n      } else {\n        // 没有文档ID，只加载文档列表\n        console.log('没有文档ID，只加载文档列表');\n        fetchDocuments();\n      }\n    };\n    \n    return {\n      route,\n      router,\n      goBack,\n      documents,\n      currentDoc,\n      documentChanged,\n      filteredDocuments,\n      filteredCount,\n      searchQuery,\n      docTypeFilter,\n      sortOption,\n      isDocListCollapsed,\n      isAssistantCollapsed,\n      documentFormRules,\n      documentFormRef,\n      newDocumentForm,\n      newDocumentDialogVisible,\n      shareDialogVisible,\n      deleteDialogVisible,\n      selectedUsers,\n      selectedUsersWithPermissions,\n      availableUsers,\n      shareMode,\n      saveLoading,\n      createLoading,\n      shareLoading,\n      deleteLoading,\n      expandLoading,\n      polishLoading,\n      grammarCheckLoading,\n      compareDialogVisible,\n      compareDialogData,\n      translateDialogVisible,\n      translateLoading,\n      targetLang,\n      translateInput,\n      translateModifiedContent,\n      qaDialogVisible,\n      qaQuestion,\n      qaAnswer,\n      qaAnswerHtml,\n      qaLoading,\n      saveDocument,\n      toggleDocList,\n      toggleAssistant,\n      onEditorChange,\n      openNewDocumentDialog,\n      createNewDocument,\n      shareDocument,\n      fetchUsers,\n      getUsernameById,\n      handleUserSelectionChange,\n      handleShareModeChange,\n      confirmShare,\n      deleteDocument,\n      confirmDelete,\n      exportDocument,\n      exportToPdf,\n      exportToWord,\n      printDocument,\n      addCollaborator,\n      viewHistory,\n      expandContent,\n      polishText,\n      debouncedSearch,\n      formatDate,\n      loading,\n      onTitleChange,\n      onTypeChange,\n      onContentChange,\n      onEditorReady,\n      showCompareDialog,\n      applyCompareChanges,\n      closeCompareDialog,\n      quillSelection,\n      quillSelectedText,\n      hasValidSelection,\n      onSelectionChange,\n      quillInstance,\n      grammarCheckText,\n      openTranslateDialog,\n      useSelectedTextForTranslate,\n      doTranslate,\n      openQaDialog,\n      doQa,\n      replaceSelectionWithTranslation,\n      documentsLoading,\n      documentCache,\n      scrollToActiveDocument,\n      selectDocument,\n      editorOptions\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n/* 修改整体布局，调整侧边栏和主内容区域的宽度比例 */\n.smart-doc-container {\n  display: flex;\n  height: 100%;\n  overflow: hidden;\n  background-color: #fff;\n}\n\n.sidebar {\n  width: 240px;\n  height: 100%;\n  border-right: 1px solid #e6e6e6;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  /* 仅保留宽度变化的过渡，其他动画全部去除 */\n  transition: width 0.3s;\n}\n\n.sidebar.collapsed {\n  width: 50px;\n}\n\n.sidebar-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid #e6e6e6;\n  height: 48px;\n  box-sizing: border-box;\n}\n\n.sidebar-header h4 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.toggle-btn {\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n}\n\n.toggle-btn:hover {\n  background-color: #f2f2f2;\n}\n\n.sidebar-content {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 48px);\n  overflow: hidden;\n}\n\n.search-area {\n  padding: 12px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.filter-options {\n  display: flex;\n  gap: 8px;\n  margin-top: 8px;\n}\n\n.document-list-scrollbar {\n  flex: 1;\n  padding: 8px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  scroll-behavior: smooth; /* 添加平滑滚动效果 */\n}\n\n.document-list-scrollbar :deep(.el-scrollbar__wrap) {\n  overflow-x: hidden;\n  scrollbar-width: thin; /* Firefox */\n}\n\n.document-list-scrollbar :deep(.el-scrollbar__thumb) {\n  background-color: rgba(144, 147, 153, 0.3);\n  border-radius: 6px;\n}\n\n.document-list-scrollbar :deep(.el-scrollbar__thumb:hover) {\n  background-color: rgba(144, 147, 153, 0.5);\n}\n\n.document-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-right: 4px; /* 为滚动条留出空间 */\n}\n\n.doc-item {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease; /* 加快过渡速度 */\n}\n\n.doc-item:hover {\n  background-color: #f5f7fa;\n}\n\n.doc-item.active {\n  background-color: #ecf5ff;\n}\n\n.doc-icon {\n  margin-right: 12px;\n  color: #409eff;\n}\n\n.doc-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.doc-info h5 {\n  margin: 0 0 4px 0;\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.doc-meta {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n  color: #909399;\n}\n\n.action-buttons {\n  padding: 12px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.action-buttons .el-button {\n  width: 100%;\n}\n\n.collapsed-sidebar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 0;\n  gap: 12px;\n  height: calc(100% - 48px);\n  overflow-y: auto;\n}\n\n.icon-btn {\n  width: 36px;\n  height: 36px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.icon-btn:hover {\n  background-color: #f2f2f2;\n}\n\n.icon-btn.doc-btn.active {\n  background-color: #ecf5ff;\n  color: #409eff;\n}\n\n.create-btn {\n  background-color: #ecf5ff;\n  color: #409eff;\n}\n\n.recent-docs {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n  align-items: center;\n}\n\n/* 主内容区域样式 */\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  height: 100%;\n  background-color: #f6f6f6;\n  position: relative;\n  /* 去除外部滚动 */\n  overflow: hidden;\n}\n\n.document-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  height: 100%;\n  overflow: hidden;\n}\n\n/* 文档标题和类型标签样式 */\n.doc-title-label, .doc-type-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #606266;\n  white-space: nowrap;\n}\n\n.document-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  border-bottom: 1px solid #e0e0e0;\n  background-color: #fafafa;\n  height: 68px;\n  box-sizing: border-box;\n  width: 100%;\n  z-index: 5;\n}\n\n.header-left-actions {\n  margin-right: 15px;\n}\n\n.doc-info-area {\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.doc-title {\n  width: 300px;\n}\n\n.doc-type-selector {\n  width: 150px;\n}\n\n.doc-actions {\n  display: flex;\n  gap: 8px;\n  z-index: 6; /* 确保操作按钮在最上层 */\n}\n\n.editor-area {\n  flex: 1;\n  background-color: #fff;\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  box-sizing: border-box;\n  padding: 0; /* 取消padding，避免高度累加 */\n}\n\n.quill-editor {\n  flex: 1;\n  height: 100%;\n  background: #fff;\n  min-height: 0;\n  box-sizing: border-box;\n}\n\n.quill-editor :deep(.ql-container) {\n  flex: 1;\n  height: 100% !important;\n  min-height: 0 !important;\n  overflow-y: auto !important;\n  background: #fff !important;\n  box-sizing: border-box;\n}\n\n.quill-editor :deep(.ql-editor) {\n  flex: 1;\n  min-height: 0 !important;\n  height: 100% !important;\n  overflow-y: auto !important;\n  background: #fff !important;\n  padding: 15px;\n  box-sizing: border-box;\n}\n\n.empty-doc-state {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n}\n\n/* 智能助手面板样式 */\n.assistant-panel {\n  width: 280px;\n  height: 100%;\n  border-left: 1px solid #e6e6e6;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  transition: width 0.3s;\n}\n\n.assistant-panel.collapsed {\n  width: 50px;\n}\n\n.assistant-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  border-bottom: 1px solid #e6e6e6;\n  height: 48px;\n  box-sizing: border-box;\n}\n\n.assistant-header h5 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.assistant-body {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.ai-features-beauty {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 28px;\n  margin-top: 30px;\n}\n\n.ai-feature-card {\n  width: 100%;\n  max-width: 320px;\n  background: #f8fafd;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px rgba(80,120,200,0.06);\n  padding: 18px 20px 10px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: box-shadow 0.2s;\n}\n\n.ai-feature-card:hover {\n  box-shadow: 0 4px 16px rgba(80,120,200,0.13);\n}\n\n.ai-feature-btn {\n  width: 100%;\n  height: 48px;\n  font-size: 17px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  margin-bottom: 6px;\n  transition: background 0.2s, color 0.2s;\n}\n\n.ai-feature-desc {\n  font-size: 13px;\n  color: #7a8599;\n  text-align: center;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  line-height: 1.6;\n}\n\n.context-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.warning-text {\n  color: #f56c6c;\n  font-weight: 500;\n}\n\n.compare-content {\n  flex: 1;\n  display: flex;\n  gap: 20px;\n  overflow: hidden;\n}\n\n.original-content, .modified-content {\n  flex: 1;\n  min-width: 350px;\n  max-width: 50%;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background: #fff;\n}\n\n.original-content h6, .modified-content h6 {\n  margin: 0;\n  padding: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  background-color: #eef2f6;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.content-box {\n  padding: 15px;\n  overflow-y: auto;\n  white-space: pre-wrap;\n  flex: 1;\n  font-size: 14px;\n  line-height: 1.6;\n  max-height: 50vh;\n  border: 1px solid #e0e0e0;\n  background-color: #fff;\n}\n\n.compare-dialog :deep(.el-dialog__body) {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  max-height: 60vh;\n  height: 60vh;\n  overflow: hidden;\n}\n\n.compare-dialog :deep(.el-dialog__header) {\n  padding: 15px 20px;\n}\n\n.compare-dialog :deep(.el-dialog__footer) {\n  padding: 10px 20px;\n}\n\n.compare-dialog :deep(.el-dialog) {\n  max-height: 85vh; /* 限制整个对话框的最大高度 */\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto !important;\n  overflow: hidden; /* 弹窗本身不应该滚动 */\n}\n\n/* 确保弹窗内容能够撑满但不溢出弹窗 */\n.compare-dialog :deep(.el-dialog__body) {\n  padding: 20px;\n  flex: 1;\n  overflow: auto;\n  max-height: calc(85vh - 110px); /* 减去头部和底部的高度 */\n  height: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.dialog-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n}\n\n.quill-editor-in-dialog {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n}\n\n.quill-editor-in-dialog :deep(.ql-toolbar) {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  background: #fff;\n}\n\n.quill-editor-in-dialog :deep(.ql-container) {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100% !important;\n  overflow-y: auto !important;\n  background: #fff !important;\n}\n\n.quill-editor-in-dialog :deep(.ql-editor) {\n  flex: 1;\n  min-height: 0 !important;\n  height: 100% !important;\n  overflow-y: auto !important;\n  background: #fff !important;\n  padding: 15px;\n}\n\n.document-count {\n  text-align: center;\n  padding: 12px;\n  color: #909399;\n  font-size: 13px;\n  border-top: 1px dashed #e6e6e6;\n  margin-top: 10px;\n}\n\n.loading-state {\n  padding: 10px;\n  min-height: 200px;\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 200px;\n  padding: 20px;\n  text-align: center;\n  color: #909399;\n}\n\n.collapsed-assistant {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 0;\n  gap: 12px;\n  height: calc(100% - 48px);\n  overflow-y: auto;\n}\n\n.icon-btn.disabled {\n  color: #a8abb2;\n  cursor: not-allowed;\n}\n\n.icon-btn.disabled:hover {\n  background-color: transparent;\n}\n\n.collapsed-assistant .icon-btn {\n  border-radius: 50%;\n  color: #606266;\n  background-color: #f7f7f7;\n  border: 1px solid #e9e9eb;\n  transition: all 0.2s ease-in-out;\n}\n\n.collapsed-assistant .icon-btn:hover {\n  background-color: #409eff;\n  color: white;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-color: #409eff;\n}\n\n.collapsed-assistant .icon-btn.disabled {\n  color: #c0c4cc;\n  background-color: #f9f9f9;\n  border-color: #f0f0f0;\n}\n\n.collapsed-assistant .icon-btn.disabled:hover {\n  background-color: #f9f9f9;\n  color: #c0c4cc;\n  transform: none;\n  box-shadow: none;\n  border-color: #f0f0f0;\n  cursor: not-allowed;\n}\n\n.user-permissions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  margin-top: 8px;\n}\n\n.user-permission-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #eaeaea;\n}\n\n.user-name {\n  min-width: 60px;\n  margin-right: 12px;\n  font-weight: 500;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EAIvBA,KAAK,EAAC;AAAgB;;;;;EAQtBA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAa;;EAWjBA,KAAK,EAAC;AAAgB;;;EAYEA,KAAK,EAAC;;;;EAGvBA,KAAK,EAAC;;;;EAQTA,KAAK,EAAC;AAAU;;EAGhBA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAU;;;EAOkBA,KAAK,EAAC;;;;EAMRA,KAAK,EAAC;;;EAO9CA,KAAK,EAAC;AAAgB;;;EAQxBA,KAAK,EAAC;;;EAOJA,KAAK,EAAC;AAAa;;;EAoBvBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAkB;;EAIpBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAqB;;EAO3BA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAW;;EASjBA,KAAK,EAAC;AAAmB;;EAS3BA,KAAK,EAAC;AAAa;;EA+BrBA,KAAK,EAAC;AAAa;;;EAedA,KAAK,EAAC;;;EAUfA,KAAK,EAAC;AAAkB;;;;;EAOxBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAiB;;EASvBA,KAAK,EAAC;AAAiB;;EASvBA,KAAK,EAAC;AAAiB;;EASvBA,KAAK,EAAC;AAAiB;;EAOvBA,KAAK,EAAC;AAAiB;;;EAW3BA,KAAK,EAAC;;;EAqDHA,KAAK,EAAC;AAAe;;;;;EA2ChBA,KAAK,EAAC;AAAuB;;EAExBA,KAAK,EAAC;AAAW;;;EAMyDC,KAAsB,EAAtB;IAAA;EAAA;;;EASpFD,KAAK,EAAC;AAAe;;;;;EAoBrBA,KAAK,EAAC;AAAe;;;EAqBCA,KAAK,EAAC;;;EAC7BA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAkB;;EAWxBA,KAAK,EAAC;AAAkB;;;EAUWA,KAAK,EAAC,gBAAgB;EAACC,KAAwB,EAAxB;IAAA;EAAA;;;;EAa3DD,KAAK,EAAC;AAAe;;EASxBC,KAAuE,EAAvE;IAAA;IAAA;IAAA;IAAA;EAAA;AAAuE;;EAavED,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAkB;;EAWxBA,KAAK,EAAC;AAAkB;;EAWvBA,KAAK,EAAC;AAAe;;;EAgBRC,KAAwB,EAAxB;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAvfzBC,mBAAA,CA6fM,OA7fNC,UA6fM,GA3fJC,mBAAA,CAuGM;IAvGDJ,KAAK,EAAAK,eAAA,EAAC,SAAS;MAAA,aAAwBC,MAAA,CAAAC;IAAkB;MAE5DH,mBAAA,CAKM,OALNI,UAKM,G,CAJOF,MAAA,CAAAC,kBAAkB,I,cAA7BL,mBAAA,CAAwC,MAAAO,UAAA,EAAT,MAAI,K,+BACnCL,mBAAA,CAEM;IAFDJ,KAAK,EAAC,YAAY;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,aAAA,IAAAP,MAAA,CAAAO,aAAA,IAAAD,IAAA,CAAa;MAC3CE,YAAA,CAAgFC,kBAAA;sBAAvE,MAAwC,C,CAAtBT,MAAA,CAAAC,kBAAkB,I,cAApCS,YAAA,CAAwCC,oBAAA;MAAAC,GAAA;IAAA,O,cAAAF,YAAA,CAAqBG,qBAAA;MAAAD,GAAA;IAAA,I;;0BAK1Ed,mBAAA,CAkEM,OAlENgB,UAkEM,GAhEJhB,mBAAA,CAmBM,OAnBNiB,UAmBM,GAlBJP,YAAA,CASWQ,mBAAA;IARTC,WAAW,EAAC,SAAS;gBACZjB,MAAA,CAAAkB,WAAW;+DAAXlB,MAAA,CAAAkB,WAAW,GAAAC,MAAA;IACpBC,SAAS,EAAT,EAAS;IACRC,OAAK,EAAErB,MAAA,CAAAsB;;IAEGC,MAAM,EAAAC,QAAA,CACf,MAA6B,CAA7BhB,YAAA,CAA6BC,kBAAA;wBAApB,MAAU,CAAVD,YAAA,CAAUiB,iBAAA,E;;;;oCAGvB3B,mBAAA,CAOM,OAPN4B,UAOM,GANJlB,YAAA,CAA8EQ,mBAAA;gBAA3DhB,MAAA,CAAA2B,aAAa;+DAAb3B,MAAA,CAAA2B,aAAa,GAAAR,MAAA;IAAEF,WAAW,EAAC,MAAM;IAACW,IAAI,EAAC,OAAO;IAACR,SAAS,EAAT;+BAClEZ,YAAA,CAIYqB,oBAAA;gBAJQ7B,MAAA,CAAA8B,UAAU;+DAAV9B,MAAA,CAAA8B,UAAU,GAAAX,MAAA;IAAEF,WAAW,EAAC,IAAI;IAACW,IAAI,EAAC;;sBACpD,MAAyC,CAAzCpB,YAAA,CAAyCuB,oBAAA;MAA9BC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAC9BzB,YAAA,CAAyCuB,oBAAA;MAA9BC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;QAC9BzB,YAAA,CAA2CuB,oBAAA;MAAhCC,KAAK,EAAC,MAAM;MAACC,KAAK,EAAC;;;6BAMpCzB,YAAA,CAkCe0B,uBAAA;IAlCDxC,KAAK,EAAC;EAAyB;sBAC3C,MAEM,CAFKM,MAAA,CAAAmC,gBAAgB,I,cAA3BvC,mBAAA,CAEM,OAFNwC,UAEM,GADJ5B,YAAA,CAAmC6B,sBAAA;MAArBC,IAAI,EAAE,EAAE;MAAEC,QAAQ,EAAR;2BAE1B3C,mBAAA,CA6BM,OA7BN4C,UA6BM,I,kBA5BJ5C,mBAAA,CAiBM6C,SAAA,QAAAC,WAAA,CAhBU1C,MAAA,CAAA2C,iBAAiB,EAAxBC,GAAG;MAAA,IAAAC,kBAAA;2BADZjD,mBAAA,CAiBM;QAfHgB,GAAG,EAAEgC,GAAG,CAACE,EAAE;QACZpD,KAAK,EAAAK,eAAA,EAAC,UAAU;UAAA,UACI,EAAA8C,kBAAA,GAAA7C,MAAA,CAAA+C,UAAU,cAAAF,kBAAA,uBAAVA,kBAAA,CAAYC,EAAE,MAAKF,GAAG,CAACE;QAAE;QAC5C1C,OAAK,EAAAe,MAAA,IAAEnB,MAAA,CAAAgD,cAAc,CAACJ,GAAG,CAACE,EAAE;UAE7BhD,mBAAA,CAEM,OAFNmD,WAEM,GADJzC,YAAA,CAA+BC,kBAAA;0BAAtB,MAAY,CAAZD,YAAA,CAAY0C,mBAAA,E;;YAEvBpD,mBAAA,CAMM,OANNqD,WAMM,GALJrD,mBAAA,CAAwB,YAAAsD,gBAAA,CAAjBR,GAAG,CAACS,KAAK,OAChBvD,mBAAA,CAGM,OAHNwD,WAGM,GAFJxD,mBAAA,CAA2B,cAAAsD,gBAAA,CAAlBR,GAAG,CAACW,IAAI,OACjBzD,mBAAA,CAA8C,cAAAsD,gBAAA,CAArCpD,MAAA,CAAAwD,UAAU,CAACZ,GAAG,CAACa,WAAW,O;eAK9BzD,MAAA,CAAA2C,iBAAiB,CAACe,MAAM,U,cAAnC9D,mBAAA,CAIM,OAJN+D,WAIM,GAHJnD,YAAA,CAEWoD,mBAAA;MAFDC,WAAW,EAAC,MAAM;MAAE,YAAU,EAAE;;wBACxC,MAAuE,CAAvErD,YAAA,CAAuEsD,oBAAA;QAA5DlC,IAAI,EAAC,OAAO;QAAExB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAc,MAAA,IAAE4C,IAAA,CAAAC,cAAc;;0BAAS,MAAI3D,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;;;2CAIpDL,MAAA,CAAA2C,iBAAiB,CAACe,MAAM,Q,cAAnC9D,mBAAA,CAEM,OAFNqE,WAEM,EAF0D,KAC5D,GAAAb,gBAAA,CAAGpD,MAAA,CAAA2C,iBAAiB,CAACe,MAAM,IAAG,OAClC,Q;;MAKJ5D,mBAAA,CAIM,OAJNoE,WAIM,GAHJ1D,YAAA,CAEYsD,oBAAA;IAFDP,IAAI,EAAC,SAAS;IAAEnD,OAAK,EAAEJ,MAAA,CAAAmE;;sBAChC,MAA2B,CAA3B3D,YAAA,CAA2BC,kBAAA;wBAAlB,MAAQ,CAARD,YAAA,CAAQ4D,eAAA,E;;qDAAU,QAC7B,G;;0CAhEkCpE,MAAA,CAAAC,kBAAkB,E,GAqEnBD,MAAA,CAAAC,kBAAkB,I,cAAvDL,mBAAA,CAuBM,OAvBNyE,WAuBM,GAtBJ7D,YAAA,CAIa8D,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEM,CAFN1E,mBAAA,CAEM;MAFDJ,KAAK,EAAC,qBAAqB;MAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAmE,qBAAA,IAAAnE,MAAA,CAAAmE,qBAAA,IAAA7D,IAAA,CAAqB;QAC5DE,YAAA,CAA2BC,kBAAA;wBAAlB,MAAQ,CAARD,YAAA,CAAQ4D,eAAA,E;;;;MAIrBtE,mBAAA,CAeM,OAfN2E,WAeM,I,kBAdJ7E,mBAAA,CAaa6C,SAAA,QAAAC,WAAA,CAZG1C,MAAA,CAAA2C,iBAAiB,CAAC+B,KAAK,QAA9B9B,GAAG;yBADZlC,YAAA,CAaa4D,qBAAA;MAXV1D,GAAG,EAAEgC,GAAG,CAACE,EAAE;MACXyB,OAAO,EAAE3B,GAAG,CAACS,KAAK;MACnBmB,SAAS,EAAC;;wBAEV;QAAA,IAAAG,mBAAA;QAAA,OAMM,CANN7E,mBAAA,CAMM;UALJJ,KAAK,EAAAK,eAAA,EAAC,kBAAkB;YAAA,UACJ,EAAA4E,mBAAA,GAAA3E,MAAA,CAAA+C,UAAU,cAAA4B,mBAAA,uBAAVA,mBAAA,CAAY7B,EAAE,MAAKF,GAAG,CAACE;UAAE;UAC5C1C,OAAK,EAAAe,MAAA,IAAEnB,MAAA,CAAAgD,cAAc,CAACJ,GAAG,CAACE,EAAE;YAE7BtC,YAAA,CAA+BC,kBAAA;4BAAtB,MAAY,CAAZD,YAAA,CAAY0C,mBAAA,E;;;;;;uDAQ/BpD,mBAAA,CAsFM,OAtFN8E,WAsFM,GApFJ9E,mBAAA,CAmFM,OAnFN+E,WAmFM,GAlFe7E,MAAA,CAAA8E,OAAO,I,cAA1BpE,YAAA,CAAqE2B,sBAAA;;IAAxCC,IAAI,EAAE,CAAC;IAAEC,QAAQ,EAAR,EAAQ;IAAC5C,KAAmB,EAAnB;MAAA;IAAA;QAC1BK,MAAA,CAAA+C,UAAU,I,cAA/BnD,mBAAA,CAyEW6C,SAAA;IAAA7B,GAAA;EAAA,IAvETd,mBAAA,CAwDM,OAxDNiF,WAwDM,GAvDJjF,mBAAA,CAMM,OANNkF,WAMM,GALJxE,YAAA,CAIa8D,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEY,CAFZhE,YAAA,CAEYsD,oBAAA;MAFA1D,OAAK,EAAEJ,MAAA,CAAAiF,MAAM;MAAEC,MAAM,EAAN;;wBACzB,MAAoC,CAApC1E,YAAA,CAAoCC,kBAAA;0BAA3B,MAAiB,CAAjBD,YAAA,CAAiB2E,wBAAA,E;;;;;;QAIhCrF,mBAAA,CAmBM,OAnBNsF,WAmBM,G,4BAlBJtF,mBAAA,CAAsC;IAAjCJ,KAAK,EAAC;EAAiB,GAAC,KAAG,QAChCI,mBAAA,CAOM,OAPNuF,WAOM,GANJ7E,YAAA,CAKEQ,mBAAA;gBAJShB,MAAA,CAAA+C,UAAU,CAACM,KAAK;+DAAhBrD,MAAA,CAAA+C,UAAU,CAACM,KAAK,GAAAlC,MAAA;IACzBF,WAAW,EAAC,MAAM;IAClBW,IAAI,EAAC,OAAO;IACX0D,QAAM,EAAEtF,MAAA,CAAAuF;yEAGbzF,mBAAA,CAAqC;IAAhCJ,KAAK,EAAC;EAAgB,GAAC,KAAG,QAC/BI,mBAAA,CAOM,OAPN0F,WAOM,GANJhF,YAAA,CAKEQ,mBAAA;gBAJShB,MAAA,CAAA+C,UAAU,CAACQ,IAAI;+DAAfvD,MAAA,CAAA+C,UAAU,CAACQ,IAAI,GAAApC,MAAA;IACxBF,WAAW,EAAC,QAAQ;IACpBW,IAAI,EAAC,SAAS;IACb0D,QAAM,EAAEtF,MAAA,CAAAyF;+CAIf3F,mBAAA,CA2BM,OA3BN4F,WA2BM,GA1BJlF,YAAA,CASa8D,qBAAA;IATDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAOY,CAPZhE,YAAA,CAOYsD,oBAAA;MANVoB,MAAM,EAAN,EAAM;MACLS,QAAQ,GAAG3F,MAAA,CAAA4F,eAAe;MAC1Bd,OAAO,EAAE9E,MAAA,CAAA6F,WAAW;MACpBzF,OAAK,EAAEJ,MAAA,CAAA8F;;wBAER,MAAkC,CAAlCtF,YAAA,CAAkCC,kBAAA;0BAAzB,MAAe,CAAfD,YAAA,CAAeuF,sBAAA,E;;;;;;MAG5BvF,YAAA,CAEa8D,qBAAA;IAFDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAAqF,CAArFhE,YAAA,CAAqFsD,oBAAA;MAA1EoB,MAAM,EAAN,EAAM;MAAE9E,OAAK,EAAEJ,MAAA,CAAAgG;;wBAAe,MAAgC,CAAhCxF,YAAA,CAAgCC,kBAAA;0BAAvB,MAAa,CAAbD,YAAA,CAAayF,oBAAA,E;;;;;;MAEjEzF,YAAA,CAEa8D,qBAAA;IAFDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAAqF,CAArFhE,YAAA,CAAqFsD,oBAAA;MAA1EoB,MAAM,EAAN,EAAM;MAAE9E,OAAK,EAAEJ,MAAA,CAAAkG;;wBAAgB,MAA+B,CAA/B1F,YAAA,CAA+BC,kBAAA;0BAAtB,MAAY,CAAZD,YAAA,CAAY2F,mBAAA,E;;;;;;MAEjE3F,YAAA,CASa8D,qBAAA;IATDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAOc,CAPdhE,YAAA,CAOc4F,sBAAA;MAPDC,OAAO,EAAC;IAAO;MAEfC,QAAQ,EAAA9E,QAAA,CACjB,MAEmB,CAFnBhB,YAAA,CAEmB+F,2BAAA;0BADjB,MAAsF,CAAtF/F,YAAA,CAAsFgG,2BAAA;UAAnEpG,OAAK,EAAEJ,MAAA,CAAAyG,cAAc;UAAE/G,KAAK,EAAC;;4BAAe,MAAIW,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;;;;wBAHvE,MAAyD,CAAzDG,YAAA,CAAyDsD,oBAAA;QAA9CoB,MAAM,EAAN;MAAM;0BAAC,MAA2B,CAA3B1E,YAAA,CAA2BC,kBAAA;4BAAlB,MAAQ,CAARD,YAAA,CAAQkG,eAAA,E;;;;;;;;UAY3C5G,mBAAA,CAWM,OAXN6G,WAWM,GAVJnG,YAAA,CASEoG,sBAAA;IARQrC,OAAO,EAAEvE,MAAA,CAAA+C,UAAU,CAACwB,OAAO;4DAAlBvE,MAAA,CAAA+C,UAAU,CAACwB,OAAO,GAAApD,MAAA;IAClC0F,OAAO,EAAE7G,MAAA,CAAA8G,aAAa;IACvBC,WAAW,EAAC,MAAM;IAClBC,KAAK,EAAC,MAAM;IACZtH,KAAK,EAAC,cAAc;IACnBuH,YAAU,EAAEjH,MAAA,CAAAkH,eAAe;IAC3BC,OAAK,EAAEnH,MAAA,CAAAoH,aAAa;IACrBnG,WAAW,EAAC;2FAMlBrB,mBAAA,CAIM,OAJNyH,WAIM,GAHJ7G,YAAA,CAEWoD,mBAAA;IAFDC,WAAW,EAAC;EAAY;sBAChC,MAAyE,CAAzErD,YAAA,CAAyEsD,oBAAA;MAA9DP,IAAI,EAAC,SAAS;MAAEnD,OAAK,EAAEJ,MAAA,CAAAmE;;wBAAuB,MAAI9D,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;;;aAOrEP,mBAAA,CAqFM;IArFDJ,KAAK,EAAAK,eAAA,EAAC,iBAAiB;MAAA,aAAwBC,MAAA,CAAAsH;IAAoB;MACtExH,mBAAA,CAKM,OALNyH,WAKM,G,CAJOvH,MAAA,CAAAsH,oBAAoB,I,cAA/B1H,mBAAA,CAA0C,MAAA4H,WAAA,EAAT,MAAI,K,+BACrC1H,mBAAA,CAEM;IAFDJ,KAAK,EAAC,YAAY;IAAEU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAyH,eAAA,IAAAzH,MAAA,CAAAyH,eAAA,IAAAnH,IAAA,CAAe;MAC7CE,YAAA,CAAkFC,kBAAA;sBAAzE,MAA2C,C,CAAxBT,MAAA,CAAAsH,oBAAoB,I,cAAvC5G,YAAA,CAA2CG,qBAAA;MAAAD,GAAA;IAAA,O,cAAAF,YAAA,CAAoBC,oBAAA;MAAAC,GAAA;IAAA,I;;0BAI5Ed,mBAAA,CA4CM,OA5CN4H,WA4CM,GA3CJ5H,mBAAA,CA0CM,OA1CN6H,WA0CM,GAzCJ7H,mBAAA,CAQM,OARN8H,WAQM,GAPJpH,YAAA,CAKa8D,qBAAA;IALDC,OAAO,EAAC,oBAAoB;IAAEoB,QAAQ,EAAE3F,MAAA,CAAA6H,iBAAiB;IAAErD,SAAS,EAAC,KAAK;IAACsD,MAAM,EAAC;;sBAC5F,MAGY,CAHZtH,YAAA,CAGYsD,oBAAA;MAHDP,IAAI,EAAC,SAAS;MAAC7D,KAAK,EAAC,gBAAgB;MAAEU,OAAK,EAAEJ,MAAA,CAAA+H,aAAa;MAAGjD,OAAO,EAAE9E,MAAA,CAAAgI,aAAa;MAAGrC,QAAQ,GAAG3F,MAAA,CAAA6H;;wBAC3G,MAA2C,CAA3CrH,YAAA,CAA2CC,kBAAA;QAAlCf,KAAK,EAAC;MAAS;0BAAC,MAAQ,CAARc,YAAA,CAAQyH,eAAA,E;;uDAAU,QAE7C,G;;;;mDAEFnI,mBAAA,CAA8D;IAAzDJ,KAAK,EAAC;EAAiB,GAAC,6BAA2B,O,GAE1DI,mBAAA,CAQM,OARNoI,WAQM,GAPJ1H,YAAA,CAKa8D,qBAAA;IALDC,OAAO,EAAC,oBAAoB;IAAEoB,QAAQ,EAAE3F,MAAA,CAAA6H,iBAAiB;IAAErD,SAAS,EAAC,KAAK;IAACsD,MAAM,EAAC;;sBAC5F,MAGY,CAHZtH,YAAA,CAGYsD,oBAAA;MAHDP,IAAI,EAAC,SAAS;MAAC7D,KAAK,EAAC,gBAAgB;MAAEU,OAAK,EAAEJ,MAAA,CAAAmI,UAAU;MAAGrD,OAAO,EAAE9E,MAAA,CAAAoI,aAAa;MAAGzC,QAAQ,GAAG3F,MAAA,CAAA6H;;wBACxG,MAAiD,CAAjDrH,YAAA,CAAiDC,kBAAA;QAAxCf,KAAK,EAAC;MAAS;0BAAC,MAAc,CAAdc,YAAA,CAAc6H,qBAAA,E;;uDAAU,QAEnD,G;;;;mDAEFvI,mBAAA,CAAsD;IAAjDJ,KAAK,EAAC;EAAiB,GAAC,qBAAmB,O,GAElDI,mBAAA,CAQM,OARNwI,WAQM,GAPJ9H,YAAA,CAKa8D,qBAAA;IALDC,OAAO,EAAC,oBAAoB;IAAEoB,QAAQ,EAAE3F,MAAA,CAAA6H,iBAAiB;IAAErD,SAAS,EAAC,KAAK;IAACsD,MAAM,EAAC;;sBAC5F,MAGY,CAHZtH,YAAA,CAGYsD,oBAAA;MAHDP,IAAI,EAAC,SAAS;MAAC7D,KAAK,EAAC,gBAAgB;MAAEU,OAAK,EAAEJ,MAAA,CAAAuI,gBAAgB;MAAGzD,OAAO,EAAE9E,MAAA,CAAAwI,mBAAmB;MAAG7C,QAAQ,GAAG3F,MAAA,CAAA6H;;wBACpH,MAA2C,CAA3CrH,YAAA,CAA2CC,kBAAA;QAAlCf,KAAK,EAAC;MAAS;0BAAC,MAAQ,CAARc,YAAA,CAAQyH,eAAA,E;;uDAAU,QAE7C,G;;;;mDAEFnI,mBAAA,CAA6D;IAAxDJ,KAAK,EAAC;EAAiB,GAAC,4BAA0B,O,GAEzDI,mBAAA,CAMM,OANN2I,WAMM,GALJjI,YAAA,CAGYsD,oBAAA;IAHDP,IAAI,EAAC,MAAM;IAAC7D,KAAK,EAAC,gBAAgB;IAAEU,OAAK,EAAEJ,MAAA,CAAA0I;;sBACpD,MAAmD,CAAnDlI,YAAA,CAAmDC,kBAAA;MAA1Cf,KAAK,EAAC;IAAS;wBAAC,MAAgB,CAAhBc,YAAA,CAAgBmI,uBAAA,E;;qDAAU,SAErD,G;;kDACA7I,mBAAA,CAAqD;IAAhDJ,KAAK,EAAC;EAAiB,GAAC,oBAAkB,O,GAEjDI,mBAAA,CAMM,OANN8I,WAMM,GALJpI,YAAA,CAGYsD,oBAAA;IAHDP,IAAI,EAAC,SAAS;IAAC7D,KAAK,EAAC,gBAAgB;IAAEU,OAAK,EAAEJ,MAAA,CAAA6I;;sBACvD,MAAqD,CAArDrI,YAAA,CAAqDC,kBAAA;MAA5Cf,KAAK,EAAC;IAAS;wBAAC,MAAkB,CAAlBc,YAAA,CAAkBsI,yBAAA,E;;qDAAU,QAEvD,G;;kDACAhJ,mBAAA,CAAqD;IAAhDJ,KAAK,EAAC;EAAiB,GAAC,oBAAkB,O,uBAzChBM,MAAA,CAAAsH,oBAAoB,E,GA+ClBtH,MAAA,CAAAsH,oBAAoB,I,cAA3D1H,mBAAA,CA6BM,OA7BNmJ,WA6BM,GA5BJvI,YAAA,CAKa8D,qBAAA;IALAC,OAAO,EAAEvE,MAAA,CAAA6H,iBAAiB;IAA2BrD,SAAS,EAAC;;sBAC1E,MAGM,CAHN1E,mBAAA,CAGM;MAHDJ,KAAK,EAAAK,eAAA,EAAC,UAAU;QAAA,aAA+CC,MAAA,CAAA6H,iBAAiB,IAAI7H,MAAA,CAAAgI;MAAa;MAA/E5H,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEN,MAAA,CAAA+H,aAAA,IAAA/H,MAAA,CAAA+H,aAAA,IAAAzH,IAAA,CAAa;QAC1BN,MAAA,CAAAgI,aAAa,I,cAA5BtH,YAAA,CAAsED,kBAAA;;MAAxCf,KAAK,EAAC;;wBAAa,MAAW,CAAXc,YAAA,CAAWwI,kBAAA,E;;yBAC5DtI,YAAA,CAAkCD,kBAAA;MAAAG,GAAA;IAAA;wBAAlB,MAAQ,CAARJ,YAAA,CAAQyH,eAAA,E;;;;sBAG5BzH,YAAA,CAKa8D,qBAAA;IALAC,OAAO,EAAEvE,MAAA,CAAA6H,iBAAiB;IAA2BrD,SAAS,EAAC;;sBAC1E,MAGM,CAHN1E,mBAAA,CAGM;MAHDJ,KAAK,EAAAK,eAAA,EAAC,UAAU;QAAA,aAA4CC,MAAA,CAAA6H,iBAAiB,IAAI7H,MAAA,CAAAoI;MAAa;MAA5EhI,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEN,MAAA,CAAAmI,UAAA,IAAAnI,MAAA,CAAAmI,UAAA,IAAA7H,IAAA,CAAU;QACvBN,MAAA,CAAAoI,aAAa,I,cAA5B1H,YAAA,CAAsED,kBAAA;;MAAxCf,KAAK,EAAC;;wBAAa,MAAW,CAAXc,YAAA,CAAWwI,kBAAA,E;;yBAC5DtI,YAAA,CAAwCD,kBAAA;MAAAG,GAAA;IAAA;wBAAxB,MAAc,CAAdJ,YAAA,CAAc6H,qBAAA,E;;;;sBAGlC7H,YAAA,CAKa8D,qBAAA;IALAC,OAAO,EAAEvE,MAAA,CAAA6H,iBAAiB;IAA2BrD,SAAS,EAAC;;sBAC1E,MAGM,CAHN1E,mBAAA,CAGM;MAHDJ,KAAK,EAAAK,eAAA,EAAC,UAAU;QAAA,aAAkDC,MAAA,CAAA6H,iBAAiB,IAAI7H,MAAA,CAAAwI;MAAmB;MAAxFpI,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEN,MAAA,CAAAuI,gBAAA,IAAAvI,MAAA,CAAAuI,gBAAA,IAAAjI,IAAA,CAAgB;QAC7BN,MAAA,CAAAwI,mBAAmB,I,cAAlC9H,YAAA,CAA4ED,kBAAA;;MAAxCf,KAAK,EAAC;;wBAAa,MAAW,CAAXc,YAAA,CAAWwI,kBAAA,E;;yBAClEtI,YAAA,CAAkCD,kBAAA;MAAAG,GAAA;IAAA;wBAAlB,MAAQ,CAARJ,YAAA,CAAQyH,eAAA,E;;;;sBAG5BzH,YAAA,CAIa8D,qBAAA;IAJDC,OAAO,EAAC,OAAO;IAACC,SAAS,EAAC;;sBACpC,MAEM,CAFN1E,mBAAA,CAEM;MAFDJ,KAAK,EAAC,UAAU;MAAEU,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEN,MAAA,CAAA0I,mBAAA,IAAA1I,MAAA,CAAA0I,mBAAA,IAAApI,IAAA,CAAmB;QAC/CE,YAAA,CAAmCC,kBAAA;wBAA1B,MAAgB,CAAhBD,YAAA,CAAgBmI,uBAAA,E;;;;MAG7BnI,YAAA,CAIa8D,qBAAA;IAJDC,OAAO,EAAC,MAAM;IAACC,SAAS,EAAC;;sBACnC,MAEM,CAFN1E,mBAAA,CAEM;MAFDJ,KAAK,EAAC,UAAU;MAAEU,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEN,MAAA,CAAA6I,YAAA,IAAA7I,MAAA,CAAA6I,YAAA,IAAAvI,IAAA,CAAY;QACxCE,YAAA,CAAqCC,kBAAA;wBAA5B,MAAkB,CAAlBD,YAAA,CAAkBsI,yBAAA,E;;;;8CAOnCtI,YAAA,CA2BYyI,oBAAA;gBA1BDjJ,MAAA,CAAAkJ,wBAAwB;iEAAxBlJ,MAAA,CAAAkJ,wBAAwB,GAAA/H,MAAA;IACjCkC,KAAK,EAAC,QAAQ;IACd8F,KAAK,EAAC;;IAgBKC,MAAM,EAAA5H,QAAA,CACf,MAKO,CALP1B,mBAAA,CAKO,QALPuJ,WAKO,GAJL7I,YAAA,CAAmEsD,oBAAA;MAAvD1D,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAc,MAAA,IAAEnB,MAAA,CAAAkJ,wBAAwB;;wBAAU,MAAE7I,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;QACvDG,YAAA,CAEYsD,oBAAA;MAFDP,IAAI,EAAC,SAAS;MAAEnD,OAAK,EAAEJ,MAAA,CAAAsJ,iBAAiB;MAAGxE,OAAO,EAAE9E,MAAA,CAAAuJ;;wBAAe,MAE9ElJ,MAAA,SAAAA,MAAA,Q,iBAF8E,MAE9E,E;;;sBAnBJ,MAaU,CAbVG,YAAA,CAaUgJ,kBAAA;MAZPC,KAAK,EAAEzJ,MAAA,CAAA0J,eAAe;MACvB,aAAW,EAAC,MAAM;MACjBC,KAAK,EAAE3J,MAAA,CAAA4J,iBAAiB;MACzBC,GAAG,EAAC;;wBAEJ,MAEe,CAFfrJ,YAAA,CAEesJ,uBAAA;QAFD9H,KAAK,EAAC,MAAM;QAAC+H,IAAI,EAAC;;0BAC9B,MAAkE,CAAlEvJ,YAAA,CAAkEQ,mBAAA;sBAA/ChB,MAAA,CAAA0J,eAAe,CAACrG,KAAK;uEAArBrD,MAAA,CAAA0J,eAAe,CAACrG,KAAK,GAAAlC,MAAA;UAAEF,WAAW,EAAC;;;UAExDT,YAAA,CAGesJ,uBAAA;QAHD9H,KAAK,EAAC;MAAM;0BACxB,MAAiE,CAAjExB,YAAA,CAAiEQ,mBAAA;sBAA9ChB,MAAA,CAAA0J,eAAe,CAACnG,IAAI;uEAApBvD,MAAA,CAAA0J,eAAe,CAACnG,IAAI,GAAApC,MAAA;UAAEF,WAAW,EAAC;iEACrDnB,mBAAA,CAAyC;UAApCJ,KAAK,EAAC;QAAU,GAAC,eAAa,O;;;;;;yBAczCc,YAAA,CAyDYyI,oBAAA;gBAxDDjJ,MAAA,CAAAgK,kBAAkB;iEAAlBhK,MAAA,CAAAgK,kBAAkB,GAAA7I,MAAA;IAC3BkC,KAAK,EAAC,MAAM;IACZ8F,KAAK,EAAC;;IA8CKC,MAAM,EAAA5H,QAAA,CACf,MAKO,CALP1B,mBAAA,CAKO,QALPmK,WAKO,GAJLzJ,YAAA,CAA6DsD,oBAAA;MAAjD1D,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAc,MAAA,IAAEnB,MAAA,CAAAgK,kBAAkB;;wBAAU,MAAE3J,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;QACjDG,YAAA,CAEYsD,oBAAA;MAFDP,IAAI,EAAC,SAAS;MAAEnD,OAAK,EAAEJ,MAAA,CAAAkK,YAAY;MAAGpF,OAAO,EAAE9E,MAAA,CAAAmK;;wBAAc,MAExE9J,MAAA,SAAAA,MAAA,Q,iBAFwE,MAExE,E;;;sBAjDJ,MA2CM,CA3CKL,MAAA,CAAA+C,UAAU,I,cAArBnD,mBAAA,CA2CM,OAAAwK,WAAA,GA1CJtK,mBAAA,CAAuD,Y,6CAApD,WAAS,IAAAA,mBAAA,CAAuC,gBAAAsD,gBAAA,CAA5BpD,MAAA,CAAA+C,UAAU,CAACM,KAAK,M,GACvC7C,YAAA,CAwCUgJ,kBAAA;MAxCD,aAAW,EAAC,OAAO;MAAC9J,KAAK,EAAC;;wBACjC,MAKe,CALfc,YAAA,CAKesJ,uBAAA;QALD9H,KAAK,EAAC;MAAM;0BACxB,MAGiB,CAHjBxB,YAAA,CAGiB6J,yBAAA;sBAHQrK,MAAA,CAAAsK,SAAS;uEAATtK,MAAA,CAAAsK,SAAS,GAAAnJ,MAAA;UAAGmE,QAAM,EAAEtF,MAAA,CAAAuK;;4BAC3C,MAA+C,CAA/C/J,YAAA,CAA+CgK,mBAAA;YAApCxI,KAAK,EAAE;UAAY;8BAAE,MAAI3B,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;cACpCG,YAAA,CAA0CgK,mBAAA;YAA/BxI,KAAK,EAAE;UAAM;8BAAE,MAAK3B,MAAA,SAAAA,MAAA,Q,iBAAL,OAAK,E;;;;;;UAGnCG,YAAA,CAeesJ,uBAAA;QAfD9H,KAAK,EAAC;MAAM;0BACxB,MAaY,CAbZxB,YAAA,CAaYqB,oBAAA;sBAZM7B,MAAA,CAAAyK,aAAa;uEAAbzK,MAAA,CAAAyK,aAAa,GAAAtJ,MAAA;0BAA7B;YAAAuJ,MAAA;UAAA,CAA8B;UAC9BC,QAAQ,EAAR,EAAQ;UACR1J,WAAW,EAAC,OAAO;UACnBtB,KAAmB,EAAnB;YAAA;UAAA,CAAmB;UAClB2F,QAAM,EAAEtF,MAAA,CAAA4K;;4BAGP,MAA8B,E,kBADhChL,mBAAA,CAKE6C,SAAA,QAAAC,WAAA,CAJe1C,MAAA,CAAA6K,cAAc,EAAtBC,IAAI;iCADbpK,YAAA,CAKEqB,oBAAA;cAHCnB,GAAG,EAAEkK,IAAI,CAAChI,EAAE;cACZd,KAAK,EAAE8I,IAAI,CAACC,QAAQ;cACpB9I,KAAK,EAAE6I,IAAI,CAAChI;;;;;;UAKH9C,MAAA,CAAAsK,SAAS,qBAAqBtK,MAAA,CAAAyK,aAAa,IAAIzK,MAAA,CAAAyK,aAAa,CAAC/G,MAAM,Q,cACjFhD,YAAA,CAaeoJ,uBAAA;;QAbD9H,KAAK,EAAC,MAAM;QAACtC,KAAK,EAAC;;0BAC/B,MAWM,CAXNI,mBAAA,CAWM,OAXNkL,WAWM,I,kBAVJpL,mBAAA,CAMM6C,SAAA,QAAAC,WAAA,CAN2B1C,MAAA,CAAAiL,4BAA4B,GAAhDC,QAAQ,EAAEC,KAAK;+BAA5BvL,mBAAA,CAMM;YAN0DgB,GAAG,EAAEuK,KAAK;YAAEzL,KAAK,EAAC;cAChFI,mBAAA,CAAsE,QAAtEsL,WAAsE,EAAAhI,gBAAA,CAA3CpD,MAAA,CAAAqL,eAAe,CAACH,QAAQ,CAACI,OAAO,QAC3D9K,YAAA,CAGYqB,oBAAA;wBAHQqJ,QAAQ,CAACK,UAAU;6CAAnBL,QAAQ,CAACK,UAAU,GAAApK,MAAA;YAAEF,WAAW,EAAC,MAAM;YAACtB,KAAoB,EAApB;cAAA;YAAA;;8BAC1D,MAAqC,CAArCa,YAAA,CAAqCuB,oBAAA;cAA1BC,KAAK,EAAC,IAAI;cAACC,KAAK,EAAC;gBAC5BzB,YAAA,CAAqCuB,oBAAA;cAA1BC,KAAK,EAAC,IAAI;cAACC,KAAK,EAAC;;;;mBAGrBjC,MAAA,CAAAiL,4BAA4B,CAACvH,MAAM,UAAU1D,MAAA,CAAAyK,aAAa,CAAC/G,MAAM,Q,cAA5E9D,mBAAA,CAEM,OAFN4L,WAEM,EAFmG,qBAEzG,K;;;;;;yBAiBZhL,YAAA,CAiBYyI,oBAAA;gBAhBDjJ,MAAA,CAAAyL,mBAAmB;iEAAnBzL,MAAA,CAAAyL,mBAAmB,GAAAtK,MAAA;IAC5BkC,KAAK,EAAC,MAAM;IACZ8F,KAAK,EAAC;;IAMKC,MAAM,EAAA5H,QAAA,CACf,MAKO,CALP1B,mBAAA,CAKO,QALP4L,WAKO,GAJLlL,YAAA,CAA8DsD,oBAAA;MAAlD1D,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAc,MAAA,IAAEnB,MAAA,CAAAyL,mBAAmB;;wBAAU,MAAEpL,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;QAClDG,YAAA,CAEYsD,oBAAA;MAFDP,IAAI,EAAC,QAAQ;MAAEnD,OAAK,EAAEJ,MAAA,CAAA2L,aAAa;MAAG7G,OAAO,EAAE9E,MAAA,CAAA4L;;wBAAe,MAEzEvL,MAAA,SAAAA,MAAA,Q,iBAFyE,MAEzE,E;;;sBATJ,MAGQ,CAHGL,MAAA,CAAA+C,UAAU,I,cAArBnD,mBAAA,CAGQ,OAAAiM,WAAA,GAFN/L,mBAAA,CAA0D,Y,6CAAvD,WAAS,IAAAA,mBAAA,CAAuC,gBAAAsD,gBAAA,CAA5BpD,MAAA,CAAA+C,UAAU,CAACM,KAAK,O,6CAAY,KAAG,G,+BACtDvD,mBAAA,CAAoC;MAAjCJ,KAAK,EAAC;IAAc,GAAC,UAAQ,O;;yBAapCc,YAAA,CAoDYyI,oBAAA;gBAnDDjJ,MAAA,CAAA8L,oBAAoB;iEAApB9L,MAAA,CAAA8L,oBAAoB,GAAA3K,MAAA;IAC5BkC,KAAK,EAAErD,MAAA,CAAA+L,iBAAiB,CAAC1I,KAAK;IAC/B8F,KAAK,EAAC,KAAK;IACXzJ,KAAK,EAAC,6BAA6B;IAClCsM,UAAU,EAAE,KAAK;IACjB,gBAAc,EAAE,IAAI;IACpB,kBAAgB,EAAE,KAAK;IACvB,sBAAoB,EAAE,KAAK;IAC3B,YAAU,EAAE;;IAqCF5C,MAAM,EAAA5H,QAAA,CACf,MAGO,CAHP1B,mBAAA,CAGO,QAHPmM,WAGO,GAFLzL,YAAA,CAAqDsD,oBAAA;MAAzC1D,OAAK,EAAEJ,MAAA,CAAAkM;IAAkB;wBAAE,MAAE7L,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;wBACzCG,YAAA,CAAuEsD,oBAAA;MAA5DP,IAAI,EAAC,SAAS;MAAEnD,OAAK,EAAEJ,MAAA,CAAAmM;;wBAAqB,MAAI9L,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;;sBAtC/D,MAkCM,CAlCKL,MAAA,CAAA+L,iBAAiB,I,cAA5BnM,mBAAA,CAkCM,OAlCNwM,WAkCM,GAjCJtM,mBAAA,CAqBM,OArBNuM,WAqBM,GApBJvM,mBAAA,CAUM,OAVNwM,WAUM,G,4BATJxM,mBAAA,CAAa,YAAT,MAAI,QACRU,YAAA,CAOEoG,sBAAA;MANQrC,OAAO,EAAEvE,MAAA,CAAA+L,iBAAiB,CAACQ,QAAQ;gEAA1BvM,MAAA,CAAA+L,iBAAiB,CAACQ,QAAQ,GAAApL,MAAA;MAC3C4F,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAC,MAAM;MACXwF,QAAQ,EAAE,IAAI;MACf9M,KAAK,EAAC,wBAAwB;MAC9BC,KAA2B,EAA3B;QAAA;MAAA;gCAGJG,mBAAA,CAQM,OARN2M,WAQM,G,4BAPJ3M,mBAAA,CAAoB,YAAhB,aAAW,QACfU,YAAA,CAKEoG,sBAAA;MAJQrC,OAAO,EAAEvE,MAAA,CAAA+L,iBAAiB,CAACW,eAAe;gEAAjC1M,MAAA,CAAA+L,iBAAiB,CAACW,eAAe,GAAAvL,MAAA;MAClD4F,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAC,MAAM;MACZtH,KAAK,EAAC;kCAIDM,MAAA,CAAA+L,iBAAiB,CAACY,WAAW,I,cAAxC/M,mBAAA,CAUM,OAVNgN,WAUM,GATJpM,YAAA,CAQWqM,mBAAA;MAPTxJ,KAAK,EAAC,QAAQ;MACdE,IAAI,EAAC,MAAM;MACVuJ,QAAQ,EAAE,KAAK;MAChB,WAAS,EAAT,EAAS;MACTnN,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBAEA,MAAkD,CAAlDG,mBAAA,CAAkD;QAA7CiN,SAAsC,EAA9B/M,MAAA,CAAA+L,iBAAiB,CAACY;;;;;kCAavCnM,YAAA,CA0CYyI,oBAAA;gBA1CQjJ,MAAA,CAAAgN,sBAAsB;iEAAtBhN,MAAA,CAAAgN,sBAAsB,GAAA7L,MAAA;IAAEkC,KAAK,EAAC,SAAS;IAAC8F,KAAK,EAAC,OAAO;IAAC,kBAAgB,EAAhB;;IAoC7DC,MAAM,EAAA5H,QAAA,CACf,MAGO,CAHP1B,mBAAA,CAGO,QAHPmN,WAGO,GAFLzM,YAAA,CAAiEsD,oBAAA;MAArD1D,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAAc,MAAA,IAAEnB,MAAA,CAAAgN,sBAAsB;;wBAAU,MAAE3M,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;QACpCL,MAAA,CAAAkN,wBAAwB,I,cAAzCxM,YAAA,CAAmHoD,oBAAA;;MAAxEP,IAAI,EAAC,SAAS;MAAEnD,OAAK,EAAEJ,MAAA,CAAAmN;;wBAAiC,MAAI9M,MAAA,SAAAA,MAAA,Q,iBAAJ,MAAI,E;;;sBAtC3G,MAYM,CAZNP,mBAAA,CAYM,OAZNsN,WAYM,GAXJ5M,YAAA,CASYqB,oBAAA;kBATQ7B,MAAA,CAAAqN,UAAU;mEAAVrN,MAAA,CAAAqN,UAAU,GAAAlM,MAAA;MAAEF,WAAW,EAAC,QAAQ;MAACtB,KAAoB,EAApB;QAAA;MAAA;;wBACnD,MAAmC,CAAnCa,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAqCuB,oBAAA;QAA1BC,KAAK,EAAC,MAAM;QAACC,KAAK,EAAC;UAC9BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC5BzB,YAAA,CAAmCuB,oBAAA;QAAxBC,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;;2BAE9BzB,YAAA,CAAyFsD,oBAAA;MAA9EP,IAAI,EAAC,SAAS;MAAEuB,OAAO,EAAE9E,MAAA,CAAAsN,gBAAgB;MAAGlN,OAAK,EAAEJ,MAAA,CAAAuN;;wBAAa,MAAElN,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;qCAE/EP,mBAAA,CAqBM,OArBN0N,WAqBM,GApBJ1N,mBAAA,CAUM,OAVN2N,WAUM,G,4BATJ3N,mBAAA,CAAa,YAAT,MAAI,QACRU,YAAA,CAOEoG,sBAAA;MANQrC,OAAO,EAAEvE,MAAA,CAAA0N,cAAc;gEAAd1N,MAAA,CAAA0N,cAAc,GAAAvM,MAAA;MAC/B4F,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAC,MAAM;MACXwF,QAAQ,EAAE,IAAI;MACf9M,KAAK,EAAC,wBAAwB;MAC9BC,KAA2B,EAA3B;QAAA;MAAA;gCAGJG,mBAAA,CAQM,OARN6N,WAQM,G,4BAPJ7N,mBAAA,CAAkB,YAAd,WAAS,QACbU,YAAA,CAKEoG,sBAAA;MAJQrC,OAAO,EAAEvE,MAAA,CAAAkN,wBAAwB;gEAAxBlN,MAAA,CAAAkN,wBAAwB,GAAA/L,MAAA;MACzC4F,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAC,MAAM;MACZtH,KAAK,EAAC;;;yBAadc,YAAA,CAaYyI,oBAAA;gBAbQjJ,MAAA,CAAA4N,eAAe;iEAAf5N,MAAA,CAAA4N,eAAe,GAAAzM,MAAA;IAAEkC,KAAK,EAAC,QAAQ;IAAC8F,KAAK,EAAC;;sBACxD,MAKE,CALF3I,YAAA,CAKEQ,mBAAA;kBAJShB,MAAA,CAAA6N,UAAU;mEAAV7N,MAAA,CAAA6N,UAAU,GAAA1M,MAAA;MACnBF,WAAW,EAAC,SAAS;MACrBtB,KAA2B,EAA3B;QAAA;MAAA,CAA2B;MAC1BmO,OAAK,EAAAC,SAAA,CAAQ/N,MAAA,CAAAgO,IAAI;4CAEpBxN,YAAA,CAA2EsD,oBAAA;MAAhEP,IAAI,EAAC,SAAS;MAAEuB,OAAO,EAAE9E,MAAA,CAAAiO,SAAS;MAAG7N,OAAK,EAAEJ,MAAA,CAAAgO;;wBAAM,MAAE3N,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;mCACpDL,MAAA,CAAAkO,QAAQ,I,cAAnBtO,mBAAA,CAIM,OAJNuO,WAIM,GAHJ3N,YAAA,CAEWqM,mBAAA;MAFDxJ,KAAK,EAAC,MAAM;MAACE,IAAI,EAAC,MAAM;MAAEuJ,QAAQ,EAAE,KAAK;MAAE,WAAS,EAAT;;wBACnD,MAAiC,CAAjChN,mBAAA,CAAiC;QAA5BiN,SAAqB,EAAb/M,MAAA,CAAAoO;MAAY,YAAAC,WAAA,E","ignoreList":[]}]}