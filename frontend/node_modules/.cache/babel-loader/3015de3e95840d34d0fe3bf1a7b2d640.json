{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Detail.vue?vue&type=template&id=32a7149a&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Detail.vue","mtime":1750929845018},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","id","ref","style","xmlns","viewBox","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_toDisplayString","$setup","contractTitle","_createVNode","_component_el_button","type","size","onClick","downloadContract","_component_el_icon","_component_Download","saveChanges","loading","isSaving","_component_DocumentAdd","_hoisted_5","_component_el_tabs","activeTab","$event","_component_el_tab_pane","label","name","_hoisted_6","_hoisted_7","_component_el_form","_component_el_form_item","_component_el_input","contractDetails","title","number","disabled","_component_el_select","_component_el_option","value","amount","prefix","_hoisted_8","company","_component_el_date_picker","signDate","startDate","expireDate","_hoisted_9","_hoisted_10","_component_el_tooltip","content","placement","_component_el_switch","enableInlineSuggestions","onChange","onInlineSuggestionsToggle","realTimePolishLoading","_hoisted_11","_component_Loading","_hoisted_12","_hoisted_13","_hoisted_14","manualAnalyzeText","_hoisted_15","_component_MagicStick","_hoisted_16","_hoisted_17","_component_Timer","estimatedTime","_hoisted_18","_component_Position","_hoisted_19","_hoisted_20","_hoisted_21","_component_Setting","_hoisted_22","polishPreferences","placeholder","_hoisted_23","contractType","_hoisted_24","_hoisted_25","_component_DocumentChecked","_hoisted_26","_component_el_checkbox_group","focus","_component_el_checkbox","_cache","_hoisted_27","_hoisted_28","_component_Notebook","_hoisted_29","newTerminology","term","append","_withCtx","addCustomTerminology","_component_Plus","customTerminologies","length","_hoisted_30","_Fragment","_renderList","index","_createBlock","_component_el_tag","key","closable","onClose","removeCustomTerminology","_hoisted_31","_hoisted_32","_hoisted_33","_component_Check","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_component_QuillEditor","toolbar","editorOption","modules","contentType","theme","onTextChange","onContractContentChange","_hoisted_38","_hoisted_39","_hoisted_40","startContractCheck","isChecking","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","checkPreferences","legalCompliance","completeness","riskAlert","_hoisted_49","_hoisted_50","_component_Reading","_hoisted_51","_hoisted_52","_hoisted_53","_component_InfoFilled","_hoisted_54","checkDepth","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_component_el_scrollbar","height","always","_hoisted_61","_hoisted_62","_hoisted_63","checkResult","totalIssues","_hoisted_64","_hoisted_65","_hoisted_66","criticalIssues","_hoisted_67","_hoisted_68","warningIssues","_hoisted_69","_hoisted_70","suggestions","_hoisted_71","_hoisted_72","_ctx","aiCheckFinished","_hoisted_73","_hoisted_74","_hoisted_75","fill","d","_hoisted_76","_component_el_collapse","activeCollapse","_component_el_collapse_item","_hoisted_77","_component_WarningFilled","legalComplianceIssues","_component_el_badge","_hoisted_78","_component_el_empty","description","issue","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","current","_hoisted_83","_hoisted_84","problem","_hoisted_85","viewRegulation","_hoisted_86","_component_Document","completenessIssues","_hoisted_87","_hoisted_88","_component_Warning","_hoisted_89","_hoisted_90","_hoisted_91","suggestion","_hoisted_92","_hoisted_93","riskAlerts","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_component_el_timeline","contractHistory","activity","_component_el_timeline_item","timestamp","time","_hoisted_100","goBack","isLoading","_normalizeClass","showAiSuggestions","isAiPanelCollapsed","_hoisted_101","_hoisted_102","toggleAiPanelCollapse","_component_ArrowRight","_component_ArrowLeft","hideAiPanel","_component_Close","_hoisted_103","aiSuggestions","syntax","terminology","_hoisted_104","activeSuggestionCollapse","_component_Edit","_hoisted_105","_hoisted_106","original","_hoisted_107","suggested","_hoisted_108","explanation","_hoisted_109","ignoreSuggestion","adoptSuggestion","_hoisted_110","_hoisted_111","_hoisted_112","_hoisted_113","_hoisted_114","_hoisted_115","applyAllSuggestions","circle"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contract\\Detail.vue"],"sourcesContent":["<template>\n  <div class=\"contract-detail-container\">\n    <div class=\"card\" v-loading=\"isLoading\">\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\n        <span id=\"contractTitleHeader\">{{ contractTitle }}</span>\n        <div>\n          <el-button type=\"default\" size=\"small\" class=\"me-2\" @click=\"downloadContract\">\n            <el-icon><Download /></el-icon> 下载Word\n          </el-button>\n          <el-button \n            type=\"primary\" \n            size=\"small\" \n            @click=\"saveChanges\" \n            :loading=\"isSaving\"\n          >\n            <el-icon><DocumentAdd /></el-icon> 保存更改\n          </el-button>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <el-tabs v-model=\"activeTab\" class=\"contract-detail-tabs\">\n          <el-tab-pane label=\"基本信息\" name=\"basicInfo\">\n            <h5>基本信息</h5>\n            <div class=\"row mb-3\">\n              <div class=\"col-md-6\">\n                <el-form label-position=\"top\">\n                  <el-form-item label=\"合同名称\">\n                    <el-input v-model=\"contractDetails.title\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"合同编号\">\n                    <el-input v-model=\"contractDetails.number\" disabled></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"合同类型\">\n                    <el-select v-model=\"contractDetails.type\" style=\"width: 100%;\">\n                      <el-option label=\"采购合同\" value=\"采购合同\"></el-option>\n                      <el-option label=\"销售合同\" value=\"销售合同\"></el-option>\n                      <el-option label=\"服务合同\" value=\"服务合同\"></el-option>\n                      <el-option label=\"合作协议\" value=\"合作协议\"></el-option>\n                      <el-option label=\"租赁合同\" value=\"租赁合同\"></el-option>\n                      <el-option label=\"其他\" value=\"其他\"></el-option>\n                    </el-select>\n                  </el-form-item>\n                  <el-form-item label=\"合同金额\">\n                    <el-input v-model=\"contractDetails.amount\" prefix=\"¥\"></el-input>\n                  </el-form-item>\n                </el-form>\n              </div>\n              <div class=\"col-md-6\">\n                <el-form label-position=\"top\">\n                  <el-form-item label=\"签约对方\">\n                    <el-input v-model=\"contractDetails.company\"></el-input>\n                  </el-form-item>\n                  <el-form-item label=\"签约日期\">\n                    <el-date-picker \n                      v-model=\"contractDetails.signDate\" \n                      type=\"date\" \n                      value-format=\"YYYY-MM-DD\"\n                      style=\"width: 100%;\">\n                    </el-date-picker>\n                  </el-form-item>\n                  <el-form-item label=\"生效日期\">\n                    <el-date-picker \n                      v-model=\"contractDetails.startDate\" \n                      type=\"date\" \n                      value-format=\"YYYY-MM-DD\"\n                      style=\"width: 100%;\">\n                    </el-date-picker>\n                  </el-form-item>\n                  <el-form-item label=\"到期日期\">\n                    <el-date-picker \n                      v-model=\"contractDetails.expireDate\" \n                      type=\"date\" \n                      value-format=\"YYYY-MM-DD\"\n                      style=\"width: 100%;\">\n                    </el-date-picker>\n                  </el-form-item>\n                </el-form>\n              </div>\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"合同文本\" name=\"contractText\">\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n              <h5>合同文本编辑</h5>\n              <div class=\"d-flex align-items-center\">\n                <el-tooltip content=\"启用/禁用编辑器中的内联建议\" placement=\"top\">\n                  <el-switch \n                    v-model=\"enableInlineSuggestions\" \n                    size=\"small\" \n                    active-text=\"内联建议\" \n                    style=\"margin-right: 15px;\"\n                    @change=\"onInlineSuggestionsToggle\"\n                  />\n                </el-tooltip>\n              <div v-if=\"realTimePolishLoading\" class=\"d-flex align-items-center\">\n                <el-icon class=\"is-loading\"><Loading /></el-icon>\n                <span class=\"ms-1\">AI分析中...</span>\n              </div>\n            </div>\n            </div>\n            \n            <!-- 使用flex布局容器包裹AI润色区和编辑器区，添加ref以便于JS操作 -->\n            <div class=\"contract-edit-wrapper\">\n              <!-- 删除badge容器 -->\n              \n              <div class=\"contract-edit-container\" ref=\"contractEditContainer\">\n                <!-- AI润色分析左侧区域 -->\n                <div class=\"ai-polish-sidebar\" ref=\"aiPolishSidebar\">\n                  <el-button \n                    type=\"primary\" \n                    size=\"large\" \n                    @click=\"manualAnalyzeText\" \n                    :loading=\"realTimePolishLoading\"\n                    :disabled=\"realTimePolishLoading\"\n                    class=\"ai-polish-button\"\n                  >\n                    <div class=\"ai-polish-button-content\">\n                      <el-icon class=\"ai-polish-icon no-bg\"><MagicStick /></el-icon>\n                      <span>{{ realTimePolishLoading ? '正在分析中...' : 'AI智能润色' }}</span>\n                    </div>\n                  </el-button>\n                  \n                  <div class=\"ai-polish-info\">\n                    <div class=\"time-estimate\" v-if=\"!realTimePolishLoading\">\n                      <el-icon><Timer /></el-icon>\n                      <span>预计用时: {{ estimatedTime }}</span>\n                    </div>\n                    <div class=\"shortcut-hint\">\n                      <el-icon><Position /></el-icon>\n                      <span>快捷键: Ctrl+Shift+A</span>\n                    </div>\n                  </div>\n                  \n                  <!-- 个性化定制选项区域 -->\n                  <div class=\"ai-polish-personalization\">\n                    <h6 class=\"personalization-title\">个性化定制</h6>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><Setting /></el-icon>\n                        <span>润色偏好</span>\n                      </div>\n                      \n                      <div class=\"preference-option\">\n                        <span>语言风格</span>\n                        <el-select v-model=\"polishPreferences.style\" size=\"small\" placeholder=\"选择风格\">\n                          <el-option label=\"正式严谨\" value=\"formal\"></el-option>\n                          <el-option label=\"中性专业\" value=\"neutral\"></el-option>\n                          <el-option label=\"简洁明了\" value=\"concise\"></el-option>\n                        </el-select>\n                      </div>\n                      \n                      <div class=\"preference-option\">\n                        <span>合同类型</span>\n                        <el-select v-model=\"polishPreferences.contractType\" size=\"small\" placeholder=\"选择类型\">\n                          <el-option label=\"通用合同\" value=\"general\"></el-option>\n                          <el-option label=\"买卖合同\" value=\"sales\"></el-option>\n                          <el-option label=\"劳务合同\" value=\"labor\"></el-option>\n                          <el-option label=\"租赁合同\" value=\"lease\"></el-option>\n                          <el-option label=\"技术合同\" value=\"technology\"></el-option>\n                        </el-select>\n                      </div>\n                    </div>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><DocumentChecked /></el-icon>\n                        <span>优化重点</span>\n                      </div>\n                      \n                      <div class=\"optimization-options\">\n                        <el-checkbox-group v-model=\"polishPreferences.focus\">\n                          <el-checkbox label=\"grammar\">语法规范</el-checkbox>\n                          <el-checkbox label=\"terminology\">专业术语</el-checkbox>\n                          <el-checkbox label=\"structure\">句式结构</el-checkbox>\n                          <el-checkbox label=\"consistency\">用词一致性</el-checkbox>\n                        </el-checkbox-group>\n                      </div>\n                    </div>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><Notebook /></el-icon>\n                        <span>术语词典</span>\n                      </div>\n                      \n                      <div class=\"terminology-manager\">\n                        <el-input\n                          v-model=\"newTerminology.term\"\n                          size=\"small\"\n                          placeholder=\"添加专业术语\"\n                          class=\"terminology-input\"\n                        >\n                          <template #append>\n                            <el-button @click=\"addCustomTerminology\">\n                              <el-icon><Plus /></el-icon>\n                            </el-button>\n                          </template>\n                        </el-input>\n                        \n                        <div class=\"terminology-list\" v-if=\"customTerminologies.length > 0\">\n                          <el-tag\n                            v-for=\"(term, index) in customTerminologies\"\n                            :key=\"index\"\n                            closable\n                            @close=\"removeCustomTerminology(index)\"\n                            class=\"terminology-tag\"\n                          >\n                            {{term}}\n                          </el-tag>\n                        </div>\n                        <div v-else class=\"terminology-empty\">\n                          <span class=\"text-muted\">添加常用术语以确保准确性</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"ai-polish-features\">\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>改善语法和表达</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>优化专业术语</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>增强阅读体验</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>保持个性化定制</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- 文本编辑器右侧区域 -->\n                <div class=\"editor-main-area\" ref=\"editorMainArea\">\n                  <QuillEditor\n                    v-model:content=\"contractDetails.content\"\n                    ref=\"quillEditor\"\n                    :toolbar=\"editorOption.modules.toolbar\"\n                    contentType=\"html\"\n                    class=\"contract-text-editor\"\n                    theme=\"snow\"\n                    @textChange=\"onContractContentChange\"\n                  />\n                </div>\n              </div>\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"合同检查\" name=\"contractCheck\">\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\n              <h5>合同检查审核</h5>\n            </div>\n\n            <!-- 使用与合同文本部分相同的布局结构 -->\n            <div class=\"contract-edit-wrapper\">\n              <div class=\"contract-edit-container\" ref=\"contractCheckContainer\">\n                <!-- 左侧工具栏和个性化设置区域 -->\n                <div class=\"ai-polish-sidebar check-sidebar\" ref=\"checkSidebar\">\n                  <el-button \n                    type=\"primary\" \n                    size=\"large\" \n                    @click=\"startContractCheck\" \n                    :loading=\"isChecking\"\n                    :disabled=\"isChecking\"\n                    class=\"ai-polish-button\"\n                  >\n                    <div class=\"ai-polish-button-content\">\n                      <el-icon class=\"ai-polish-icon no-bg\"><DocumentChecked /></el-icon>\n                      <span>{{ isChecking ? '检查中...' : 'AI智能检查' }}</span>\n                    </div>\n                  </el-button>\n                  \n                  <div class=\"ai-polish-info\">\n                    <div class=\"time-estimate\" v-if=\"!isChecking\">\n                      <el-icon><Timer /></el-icon>\n                      <span>预计用时: {{ estimatedTime }}</span>\n                    </div>\n                    <div class=\"shortcut-hint\">\n                      <el-icon><Position /></el-icon>\n                      <span>快捷键: Ctrl+Shift+C</span>\n                    </div>\n                  </div>\n                  \n                  <!-- 检查偏好设置区域 -->\n                  <div class=\"ai-polish-personalization\">\n                    <h6 class=\"personalization-title\">检查偏好设置</h6>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><Setting /></el-icon>\n                        <span>检查维度</span>\n                      </div>\n                      \n                      <div class=\"check-options\">\n                        <el-checkbox v-model=\"checkPreferences.legalCompliance\">法律合规性</el-checkbox>\n                        <el-checkbox v-model=\"checkPreferences.completeness\">条款完整性</el-checkbox>\n                        <el-checkbox v-model=\"checkPreferences.riskAlert\">风险提示</el-checkbox>\n                      </div>\n                    </div>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><Reading /></el-icon>\n                        <span>合同类型参考</span>\n                      </div>\n                      \n                      <div class=\"preference-option\">\n                        <span>合同类型</span>\n                        <el-select v-model=\"checkPreferences.contractType\" size=\"small\" placeholder=\"选择类型\">\n                          <el-option label=\"通用合同\" value=\"general\"></el-option>\n                          <el-option label=\"买卖合同\" value=\"sales\"></el-option>\n                          <el-option label=\"劳务合同\" value=\"labor\"></el-option>\n                          <el-option label=\"租赁合同\" value=\"lease\"></el-option>\n                          <el-option label=\"技术合同\" value=\"technology\"></el-option>\n                        </el-select>\n                      </div>\n                    </div>\n                    \n                    <div class=\"personalization-section\">\n                      <div class=\"section-header\">\n                        <el-icon><InfoFilled /></el-icon>\n                        <span>关注程度</span>\n                      </div>\n                      \n                      <div class=\"preference-option\">\n                        <span>检查深度</span>\n                        <el-select v-model=\"checkPreferences.checkDepth\" size=\"small\" placeholder=\"选择深度\">\n                          <el-option label=\"标准检查\" value=\"standard\"></el-option>\n                          <el-option label=\"深度检查\" value=\"deep\"></el-option>\n                          <el-option label=\"快速检查\" value=\"quick\"></el-option>\n                        </el-select>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div class=\"ai-polish-features\">\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>法律合规审查</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>条款完整性检查</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>潜在风险分析</span>\n                    </div>\n                    <div class=\"feature-item\">\n                      <el-icon><Check /></el-icon>\n                      <span>智能修改建议</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- 右侧检查结果区域 -->\n                <div class=\"editor-main-area check-result-area\" ref=\"checkResultArea\">\n                  <!-- 使用Element UI的el-scrollbar组件 -->\n                  <el-scrollbar height=\"calc(100% - 10px)\" always class=\"contract-check-scrollbar\">\n                    <div class=\"check-content-inner\" style=\"padding: 15px 20px;\">\n                      <!-- 检查结果概览卡片 -->\n                      <div class=\"check-result-card\">\n                        <div class=\"check-result-header\">\n                          <h6>检查结果概览</h6>\n                          <el-tag v-if=\"checkResult.totalIssues > 0\" type=\"danger\" size=\"small\">发现{{ checkResult.totalIssues }}个问题</el-tag>\n                          <el-tag v-else type=\"success\" size=\"small\">未发现问题</el-tag>\n                        </div>\n                        \n                        <div class=\"check-result-stats\">\n                          <div class=\"stat-item\">\n                            <div class=\"stat-value danger\">{{ checkResult.criticalIssues }}</div>\n                            <div class=\"stat-label\">严重问题</div>\n                          </div>\n                          <div class=\"stat-item\">\n                            <div class=\"stat-value warning\">{{ checkResult.warningIssues }}</div>\n                            <div class=\"stat-label\">警告</div>\n                          </div>\n                          <div class=\"stat-item\">\n                            <div class=\"stat-value info\">{{ checkResult.suggestions }}</div>\n                            <div class=\"stat-label\">建议</div>\n                          </div>\n                          <div class=\"stat-item\">\n                            <div class=\"stat-value\">{{ checkResult.totalIssues }}</div>\n                            <div class=\"stat-label\">问题总数</div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <!-- 无问题时显示的明确提示 -->\n                      <div v-if=\"aiCheckFinished && !isChecking && checkResult.totalIssues === 0\" class=\"el-alert el-alert--success\" style=\"margin: 8px 0 12px 0; padding: 12px 18px; border-radius: 4px;\">\n                        <div style=\"display: flex; align-items: center;\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1024 1024\" style=\"width: 20px; height: 20px; margin-right: 8px; color: #67c23a; flex-shrink:0;\">\n                            <path fill=\"currentColor\" d=\"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336L456.192 600.384z\"></path>\n                          </svg>\n                          <span style=\"font-size: 15px; font-weight: bold; color: #67c23a; margin-right: 6px;\">合同检查完成</span>\n                          <span style=\"font-size: 14px; color: #606266; font-weight: normal;\">AI分析完成，未发现明显风险。合同文本质量良好，符合常规法律和业务要求。</span>\n                        </div>\n                      </div>\n                      \n                      <!-- 检查结果详情 -->\n                      <div class=\"check-result-details\">\n                        <el-collapse v-model=\"activeCollapse\" class=\"check-collapse\">\n                          <el-collapse-item title=\"法律合规性\" name=\"legalCompliance\">\n                            <template #title>\n                              <div class=\"collapse-header\">\n                                <el-icon class=\"text-danger\"><WarningFilled /></el-icon>\n                                <span>法律合规性</span>\n                                <el-badge :value=\"checkResult.legalComplianceIssues.length\" type=\"danger\" class=\"ms-2\" v-if=\"checkResult.legalComplianceIssues.length > 0\"></el-badge>\n                              </div>\n                            </template>\n                            \n                            <div v-if=\"checkResult.legalComplianceIssues.length === 0\" class=\"empty-result\">\n                              <el-empty description=\"未发现法律合规性问题\" :image-size=\"80\"></el-empty>\n                            </div>\n                            \n                            <div v-for=\"(issue, index) in checkResult.legalComplianceIssues\" :key=\"'legal-'+index\" class=\"check-issue-card\">\n                              <div class=\"issue-header\">\n                                <el-icon class=\"text-danger fs-4\"><WarningFilled /></el-icon>\n                                <h6>{{ issue.title }}</h6>\n                              </div>\n                              <div class=\"issue-content\">\n                                <div class=\"issue-field\">\n                                  <div class=\"field-label\">当前条款：</div>\n                                  <div class=\"field-value\">{{ issue.current }}</div>\n                                </div>\n                                <div class=\"issue-field\">\n                                  <div class=\"field-label\">问题：</div>\n                                  <div class=\"field-value text-danger\">{{ issue.problem }}</div>\n                                </div>\n                              </div>\n                              <div class=\"issue-actions\">\n                                <el-button size=\"small\" type=\"primary\" @click=\"viewRegulation(issue)\">查看法规</el-button>\n                                <el-button size=\"small\" type=\"default\">忽略</el-button>\n                              </div>\n                            </div>\n                          </el-collapse-item>\n\n                          <el-collapse-item title=\"条款完整性\" name=\"clauseCompleteness\">\n                            <template #title>\n                              <div class=\"collapse-header\">\n                                <el-icon class=\"text-warning\"><Document /></el-icon>\n                                <span>条款完整性</span>\n                                <el-badge :value=\"checkResult.completenessIssues.length\" type=\"warning\" class=\"ms-2\" v-if=\"checkResult.completenessIssues.length > 0\"></el-badge>\n                              </div>\n                            </template>\n                            \n                            <div v-if=\"checkResult.completenessIssues.length === 0\" class=\"empty-result\">\n                              <el-empty description=\"未发现条款完整性问题\" :image-size=\"80\"></el-empty>\n                            </div>\n                            \n                            <div v-for=\"(issue, index) in checkResult.completenessIssues\" :key=\"'comp-'+index\" class=\"check-issue-card\">\n                              <div class=\"issue-header\">\n                                <el-icon class=\"text-warning fs-4\"><Warning /></el-icon>\n                                <h6>{{ issue.title }}</h6>\n                              </div>\n                              <div class=\"issue-content\">\n                                <div class=\"issue-field\">\n                                  <div class=\"field-label\">建议：</div>\n                                  <div class=\"field-value\">{{ issue.suggestion }}</div>\n                                </div>\n                              </div>\n                              <div class=\"issue-actions\">\n                                <el-button size=\"small\" type=\"default\">忽略</el-button>\n                              </div>\n                            </div>\n                          </el-collapse-item>\n\n                          <el-collapse-item title=\"风险提示\" name=\"riskAlert\">\n                            <template #title>\n                              <div class=\"collapse-header\">\n                                <el-icon class=\"text-info\"><InfoFilled /></el-icon>\n                                <span>风险提示</span>\n                                <el-badge :value=\"checkResult.riskAlerts.length\" type=\"info\" class=\"ms-2\" v-if=\"checkResult.riskAlerts.length > 0\"></el-badge>\n                              </div>\n                            </template>\n                            \n                            <div v-if=\"checkResult.riskAlerts.length === 0\" class=\"empty-result\">\n                              <el-empty description=\"未发现风险提示\" :image-size=\"80\"></el-empty>\n                            </div>\n                            \n                            <div v-for=\"(issue, index) in checkResult.riskAlerts\" :key=\"'risk-'+index\" class=\"check-issue-card\">\n                              <div class=\"issue-header\">\n                                <el-icon class=\"text-info fs-4\"><InfoFilled /></el-icon>\n                                <h6>{{ issue.title }}</h6>\n                              </div>\n                              <div class=\"issue-content\">\n                                <div class=\"issue-field\">\n                                  <div class=\"field-label\">建议：</div>\n                                  <div class=\"field-value\">{{ issue.suggestion }}</div>\n                                </div>\n                              </div>\n                              <div class=\"issue-actions\">\n                                <el-button size=\"small\" type=\"default\">忽略</el-button>\n                              </div>\n                            </div>\n                          </el-collapse-item>\n                        </el-collapse>\n                      </div>\n                    </div>\n                  </el-scrollbar>\n                </div>\n              </div>\n            </div>\n          </el-tab-pane>\n\n          <el-tab-pane label=\"操作记录\" name=\"history\">\n            <h5>操作记录</h5>\n            <el-timeline>\n              <el-timeline-item\n                v-for=\"(activity, index) in contractHistory\"\n                :key=\"index\"\n                :timestamp=\"activity.time\"\n              >\n                {{ activity.content }}\n              </el-timeline-item>\n            </el-timeline>\n            <el-empty \n              v-if=\"contractHistory.length === 0\" \n              description=\"暂无操作记录\"\n            ></el-empty>\n          </el-tab-pane>\n        </el-tabs>\n        \n        <hr>\n        <div class=\"mt-3 text-end\">\n          <el-button @click=\"goBack\">返回列表</el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- AI建议面板 (初始隐藏) -->\n    <div \n      v-if=\"activeTab === 'contractText'\"\n      class=\"ai-suggestions-panel\" \n      :class=\"{ 'show': showAiSuggestions, 'collapsed': isAiPanelCollapsed }\"\n      id=\"aiSuggestionsPanel\"\n    >\n      <div class=\"panel-header\">\n        <h5><el-icon class=\"text-warning\"><Reading /></el-icon> AI 润色建议</h5>\n        <div class=\"panel-controls\">\n          <el-button type=\"link\" @click=\"toggleAiPanelCollapse\">\n            <el-icon v-if=\"isAiPanelCollapsed\"><ArrowRight /></el-icon>\n            <el-icon v-else><ArrowLeft /></el-icon>\n          </el-button>\n          <el-button type=\"link\" @click=\"hideAiPanel\">\n            <el-icon><Close /></el-icon>\n          </el-button>\n        </div>\n      </div>\n      \n      <div v-if=\"realTimePolishLoading\" class=\"text-center my-2\">\n        <el-icon class=\"is-loading\"><Loading /></el-icon>\n        <span class=\"ms-1\">正在分析内容...</span>\n      </div>\n      \n      <div v-if=\"!realTimePolishLoading && aiSuggestions.syntax.length === 0 && aiSuggestions.terminology.length === 0\" class=\"text-center my-3 text-muted\">\n        <el-icon><InfoFilled /></el-icon>\n        <p>没有建议可显示</p>\n        <p class=\"small\">点击上方\"AI润色分析\"按钮可获取建议</p>\n      </div>\n      \n      <el-collapse v-model=\"activeSuggestionCollapse\">\n        <el-collapse-item name=\"syntax\">\n          <template #title>\n            <span><el-icon class=\"me-1\"><Edit /></el-icon> 语法与格式 ({{ aiSuggestions.syntax.length }})</span>\n          </template>\n          \n          <div v-if=\"aiSuggestions.syntax.length === 0\" class=\"p-3 text-center text-muted\">\n            没有语法或格式问题\n          </div>\n          \n          <div \n            v-for=\"(suggestion, index) in aiSuggestions.syntax\" \n            :key=\"'syntax-'+index\" \n            class=\"suggestion-item\"\n          >\n            <div class=\"original-text\">{{ suggestion.original }}</div>\n            <div class=\"suggested-text\">{{ suggestion.suggested }}</div>\n            <p class=\"explanation\">{{ suggestion.explanation }}</p>\n            <div class=\"suggestion-actions text-end\">\n              <el-button size=\"small\" @click=\"ignoreSuggestion('syntax', index)\">忽略</el-button>\n              <el-button size=\"small\" type=\"success\" @click=\"adoptSuggestion('syntax', index)\">采纳</el-button>\n            </div>\n          </div>\n        </el-collapse-item>\n\n        <el-collapse-item name=\"terminology\">\n          <template #title>\n            <span><el-icon class=\"me-1\"><Reading /></el-icon> 专业术语 ({{ aiSuggestions.terminology.length }})</span>\n          </template>\n          \n          <div v-if=\"aiSuggestions.terminology.length === 0\" class=\"p-3 text-center text-muted\">\n            没有术语问题\n          </div>\n          \n          <div \n            v-for=\"(suggestion, index) in aiSuggestions.terminology\" \n            :key=\"'term-'+index\" \n            class=\"suggestion-item\"\n          >\n            <div class=\"original-text\">{{ suggestion.original }}</div>\n            <div class=\"suggested-text\">{{ suggestion.suggested }}</div>\n            <p class=\"explanation\">{{ suggestion.explanation }}</p>\n            <div class=\"suggestion-actions text-end\">\n              <el-button size=\"small\" @click=\"ignoreSuggestion('terminology', index)\">忽略</el-button>\n              <el-button size=\"small\" type=\"success\" @click=\"adoptSuggestion('terminology', index)\">采纳</el-button>\n            </div>\n          </div>\n        </el-collapse-item>\n      </el-collapse>\n\n      <div class=\"text-center mt-3\" v-if=\"aiSuggestions.syntax.length > 0 || aiSuggestions.terminology.length > 0\">\n        <el-button type=\"primary\" size=\"small\" @click=\"applyAllSuggestions\">应用所有采纳的建议</el-button>\n      </div>\n    </div>\n\n    <!-- 永久可见的展开按钮，只在合同文本标签页且面板隐藏时显示 -->\n    <div \n      v-if=\"activeTab === 'contractText' && !showAiSuggestions\"\n      class=\"panel-open-button\"\n      @click=\"showAiSuggestions = true\"\n    >\n      <el-tooltip content=\"显示AI润色建议\" placement=\"left\">\n        <el-button type=\"primary\" size=\"small\" circle>\n          <el-icon><MagicStick /></el-icon>\n        </el-button>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed, watch, onUnmounted, nextTick, onBeforeUnmount } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage, ElLoading, ElMessageBox } from 'element-plus'\nimport {\n  Download, DocumentAdd, MagicStick, Check, Warning, WarningFilled,\n  Document, InfoFilled, Edit, Reading, Close, Loading, ArrowRight, ArrowLeft,\n  Timer, Position, Setting, DocumentChecked, Notebook, Plus\n} from '@element-plus/icons-vue'\nimport { \n  getContractDetail, \n  updateContract, \n  checkContract,\n  aiPolishContract \n} from '@/api/contract'\nimport request from '@/utils/request'\n// 引入富文本编辑器\nimport { QuillEditor } from '@vueup/vue-quill'\n// 引入富文本编辑器样式\nimport '@vueup/vue-quill/dist/vue-quill.snow.css'\n// 引入lodash的debounce函数用于性能优化\nimport { debounce } from 'lodash-es'\n\n// 延迟加载Quill模块确保只在客户端执行\nlet SuggestionBlot\nlet SuggestionModule\n\n// 初始化Quill扩展 - 确保只在浏览器环境中执行\nconst initQuillExtensions = () => {\n  if (typeof window === 'undefined') return\n  \n  // 确保Quill已经通过CDN加载\n  if (!window.Quill) {\n    console.error('Quill未加载，无法初始化扩展')\n    return\n  }\n  \n  // 创建自定义Quill内联格式 - 建议高亮\n  const InlineSuggestionBlot = window.Quill.import('blots/inline')\n  SuggestionBlot = class extends InlineSuggestionBlot {\n    static create(value) {\n      const node = super.create()\n      node.setAttribute('data-suggestion-id', value.id)\n      node.setAttribute('class', 'suggestion-highlight')\n      node.setAttribute('data-original', value.original)\n      node.setAttribute('data-suggested', value.suggested)\n      \n      // 添加提示和更明显的视觉样式\n      node.title = '点击查看修改建议'\n      node.style.position = 'relative'\n      node.style.backgroundColor = 'rgba(255, 217, 102, 0.3)'\n      node.style.borderBottom = '1px dashed #ffb300'\n      node.style.padding = '0 2px'\n      node.style.cursor = 'pointer'\n      \n      return node\n    }\n  \n    static formats(node) {\n      return {\n        id: node.getAttribute('data-suggestion-id'),\n        original: node.getAttribute('data-original'),\n        suggested: node.getAttribute('data-suggested')\n      }\n    }\n  }\n  SuggestionBlot.blotName = 'suggestion'\n  SuggestionBlot.tagName = 'span'\n  window.Quill.register(SuggestionBlot)\n  \n  // 自定义Quill Module - 处理建议交互\n  SuggestionModule = class {\n    constructor(quill, options) {\n      this.quill = quill\n      this.options = options\n      this.suggestions = options.suggestions || []\n      this.container = document.createElement('div')\n      this.container.className = 'ql-suggestion-tooltip'\n      this.container.style.display = 'none'\n      document.body.appendChild(this.container)\n      \n      this.quill.on('text-change', () => {\n        this.update()\n      })\n      \n      // 保存点击监听器的引用以便于清理\n      this._clickListener = (e) => {\n        if (e.target && e.target.classList.contains('suggestion-highlight')) {\n          this.showTooltip(e.target)\n        } else {\n          this.hideTooltip()\n        }\n      }\n      \n      this.quill.root.addEventListener('click', this._clickListener)\n      \n      // 使用MutationObserver替代DOMNodeInserted监听\n      this.observer = new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n          if (mutation.type === 'childList' || mutation.type === 'characterData') {\n            this.update()\n          }\n        }\n      })\n      \n      // 配置observer监听子节点变化和内容变化\n      this.observer.observe(this.quill.root, {\n        childList: true,\n        subtree: true,\n        characterData: true\n      })\n    }\n    \n    update() {\n      // 更新建议标记\n    }\n    \n    showTooltip(element) {\n      const rect = element.getBoundingClientRect()\n      const id = element.getAttribute('data-suggestion-id')\n      const original = element.getAttribute('data-original')\n      const suggested = element.getAttribute('data-suggested')\n      \n      // 增强工具提示，确保前后对比清晰\n      this.container.innerHTML = `\n        <div class=\"suggestion-tooltip-content\">\n          <div class=\"suggestion-tooltip-header\">AI文本优化建议</div>\n          <div class=\"suggestion-tooltip-body\">\n            <div class=\"suggestion-label\">原文本:</div>\n            <div class=\"suggestion-original\">${original}</div>\n            <div class=\"suggestion-arrow\"><span>→</span></div>\n            <div class=\"suggestion-label\">建议修改为:</div>\n            <div class=\"suggestion-suggested\">${suggested}</div>\n            <div class=\"suggestion-diff\">\n              ${this._generateDiff(original, suggested)}\n            </div>\n          </div>\n          <div class=\"suggestion-actions\">\n            <button class=\"btn-adopt\" data-id=\"${id}\">采纳</button>\n            <button class=\"btn-ignore\" data-id=\"${id}\">忽略</button>\n          </div>\n        </div>\n      `\n      \n      this.container.style.display = 'block'\n      this.container.style.top = `${rect.bottom + window.scrollY + 5}px`\n      this.container.style.left = `${rect.left + window.scrollX}px`\n      \n      // 使用现代事件绑定方法\n      const adoptBtn = this.container.querySelector('.btn-adopt')\n      const ignoreBtn = this.container.querySelector('.btn-ignore')\n      \n      // 移除旧的事件监听器（如果有）\n      if (this._adoptListener) {\n        adoptBtn.removeEventListener('click', this._adoptListener)\n      }\n      if (this._ignoreListener) {\n        ignoreBtn.removeEventListener('click', this._ignoreListener)\n      }\n      \n      // 添加新的事件监听器\n      this._adoptListener = () => {\n        this.options.onAdopt && this.options.onAdopt(id)\n        this.hideTooltip()\n      }\n      \n      this._ignoreListener = () => {\n        this.options.onIgnore && this.options.onIgnore(id)\n        this.hideTooltip()\n      }\n      \n      adoptBtn.addEventListener('click', this._adoptListener)\n      ignoreBtn.addEventListener('click', this._ignoreListener)\n    }\n    \n    // 生成差异对比\n    _generateDiff(original, suggested) {\n      // 简单的差异标记\n      try {\n        if (!original || !suggested) return '';\n        \n        const words1 = original.split(/\\s+/);\n        const words2 = suggested.split(/\\s+/);\n        \n        // 寻找第一个不同的词\n        let firstDiff = 0;\n        while (firstDiff < words1.length && firstDiff < words2.length && \n              words1[firstDiff] === words2[firstDiff]) {\n          firstDiff++;\n        }\n        \n        // 找最后一个不同的词（从后往前）\n        let lastDiff1 = words1.length - 1;\n        let lastDiff2 = words2.length - 1;\n        while (lastDiff1 >= 0 && lastDiff2 >= 0 && \n              words1[lastDiff1] === words2[lastDiff2]) {\n          lastDiff1--;\n          lastDiff2--;\n        }\n        \n        // 提取相同的前缀和后缀\n        const prefix = words1.slice(0, firstDiff).join(' ');\n        const suffix1 = words1.slice(lastDiff1 + 1).join(' ');\n        \n        // 提取不同的部分\n        const diff1 = words1.slice(firstDiff, lastDiff1 + 1).join(' ');\n        const diff2 = words2.slice(firstDiff, lastDiff2 + 1).join(' ');\n        \n        return `\n          <div class=\"diff-explain\">具体差异:</div>\n          <div class=\"diff-content\">\n            ${prefix ? `<span class=\"diff-common\">${prefix}</span> ` : ''}\n            <span class=\"diff-removed\">${diff1}</span> → \n            <span class=\"diff-added\">${diff2}</span>\n            ${suffix1 ? ` <span class=\"diff-common\">${suffix1}</span>` : ''}\n          </div>\n        `;\n      } catch (e) {\n        console.error('生成差异对比失败:', e);\n        return '';\n      }\n    }\n    \n    hideTooltip() {\n      this.container.style.display = 'none'\n    }\n    \n    applySuggestions(suggestions) {\n      this.suggestions = suggestions\n      \n      // 先清除所有已有的建议标记\n      this.clearAllSuggestionFormats()\n      \n      // 应用新的建议标记\n      suggestions.forEach(suggestion => {\n        // 在文档中查找建议的原始文本位置\n        const content = this.quill.getText()\n        let index = content.indexOf(suggestion.original)\n        \n        if (index !== -1) {\n          // 添加建议格式\n          this.quill.formatText(index, suggestion.original.length, {\n            'suggestion': {\n              id: suggestion.id,\n              original: suggestion.original,\n              suggested: suggestion.suggested\n            }\n          }, 'api');\n        }\n      });\n    }\n    \n    clearAllSuggestionFormats() {\n      const content = this.quill.getText()\n      this.quill.formatText(0, content.length, { 'suggestion': false }, 'api')\n    }\n    \n    // 在组件销毁时断开MutationObserver\n    destroy() {\n      // 清理观察器\n      if (this.observer) {\n        this.observer.disconnect()\n        this.observer = null\n      }\n      \n      // 清理事件监听器\n      if (this.quill && this.quill.root) {\n        this.quill.root.removeEventListener('click', this._clickListener)\n      }\n      \n      // 清理按钮事件监听器\n      if (this._adoptListener) {\n        const adoptBtn = this.container.querySelector('.btn-adopt')\n        if (adoptBtn) {\n          adoptBtn.removeEventListener('click', this._adoptListener)\n        }\n      }\n      \n      if (this._ignoreListener) {\n        const ignoreBtn = this.container.querySelector('.btn-ignore')\n        if (ignoreBtn) {\n          ignoreBtn.removeEventListener('click', this._ignoreListener)\n        }\n      }\n      \n      // 移除tooltip容器\n      if (this.container && this.container.parentNode) {\n        this.container.parentNode.removeChild(this.container)\n        this.container = null\n      }\n    }\n  }\n  \n  window.Quill.register('modules/suggestion', SuggestionModule)\n}\n\nexport default {\n  name: 'ContractDetail',\n  components: {\n    QuillEditor,\n    Download, DocumentAdd, MagicStick, Check, Warning, WarningFilled,\n    Document, InfoFilled, Edit, Reading, Close, Loading, ArrowRight, ArrowLeft,\n    Timer, Position, Setting, DocumentChecked, Notebook, Plus\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    // 确保contractId是数字类型，且只在合同详情页面有效\n    const contractId = computed(() => {\n      // 如果不在合同详情页面，直接返回null\n      if (route.name !== 'ContractDetail') {\n        return null;\n      }\n      const id = route.params.id;\n      return !isNaN(Number(id)) ? Number(id) : null;\n    })\n    \n    // 状态变量和响应式数据\n    const activeTab = ref('basicInfo')\n    const activeCollapse = ref(['legalCompliance', 'clauseCompleteness', 'riskAlert'])\n    const activeSuggestionCollapse = ref(['syntax', 'terminology'])\n    \n    // 个性化润色偏好设置\n    const polishPreferences = reactive({\n      style: 'neutral',       // 语言风格：正式严谨、中性专业、简洁明了\n      contractType: 'general', // 合同类型：通用、买卖、劳务等\n      focus: ['grammar', 'terminology'], // 优化重点：语法、术语、句式、一致性\n    })\n    \n    // 检查偏好设置\n    const checkPreferences = reactive({\n      legalCompliance: true,  // 法律合规性检查\n      completeness: true,     // 条款完整性检查\n      riskAlert: true,        // 风险提示检查\n      contractType: 'general', // 合同类型参考：通用、买卖、劳务等\n      checkDepth: 'standard'  // 检查深度：标准、深度、快速\n    })\n    \n    // 自定义术语管理\n    const customTerminologies = ref([])\n    const newTerminology = reactive({\n      term: ''\n    })\n    \n    // 添加自定义术语\n    const addCustomTerminology = () => {\n      if (!newTerminology.term.trim()) return\n      \n      if (!customTerminologies.value.includes(newTerminology.term.trim())) {\n        customTerminologies.value.push(newTerminology.term.trim())\n        newTerminology.term = ''\n        \n        // 如果用户添加了术语，自动勾选\"术语\"优化重点\n        if (!polishPreferences.focus.includes('terminology')) {\n          polishPreferences.focus.push('terminology')\n        }\n        \n        // 保存到本地存储\n        localStorage.setItem('customTerminologies', JSON.stringify(customTerminologies.value))\n        \n        ElMessage.success('已添加术语')\n      } else {\n        ElMessage.warning('该术语已存在')\n        newTerminology.term = ''\n      }\n    }\n    \n    // 移除自定义术语\n    const removeCustomTerminology = (index) => {\n      customTerminologies.value.splice(index, 1)\n      \n      // 保存到本地存储\n      localStorage.setItem('customTerminologies', JSON.stringify(customTerminologies.value))\n    }\n    \n    const isChecking = ref(false)\n    const quillEditor = ref(null)\n    const showAiSuggestions = ref(false)\n    const isLoading = ref(false)\n    const isSaving = ref(false)\n    \n    // 添加合同编辑区域的引用\n    const contractEditContainer = ref(null)\n    const aiPolishSidebar = ref(null)\n    const editorMainArea = ref(null)\n    \n    // 添加合同检查区域的引用\n    const contractCheckContainer = ref(null)\n    const checkSidebar = ref(null)\n    const checkResultArea = ref(null)\n    \n    // 实时AI润色相关状态，改为手动触发\n    const isRealTimePolishing = ref(false) // 改为默认关闭\n    const realTimePolishLoading = ref(false)\n    const lastAnalyzedContent = ref('')\n    const lastAnalysisTime = ref(0)\n    \n    // 内联建议设置\n    const enableInlineSuggestions = ref(true) // 控制是否在编辑器中显示内联建议\n    \n    // 面板折叠状态\n    const isAiPanelCollapsed = ref(false)\n    \n    // 切换面板折叠状态\n    const toggleAiPanelCollapse = () => {\n      isAiPanelCollapsed.value = !isAiPanelCollapsed.value\n    }\n    \n    // 富文本编辑器配置\n    const editorOption = {\n      placeholder: '请输入合同内容',\n      modules: {\n        toolbar: [\n          ['bold', 'italic', 'underline', 'strike'],\n          ['blockquote', 'code-block'],\n          [{ 'header': 1 }, { 'header': 2 }],\n          [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n          [{ 'script': 'sub' }, { 'script': 'super' }],\n          [{ 'indent': '-1' }, { 'indent': '+1' }],\n          [{ 'direction': 'rtl' }],\n          [{ 'size': ['small', false, 'large', 'huge'] }],\n          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n          [{ 'color': [] }, { 'background': [] }],\n          [{ 'font': [] }],\n          [{ 'align': [] }],\n          ['clean']\n        ],\n        suggestion: {\n          suggestions: [],\n          onAdopt: (suggestionId) => {\n            adoptInlineEditSuggestion(suggestionId)\n          },\n          onIgnore: (suggestionId) => {\n            ignoreInlineEditSuggestion(suggestionId)\n          }\n        }\n      }\n    }\n    \n    // 合同详情数据\n    const contractDetails = reactive({\n      id: contractId.value,\n      number: '',\n      title: '',\n      type: '',\n      amount: '',\n      company: '',\n      signDate: '',\n      startDate: '',\n      expireDate: '',\n      content: '',\n      status: '',\n      created_by: null,\n      created_at: '',\n      updated_at: '',\n      attachments: [],\n      actions: []\n    })\n    \n    // 计算合同标题\n    const contractTitle = computed(() => {\n      return contractDetails.title ? `合同详情: ${contractDetails.number}` : '加载中...'\n    })\n\n    // 合同检查结果\n    const checkResult = reactive({\n      totalIssues: 0,\n      criticalIssues: 0,\n      warningIssues: 0,\n      suggestions: 0,\n      legalComplianceIssues: [],\n      completenessIssues: [],\n      riskAlerts: []\n    })\n\n    // AI建议\n    const aiSuggestions = reactive({\n      syntax: [],\n      terminology: []\n    })\n\n    // 操作历史 - 从合同actions中获取\n    const contractHistory = computed(() => {\n      return contractDetails.actions?.map(action => ({\n        time: action.created_at,\n        content: `${action.user?.username || '系统'} ${action.description}`\n      })) || []\n    })\n\n    // 获取合同详情\n    const getContractDetails = async (loadSilently = false) => {\n      try {\n        // 检查是否在合同详情页面\n        if (route.name !== 'ContractDetail') {\n          console.log('不在合同详情页面，跳过加载')\n          return\n        }\n        \n        // 检查contractId是否有效\n        if (!contractId.value || contractId.value === 'contract' || isNaN(contractId.value)) {\n          console.log('无效的合同ID:', contractId.value)\n          // 不显示错误消息，只在控制台输出日志\n          // ElMessage.error('无效的合同ID')\n          router.push({ name: 'Contract' })\n          return\n        }\n        \n        isLoading.value = true\n        const response = await getContractDetail(contractId.value)\n        console.log('合同详情API响应:', response)\n        \n        // 确保response.data存在，适应request.js中的数据结构处理\n        const contractData = response.data || response\n        \n        // 填充合同详情\n        Object.keys(contractDetails).forEach(key => {\n          if (key in contractData) {\n            contractDetails[key] = contractData[key]\n          }\n        })\n        \n        // 特殊处理content字段\n        if (contractData.content) {\n          contractDetails.content = contractData.content\n        } else {\n          // 修正默认内容，移除空标签和无意义的省略号\n          contractDetails.content = `<p>这里是合同文本内容，请编辑...</p>\n<p><strong>甲方：</strong>我方公司名称</p>\n<p><strong>乙方：</strong>${contractDetails.company || '对方公司'}</p>`\n        }\n        \n        // 转换日期格式\n        if (contractData.sign_date) contractDetails.signDate = contractData.sign_date\n        if (contractData.start_date) contractDetails.startDate = contractData.start_date\n        if (contractData.expire_date) contractDetails.expireDate = contractData.expire_date\n        \n        // 格式化金额\n        if (contractData.amount) {\n          contractDetails.amount = Number(contractData.amount).toLocaleString('zh-CN')\n        }\n        \n        // 只有在非静默加载时才显示成功提示\n        if (!loadSilently) {\n          ElMessage.success('合同详情加载成功')\n        }\n      } catch (error) {\n        console.error('加载合同详情失败:', error)\n        ElMessage.error('加载合同详情失败，请稍后重试')\n      } finally {\n        isLoading.value = false\n      }\n    }\n\n    // 返回列表\n    const goBack = () => {\n      router.push({ name: 'Contract' })\n    }\n\n    // 保存更改\n    const saveChanges = async () => {\n      try {\n        isSaving.value = true\n        const loading = ElLoading.service({\n          lock: true,\n          text: '保存中...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        })\n        \n        // 准备更新数据\n        const isValidDate = (str) => /^\\d{4}-\\d{2}-\\d{2}$/.test(str);\n        const isValidAmount = (val) => /^\\d+(\\.\\d{1,2})?$/.test(val);\n        const updateData = {\n          title: contractDetails.title,\n          type: contractDetails.type,\n          amount: isValidAmount(contractDetails.amount.replace(/[^\\d.]/g, '')) ? contractDetails.amount.replace(/[^\\d.]/g, '') : null,\n          company: contractDetails.company,\n          sign_date: isValidDate(contractDetails.signDate) ? contractDetails.signDate : null,\n          start_date: isValidDate(contractDetails.startDate) ? contractDetails.startDate : null,\n          expire_date: isValidDate(contractDetails.expireDate) ? contractDetails.expireDate : null,\n          content: contractDetails.content\n        }\n        \n        // 调用API保存更新\n        await updateContract(contractId.value, updateData)\n        \n        ElMessage.success('合同更改已保存')\n        \n        // 重新获取最新数据，静默加载不显示提示\n        await getContractDetails(true)\n        \n        loading.close()\n      } catch (error) {\n        console.error('保存合同更改失败:', error)\n        \n        // 添加详细错误信息日志\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n        }\n        \n        ElMessage.error('保存失败，请检查输入内容和日期格式')\n      } finally {\n        isSaving.value = false\n      }\n    }\n\n    // 开始合同检查\n    const startContractCheck = async () => {\n      console.log(\"%c========== 开始合同检查 ==========\", \"background:#3a8ee6;color:white;padding:4px 8px;border-radius:4px;font-weight:bold;\");\n      console.log(\"startContractCheck函数被调用\");\n      \n      // 强制修复滚动样式\n      if (checkResultArea.value) {\n        console.log(\"确保检查结果区域样式正确\");\n        \n        // 确保check-result-area容器占满高度\n        checkResultArea.value.style.height = '100%';\n        \n        // el-scrollbar将自动处理滚动，不需要额外设置\n        console.log(\"使用el-scrollbar组件处理滚动\");\n      }\n      \n      // 不再尝试处理自定义滚动容器，而是完全依赖el-scrollbar\n      \n      // 尝试检索当前活动的标签\n      console.log(\"当前活动标签：\", activeTab.value);\n      // 检查HTML是否存在\n      if (document.querySelector(\".contract-edit-container\")) {\n        console.log(\"合同检查容器DOM元素存在\");\n      } else {\n        console.log(\"警告：合同检查容器DOM元素不存在！\");\n        // 尝试查找其他可能的容器\n        if (document.querySelector(\".contract-detail-container\")) {\n          console.log(\"发现合同详情容器元素\");\n        }\n        if (document.getElementById(\"contractCheckContainer\")) {\n          console.log(\"通过ID找到合同检查容器元素\");\n        }\n      }\n      \n      // 检查滚动容器状态\n      if (checkResultArea.value) {\n        const style = window.getComputedStyle(checkResultArea.value);\n        console.log(\"检查结果区域样式:\", {\n          display: style.display,\n          height: style.height,\n          overflow: style.overflow,\n          position: style.position\n        });\n        \n        // 强制刷新布局\n        console.log(\"强制刷新检查结果区域布局\");\n        checkResultArea.value.style.display = 'none';\n        setTimeout(() => {\n          checkResultArea.value.style.display = 'flex';\n          \n          // 获取滚动容器并检查\n          let scrollWrapper = checkResultArea.value.querySelector('.check-content-scroll-wrapper');\n          if (!scrollWrapper) {\n            // 兼容el-scrollbar的内部结构\n            const scrollbarWrap = checkResultArea.value.querySelector('.el-scrollbar__wrap');\n            if (scrollbarWrap) {\n              scrollWrapper = scrollbarWrap.querySelector('.check-content-scroll-wrapper');\n            }\n          }\n          if (scrollWrapper) {\n            const scrollStyle = window.getComputedStyle(scrollWrapper);\n            console.log(\"滚动容器样式:\", {\n              height: scrollStyle.height,\n              overflow: scrollStyle.overflow,\n              position: scrollStyle.position\n            });\n          } else {\n            // 不再报错，只输出一次警告\n            console.warn(\"未找到滚动容器元素（check-content-scroll-wrapper），但不影响功能\");\n          }\n        }, 50);\n      } else {\n        console.error(\"checkResultArea引用不存在！\");\n      }\n      \n      if (isChecking.value) {\n        console.log(\"已有检查正在进行中，忽略此次点击\");\n        return;\n      }\n      \n      // 检查合同ID是否有效\n      if (!contractId.value || isNaN(contractId.value)) {\n        console.error(\"合同ID无效:\", contractId.value);\n        ElMessage.error('合同ID无效，无法进行检查');\n        return;\n      }\n      \n      // 检查合同内容是否为空\n      if (!contractDetails.content) {\n        console.log(\"合同内容为空，提示用户\");\n        ElMessage.warning('请先在合同文本标签页输入合同内容');\n        return;\n      }\n      \n      // 输出关键信息\n      console.log(\"开始执行合同检查 - 详细信息:\");\n      console.log(\"合同ID:\", contractId.value, typeof contractId.value);\n      console.log(\"内容长度:\", contractDetails.content.length);\n      console.log(\"检查偏好设置:\", JSON.stringify(checkPreferences, null, 2));\n      \n      isChecking.value = true;\n      aiCheckFinished.value = false;\n      let loadingInstance = null;\n      \n      try {\n        // 显示加载提示\n        console.log(\"显示加载提示\");\n        loadingInstance = ElLoading.service({\n          text: 'AI正在分析合同文本，请稍候...',\n          background: 'rgba(255, 255, 255, 0.7)'\n        });\n        \n        ElMessage.info('AI分析合同文本中...');\n        \n        // 准备请求参数，包含个性化设置\n        const requestParams = {\n          content: contractDetails.content,\n          preferences: {\n            contract_type: checkPreferences.contractType,\n            check_depth: checkPreferences.checkDepth,\n            check_areas: []\n          }\n        };\n        \n        // 添加检查区域\n        if (checkPreferences.legalCompliance) {\n          requestParams.preferences.check_areas.push('legal_compliance');\n        }\n        if (checkPreferences.completeness) {\n          requestParams.preferences.check_areas.push('completeness');\n        }\n        if (checkPreferences.riskAlert) {\n          requestParams.preferences.check_areas.push('risk_alert');\n        }\n        \n        // 如果没有选择任何检查区域，默认选择所有区域\n        if (requestParams.preferences.check_areas.length === 0) {\n          console.log(\"未选择任何检查区域，使用默认全部检查\");\n          ElMessage.warning('未选择任何检查区域，将使用默认全部检查');\n          requestParams.preferences.check_areas = ['legal_compliance', 'completeness', 'risk_alert'];\n          // 同时更新UI中的复选框状态\n          checkPreferences.legalCompliance = true;\n          checkPreferences.completeness = true;\n          checkPreferences.riskAlert = true;\n        }\n        \n        console.log(\"发送检查请求参数:\", JSON.stringify(requestParams, null, 2));\n        console.log(\"发送到API:\", `/api/contract/contracts/${contractId.value}/check_contract/`);\n        \n        // 开始发送请求的时间戳\n        const startTime = new Date().getTime();\n        console.log(\"开始请求时间:\", new Date().toLocaleTimeString());\n        \n        // 发送API请求\n        const apiResult = await checkContract(contractId.value, requestParams);\n        const result = apiResult.data || apiResult; // 兼容响应拦截器包裹data的情况\n        \n        // 请求结束的时间戳\n        const endTime = new Date().getTime();\n        console.log(\"请求完成时间:\", new Date().toLocaleTimeString());\n        console.log(\"请求耗时:\", (endTime - startTime) / 1000, \"秒\");\n        console.log(\"收到检查响应:\", result);\n        \n        if (result.error) {\n          console.error(\"合同检查API返回错误:\", result.error);\n          ElMessage.error(`合同文本检查失败: ${result.error}`);\n          return;\n        }\n        \n        // 更新检查结果\n        console.log(\"更新检查结果对象...\");\n        checkResult.totalIssues = result.totalIssues || 0;\n        checkResult.criticalIssues = result.criticalIssues || 0;\n        checkResult.warningIssues = result.warningIssues || 0;\n        checkResult.suggestions = result.suggestions || 0;\n        \n        // 更新各项问题\n        checkResult.legalComplianceIssues = result.legalComplianceIssues || [];\n        checkResult.completenessIssues = result.completenessIssues || [];\n        checkResult.riskAlerts = result.riskAlerts || [];\n        \n        if (checkResult.totalIssues > 0) {\n          console.log(`发现${checkResult.totalIssues}个问题，提示用户查看详情`);\n          ElMessage.warning(`发现${checkResult.totalIssues}个问题，请查看详情`);\n        } else {\n          console.log('未发现问题，提示用户合同文本质量良好');\n          ElMessage.success('未发现明显问题，合同文本质量良好');\n          \n          // 在无问题时也自动展开一个分类以显示\"未发现问题\"的提示\n          console.log(\"无问题时也自动展开法律合规性部分展示空结果\");\n          activeCollapse.value = ['legalCompliance'];\n        }\n        \n        // 自动展开第一个有问题的部分\n        if (checkResult.legalComplianceIssues.length > 0) {\n          console.log(\"自动展开法律合规性部分\");\n          activeCollapse.value = ['legalCompliance'];\n        } else if (checkResult.completenessIssues.length > 0) {\n          console.log(\"自动展开条款完整性部分\");\n          activeCollapse.value = ['clauseCompleteness'];\n        } else if (checkResult.riskAlerts.length > 0) {\n          console.log(\"自动展开风险提示部分\");\n          activeCollapse.value = ['riskAlert'];\n        }\n        \n        console.log(\"合同检查完成，结果:\", checkResult);\n        console.log(\"%c========== 合同检查完成 ==========\", \"background:#67c23a;color:white;padding:4px 8px;border-radius:4px;font-weight:bold;\");\n        \n        aiCheckFinished.value = true;\n      } catch (error) {\n        console.error('%c合同文本检查失败:', 'color:red;font-weight:bold;', error);\n        console.error('错误详情:', JSON.stringify(error, null, 2));\n        // 尝试提取更多错误信息\n        if (error.response) {\n          console.error('服务器响应:', error.response.status, error.response.statusText);\n          console.error('响应数据:', error.response.data);\n        }\n        ElMessage.error(`合同文本检查失败: ${error.message || '请稍后重试'}`);\n        aiCheckFinished.value = false;\n      } finally {\n        // 关闭加载提示\n        if (loadingInstance) {\n          console.log(\"关闭加载提示\");\n          loadingInstance.close();\n        }\n        isChecking.value = false;\n        console.log(\"重置检查状态 isChecking = false\");\n      }\n    };\n\n    // 预计时间提示\n    const estimatedTime = computed(() => {\n      const content = contractDetails.content || '';\n      const charCount = content.length;\n      \n      // 根据字符数计算预估时间\n      if (charCount <= 1000) return '约10秒';\n      if (charCount <= 5000) return '约30秒';\n      if (charCount <= 15000) return '约1分钟';\n      if (charCount <= 30000) return '约2分钟';\n      return '2-3分钟';\n    });\n\n    // 手动触发文本分析润色功能\n    const manualAnalyzeText = async () => {\n      // 检查是否有编辑器内容\n      if (!contractDetails.content) {\n        ElMessage.warning('请先输入合同内容');\n        return;\n      }\n      \n      // 清除所有旧的建议和高亮\n      clearInlineEditSuggestions();\n      aiSuggestions.syntax = [];\n      aiSuggestions.terminology = [];\n      \n      // 强制重置AI面板相关状态\n      isAiPanelCollapsed.value = false;\n      \n      // 更新状态，显示加载\n      realTimePolishLoading.value = true;\n      \n      // 延迟500ms执行，确保加载状态显示\n      setTimeout(() => {\n        // 强制显示AI建议面板，确保用户能看到加载状态\n        showAiSuggestions.value = true;\n        console.log(\"AI分析开始，强制显示AI建议面板\");\n      }, 500);\n      \n      // 添加超时计时器\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('分析请求超时，服务器可能繁忙')), 180000); // 3分钟\n      });\n      \n      // 显示加载提示\n      const loadingInstance = ElLoading.service({\n        text: 'AI正在分析文本，请稍候...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      });\n      \n      // 检查文本长度\n      const content = contractDetails.content;\n      lastAnalyzedContent.value = content;\n      lastAnalysisTime.value = Date.now();\n      \n      if (content.length > 10000) {\n        ElMessage.warning('文本较长，分析可能需要较长时间，请耐心等待');\n      }\n      \n      try {\n        // 构建请求参数，包含个性化配置\n        const requestParams = {\n          content: content,\n          is_manual: true,  // 标记为手动分析，确保每次都重新分析\n          preferences: {\n            style: polishPreferences.style,\n            contract_type: polishPreferences.contractType,\n            focus: polishPreferences.focus,\n            custom_terminologies: customTerminologies.value\n          }\n        };\n        \n        console.log(\"发送分析请求，参数:\", JSON.stringify(requestParams, null, 2));\n        \n        // 使用Promise.race竞争方式处理超时\n        const result = await Promise.race([\n          aiPolishContract(contractId.value, requestParams),\n          timeoutPromise\n        ]);\n        \n        console.log(\"API返回结果:\", result);\n        \n        if (result && !result.error) {\n          // 过滤与基本信息相关的建议\n          const filterBasicInfoSuggestions = (suggestions) => {\n            if (!Array.isArray(suggestions)) return [];\n            \n            const basicInfoKeywords = [\n              '合同名称', '合同编号', '合同金额', '签约对方', '签约日期', \n              '生效日期', '到期日期', '甲方名称', '乙方名称', '标题'\n            ];\n\n            return suggestions.filter(suggestion => {\n              return !basicInfoKeywords.some(keyword => \n                suggestion.original.includes(keyword) || \n                suggestion.suggested.includes(keyword) || \n                suggestion.explanation.includes(keyword)\n              );\n            });\n          };\n          \n          // 更新建议，自动显示面板\n          if (result.data && result.data.syntax) {\n            aiSuggestions.syntax = filterBasicInfoSuggestions(result.data.syntax);\n            console.log(\"语法建议:\", aiSuggestions.syntax);\n          }\n          if (result.data && result.data.terminology) {\n            aiSuggestions.terminology = filterBasicInfoSuggestions(result.data.terminology);\n            console.log(\"术语建议:\", aiSuggestions.terminology);\n          }\n            \n          // 添加唯一ID\n          aiSuggestions.syntax.forEach((s, i) => { s.id = `syntax-${i}`; });\n          aiSuggestions.terminology.forEach((s, i) => { s.id = `term-${i}`; });\n            \n          // 如果启用了内联建议功能，则应用内联建议\n          if (enableInlineSuggestions.value) {\n            // 延迟一点应用，确保编辑器状态已更新\n            setTimeout(() => {\n              applyInlineSuggestions();\n            }, 100);\n          }\n          \n          // 确保面板显示（如果有建议）\n          const totalSuggestions = aiSuggestions.syntax.length + aiSuggestions.terminology.length;\n          if (totalSuggestions > 0) {\n            showAiSuggestions.value = true;\n            console.log(\"显示AI建议面板，共有建议:\", totalSuggestions);\n            // 通知用户有新的建议\n            ElMessage.success(`AI分析完成：发现${totalSuggestions}条优化建议`);\n          } else {\n            console.log(\"未找到任何建议\");\n            ElMessage.info('AI分析完成，未发现需要优化的内容');\n          }\n        } else {\n          console.error(\"AI分析返回结果异常:\", result);\n          ElMessage.warning('AI分析未返回有效结果，请稍后重试');\n        }\n      } catch (timeoutErr) {\n        if (timeoutErr.message.includes('超时')) {\n          ElMessageBox.confirm(\n            '服务器响应时间过长，可能是文本较长或服务器繁忙。您希望如何处理？',\n            '请求超时',\n            {\n              confirmButtonText: '再试一次',\n              cancelButtonText: '取消操作',\n              type: 'warning'\n            }\n          ).then(() => {\n            // 用户选择重试\n            ElMessage.info('正在重新尝试分析...');\n            setTimeout(() => {\n              manualAnalyzeText();\n            }, 1000);\n          }).catch(() => {\n            // 用户取消操作\n            ElMessage.info('已取消AI分析操作');\n          });\n        } else {\n          throw timeoutErr; // 重新抛出其他类型的错误\n        }\n      } finally {\n        // 关闭加载提示\n        if (loadingInstance) {\n          loadingInstance.close();\n        }\n        realTimePolishLoading.value = false;\n      }\n    };\n    \n    // 自动更新建议功能：当合同编辑器有变更且长达3秒没有新内容输入，就进行自动分析并提供更新建议\n    // 使用防抖(debounce)机制实现，确保只有在用户停止输入3秒后才会触发分析，避免频繁API调用\n    // 防抖处理的文本变化处理函数 - 由于改为手动润色，因此不再自动分析\n    const debouncedAnalyzeText = debounce(() => {\n      // 此处不再自动分析，手动润色时使用 manualAnalyzeText 函数\n      console.log('内容已更改，可通过点击\"AI润色分析\"按钮进行分析');\n    }, 3000);\n    \n    // 调整编辑器高度以适应窗口大小\n    const adjustEditorHeight = () => {\n      // 根据当前活动的标签页调整不同容器的高度\n      console.log(\"调整高度，当前标签页:\", activeTab.value);\n      \n      // 视口高度和其他通用计算\n      const viewHeight = window.innerHeight;\n      const marginBottom = 20; // 与CSS中的margin-bottom一致\n      \n      // 如果是合同文本标签页\n      if (activeTab.value === 'contractText') {\n        // 确保元素已加载\n        if (!contractEditContainer.value || !aiPolishSidebar.value || !editorMainArea.value) {\n          console.log(\"文本编辑容器未加载，跳过高度调整\");\n          return;\n        }\n        \n        // 计算可用高度\n        const containerRect = contractEditContainer.value.getBoundingClientRect();\n        const topOffset = containerRect.top;\n        \n        // 计算理想的容器高度\n        const containerHeight = Math.max(viewHeight - topOffset - marginBottom, 500);\n        \n        // 应用高度到容器\n        contractEditContainer.value.style.height = `${containerHeight}px`;\n        \n        // 如果Quill编辑器已经初始化，刷新其布局\n        if (quillEditor.value && quillEditor.value.getQuill) {\n          try {\n            const quill = quillEditor.value.getQuill();\n            if (quill) {\n              // 触发Quill布局刷新\n              setTimeout(() => {\n                quill.update();\n              }, 100);\n            }\n          } catch (e) {\n            console.warn('Quill编辑器刷新失败:', e);\n          }\n        }\n      } \n      // 如果是合同检查标签页\n      else if (activeTab.value === 'contractCheck') {\n        // 确保检查容器已加载\n        if (!contractCheckContainer.value) {\n          console.log(\"合同检查容器未加载，跳过高度调整\");\n          return;\n        }\n        \n        // 计算可用高度\n        const containerRect = contractCheckContainer.value.getBoundingClientRect();\n        const topOffset = containerRect.top;\n        \n        // 计算容器高度 - 减小顶部边距，让检查页面更大\n        const containerHeight = Math.max(viewHeight - topOffset - marginBottom + 60, 600);\n        \n        // 应用高度到检查容器\n        contractCheckContainer.value.style.height = `${containerHeight}px`;\n        console.log(\"已设置合同检查容器高度:\", containerHeight);\n      }\n    };\n    \n    // 添加窗口调整大小事件监听器\n    const setupResizeListener = () => {\n      window.addEventListener('resize', adjustEditorHeight);\n      \n      // 添加页面可见性变化监听\n      document.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n          console.log(\"页面重新变为可见，调整布局\");\n          nextTick(() => {\n            adjustEditorHeight();\n          });\n        }\n      });\n    };\n    \n    // 清理窗口调整大小事件监听器\n    const cleanupResizeListener = () => {\n      window.removeEventListener('resize', adjustEditorHeight);\n    };\n    \n    // 监听标签页变化，在激活不同标签页时执行相应操作\n    watch(() => activeTab.value, (newTab) => {\n      console.log(\"切换到标签页:\", newTab);\n      \n      if (newTab === 'contractText') {\n        // 切换到合同文本标签页\n        console.log(\"处理合同文本标签页切换\");\n        \n        // 调整编辑器高度\n        nextTick(() => {\n          adjustEditorHeight();\n          // 重新设置DOM变化监听\n          setupMutationObserver();\n        });\n        \n        // 如果启用了内联建议，应用之前的建议\n        if (enableInlineSuggestions.value) {\n          setTimeout(() => {\n            applyInlineSuggestions();\n          }, 500);\n        }\n      } \n      else if (newTab === 'contractCheck') {\n        // 切换到合同检查标签页\n        console.log(\"处理合同检查标签页切换\");\n        \n        // 在DOM更新后调整界面\n        nextTick(() => {\n          // 检查合同内容是否已加载\n          if (contractDetails.content) {\n            console.log(\"合同内容已加载，检查页面准备就绪\");\n          } else {\n            console.log(\"合同内容未加载，提示用户先输入内容\");\n            ElMessage.info('请先在合同文本标签页输入合同内容，然后进行AI检查');\n          }\n          \n          // 调整检查界面高度\n          adjustEditorHeight();\n          \n          // 强制刷新滚动容器布局\n          if (checkResultArea.value) {\n            console.log(\"强制刷新检查结果区域布局\");\n            \n            // 确保check-result-area容器占满高度\n            checkResultArea.value.style.height = '100%';\n            \n            // el-scrollbar将自动处理滚动，不需要额外设置\n            console.log(\"使用el-scrollbar组件处理滚动\");\n            \n            // 触发重绘\n            checkResultArea.value.style.display = 'none';\n            setTimeout(() => {\n              checkResultArea.value.style.display = 'flex';\n            }, 50);\n          }\n        });\n      } \n      else {\n        // 切换到其他标签页\n        console.log(\"切换到其他标签页:\", newTab);\n        \n        // 离开合同文本标签页时，确保隐藏面板\n        showAiSuggestions.value = false;\n        \n        // 清理DOM变化监听器\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n        }\n      }\n    });\n\n    // 隐藏AI建议面板\n    const hideAiPanel = () => {\n      // 仅隐藏面板，保持润色功能开启\n      showAiSuggestions.value = false\n      // 确保下次显示时不是折叠状态\n      isAiPanelCollapsed.value = false\n      console.log(\"隐藏面板，showAiSuggestions设置为false\")\n    }\n\n    // 采纳AI建议\n    // eslint-disable-next-line no-unused-vars\n    const adoptSuggestion = (type, sugIndex) => {\n      const suggestion = aiSuggestions[type][sugIndex]\n      \n      if (!quillEditor.value || !suggestion) {\n        ElMessage.error('编辑器未初始化或建议信息不完整')\n        return\n      }\n\n      try {\n        // 保存当前滚动位置\n        const editor = quillEditor.value.getQuill()\n        if (!editor) {\n          throw new Error('无法获取编辑器实例')\n        }\n        const currentScrollTop = editor.root ? editor.root.scrollTop : 0\n\n        // 获取编辑器中的纯文本内容和HTML内容\n        const content = editor.getText()\n        const htmlContent = contractDetails.content\n\n        let replaced = false\n\n        // 创建匹配函数数组 - 从精确到模糊依次尝试\n        const matchingMethods = [\n          // 1. 精确匹配 - 完全相同\n          () => {\n            const textIndex = content.indexOf(suggestion.original)\n            if (textIndex !== -1) {\n              editor.deleteText(textIndex, suggestion.original.length)\n              editor.insertText(textIndex, suggestion.suggested)\n              return true\n            }\n            return false\n          },\n          \n          // 2. 去除首尾空格后匹配\n          () => {\n            const trimmedOriginal = suggestion.original.trim()\n            const textIndex = content.indexOf(trimmedOriginal)\n            if (textIndex !== -1) {\n              editor.deleteText(textIndex, trimmedOriginal.length)\n              editor.insertText(textIndex, suggestion.suggested)\n              return true\n          }\n            return false\n          },\n          \n          // 3. 替换多个空格为单个空格后匹配\n          () => {\n            const normalizedOriginal = suggestion.original.replace(/\\s+/g, ' ').trim()\n            const normalizedContent = content.replace(/\\s+/g, ' ')\n            const textIndex = normalizedContent.indexOf(normalizedOriginal)\n            if (textIndex !== -1) {\n              // 找到真实位置\n              const realTextBefore = content.substring(0, textIndex)\n              const additionalSpaces = suggestion.original.match(/^\\s+/) ? suggestion.original.match(/^\\s+/)[0].length : 0\n              \n              const adjustedIndex = textIndex - (realTextBefore.length - normalizedContent.substring(0, textIndex).length) + additionalSpaces\n              const originalLength = suggestion.original.length\n              \n              editor.deleteText(adjustedIndex, originalLength)\n              editor.insertText(adjustedIndex, suggestion.suggested)\n              return true\n            }\n            return false\n          },\n          \n          // 4. 在HTML内容中使用正则表达式查找\n          () => {\n            try {\n            const escapedOriginal = suggestion.original.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n              const regex = new RegExp(escapedOriginal, 'g')\n            \n              if (htmlContent.match(regex)) {\n                const newContent = htmlContent.replace(regex, suggestion.suggested)\n                contractDetails.content = newContent\n                return true\n              }\n            } catch (regexError) {\n              console.error('正则表达式匹配失败:', regexError)\n            }\n            return false\n          },\n          \n          // 5. 尝试模糊匹配 - 对特殊情况（如回车符被转换为<br>等）进行处理\n          () => {\n            try {\n              // 处理可能的换行符差异\n              const originalWithNormalizedBreaks = suggestion.original.replace(/[\\r\\n]+/g, ' ').trim()\n              const contentWithNormalizedBreaks = content.replace(/[\\r\\n]+/g, ' ')\n              \n              const textIndex = contentWithNormalizedBreaks.indexOf(originalWithNormalizedBreaks)\n              if (textIndex !== -1) {\n                // 找到大致位置后进行替换\n                let startPosition = textIndex\n                \n                // 在编辑器中查找最佳的起始位置\n                const length = suggestion.original.length\n                editor.deleteText(startPosition, length)\n                editor.insertText(startPosition, suggestion.suggested)\n                return true\n              }\n            } catch (error) {\n              console.error('模糊匹配失败:', error)\n            }\n            return false\n          }\n        ]\n\n        // 依次尝试各种匹配方法\n        for (const matchMethod of matchingMethods) {\n          if (matchMethod()) {\n            replaced = true\n            break\n          }\n        }\n\n        // 如果成功替换了内容\n        if (replaced) {\n          // 从建议列表中移除 - 确保使用正确的索引参数\n          aiSuggestions[type].splice(sugIndex, 1)\n          ElMessage.success('已采纳建议')\n          \n          // 恢复滚动位置\n          setTimeout(() => {\n            if (editor && editor.root) {\n              editor.root.scrollTop = currentScrollTop\n            }\n          }, 10)\n          \n          // 如果启用了内联建议，重新应用剩余的高亮\n          if (enableInlineSuggestions.value) {\n            clearInlineEditSuggestions()\n            if (aiSuggestions.syntax.length > 0 || aiSuggestions.terminology.length > 0) {\n              setTimeout(() => applyInlineSuggestions(), 100)\n            }\n          }\n        } else {\n          ElMessage.warning('无法找到匹配的文本，请手动编辑')\n          console.warn('未能找到匹配文本:', suggestion.original)\n        }\n        } catch (error) {\n          console.error('采纳建议出错:', error)\n        ElMessage.error('采纳建议时出错: ' + (error.message || '未知错误'))\n      }\n    }\n\n    // 忽略AI建议\n    // eslint-disable-next-line no-unused-vars\n    const ignoreSuggestion = (type, sugIndex) => {\n      aiSuggestions[type].splice(sugIndex, 1)\n      ElMessage.info('已忽略建议')\n      \n      // 如果启用了内联建议，重新应用剩余的高亮\n      if (enableInlineSuggestions.value) {\n        clearInlineEditSuggestions()\n        if (aiSuggestions.syntax.length > 0 || aiSuggestions.terminology.length > 0) {\n          setTimeout(() => applyInlineSuggestions(), 100)\n        }\n      }\n    }\n\n    // 应用所有采纳的建议\n    // eslint-disable-next-line no-unused-vars\n    const applyAllSuggestions = async () => {\n      // 检查是否有要应用的建议\n      if (aiSuggestions.syntax.length === 0 && aiSuggestions.terminology.length === 0) {\n        ElMessage.info('没有待处理的建议');\n        return;\n      }\n      \n      try {\n        const loading = ElLoading.service({\n          lock: true,\n          text: '应用所有建议...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        \n        // 获取Quill编辑器实例\n        if (!quillEditor.value || !quillEditor.value.getQuill) {\n          throw new Error('编辑器未初始化');\n        }\n        const editor = quillEditor.value.getQuill();\n        if (!editor) {\n          throw new Error('无法获取编辑器实例');\n        }\n        \n        // 保存当前滚动位置\n        const currentScrollTop = editor.root ? editor.root.scrollTop : 0;\n        \n        // 获取编辑器当前文本内容\n        const editorText = editor.getText();\n        \n        // 将所有建议合并到一个数组\n        const allSuggestions = [...aiSuggestions.syntax, ...aiSuggestions.terminology];\n        \n        // 创建高级文本匹配函数\n        const findBestMatch = (suggestion, content) => {\n          // 各种匹配方法，返回索引和长度\n          const methods = [\n            // 1. 精确匹配\n            () => {\n              const index = content.indexOf(suggestion.original);\n              return index !== -1 ? { index, length: suggestion.original.length } : null;\n            },\n            // 2. 去除首尾空格后匹配\n            () => {\n              const trimmedOriginal = suggestion.original.trim();\n              const index = content.indexOf(trimmedOriginal);\n              return index !== -1 ? { index, length: trimmedOriginal.length } : null;\n            },\n            // 3. 替换多个空格为单个空格\n            () => {\n              const normalizedOriginal = suggestion.original.replace(/\\s+/g, ' ').trim();\n              const normalizedContent = content.replace(/\\s+/g, ' ');\n              const index = normalizedContent.indexOf(normalizedOriginal);\n              \n              if (index !== -1) {\n                // 计算真实位置\n                const realTextBefore = content.substring(0, index);\n                const offset = realTextBefore.length - realTextBefore.replace(/\\s/g, '').length;\n                const adjustedIndex = Math.max(0, index - offset);\n                return { index: adjustedIndex, length: suggestion.original.length };\n              }\n              return null;\n            },\n            // 4. 处理换行符差异\n            () => {\n              const originalWithNormalizedBreaks = suggestion.original.replace(/[\\r\\n]+/g, ' ').trim();\n              const contentWithNormalizedBreaks = content.replace(/[\\r\\n]+/g, ' ');\n              \n              const index = contentWithNormalizedBreaks.indexOf(originalWithNormalizedBreaks);\n              if (index !== -1) {\n                return { index, length: suggestion.original.length };\n              }\n              return null;\n            }\n          ];\n          \n          // 尝试所有方法找到最佳匹配\n          for (const method of methods) {\n            const result = method();\n            if (result) return result;\n          }\n          \n          return null; // 没有找到匹配\n        };\n        \n        // 增强的索引查找\n        const enhancedSuggestions = allSuggestions.map(suggestion => {\n          const match = findBestMatch(suggestion, editorText);\n          return match ? { ...suggestion, index: match.index, length: match.length } : { ...suggestion, index: -1 };\n        }).filter(suggestion => suggestion.index !== -1);\n        \n        // 按照从后向前的顺序排序\n        const sortedSuggestions = enhancedSuggestions.sort((a, b) => b.index - a.index);\n        \n        if (sortedSuggestions.length === 0) {\n          loading.close();\n          ElMessage.warning('未能找到任何匹配的建议文本');\n          return;\n        }\n        \n        // 记录成功和失败的次数\n        let successCount = 0;\n        let failCount = 0;\n        \n        // 从后往前逐个应用建议（避免前面的替换影响后面的索引）\n        for (const suggestion of sortedSuggestions) {\n          try {\n            // 使用Quill API直接替换文本\n            editor.deleteText(suggestion.index, suggestion.length);\n            editor.insertText(suggestion.index, suggestion.suggested);\n            successCount++;\n          } catch (error) {\n            console.error('替换建议失败:', error, suggestion);\n            failCount++;\n          }\n        }\n          \n        // 清空建议列表\n          aiSuggestions.syntax = [];\n          aiSuggestions.terminology = [];\n          \n        // 恢复滚动位置\n        setTimeout(() => {\n          if (editor && editor.root) {\n            editor.root.scrollTop = currentScrollTop;\n          }\n        }, 10);\n        \n        // 显示结果信息\n        ElMessage.success(`成功应用${successCount}项建议${failCount > 0 ? `，${failCount}项失败` : ''}`);\n        \n        // 关闭加载提示\n        loading.close();\n        \n        // 隐藏AI面板\n        hideAiPanel();\n        \n      } catch (error) {\n        console.error('应用所有建议失败:', error);\n        ElMessage.error('应用所有建议失败: ' + (error.message || '未知错误'));\n      }\n    }\n\n    // 下载合同\n    // eslint-disable-next-line no-unused-vars\n    const downloadContract = () => {\n      isSaving.value = true;\n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在保存并生成Word文档...',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      // 统一日期处理\n      const normalizeDate = (val) => {\n        if (!val) return null;\n        if (typeof val === 'string' && /^\\d{4}-\\d{2}-\\d{2}$/.test(val)) return val;\n        return null;\n      };\n      const isValidAmount = (val) => /^\\d+(\\.\\d{1,2})?$/.test(val);\n      const updateData = {\n        title: contractDetails.title,\n        type: contractDetails.type,\n        amount: isValidAmount(contractDetails.amount.replace(/[^\\d.]/g, '')) ? contractDetails.amount.replace(/[^\\d.]/g, '') : null,\n        company: contractDetails.company,\n        sign_date: normalizeDate(contractDetails.signDate),\n        start_date: normalizeDate(contractDetails.startDate),\n        expire_date: normalizeDate(contractDetails.expireDate),\n        content: contractDetails.content\n      };\n      updateContract(contractId.value, updateData)\n        .then(() => {\n          // 保存成功后调用下载API\n          const downloadUrl = `/api/contract/contracts/${contractId.value}/download-docx/`;\n          \n          // 获取CSRF令牌 - 从Cookie中获取\n          const getCookie = (name) => {\n            const value = `; ${document.cookie}`;\n            const parts = value.split(`; ${name}=`);\n            if (parts.length === 2) return parts.pop().split(';').shift();\n            return '';\n          };\n          const csrfToken = getCookie('csrftoken');\n          console.log('CSRF令牌:', csrfToken || '未找到');\n          console.log('认证Cookie:', document.cookie);\n          \n          // 获取认证令牌\n          const token = localStorage.getItem('token');\n          console.log('认证令牌:', token ? '找到' : '未找到');\n          \n          // 使用axios直接下载文件，确保包含认证信息\n          request({\n            url: downloadUrl,\n            method: 'GET',\n            responseType: 'blob',\n            headers: {\n              'X-CSRFToken': csrfToken,\n              'Authorization': token ? `Bearer ${token}` : ''\n            }\n          })\n          .then(response => {\n            // 创建Blob URL并下载\n            const blob = new Blob([response.data], {\n              type: response.headers['content-type'] || 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n            });\n            const url = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `${contractDetails.number || '合同'}_${contractDetails.title || '未命名'}.docx`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(url);\n            \n            ElMessage.success('合同已保存并下载');\n          })\n          .catch(error => {\n            console.error('下载合同出错:', error);\n            ElMessage.error(`下载失败: ${error.message || '权限验证失败'}`);\n          });\n        })\n        .catch(error => {\n          console.error('保存合同出错:', error);\n          ElMessage.error('保存失败，无法下载合同');\n        })\n        .finally(() => {\n          loading.close();\n          isSaving.value = false;\n        });\n    }\n    \n    // 查看法规详情\n    // eslint-disable-next-line no-unused-vars\n    const viewRegulation = (issue) => {\n      // 使用全屏加载动画\n      const loadingInstance = ElLoading.service({\n        text: '正在查询相关法规...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      });\n      \n      // 使用request模块调用后端API获取法规详情\n      request({\n        url: '/api/contract/regulation-query/',\n        method: 'post',\n        data: {\n          issue_title: issue.title,\n          issue_content: issue.current,\n          issue_problem: issue.problem,\n          contract_type: contractDetails.type\n        }\n      })\n      .then(data => {\n        loadingInstance.close();\n        \n        // 展示AI生成的法规详情\n        ElMessageBox.alert(\n          `<div class=\"regulation-detail\">\n            <h4>适用法规: ${data.regulation || '《中华人民共和国合同法》'}</h4>\n            <div class=\"regulation-content\">\n              <p>${data.regulation_content || '根据相关法律法规，合同中应明确约定双方权利义务，避免含糊不清的条款。'}</p>\n            </div>\n            <div class=\"regulation-suggestion mt-2\">\n              <h5>修改建议:</h5>\n              <p>${data.suggestion || '建议参照相关法律法规，明确表述合同条款，确保合同的有效性和可执行性。'}</p>\n            </div>\n          </div>`,\n          '法规详情',\n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '了解',\n            customClass: 'regulation-dialog'\n          }\n        );\n      })\n      .catch(error => {\n        loadingInstance.close();\n        console.error('获取法规详情失败:', error);\n        ElMessage.error('获取法规详情失败，请稍后再试');\n      });\n    }\n\n    // 监听路由变化\n    watch(() => route.name, (newRouteName, oldRouteName) => {\n      if (oldRouteName === 'ContractDetail' && newRouteName !== 'ContractDetail') {\n        // 离开合同详情页面，确保重置状态\n        console.log('离开合同详情页面，重置状态')\n        contractId.value = null\n        // 关闭所有加载状态\n        isLoading.value = false\n        isSaving.value = false\n        realTimePolishLoading.value = false\n        isChecking.value = false\n      }\n    }, { immediate: true })\n\n    // 监听路由变化，重新加载数据\n    watch(() => route.params.id, (newId, oldId) => {\n      if (route.name === 'ContractDetail') {\n        if (newId && newId !== 'undefined' && !isNaN(Number(newId))) {\n          // 转换为数字进行比较\n          const numNewId = Number(newId);\n          const numOldId = oldId ? Number(oldId) : null;\n          \n          // 只有ID真正变化时才重新加载\n          if (numNewId !== numOldId) {\n            console.log('合同ID已变更，加载新合同', newId)\n            contractId.value = numNewId\n            \n            // 如果是组件刚刚挂载，使用静默加载避免重复提示\n            const silentLoad = !oldId || document.readyState !== 'complete';\n            getContractDetails(silentLoad)\n          }\n        } else {\n          console.log('无效的合同ID参数:', newId)\n          router.push({ name: 'Contract' })\n        }\n      }\n    }, { immediate: true })\n\n    // 添加展开按钮到DOM\n    const addFloatingButton = () => {\n      // 如果按钮已存在，先移除\n      const existingButton = document.getElementById('aiFloatingButton')\n      if (existingButton) {\n        document.body.removeChild(existingButton)\n      }\n\n      // 创建新按钮\n      const button = document.createElement('div')\n      button.id = 'aiFloatingButton'\n      button.className = 'ai-floating-button'\n      button.innerHTML = `\n        <button class=\"el-button el-button--primary el-button--small is-circle\">\n          <i class=\"el-icon\">\n            <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fill=\"currentColor\" d=\"M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896zm0 832a384 384 0 0 0 0-768 384 384 0 0 0 0 768zm-94.656-298.656a32 32 0\n                0 0 45.312 45.312l96-96a32 32 0 0 0 0-45.312l-96-96a32 32 0 0 0-45.312 45.312L466.752 512l-49.408 49.344z\"></path>\n            </svg>\n          </i>\n        </button>\n      `\n      \n      // 添加样式\n      const style = document.createElement('style')\n      style.textContent = `\n        .ai-floating-button {\n          position: fixed;\n          top: 50%;\n          right: 0;\n          transform: translateY(-50%);\n          z-index: 2000;\n          background-color: #fff;\n          border-top-left-radius: 50%;\n          border-bottom-left-radius: 50%;\n          box-shadow: -2px 0 10px rgba(0,0,0,0.1);\n          padding: 10px 5px 10px 10px;\n          cursor: pointer;\n          transition: all 0.3s ease;\n        }\n        .ai-floating-button:hover {\n          right: 5px;\n        }\n        .ai-floating-button button {\n          margin: 0;\n        }\n      `\n      document.head.appendChild(style)\n      \n      // 添加点击事件\n      button.addEventListener('click', () => {\n        showAiSuggestions.value = true\n        console.log('点击展开按钮，showAiSuggestions设置为true')\n      })\n      \n      // 添加到body\n      document.body.appendChild(button)\n    }\n    \n    // 更新展开按钮的显示状态\n    const updateFloatingButton = () => {\n      const button = document.getElementById('aiFloatingButton')\n      if (!button) return\n      \n      if (activeTab.value === 'contractText' && !showAiSuggestions.value) {\n        button.style.display = 'block'\n      } else {\n        button.style.display = 'none'\n      }\n    }\n    \n    // 监听showAiSuggestions和activeTab的变化，更新按钮显示状态\n    watch([showAiSuggestions, activeTab], () => {\n      updateFloatingButton()\n    })\n    \n    // 采纳内联编辑器中的建议\n    const adoptInlineEditSuggestion = (suggestionId) => {\n      try {\n        console.log('开始采纳建议:', suggestionId);\n        // 在语法建议中查找\n        let suggestionFound = false;\n        let suggestionType = null;\n        let suggestionIndex = -1;\n\n      // 在语法建议中查找\n        for (let i = 0; i < aiSuggestions.syntax.length; i++) {\n          if (aiSuggestions.syntax[i].id === suggestionId) {\n            suggestionFound = true;\n            suggestionType = 'syntax';\n            suggestionIndex = i;\n            break;\n          }\n        }\n\n        // 在术语建议中查找\n        if (!suggestionFound) {\n          for (let i = 0; i < aiSuggestions.terminology.length; i++) {\n            if (aiSuggestions.terminology[i].id === suggestionId) {\n              suggestionFound = true;\n              suggestionType = 'terminology';\n              suggestionIndex = i;\n              break;\n        }\n      }\n        }\n\n        // 如果找到了建议，调用采纳函数\n        if (suggestionFound && suggestionType && suggestionIndex > -1) {\n          console.log('找到建议位置:', suggestionType, suggestionIndex);\n          adoptSuggestion(suggestionType, suggestionIndex);\n          return true;\n        } else {\n          console.error('未找到对应建议:', suggestionId);\n          ElMessage.warning('无法找到对应的建议，请从侧边栏采纳');\n          return false;\n        }\n      } catch (error) {\n        console.error('采纳内联建议失败:', error);\n        ElMessage.error('采纳建议失败: ' + (error.message || '未知错误'));\n        return false;\n      }\n    };\n    \n    // 忽略内联编辑器中的建议\n    const ignoreInlineEditSuggestion = (suggestionId) => {\n      try {\n        console.log('开始忽略建议:', suggestionId);\n        // 在语法建议中查找\n        let suggestionFound = false;\n        let suggestionType = null;\n        let suggestionIndex = -1;\n\n      // 在语法建议中查找\n        for (let i = 0; i < aiSuggestions.syntax.length; i++) {\n          if (aiSuggestions.syntax[i].id === suggestionId) {\n            suggestionFound = true;\n            suggestionType = 'syntax';\n            suggestionIndex = i;\n            break;\n          }\n        }\n\n        // 在术语建议中查找\n        if (!suggestionFound) {\n          for (let i = 0; i < aiSuggestions.terminology.length; i++) {\n            if (aiSuggestions.terminology[i].id === suggestionId) {\n              suggestionFound = true;\n              suggestionType = 'terminology';\n              suggestionIndex = i;\n              break;\n        }\n      }\n        }\n\n        // 如果找到了建议，调用忽略函数\n        if (suggestionFound && suggestionType && suggestionIndex > -1) {\n          ignoreSuggestion(suggestionType, suggestionIndex);\n          return true;\n        } else {\n          console.warn('未找到要忽略的建议:', suggestionId);\n          return false;\n        }\n      } catch (error) {\n        console.error('忽略建议出错:', error);\n        ElMessage.error('忽略建议失败: ' + (error.message || '未知错误'));\n        return false;\n        }\n    };\n\n    // 更安全地获取Quill编辑器DOM元素的辅助函数\n    const getQuillEditorElement = () => {\n      try {\n        if (!quillEditor.value) return null;\n        \n        // 尝试不同的方式获取编辑器DOM元素\n        if (quillEditor.value.$el && typeof quillEditor.value.$el.querySelector === 'function') {\n          // Vue组件实例方式\n          return quillEditor.value.$el.querySelector('.ql-editor');\n        } else if (quillEditor.value.container) {\n          // 原生Quill实例方式\n          return quillEditor.value.container.querySelector('.ql-editor');\n        } else if (quillEditor.value.getQuill) {\n          // @vueup/vue-quill方式\n          const quill = quillEditor.value.getQuill();\n          if (quill && quill.root) {\n            return quill.root;\n          }\n        }\n        \n        // 最后尝试直接在文档中查找\n        return document.querySelector('.contract-text-editor .ql-editor');\n      } catch (e) {\n        console.error('获取编辑器元素失败:', e);\n        return null;\n      }\n    };\n\n    // 清除所有内联编辑建议\n    const clearInlineEditSuggestions = () => {\n      const editorContainer = getQuillEditorElement();\n      if (!editorContainer) {\n        console.warn('无法获取编辑器元素，跳过清除操作');\n        return;\n      }\n      \n      try {\n        // 查找所有建议高亮元素\n        const highlights = editorContainer.querySelectorAll('.suggestion-highlight');\n        \n        // 替换回普通文本\n        highlights.forEach(span => {\n          const text = span.textContent;\n          const parent = span.parentNode;\n          if (parent) {\n            const textNode = document.createTextNode(text);\n            parent.replaceChild(textNode, span);\n          }\n        });\n      } catch (e) {\n        console.error('清除建议高亮失败:', e);\n      }\n    }\n    \n    // 修复应用内联建议函数\n    const applyInlineSuggestions = () => {\n      try {\n        // 获取当前所有建议\n        const allSuggestions = [\n          ...(aiSuggestions.syntax || []), \n          ...(aiSuggestions.terminology || [])\n        ];\n        \n        if (!allSuggestions.length) {\n          return;\n        }\n        \n        // 先清除所有现有高亮\n        clearInlineEditSuggestions();\n        \n        // 获取编辑器DOM和Quill实例\n        const editorContainer = getQuillEditorElement();\n        if (!editorContainer) {\n          console.warn('无法获取编辑器元素，无法应用内联建议');\n          showAiSuggestions.value = true; // 如果无法应用内联建议，显示侧边栏\n          return;\n        }\n        \n        // 获取Quill实例\n        const editor = quillEditor.value?.getQuill();\n        if (!editor) {\n          console.warn('无法获取Quill编辑器实例');\n          return;\n        }\n        \n        // 提取纯文本内容，用于更准确地匹配\n        const plainText = editor.getText();\n        \n        // 成功匹配的建议数量\n        let matchedCount = 0;\n        \n        // 预处理文本以提高匹配精度\n        const normalizeText = (text) => {\n          return text.replace(/\\s+/g, ' ').trim();\n        };\n        \n        // 优先按照长度从长到短排序建议，避免短文本错误匹配\n        const sortedSuggestions = [...allSuggestions].sort((a, b) => \n          b.original.length - a.original.length\n        );\n        \n        // 使用更精确的匹配方法\n        const findTextPosition = (text, searchText) => {\n          // 直接匹配\n          const directIndex = text.indexOf(searchText);\n          if (directIndex !== -1) {\n            return { index: directIndex, length: searchText.length };\n          }\n          \n          // 去除首尾空格匹配\n          const trimmedSearch = searchText.trim();\n          const trimmedIndex = text.indexOf(trimmedSearch);\n          if (trimmedIndex !== -1) {\n            return { index: trimmedIndex, length: trimmedSearch.length };\n          }\n          \n          // 规范化空格后匹配\n          const normalizedText = normalizeText(text);\n          const normalizedSearch = normalizeText(searchText);\n          const normalizedIndex = normalizedText.indexOf(normalizedSearch);\n          \n          if (normalizedIndex !== -1) {\n            // 尝试映射回原始文本的实际位置\n            let realIndex = -1;\n            let normalizedPos = 0;\n            \n            // 字符一一对应查找真实位置\n            for (let i = 0; i < text.length; i++) {\n              if (normalizeText(text.substring(0, i+1)).length > normalizedPos) {\n                normalizedPos++;\n              }\n              \n              if (normalizedPos === normalizedIndex + 1) {\n                realIndex = i - normalizedSearch.length + 1;\n                break;\n              }\n            }\n            \n            if (realIndex !== -1) {\n              return { index: realIndex, length: searchText.length };\n            }\n          }\n          \n          return { index: -1, length: 0 };\n        };\n        \n        // 遍历所有建议并应用高亮\n        sortedSuggestions.forEach(suggestion => {\n          try {\n            // 忽略空的原始文本\n            if (!suggestion.original || suggestion.original.length === 0) {\n              console.warn('忽略空的原始文本建议');\n              return;\n            }\n\n            // 使用改进的文本位置查找\n            const position = findTextPosition(plainText, suggestion.original);\n            \n            if (position.index === -1) {\n              console.warn(`未找到原始文本: \"${suggestion.original.substring(0, 30)}${suggestion.original.length > 30 ? '...' : ''}\"，跳过高亮。`);\n              return;\n            }\n            \n            // 确保每个建议有一个唯一标识符\n            if (!suggestion.id) {\n              suggestion.id = `suggestion-${Math.random().toString(36).substring(2, 9)}`;\n            }\n            \n            try {\n              // 创建一个Quill格式对象用于高亮\n              const highlightFormat = {\n                'background-color': 'rgba(255, 217, 102, 0.3)',\n                'border-bottom': '1px dashed #ffb300',\n                'cursor': 'pointer',\n                'data-suggestion-id': suggestion.id,\n                'data-original': suggestion.original,\n                'data-suggested': suggestion.suggested,\n                'data-explanation': suggestion.explanation || '',\n                'title': '点击查看修改建议',\n                'class': 'suggestion-highlight',\n                'style': 'pointer-events: auto !important; cursor: pointer !important; z-index: 9999 !important; position: relative !important;'\n              };\n              \n              // 应用格式\n              editor.formatText(position.index, position.length, highlightFormat, 'api');\n              \n              // 延迟处理，确保DOM已更新\n              setTimeout(() => {\n                // 使用document.querySelectorAll进行全局查找，可能更可靠\n                const spans = document.querySelectorAll(`[data-suggestion-id=\"${suggestion.id}\"]`);\n                if (spans.length > 0) {\n                  spans.forEach(span => {\n                    // 强制确保属性正确保存\n                    span.setAttribute('data-original', suggestion.original);\n                    span.setAttribute('data-suggested', suggestion.suggested);\n                    if (suggestion.explanation) {\n                      span.setAttribute('data-explanation', suggestion.explanation);\n                    }\n                    \n                    // 直接操作DOM样式，确保可点击\n                    span.style.setProperty('pointer-events', 'auto', 'important');\n                    span.style.setProperty('cursor', 'pointer', 'important');\n                    span.style.setProperty('position', 'relative', 'important');\n                    span.style.setProperty('z-index', '9999', 'important');\n                    span.classList.add('suggestion-highlight');\n                    \n                    // 加强点击处理：使用多种事件绑定方式\n                    // 方式1：标准事件监听器\n                    span.addEventListener('click', function(e) {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      console.log('高亮元素点击 - addEventListener:', suggestion.id);\n                      handleHighlightElement(span, e);\n                    }, true);\n                    \n                    // 方式2：内联onclick属性（兼容性更好）\n                    span.onclick = function(e) {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      console.log('高亮元素点击 - onclick:', suggestion.id);\n                      handleHighlightElement(span, e);\n                    };\n                  });\n                } else {\n                  console.warn(`未找到高亮元素 ID:${suggestion.id}`);\n                }\n              }, 200); // 增加延迟以确保DOM更新\n              \n              matchedCount++;\n            } catch (e) {\n              console.error('应用Quill格式失败:', e);\n              \n              // DOM回退方案代码保持不变\n              // ... existing code ...\n            }\n          } catch (e) {\n            console.error('处理建议失败:', e, suggestion);\n          }\n        });\n        \n        // 通知用户\n        if (matchedCount > 0) {\n          ElMessage.info(`在编辑器中高亮了${matchedCount}条建议修改，点击高亮部分可查看详情`);\n          \n          // 添加document级别的事件委托，作为额外的保障\n          document.removeEventListener('click', documentHighlightClickHandler, true);\n          document.addEventListener('click', documentHighlightClickHandler, true);\n          console.log('添加文档级高亮点击事件委托');\n          \n          // 确保事件监听器正确添加到编辑器\n          const editorElement = getQuillEditorElement();\n          if (editorElement) {\n            // 先移除之前可能存在的事件监听器\n            editorElement.removeEventListener('click', delegatedHighlightClick, true);\n            // 重新添加事件监听器，使用捕获阶段（第三个参数为true）\n            editorElement.addEventListener('click', delegatedHighlightClick, true);\n            console.log('已重新绑定编辑器高亮点击事件');\n          }\n        } else if (allSuggestions.length > 0) {\n          ElMessage.warning('无法在当前文本中匹配建议内容，建议在侧边栏查看');\n          showAiSuggestions.value = true;\n        }\n      } catch (error) {\n        console.error('应用内联建议失败:', error);\n        showAiSuggestions.value = true; // 如果内联失败，显示侧边栏\n      }\n    };\n    \n    // 显示建议工具提示\n    const showSuggestionTooltip = (element, suggestion, tooltipContainer) => {\n      const rect = element.getBoundingClientRect()\n      \n      // 清除现有内容和事件监听器\n      tooltipContainer.innerHTML = ''\n      \n      // 记录当前活跃的tooltip，以便后续引用\n      window.activeSuggestionTooltip = tooltipContainer\n      \n      // 生成差异对比（使用增强版算法）\n      let diffHtml = '';\n      if (window.enhancedDiffDisplay) {\n        // 使用补丁中提供的增强版差异算法\n        diffHtml = window.enhancedDiffDisplay(suggestion.original, suggestion.suggested);\n      } else {\n        // 回退到简单版本\n        diffHtml = generateDiff(suggestion.original, suggestion.suggested);\n      }\n      \n      // 设置工具提示内容\n      const content = document.createElement('div')\n      content.className = 'suggestion-tooltip-content'\n      content.innerHTML = `\n        <div class=\"suggestion-tooltip-header\">\n          <span class=\"suggestion-tooltip-title\">AI文本优化建议</span>\n          <span class=\"suggestion-tooltip-close\">&times;</span>\n        </div>\n        <div class=\"suggestion-tooltip-body\">\n          <div class=\"suggestion-comparison\">\n            <div class=\"suggestion-column\">\n              <div class=\"suggestion-label\">原文本:</div>\n              <div class=\"suggestion-original\">${escapeHtml(suggestion.original)}</div>\n            </div>\n            <div class=\"suggestion-divider\"></div>\n            <div class=\"suggestion-column\">\n              <div class=\"suggestion-label\">建议修改为:</div>\n              <div class=\"suggestion-suggested\">${escapeHtml(suggestion.suggested)}</div>\n            </div>\n          </div>\n          <div class=\"suggestion-diff-container\">\n            <div class=\"suggestion-label\">差异对比:</div>\n            <div class=\"suggestion-diff\">${diffHtml}</div>\n          </div>\n          ${suggestion.explanation ? `\n          <div class=\"suggestion-explanation-container\">\n            <div class=\"suggestion-label\">修改说明:</div>\n            <div class=\"suggestion-explanation\">${escapeHtml(suggestion.explanation)}</div>\n          </div>` : ''}\n        </div>\n        <div class=\"suggestion-actions\">\n          <button class=\"btn-adopt\" type=\"button\">采纳此建议</button>\n          <button class=\"btn-ignore\" type=\"button\">忽略</button>\n        </div>\n      `\n      \n      tooltipContainer.appendChild(content)\n      \n      // 定位工具提示 - 使用CSS而非内联样式\n      tooltipContainer.style.position = 'absolute'\n      tooltipContainer.style.top = `${rect.bottom + window.scrollY + 5}px`\n      tooltipContainer.style.left = `${rect.left + window.scrollX}px`\n      tooltipContainer.style.display = 'block'\n      \n      // 确保tooltip在视口内\n      setTimeout(() => {\n        const tooltipRect = tooltipContainer.getBoundingClientRect();\n        if (tooltipRect.right > window.innerWidth) {\n          tooltipContainer.style.left = `${Math.max(10, window.innerWidth - tooltipRect.width - 10)}px`;\n        }\n        if (tooltipRect.bottom > window.innerHeight) {\n          tooltipContainer.style.top = `${Math.max(10, window.innerHeight - tooltipRect.height - 10) + window.scrollY}px`;\n        }\n      }, 0);\n      \n      // 添加按钮事件\n      const adoptBtn = tooltipContainer.querySelector('.btn-adopt')\n      const ignoreBtn = tooltipContainer.querySelector('.btn-ignore')\n      const closeBtn = tooltipContainer.querySelector('.suggestion-tooltip-close')\n      \n      // 移除旧的事件监听器，避免重复绑定\n      const oldAdoptBtn = adoptBtn.cloneNode(true);\n      const oldIgnoreBtn = ignoreBtn.cloneNode(true);\n      const oldCloseBtn = closeBtn.cloneNode(true);\n      \n      adoptBtn.parentNode.replaceChild(oldAdoptBtn, adoptBtn);\n      ignoreBtn.parentNode.replaceChild(oldIgnoreBtn, ignoreBtn);\n      closeBtn.parentNode.replaceChild(oldCloseBtn, closeBtn);\n      \n      // 添加新的事件监听器\n      oldAdoptBtn.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        console.log('采纳建议:', suggestion.id);\n        try {\n          adoptInlineEditSuggestion(suggestion.id);\n          tooltipContainer.style.display = 'none';\n        } catch (error) {\n          console.error('采纳建议出错:', error);\n          ElMessage.error('采纳建议时出错，请稍后再试');\n        }\n      })\n      \n      oldIgnoreBtn.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        console.log('忽略建议:', suggestion.id);\n        try {\n          ignoreInlineEditSuggestion(suggestion.id);\n          tooltipContainer.style.display = 'none';\n        } catch (error) {\n          console.error('忽略建议出错:', error);\n          ElMessage.error('忽略建议时出错，请稍后再试');\n        }\n      })\n      \n      oldCloseBtn.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        tooltipContainer.style.display = 'none';\n      })\n      \n      // 点击外部隐藏工具提示\n      const clickOutsideHandler = (e) => {\n        if (!tooltipContainer.contains(e.target) && \n            !element.contains(e.target)) {\n          tooltipContainer.style.display = 'none';\n          document.removeEventListener('click', clickOutsideHandler);\n        }\n      }\n      \n      // 确保不会连续触发\n      setTimeout(() => {\n        document.removeEventListener('click', clickOutsideHandler); // 先移除可能存在的处理器\n        document.addEventListener('click', clickOutsideHandler);\n      }, 100)\n    }\n    \n    // 转义HTML特殊字符\n    const escapeHtml = (unsafe) => {\n      return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n    }\n    \n    // 生成差异对比（简单版本，作为备用）\n    const generateDiff = (original, suggested) => {\n      try {\n        if (!original || !suggested) return ''\n        \n        // 使用更精确的分词方法\n        const tokenize = (text) => {\n          // 保留标点符号作为单独的标记，同时保持中文字符的完整性\n          return text.split(/([,.!?;:，。！？；：\\s]+|[\\u4e00-\\u9fa5])/g).filter(token => token !== '');\n        };\n        \n        const tokens1 = tokenize(original);\n        const tokens2 = tokenize(suggested);\n        \n        // 构建差异HTML\n        let html = '<div class=\"diff-content\">';\n        \n        // 使用改进的差异对比算法\n        const matched = new Set(); // 记录已匹配的索引\n        \n        // 第一步：找出完全相同的部分\n        const commonParts = [];\n        for (let i1 = 0; i1 < tokens1.length; i1++) {\n          for (let j1 = 0; j1 < tokens2.length; j1++) {\n            if (tokens1[i1] === tokens2[j1] && !matched.has(`2:${j1}`)) {\n              commonParts.push({ index1: i1, index2: j1, token: tokens1[i1] });\n              matched.add(`2:${j1}`);\n              break;\n            }\n          }\n        }\n        \n        // 按照第二个文本的顺序排序\n        commonParts.sort((a, b) => a.index2 - b.index2);\n        \n        // 第二步：根据共同部分构建差异\n        let lastIndex1 = -1;\n        let lastIndex2 = -1;\n        \n        for (const part of commonParts) {\n          // 处理第一个文本中的删除部分\n          if (part.index1 > lastIndex1 + 1) {\n            html += '<span class=\"diff-removed\">';\n            for (let k = lastIndex1 + 1; k < part.index1; k++) {\n              html += escapeHtml(tokens1[k]);\n            }\n            html += '</span>';\n          }\n          \n          // 处理第二个文本中的添加部分\n          if (part.index2 > lastIndex2 + 1) {\n            html += '<span class=\"diff-added\">';\n            for (let k = lastIndex2 + 1; k < part.index2; k++) {\n              html += escapeHtml(tokens2[k]);\n            }\n            html += '</span>';\n          }\n          \n          // 添加共同部分\n          html += `<span class=\"diff-common\">${escapeHtml(part.token)}</span>`;\n          \n          lastIndex1 = part.index1;\n          lastIndex2 = part.index2;\n        }\n        \n        // 处理剩余的部分\n        if (lastIndex1 < tokens1.length - 1) {\n          html += '<span class=\"diff-removed\">';\n          for (let k = lastIndex1 + 1; k < tokens1.length; k++) {\n            html += escapeHtml(tokens1[k]);\n          }\n          html += '</span>';\n        }\n        \n        if (lastIndex2 < tokens2.length - 1) {\n          html += '<span class=\"diff-added\">';\n          for (let k = lastIndex2 + 1; k < tokens2.length; k++) {\n            html += escapeHtml(tokens2[k]);\n          }\n          html += '</span>';\n        }\n        \n        html += '</div>';\n        return html;\n      } catch (e) {\n        console.error('生成差异对比失败:', e);\n        return `<div class=\"diff-error\">无法生成差异对比: ${e.message}</div>`;\n      }\n    }\n\n    // 内联建议开关切换处理\n    const onInlineSuggestionsToggle = (value) => {\n      if (value) {\n        ElMessage.info('已启用内联建议，润色结果将直接显示在编辑器中')\n        // 启用并立即应用当前的建议\n        setTimeout(() => {\n          if (getQuillEditorElement()) {\n            // 如果已经进行过AI分析且有建议，则应用它们\n            if (aiSuggestions.syntax.length > 0 || aiSuggestions.terminology.length > 0) {\n              // 只有当分析内容和当前内容一致时才应用高亮\n              if (lastAnalyzedContent.value === contractDetails.content) {\n              applyInlineSuggestions()\n              ElMessage.success('已将现有建议应用到编辑器中')\n              } else {\n                ElMessage.warning('内容已更改，请重新点击\"AI润色分析\"按钮获取最新建议')\n              }\n            } else {\n              ElMessage.info('没有可应用的建议，请点击\"AI润色分析\"按钮获取建议')\n            }\n          } else {\n            console.warn('无法获取编辑器元素，将使用侧边栏显示建议');\n            showAiSuggestions.value = true;\n            enableInlineSuggestions.value = false;\n          }\n        }, 100)\n      } else {\n        ElMessage.info('已禁用内联建议，建议将只在侧边栏显示')\n        // 禁用时清除所有标记\n        setTimeout(() => {\n          try {\n            clearInlineEditSuggestions();\n          } catch (error) {\n            console.error('清除建议标记失败:', error);\n          }\n        }, 100);\n      }\n    }\n    \n    // 设置键盘快捷键\n    const setupKeyboardShortcuts = () => {\n      const handleKeyDown = (e) => {\n        // 检查是否为 Ctrl+Shift+A (润色分析)\n        if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === 'a') {\n          // 确保当前在合同文本标签并且不在加载中状态\n          if (activeTab.value === 'contractText' && !realTimePolishLoading.value) {\n            e.preventDefault(); // 阻止默认行为\n            manualAnalyzeText();\n            ElMessage.info('已通过快捷键触发AI润色分析');\n          }\n        }\n        \n        // 检查是否为 Ctrl+Shift+C (合同检查)\n        if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === 'c') {\n          // 确保当前在合同检查标签并且不在检查中状态\n          if (activeTab.value === 'contractCheck' && !isChecking.value) {\n            e.preventDefault(); // 阻止默认行为\n            startContractCheck();\n            ElMessage.info('已通过快捷键触发AI合同检查');\n          }\n        }\n      };\n      \n      window.addEventListener('keydown', handleKeyDown);\n      \n      // 清理事件监听器\n      return () => {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    };\n\n    // 组件挂载时添加按钮和快捷键\n    onMounted(async () => {\n      // 检查路由状态中是否包含新创建的合同数据\n      const newContractData = history.state.newContractData;\n\n      if (newContractData) {\n        // 如果有，直接用这份数据填充页面，避免API调用和缓存问题\n        console.log('检测到导航状态中的新合同数据，直接填充:', newContractData);\n        // 创建一个函数来填充数据，避免代码重复\n        const populateDetails = (data) => {\n          Object.keys(contractDetails).forEach(key => {\n            if (key in data) {\n              contractDetails[key] = data[key];\n            }\n          });\n          if (data.sign_date) contractDetails.signDate = data.sign_date;\n          if (data.start_date) contractDetails.startDate = data.start_date;\n          if (data.expire_date) contractDetails.expireDate = data.expire_date;\n          if (data.amount) contractDetails.amount = Number(data.amount).toLocaleString('zh-CN');\n        };\n        populateDetails(newContractData);\n        isLoading.value = false;\n        ElMessage.success('AI生成合同加载成功');\n      } else if (route.name === 'ContractDetail' && contractId.value) {\n        // 否则，走常规的API加载流程\n        console.log('组件挂载，开始加载合同详情:', contractId.value);\n        await getContractDetails(true);\n      } else {\n        console.log('组件挂载但不在合同详情页面或合同ID无效，跳过加载');\n      }\n      \n      console.log(\"组件挂载完成，UI初始化\")\n      \n      // 强制修复滚动样式\n      setTimeout(() => {\n        if (checkResultArea.value) {\n          console.log('强制修复滚动区域样式');\n          // 修复右侧内容区域样式 - 使用flex布局\n          checkResultArea.value.style.display = 'flex';\n          checkResultArea.value.style.flexDirection = 'column';\n          checkResultArea.value.style.overflow = 'hidden';\n          checkResultArea.value.style.height = '100%';\n          \n          // 修复滚动容器样式 - 使用flex子元素\n          const scrollWrapper = checkResultArea.value.querySelector('.check-content-scroll-wrapper');\n          if (scrollWrapper) {\n            scrollWrapper.style.flex = '1';\n            scrollWrapper.style.overflowY = 'auto';\n            scrollWrapper.style.padding = '15px';\n            scrollWrapper.style.height = '0'; // 关键：flex布局中设置height:0让flex-grow工作\n          }\n        }\n      }, 300);\n      \n      // 确保Quill正确加载\n      checkAndInitQuill()\n      \n      // 初始化编辑器高度\n      nextTick(() => {\n        adjustEditorHeight();\n        // 设置窗口大小调整监听器\n        setupResizeListener();\n        \n        // 设置MutationObserver来监控DOM变化\n        setupMutationObserver();\n      });\n      \n      // 检查是否直接进入合同文本标签，不再自动分析\n      if (activeTab.value === 'contractText') {\n        console.log(\"直接进入文本编辑标签，可以点击润色按钮进行分析\")\n      }\n      \n      // 添加展开按钮\n      addFloatingButton()\n      // 初始状态下更新按钮显示\n      updateFloatingButton()\n      \n      // 设置键盘快捷键\n      const cleanupShortcuts = setupKeyboardShortcuts();\n      \n      // 保存清理函数引用到外部变量\n      keyboardShortcutsCleanup.value = cleanupShortcuts;\n      \n      // 添加页面可见性监听，当用户切回标签页时重新调整高度\n      document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n      \n      // 修改：使用更具优先级的CSS选择器，添加!important标记确保样式生效\n      const styleEl = document.createElement('style');\n      styleEl.id = 'suggestion-highlight-fix-style';\n      styleEl.textContent = `\n        /* 单独的通用高亮样式 */\n        .suggestion-highlight, \n        [data-suggestion-id],\n        body .ql-editor .suggestion-highlight,\n        body .ql-editor [data-suggestion-id],\n        .ql-container .ql-editor .suggestion-highlight,\n        .ql-container .ql-editor [data-suggestion-id] {\n          pointer-events: auto !important; /* 确保点击事件可以触发 */\n          cursor: pointer !important;\n          background-color: rgba(255, 217, 102, 0.3) !important;\n          border-bottom: 1px dashed #ffb300 !important;\n          z-index: 9999 !important; /* 提高z-index确保在最上层 */\n          position: relative !important;\n        }\n        \n        /* 确保tooltip容器也具有足够的z-index */\n        .suggestion-tooltip,\n        #suggestion-tooltip-container {\n          position: fixed !important; /* 改为fixed定位，避免受父级影响 */\n          z-index: 10000 !important; /* 比高亮元素更高 */\n          pointer-events: auto !important;\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2) !important;\n        }\n\n        /* 确保Quill编辑器不会阻止点击事件传播 */\n        .ql-editor {\n          position: relative !important;\n        }\n      `;\n      document.head.appendChild(styleEl);\n      \n      // 调整编辑器高度\n      nextTick(() => {\n        adjustEditorHeight();\n        setupMutationObserver();\n        setupResizeListener();\n      });\n    });\n    \n    // 处理页面可见性变化\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        // 页面重新变为可见时，重新调整高度\n        console.log(\"页面重新获得焦点，调整布局高度\");\n        setTimeout(adjustEditorHeight, 100);\n      }\n    };\n    \n    // 组件卸载时清理资源\n    onUnmounted(() => {\n      const button = document.getElementById('aiFloatingButton')\n      if (button) {\n        document.body.removeChild(button)\n      }\n      \n      // 重置contractId，确保离开页面时清理\n      contractId.value = null\n\n      // 清理suggestion tooltip\n      const tooltip = document.querySelector('.ql-suggestion-tooltip')\n      if (tooltip) {\n        document.body.removeChild(tooltip)\n      }\n      \n      // 移除动态添加的样式\n      const styleElem = document.getElementById('suggestion-styles')\n      if (styleElem) {\n        document.head.removeChild(styleElem)\n      }\n      \n      // 清理MutationObserver\n      if (quillEditor.value) {\n        try {\n          const editor = quillEditor.value.getQuill()\n          if (editor) {\n            const suggestionModule = editor.getModule('suggestion')\n            if (suggestionModule && typeof suggestionModule.destroy === 'function') {\n              suggestionModule.destroy()\n            }\n          }\n        } catch (error) {\n          console.error('清理建议模块失败:', error)\n        }\n      }\n      \n      // 清理键盘快捷键\n      if (keyboardShortcutsCleanup.value) {\n        keyboardShortcutsCleanup.value();\n      }\n      \n      // 清理窗口大小调整事件监听器\n      cleanupResizeListener();\n      \n      // 清理DOM变化监听器\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n        resizeObserver = null;\n      }\n      \n      // 移除页面可见性监听\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      \n      // 移除文档级的点击事件处理器\n      document.removeEventListener('click', documentHighlightClickHandler, true);\n      \n      // 清理样式元素\n      const styleEl = document.getElementById('suggestion-highlight-fix-style');\n      if (styleEl) {\n        document.head.removeChild(styleEl);\n      }\n    })\n\n    // 用于存储清理函数的引用\n    const keyboardShortcutsCleanup = ref(null);\n    \n    // 创建用来存储MutationObserver的变量\n    let resizeObserver = null;\n    \n    // 设置MutationObserver来监控DOM变化\n    const setupMutationObserver = () => {\n      // 确保之前的observer已被清理\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n      \n      // 如果在合同文本标签页，设置observer\n      if (activeTab.value === 'contractText' && contractEditContainer.value) {\n        resizeObserver = new MutationObserver(() => {\n          // 当DOM变化时，调整编辑器高度\n          adjustEditorHeight();\n        });\n        \n        // 配置observer监控子节点变化和属性变化\n        resizeObserver.observe(contractEditContainer.value, {\n          childList: true,\n          subtree: true,\n          attributes: true\n        });\n        \n        console.log('已设置DOM变化监听器');\n      }\n    };\n    \n    // 检查并初始化Quill\n    const checkAndInitQuill = () => {\n      // 先检查是否已经直接可用\n      if (typeof window !== 'undefined' && window.Quill) {\n        try {\n          console.log('Quill已加载，初始化扩展')\n          initQuillExtensions()\n          \n          // 在初始化后添加安全性检查\n          setTimeout(() => {\n            const editorElement = getQuillEditorElement();\n            if (!editorElement) {\n              console.warn('Quill编辑器DOM元素无法访问，可能导致某些功能不可用');\n              enableInlineSuggestions.value = false;\n            }\n          }, 300);\n        } catch (error) {\n          console.error('初始化Quill扩展失败:', error)\n          enableInlineSuggestions.value = false\n        }\n        return\n      }\n      \n      // 如果不可用，尝试多种途径加载Quill\n      console.log('Quill未加载，尝试加载资源')\n      \n      // 定义多个可能的CDN资源路径\n      const cdnSources = [\n        {\n          js: `${window.location.origin}/static/lib/quill/quill.min.js`,\n          css: `${window.location.origin}/static/lib/quill/quill.snow.css`\n        },\n        {\n          js: 'https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.min.js',\n          css: 'https://cdn.jsdelivr.net/npm/quill@1.3.7/dist/quill.snow.css'\n        },\n        {\n          js: 'https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.min.js',\n          css: 'https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.snow.css'\n        },\n        {\n          js: 'https://unpkg.com/quill@1.3.7/dist/quill.min.js',\n          css: 'https://unpkg.com/quill@1.3.7/dist/quill.snow.css'\n        }\n      ];\n      \n      // 跟踪加载尝试\n      let currentSourceIndex = 0;\n      const maxRetries = cdnSources.length;\n      \n      // 加载CSS资源\n      const loadCss = (source) => {\n        return new Promise((resolve, reject) => {\n          // 检查是否已经加载过\n          const existingLink = document.getElementById('quill-snow-css');\n          if (existingLink) {\n            document.head.removeChild(existingLink);\n          }\n          \n          const cssLink = document.createElement('link');\n          cssLink.rel = 'stylesheet';\n          cssLink.id = 'quill-snow-css';\n          cssLink.href = source;\n          \n          cssLink.onload = () => {\n            console.log('Quill CSS 加载成功:', source);\n            resolve();\n          };\n          \n          cssLink.onerror = () => {\n            console.error('Quill CSS 加载失败:', source);\n            reject();\n          };\n          \n          document.head.appendChild(cssLink);\n        });\n      };\n      \n      // 加载JS资源\n      const loadJs = (source) => {\n        return new Promise((resolve, reject) => {\n          // 检查是否已经加载过\n          const existingScript = document.getElementById('quill-js');\n          if (existingScript) {\n            document.body.removeChild(existingScript);\n          }\n          \n          const script = document.createElement('script');\n          script.src = source;\n          script.id = 'quill-js';\n          script.async = true;\n          \n          script.onload = () => {\n            console.log('Quill JS 加载成功:', source);\n            resolve();\n          };\n          \n          script.onerror = () => {\n            console.error('Quill JS 加载失败:', source);\n            reject();\n          };\n          \n          document.body.appendChild(script);\n        });\n      };\n      \n      // 尝试加载下一个源\n      const tryNextSource = () => {\n        if (currentSourceIndex >= maxRetries) {\n          console.error('所有Quill资源加载尝试都失败了');\n          fallbackToBasicEditor();\n          return;\n        }\n        \n        const source = cdnSources[currentSourceIndex];\n        currentSourceIndex++;\n        \n        console.log(`尝试加载Quill资源 (${currentSourceIndex}/${maxRetries}):`, source);\n        \n        // 先尝试加载CSS，然后加载JS\n        loadCss(source.css)\n          .then(() => loadJs(source.js))\n          .then(() => {\n            // 加载成功后初始化\n            console.log('Quill资源加载完成，初始化扩展');\n            setTimeout(() => {\n              try {\n                if (window.Quill) {\n                  initQuillExtensions();\n                  \n                  // 如果在合同文本标签页，尝试应用内联建议\n                  if (activeTab.value === 'contractText' && enableInlineSuggestions.value) {\n                    setTimeout(applyInlineSuggestions, 500);\n                  }\n                } else {\n                  console.error('Quill未能正确加载，脚本可能已执行但Quill对象未定义');\n                  tryNextSource();\n                }\n              } catch (error) {\n                console.error('初始化Quill扩展失败:', error);\n                tryNextSource();\n              }\n            }, 300);\n          })\n          .catch(() => {\n            console.log('资源加载失败，尝试下一个源');\n            tryNextSource();\n          });\n      };\n      \n      // 降级到基本编辑器\n      const fallbackToBasicEditor = () => {\n        ElMessage.warning('高级编辑器加载失败，使用基本编辑器功能');\n        enableInlineSuggestions.value = false;\n        showAiSuggestions.value = true;\n        \n        // 添加基本样式\n        const inlineStyles = document.createElement('style');\n        inlineStyles.id = 'quill-basic-styles';\n        inlineStyles.textContent = `\n          .ql-container{border:1px solid #ccc;font-family:sans-serif;}\n          .ql-editor{min-height:300px;padding:12px 15px;}\n          .ql-toolbar{border-top:none;border-left:none;border-right:none;border-bottom:1px solid #e0e0e0;background-color:#f8f9fa;}\n        `;\n        document.head.appendChild(inlineStyles);\n      };\n      \n      // 开始尝试加载\n      tryNextSource();\n    }\n\n    // 在mounted钩子中读取本地存储的术语\n    onMounted(() => {\n      // 加载合同详情\n      getContractDetails();\n      \n      // 加载本地存储的自定义术语\n      const savedTerminologies = localStorage.getItem('customTerminologies');\n      if (savedTerminologies) {\n        try {\n          customTerminologies.value = JSON.parse(savedTerminologies);\n        } catch (e) {\n          console.error('解析存储的术语出错:', e);\n        }\n      }\n      \n      // 读取本地存储的润色偏好\n      const savedPreferences = localStorage.getItem('polishPreferences');\n      if (savedPreferences) {\n        try {\n          const preferences = JSON.parse(savedPreferences);\n          // 确保focus是数组类型\n          if (preferences.focus && !Array.isArray(preferences.focus)) {\n            preferences.focus = ['grammar', 'terminology'];\n          }\n          Object.assign(polishPreferences, preferences);\n          console.log('已加载润色偏好设置:', polishPreferences);\n        } catch (e) {\n          console.error('解析存储的润色偏好出错:', e);\n        }\n      }\n      \n      // 读取本地存储的检查偏好\n      const savedCheckPreferences = localStorage.getItem('checkPreferences');\n      if (savedCheckPreferences) {\n        try {\n          const preferences = JSON.parse(savedCheckPreferences);\n          Object.assign(checkPreferences, preferences);\n          console.log('已加载检查偏好设置:', checkPreferences);\n        } catch (e) {\n          console.error('解析存储的检查偏好出错:', e);\n        }\n      }\n      \n      // 绑定编辑器高亮点击事件\n      const editorContainer = getQuillEditorElement();\n      if (editorContainer) {\n        editorContainer.addEventListener('click', delegatedHighlightClick, true);\n        \n        // 添加全局点击监听作为备份\n        setTimeout(() => {\n          document.addEventListener('click', function globalHighlightClickHandler(e) {\n            // 检查是否点击了高亮元素\n            let target = e.target;\n            if ((target.classList && target.classList.contains('suggestion-highlight')) ||\n                (target.hasAttribute && target.hasAttribute('data-suggestion-id'))) {\n              console.log('全局点击监听捕获到高亮元素点击');\n              \n              // 获取建议ID\n              const suggestionId = target.getAttribute('data-suggestion-id');\n              if (!suggestionId) return;\n              \n              // 处理高亮元素点击\n              handleHighlightElement(target, e);\n            }\n          }, true);\n        }, 500);\n      }\n      \n      // 调整编辑器高度\n      nextTick(() => {\n        adjustEditorHeight();\n        setupMutationObserver();\n        setupResizeListener();\n      });\n    });\n\n    // 监听润色偏好变化，保存到本地存储\n    watch(polishPreferences, (newPreferences) => {\n      console.log('保存润色偏好:', newPreferences);\n      localStorage.setItem('polishPreferences', JSON.stringify({\n        style: newPreferences.style, \n        contractType: newPreferences.contractType,\n        focus: newPreferences.focus\n      }));\n    }, { deep: true });\n\n    // 监听合同内容变化，延迟执行分析\n    watch(() => contractDetails.content, (newContent, oldContent) => {\n      if (newContent && newContent !== oldContent && newContent !== lastAnalyzedContent.value) {\n        // 当内容变化时，清除所有内联建议高亮\n        clearInlineEditSuggestions();\n        debouncedAnalyzeText();\n      }\n    });\n\n    // 监听检查偏好设置变化，保存到本地\n    watch(checkPreferences, (newPreferences) => {\n      console.log('保存检查偏好:', newPreferences);\n      localStorage.setItem('checkPreferences', JSON.stringify(newPreferences));\n    }, { deep: true });\n\n    // 在组件卸载前清理所有事件监听\n    onBeforeUnmount(() => {\n      // 清理窗口调整大小事件\n      cleanupResizeListener();\n      \n      // 清理页面可见性变化监听\n      document.removeEventListener('visibilitychange', () => {});\n      \n      // 清理DOM变化观察器\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n      \n      // 清理全局样式\n      const styleEl = document.getElementById('suggestion-highlight-fix-style');\n      if (styleEl) {\n        document.head.removeChild(styleEl);\n      }\n      \n      console.log('组件即将卸载，已清理所有事件监听器');\n    });\n\n    const aiCheckFinished = ref(false)\n\n    // 自动滚动到底部\n    function scrollQuillToBottom() {\n      if (quillEditor.value && quillEditor.value.getQuill) {\n        const quill = quillEditor.value.getQuill();\n        if (quill && quill.root) {\n          quill.root.scrollTop = quill.root.scrollHeight;\n        }\n      }\n    }\n\n    // 合同文本内容变更时自动滚动到底部\n    function onContractContentChange() {\n      // 移除自动滚动到底部的逻辑\n      // scrollQuillToBottom();\n    }\n\n    // 1. 在onMounted中为编辑器容器绑定事件委托\n    onMounted(() => {\n      const editorContainer = getQuillEditorElement();\n      if (editorContainer) {\n        editorContainer.addEventListener('click', delegatedHighlightClick, true);\n      }\n    });\n\n    onBeforeUnmount(() => {\n      const editorContainer = getQuillEditorElement();\n      if (editorContainer) {\n        editorContainer.removeEventListener('click', delegatedHighlightClick, true);\n      }\n    });\n\n    // 2. 实现事件委托处理函数\n    function delegatedHighlightClick(e) {\n      try {\n        console.log('捕获到编辑器点击事件', e.target);\n        let el = e.target;\n        \n        // 使用函数检测是否为高亮元素，增强可靠性\n        const isHighlightElement = (element) => {\n          if (!element) return false;\n          \n          // 多种检查方式\n          return (element.classList && element.classList.contains('suggestion-highlight')) ||\n                 (element.hasAttribute && element.hasAttribute('data-suggestion-id')) || \n                 (element.getAttribute && element.getAttribute('data-suggestion-id'));\n        };\n        \n        // 检查当前元素\n        if (isHighlightElement(el)) {\n          console.log('直接匹配到高亮元素');\n          e.preventDefault();\n          e.stopPropagation();\n          handleHighlightElement(el, e);\n          return;\n        }\n        \n        // 向上查找高亮元素\n        while (el && el !== document.body) {\n          if (isHighlightElement(el)) {\n            console.log('在父级找到高亮元素');\n            e.preventDefault();\n            e.stopPropagation();\n            handleHighlightElement(el, e);\n            return;\n          }\n          el = el.parentElement;\n        }\n        \n        // 查找可能的子元素\n        const highlightElements = e.target.querySelectorAll && e.target.querySelectorAll('.suggestion-highlight, [data-suggestion-id]');\n        if (highlightElements && highlightElements.length > 0) {\n          console.log('在子元素中找到高亮元素');\n          e.preventDefault();\n          e.stopPropagation();\n          handleHighlightElement(highlightElements[0], e);\n          return;\n        }\n      } catch (error) {\n        console.error('高亮点击处理出错:', error);\n      }\n    }\n\n    // 处理高亮元素的函数，提取逻辑便于复用\n    function handleHighlightElement(el, e) {\n      // 阻止默认行为和事件冒泡\n      e.preventDefault();\n      e.stopPropagation();\n      \n      // 获取suggestion信息\n      const suggestionId = el.getAttribute('data-suggestion-id');\n      if (!suggestionId) {\n        console.error('未找到suggestion-id属性');\n        return;\n      }\n      \n      console.log('处理高亮元素点击:', suggestionId);\n      \n      // 优先从DOM属性中获取完整信息，确保与高亮的内容一致\n      const original = el.getAttribute('data-original');\n      const suggested = el.getAttribute('data-suggested');\n      const explanation = el.getAttribute('data-explanation') || '';\n      \n      if (original && suggested) {\n        // 使用DOM中的属性创建建议对象\n        const suggestionFromDOM = {\n          id: suggestionId,\n          original: original,\n          suggested: suggested,\n          explanation: explanation\n        };\n        \n        // 创建或获取tooltip容器\n        let tooltipContainer = document.getElementById('suggestion-tooltip-container');\n        if (!tooltipContainer) {\n          tooltipContainer = document.createElement('div');\n          tooltipContainer.id = 'suggestion-tooltip-container';\n          tooltipContainer.className = 'suggestion-tooltip';\n          tooltipContainer.style.display = 'none';\n          document.body.appendChild(tooltipContainer);\n        }\n        \n        // 直接使用DOM属性中的建议显示tooltip\n        showSuggestionTooltip(el, suggestionFromDOM, tooltipContainer);\n        console.log('从DOM属性显示建议:', suggestionFromDOM);\n        return;\n      }\n      \n      // 如果DOM属性不完整，再尝试从建议列表中查找\n      let fullSuggestion = null;\n      \n      // 在语法建议中查找\n      for (let i = 0; i < aiSuggestions.syntax.length; i++) {\n        if (aiSuggestions.syntax[i].id === suggestionId) {\n          fullSuggestion = aiSuggestions.syntax[i];\n          break;\n        }\n      }\n      \n      // 在术语建议中查找\n      if (!fullSuggestion) {\n        for (let i = 0; i < aiSuggestions.terminology.length; i++) {\n          if (aiSuggestions.terminology[i].id === suggestionId) {\n            fullSuggestion = aiSuggestions.terminology[i];\n            break;\n          }\n        }\n      }\n      \n      if (!fullSuggestion) {\n        console.error('无法找到对应的建议内容:', suggestionId);\n        ElMessage.warning('无法找到对应的建议内容');\n        return;\n      }\n      \n      // 获取tooltip容器\n      let tooltipContainer = document.getElementById('suggestion-tooltip-container');\n      if (!tooltipContainer) {\n        tooltipContainer = document.createElement('div');\n        tooltipContainer.id = 'suggestion-tooltip-container';\n        tooltipContainer.className = 'suggestion-tooltip';\n        tooltipContainer.style.display = 'none';\n        document.body.appendChild(tooltipContainer);\n      }\n      \n      // 显示tooltip\n      showSuggestionTooltip(el, fullSuggestion, tooltipContainer);\n    }\n\n    // 监听标签页切换，清除高亮\n    watch(activeTab, (newTab) => {\n      // 如果切换到了合同文本标签\n      if (newTab === 'contractText') {\n        // 确保只在有AI建议的情况下才应用高亮\n        if (enableInlineSuggestions.value) {\n          // 先清除可能存在的旧高亮\n          clearInlineEditSuggestions();\n          \n          // 只在已经进行过AI分析且有建议的情况下应用高亮\n          if (lastAnalyzedContent.value === contractDetails.content && \n              (aiSuggestions.syntax.length > 0 || aiSuggestions.terminology.length > 0)) {\n            setTimeout(() => {\n              applyInlineSuggestions();\n            }, 300);\n          }\n        }\n      } else {\n        // 切换到其他标签页时，清除高亮\n        clearInlineEditSuggestions();\n      }\n    });\n\n    // 在onMounted的最后添加全局点击监听\n    onMounted(() => {\n      // 已有的代码保持不变\n      // ...\n      \n      // 添加全局点击监听作为备份\n      document.addEventListener('click', function(e) {\n        // 检查是否点击了高亮元素\n        let target = e.target;\n        if (target.classList && target.classList.contains('suggestion-highlight') ||\n            target.hasAttribute && target.hasAttribute('data-suggestion-id')) {\n          console.log('全局点击监听捕获到高亮元素点击');\n          \n          // 获取建议ID\n          const suggestionId = target.getAttribute('data-suggestion-id');\n          if (!suggestionId) return;\n          \n          // 查找建议\n          let suggestion = null;\n          for (const s of aiSuggestions.syntax) {\n            if (s.id === suggestionId) {\n              suggestion = s;\n              break;\n            }\n          }\n          \n          if (!suggestion) {\n            for (const s of aiSuggestions.terminology) {\n              if (s.id === suggestionId) {\n                suggestion = s;\n                break;\n              }\n            }\n          }\n          \n          if (suggestion) {\n            // 处理高亮元素点击事件\n            handleHighlightElement(target, e);\n          }\n        }\n      });\n    });\n\n    // 添加文档级别的事件处理函数\n    function documentHighlightClickHandler(e) {\n      // 检查点击的是否是高亮元素或其子元素\n      let target = e.target;\n      const isHighlight = (element) => {\n        return (element.classList && element.classList.contains('suggestion-highlight')) || \n               (element.hasAttribute && element.hasAttribute('data-suggestion-id'));\n      };\n      \n      if (isHighlight(target)) {\n        console.log('文档级事件捕获到高亮点击');\n        e.preventDefault();\n        e.stopPropagation();\n        handleHighlightElement(target, e);\n        return;\n      }\n      \n      // 向上查找父元素\n      while (target && target !== document.body) {\n        if (isHighlight(target)) {\n          console.log('文档级事件捕获到高亮父元素点击');\n          e.preventDefault();\n          e.stopPropagation();\n          handleHighlightElement(target, e);\n          return;\n        }\n        target = target.parentElement;\n      }\n    }\n\n    // 监听查询参数_refresh变化，强制刷新数据\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal && route.name === 'ContractDetail') {\n        console.log('检测到刷新参数变化，强制刷新合同详情:', newVal)\n        getContractDetails(false)\n      }\n    })\n\n    return {\n      activeTab,\n      activeCollapse,\n      activeSuggestionCollapse,\n      contractId,\n      contractDetails,\n      contractTitle,\n      checkResult,\n      aiSuggestions,\n      contractHistory,\n      polishPreferences,\n      checkPreferences,\n      customTerminologies,\n      newTerminology,\n      addCustomTerminology,\n      removeCustomTerminology,\n      isChecking,\n      quillEditor,\n      editorOption,\n      showAiSuggestions,\n      goBack,\n      saveChanges,\n      isLoading,\n      isSaving,\n      isRealTimePolishing,\n      realTimePolishLoading,\n      toggleAiPanelCollapse,\n      isAiPanelCollapsed,\n      adoptInlineEditSuggestion,\n      ignoreInlineEditSuggestion,\n      applyInlineSuggestions,\n      enableInlineSuggestions,\n      onInlineSuggestionsToggle,\n      debouncedAnalyzeText,\n      clearInlineEditSuggestions,\n      showSuggestionTooltip,\n      generateDiff,\n      manualAnalyzeText,\n      estimatedTime,\n      startContractCheck, // 添加合同检查函数\n      viewRegulation, \n      downloadContract, \n      adoptSuggestion, \n      ignoreSuggestion, \n      applyAllSuggestions, \n      hideAiPanel, \n      // 添加引用变量\n      contractEditContainer,\n      aiPolishSidebar,\n      editorMainArea,\n      contractCheckContainer, // 合同检查容器引用\n      checkSidebar, // 检查侧边栏引用\n      checkResultArea, // 检查结果区域引用\n      scrollQuillToBottom,\n      onContractContentChange\n    }\n  }\n}\n</script>\n\n<style scoped>\n.contract-detail-container {\n  padding: 20px;\n  position: relative;\n  /* overflow-x: hidden; 移除，允许主页面滚动 */\n}\n\n.card {\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.05);\n  margin-bottom: 20px;\n}\n\n.card-header {\n  background-color: #fff;\n  border-bottom: 1px solid #f0f0f0;\n  padding: 15px 20px;\n  font-weight: 600;\n  font-size: 16px;\n  color: #343a40;\n}\n\n.card-body {\n  padding: 20px;\n  overflow: visible; /* 确保不剪裁badge */\n}\n\n.contract-text-editor {\n  min-height: 100%;\n  height: 100%;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 0;\n  margin-bottom: 0;\n  background-color: #fff;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  display: flex;\n  flex-direction: column;\n}\n\n.contract-text-editor .ql-toolbar {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #e0e0e0;\n  background-color: #f8f9fa;\n  padding: 8px 15px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  flex-shrink: 0;\n}\n\n.contract-text-editor .ql-container {\n  border: none;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  font-family: 'Microsoft YaHei', Arial, sans-serif;\n}\n\n.contract-text-editor .ql-editor {\n  height: 100%;\n  overflow-y: auto;\n  font-size: 14px;\n  line-height: 1.8;\n  padding: 15px 20px;\n  color: #333;\n  scrollbar-width: thin; /* Firefox滚动条样式 */\n  scrollbar-color: #ddd transparent; /* Firefox滚动条颜色 */\n  scroll-behavior: smooth; /* 平滑滚动 */\n}\n\n/* 增加编辑器的滚动条样式 */\n.contract-text-editor .ql-editor::-webkit-scrollbar {\n  width: 6px;\n  background-color: transparent;\n}\n\n.contract-text-editor .ql-editor::-webkit-scrollbar-thumb {\n  background-color: #ddd;\n  border-radius: 3px;\n  transition: background-color 0.2s;\n}\n\n.contract-text-editor .ql-editor::-webkit-scrollbar-thumb:hover {\n  background-color: #bbb;\n}\n\n.check-item {\n  margin-bottom: 15px;\n}\n\n.me-1 {\n  margin-right: 4px;\n}\n\n.me-2 {\n  margin-right: 8px;\n}\n\n.ms-2 {\n  margin-left: 8px;\n}\n\n.mt-3 {\n  margin-top: 16px;\n}\n\n.mb-0 {\n  margin-bottom: 0;\n}\n\n.mb-1 {\n  margin-bottom: 4px;\n}\n\n.mb-2 {\n  margin-bottom: 8px;\n}\n\n.mb-3 {\n  margin-bottom: 16px;\n}\n\n.fs-4 {\n  font-size: 1.5rem;\n}\n\n/* AI建议面板样式 */\n.ai-suggestions-panel {\n  position: fixed;\n  top: 70px;  /* 调整顶部距离 */\n  right: 20px; /* 调整右侧距离，避免紧贴边缘 */\n  bottom: 20px;\n  width: 350px; /* 稍微增加宽度 */\n  max-height: calc(100vh - 100px); /* 限制最大高度 */\n  background-color: #f8f9fa;\n  border: 1px solid #dee2e6;\n  border-radius: 8px; /* 四边都有圆角 */\n  padding: 15px;\n  overflow-y: auto;\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  opacity: 0;\n  transform: translateX(100%);\n  z-index: 1040;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1); /* 更柔和的阴影 */\n}\n\n.ai-suggestions-panel.show {\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.ai-suggestions-panel.collapsed {\n  transform: translateX(calc(100% - 35px));\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n}\n\n.ai-suggestions-panel.collapsed .panel-header h5,\n.ai-suggestions-panel.collapsed .suggestion-item,\n.ai-suggestions-panel.collapsed > div:not(.panel-header) {\n  display: none;\n}\n\n.ai-suggestions-panel.collapsed .panel-header {\n  writing-mode: vertical-lr;\n  transform: rotate(180deg);\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-suggestions-panel.collapsed .panel-controls {\n  transform: rotate(180deg);\n  position: absolute;\n  top: 10px;\n  left: 0;\n}\n\n.panel-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.panel-controls {\n  display: flex;\n  align-items: center;\n}\n\n.suggestion-item {\n  background-color: #fff;\n  border: 1px solid #e9ecef;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  font-size: 0.85rem;\n}\n\n.original-text {\n  text-decoration: line-through;\n  color: #dc3545;\n  font-size: 0.8rem;\n  display: block;\n  margin-bottom: 3px;\n}\n\n.suggested-text {\n  color: #28a745;\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.explanation {\n  font-size: 0.75rem;\n  color: #6c757d;\n  margin-bottom: 8px;\n}\n\n.text-danger {\n  color: #dc3545;\n}\n\n.text-warning {\n  color: #ffc107;\n}\n\n.text-info {\n  color: #17a2b8;\n}\n\n.text-success {\n  color: #28a745;\n}\n\n.text-primary {\n  color: #007bff;\n}\n\n.text-muted {\n  color: #6c757d;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-end {\n  text-align: right;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.flex-grow-1 {\n  flex-grow: 1;\n}\n\n.justify-content-between {\n  justify-content: space-between;\n}\n\n.align-items-center {\n  align-items: center;\n}\n\n.p-3 {\n  padding: 1rem;\n}\n\n.ms-3 {\n  margin-left: 1rem;\n}\n\n.gap-2 {\n  gap: 0.5rem;\n}\n\n.border {\n  border: 1px solid #dee2e6;\n}\n\n.rounded {\n  border-radius: 0.25rem;\n}\n\n.bg-light {\n  background-color: #f8f9fa;\n}\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n}\n\n.col-md-3 {\n  flex: 0 0 25%;\n  max-width: 25%;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n.col-md-6 {\n  flex: 0 0 50%;\n  max-width: 50%;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n@media (max-width: 767.98px) {\n  .col-md-3, .col-md-6 {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n}\n\n/* 永久可见的展开按钮样式 */\n.panel-open-button {\n  position: fixed;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  z-index: 1039;\n  padding: 8px 5px 8px 8px;\n  background-color: rgba(255, 255, 255, 0.95);\n  border-top-left-radius: 50%;\n  border-bottom-left-radius: 50%;\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.panel-open-button:hover {\n  right: 8px;\n  background-color: #f0f9ff;\n}\n\n.panel-open-button .el-button {\n  box-shadow: 0 0 8px rgba(64, 158, 255, 0.2);\n}\n\n/* 添加内联建议相关的样式 */\n.suggestion-highlight {\n  background-color: rgba(255, 217, 102, 0.3);\n  border-bottom: 1px dashed #ffb300;\n  cursor: pointer;\n  position: relative;\n}\n\n.suggestion-highlight:hover {\n  background-color: rgba(255, 217, 102, 0.5);\n}\n\n.ql-suggestion-tooltip {\n  position: absolute;\n  background-color: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  padding: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1100;\n  width: auto;\n  max-width: 300px;\n}\n\n.suggestion-tooltip-content {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.suggestion-original {\n  text-decoration: line-through;\n  color: #dc3545;\n  font-size: 0.9rem;\n}\n\n.suggestion-suggested {\n  color: #28a745;\n  font-weight: bold;\n  font-size: 0.9rem;\n}\n\n.suggestion-arrow {\n  color: #6c757d;\n  margin: 0 5px;\n}\n\n.suggestion-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n  margin-top: 5px;\n}\n\n.suggestion-actions button {\n  border: none;\n  border-radius: 3px;\n  padding: 3px 8px;\n  font-size: 0.8rem;\n  cursor: pointer;\n}\n\n.suggestion-actions .btn-adopt {\n  background-color: #28a745;\n  color: white;\n}\n\n.suggestion-actions .btn-ignore {\n  background-color: #6c757d;\n  color: white;\n}\n\n/* 添加增强的差异对比样式 */\n.diff-content {\n  margin: 8px 0;\n  padding: 5px;\n  background: #f8f9fa;\n  border-radius: 4px;\n  line-height: 1.5;\n  font-family: Consolas, Monaco, monospace;\n  word-break: break-word;\n}\n\n.diff-common {\n  color: #333;\n}\n\n.diff-removed {\n  background-color: #ffecec;\n  color: #b30000;\n  text-decoration: line-through;\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.diff-added {\n  background-color: #eaffea;\n  color: #006700;\n  font-weight: bold;\n  padding: 0 2px;\n  border-radius: 2px;\n}\n\n.suggestion-diff-container {\n  margin-top: 10px;\n  border-top: 1px solid #eee;\n  padding-top: 8px;\n}\n\n.suggestion-tooltip-content {\n  min-width: 280px;\n  max-width: 450px;\n}\n\n.suggestion-tooltip-header {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 5px;\n  margin-bottom: 8px;\n}\n\n.suggestion-tooltip-title {\n  font-weight: bold;\n  color: #333;\n}\n\n.suggestion-tooltip-close {\n  cursor: pointer;\n  color: #999;\n  font-size: 16px;\n}\n\n.suggestion-comparison {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.suggestion-column {\n  flex: 1;\n  padding: 0 5px;\n}\n\n.suggestion-divider {\n  width: 1px;\n  background-color: #eee;\n  margin: 0 8px;\n}\n\n.suggestion-label {\n  font-size: 0.8rem;\n  color: #666;\n  margin-bottom: 3px;\n  font-weight: bold;\n}\n\n.suggestion-explanation-container {\n  margin-top: 8px;\n  border-top: 1px solid #eee;\n  padding-top: 8px;\n}\n\n.suggestion-explanation {\n  font-style: italic;\n  color: #666;\n  font-size: 0.9rem;\n}\n\n/* 重新设计的AI润色按钮和侧边栏 */\n.ai-polish-sidebar {\n  width: 250px;\n  flex-shrink: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(135deg, #f5f7fa 0%, #eef2f8 100%);\n  border-radius: 10px;\n  padding: 20px 15px;\n  position: relative;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.08);\n  border: 1px solid #e6ebf5;\n  height: 100%;\n  overflow-y: auto;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(100, 180, 255, 0.3) transparent;\n  scroll-behavior: smooth;\n  overflow-x: hidden;\n}\n\n.ai-polish-button {\n  width: 100%;\n  padding: 12px 15px;\n  font-size: 16px;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  background: linear-gradient(45deg, #409EFF, #64b5f6);\n  box-shadow: 0 4px 10px rgba(64, 158, 255, 0.3);\n  margin: 5px 0 15px;\n  border-radius: 8px;\n  border: none;\n}\n\n.ai-polish-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(64, 158, 255, 0.4);\n  background: linear-gradient(45deg, #3a8ee6, #5aadf6);\n}\n\n.ai-polish-button:active {\n  transform: translateY(1px);\n  box-shadow: 0 2px 8px rgba(64, 158, 255, 0.25);\n}\n\n.ai-polish-button-content {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ai-polish-icon {\n  font-size: 20px;\n  margin-right: 8px;\n  animation: glow 2s infinite alternate;\n}\n\n@keyframes glow {\n  0% {\n    opacity: 0.8;\n    filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.6));\n  }\n  100% {\n    opacity: 1;\n    filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.9));\n  }\n}\n\n.ai-polish-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  margin: 5px 0 15px;\n  width: 100%;\n}\n\n.time-estimate, .shortcut-hint {\n  display: flex;\n  align-items: center;\n  color: #606266;\n  font-size: 13px;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 6px 12px;\n  border-radius: 6px;\n  width: 100%;\n  justify-content: flex-start;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.time-estimate .el-icon, .shortcut-hint .el-icon {\n  color: #409EFF;\n  margin-right: 8px;\n  font-size: 16px;\n}\n\n.ai-polish-features {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  margin-top: 10px;\n  width: 100%;\n  padding: 12px 15px;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.feature-item {\n  display: flex;\n  align-items: center;\n  color: #303133;\n  font-size: 14px;\n  width: 100%;\n  padding: 5px 0;\n}\n\n.feature-item .el-icon {\n  color: #67c23a;\n  margin-right: 10px;\n  font-size: 18px;\n  background-color: rgba(103, 194, 58, 0.1);\n  padding: 4px;\n  border-radius: 50%;\n}\n\n/* 合同文本编辑区的左右布局 */\n.contract-edit-container {\n  display: flex;\n  gap: 15px;\n  margin-bottom: 20px;\n  margin-top: 5px;\n  /* height: calc(100vh - 220px); 允许内容撑开页面 */\n  min-height: 600px;\n  transition: height 0.3s ease;\n  overflow: visible;\n}\n\n.editor-main-area {\n  flex: 1;\n  min-width: 0;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  transition: height 0.3s ease;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.08);\n}\n\n/* 编辑器获得焦点时的美化效果 */\n.contract-text-editor:focus-within {\n  box-shadow: 0 2px 15px rgba(64, 158, 255, 0.15);\n  border-color: rgba(64, 158, 255, 0.5);\n}\n\n/* 更美观的滚动条 */\n.ai-polish-sidebar::-webkit-scrollbar {\n  width: 6px;\n  background-color: transparent;\n}\n\n.ai-polish-sidebar::-webkit-scrollbar-thumb {\n  background-color: rgba(100, 180, 255, 0.3);\n  border-radius: 3px;\n  transition: background-color 0.2s;\n}\n\n.ai-polish-sidebar::-webkit-scrollbar-thumb:hover {\n  background-color: rgba(100, 180, 255, 0.5);\n}\n\n/* 删除无用的badge相关样式 */\n.contract-edit-wrapper {\n  position: relative;\n  margin-bottom: 20px;\n}\n\n/* 合同检查结果区域样式 */\n.check-sidebar {\n  background: linear-gradient(135deg, #f6f8fa 0%, #eef5ff 100%);\n}\n\n.check-result-card {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  padding: 20px; /* 增加内边距 */\n  margin-bottom: 20px; /* 增加下边距 */\n  flex-shrink: 0; /* 不收缩 */\n}\n\n.check-result-area {\n  flex: 1;\n  position: relative;\n  height: 100%;\n  /* 移除overflow设置，全部交给el-scrollbar处理 */\n}\n\n/* 调整内部滚动容器 */\n.check-content-scroll-wrapper {\n  flex: 1;\n  overflow-y: auto;\n  padding: 15px 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  height: 0; /* 关键：flex布局中设置height:0让flex-grow工作 */\n  scrollbar-width: thin;\n  scrollbar-color: #ddd transparent;\n}\n\n.check-content-scroll-wrapper::-webkit-scrollbar {\n  width: 6px;\n  background-color: transparent;\n}\n\n.check-content-scroll-wrapper::-webkit-scrollbar-thumb {\n  background-color: #ddd;\n  border-radius: 3px;\n  transition: background-color 0.2s;\n}\n\n.check-content-scroll-wrapper::-webkit-scrollbar-thumb:hover {\n  background-color: #bbb;\n}\n\n.check-result-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #f0f0f5;\n  padding-bottom: 12px; /* 增加边距 */\n}\n\n.check-result-header h6 {\n  font-size: 17px; /* 增大字体 */\n  font-weight: 600;\n  color: #303133;\n}\n\n.check-result-stats {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.stat-item {\n  flex: 1;\n  min-width: 100px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #f9f9fa;\n  margin: 0 5px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 5px;\n  color: #409EFF;\n}\n\n.stat-value.danger {\n  color: #F56C6C;\n}\n\n.stat-value.warning {\n  color: #E6A23C;\n}\n\n.stat-value.info {\n  color: #909399;\n}\n\n.stat-label {\n  font-size: 13px;\n  color: #606266;\n}\n\n.check-result-details {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.check-collapse {\n  border: none;\n}\n\n.collapse-header {\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 500;\n  \n  .el-icon {\n    margin-right: 8px;\n  }\n}\n\n.check-issue-card {\n  background-color: #fafafa;\n  border-radius: 8px; /* 增加圆角 */\n  padding: 18px; /* 增加内边距 */\n  margin-bottom: 20px; /* 增加下边距 */\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05); /* 增强阴影 */\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.issue-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px; /* 增加边距 */\n  \n  .el-icon {\n    margin-right: 12px; /* 增加边距 */\n    font-size: 20px; /* 增大图标 */\n  }\n  \n  h6 {\n    margin: 0;\n    font-size: 16px; /* 增大字体 */\n    font-weight: 600;\n  }\n}\n\n.issue-content {\n  margin-bottom: 15px;\n}\n\n.issue-field {\n  margin-bottom: 8px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.field-label {\n  font-size: 13px;\n  color: #606266;\n  font-weight: 500;\n  margin-bottom: 4px;\n}\n\n.field-value {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n  background-color: white;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: 1px solid #eee;\n}\n\n.issue-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.empty-result {\n  padding: 30px 0;\n  color: #909399;\n  text-align: center;\n}\n\n.check-options {\n  .el-checkbox {\n    margin-right: 0;\n    margin-left: 0;\n    display: block;\n    margin-bottom: 8px;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n/* 适配键盘快捷键处理器 */\n.check-keyboard-shortcut {\n  display: none;\n}\n\n/* 优化检查偏好设置控件样式 */\n.check-sidebar {\n  .preference-option {\n    margin-bottom: 12px;\n    \n    .el-select {\n      width: 100%;  /* 将下拉框宽度设为100% */\n      margin-top: 6px;  /* 增加上边距 */\n    }\n    \n    span {\n      display: block;  /* 标签单独一行 */\n      margin-bottom: 4px;\n      font-weight: 500;\n    }\n  }\n  \n  .check-options {\n    padding: 5px 0;\n    \n    .el-checkbox {\n      height: 32px;\n      display: flex;\n      align-items: center;\n      border-radius: 4px;\n      transition: background-color 0.2s;\n      padding: 0 8px;\n      margin-bottom: 6px;  /* 减小复选框之间的间距 */\n      \n      &:hover {\n        background-color: rgba(64, 158, 255, 0.08);\n      }\n      \n      &:last-child {\n        margin-bottom: 0;  /* 最后一个没有底部边距 */\n      }\n    }\n  }\n  \n  .ai-polish-button {\n    margin-bottom: 20px; /* 增加按钮下边距 */\n  }\n\n  /* 检查页面特定样式优化 */\n  .ai-polish-personalization {\n    background-color: #f7f9ff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);\n    width: 100%;\n    padding: 15px;\n    margin: 12px 0;\n    \n    .personalization-title {\n      font-size: 14px;\n      margin-bottom: 12px;\n      padding-bottom: 6px;  /* 减小标题下方空间 */\n      \n      &:after {\n        width: 30px;  /* 减小下划线长度 */\n        height: 2px;\n      }\n    }\n    \n    .personalization-section {\n      margin-bottom: 14px;\n      background-color: rgba(255, 255, 255, 0.6);\n      border-radius: 6px;\n      padding: 10px;\n      \n      &:last-child {\n        margin-bottom: 0;  /* 最后一个区段没有底部边距 */\n      }\n      \n      .section-header {\n        margin-bottom: 8px;\n        .el-icon {\n          font-size: 15px;\n        }\n        \n        span {\n          font-size: 13px;  /* 稍微小一点的字体 */\n        }\n      }\n    }\n  }\n  \n  /* 特性列表优化 */\n  .ai-polish-features {\n    margin-top: 12px;\n    \n    .feature-item {\n      padding: 4px 0;  /* 减小特性项目之间的空间 */\n      \n      &:last-child {\n        padding-bottom: 0;\n      }\n    }\n  }\n  \n  /* 整体宽度控制 */\n  width: 240px;  /* 控制左侧栏宽度，使其更紧凑 */\n}\n\n/* 添加自定义scrollbar样式 */\n.contract-check-scrollbar {\n  height: 100% !important;\n}\n\n.contract-check-scrollbar .el-scrollbar__wrap {\n  overflow-x: hidden;\n}\n\n.suggestion-tooltip {\n  position: fixed !important;\n  right: 18px !important;\n  bottom: 18px !important;\n  left: auto !important;\n  top: auto !important;\n  z-index: 2001 !important;\n  width: 260px !important;\n  max-width: 280px !important;\n  min-width: 180px !important;\n  background: #fff;\n  border: 1px solid #ebeef5;\n  border-radius: 8px;\n  box-shadow: 0 4px 24px 0 rgba(0,0,0,.13);\n  padding: 10px 12px 8px 12px;\n  font-size: 12px;\n  transition: box-shadow 0.2s;\n  pointer-events: auto;\n}\n.suggestion-tooltip-content {\n  min-width: 140px;\n  max-width: 260px;\n  font-size: 12px;\n  line-height: 1.5;\n  padding: 0;\n}\n.suggestion-tooltip-header {\n  font-size: 13px;\n  padding-bottom: 4px;\n  margin-bottom: 6px;\n}\n.suggestion-tooltip-close {\n  font-size: 16px;\n  top: 4px;\n  right: 8px;\n}\n.suggestion-comparison, .suggestion-diff-container, .suggestion-explanation-container {\n  font-size: 12px;\n}\n.suggestion-diff {\n  font-size: 11px;\n}\n.suggestion-actions {\n  margin-top: 8px;\n  gap: 6px;\n}\n.suggestion-actions button {\n  font-size: 12px;\n  padding: 2px 8px;\n  border-radius: 4px;\n}\n</style>\n\n<style>\n/* 法规弹窗自定义样式 */\n.regulation-dialog .el-message-box__content {\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.regulation-detail h4 {\n  color: #409EFF;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n  padding-bottom: 10px;\n}\n\n.regulation-detail .regulation-content {\n  background-color: #f8f9fa;\n  padding: 12px;\n  border-left: 4px solid #409EFF;\n  border-radius: 4px;\n  margin: 10px 0;\n}\n\n.regulation-detail .regulation-suggestion h5 {\n  color: #67c23a;\n  margin-bottom: 10px;\n}\n\n.regulation-detail .regulation-suggestion p {\n  background-color: #f0f9eb;\n  padding: 10px;\n  border-left: 4px solid #67c23a;\n  border-radius: 4px;\n}\n</style> \n\n<style lang=\"scss\" scoped>\n// ... existing code ...\n\n/* 个性化定制区域样式 */\n.ai-polish-personalization {\n  background-color: #f9f9ff;\n  border-radius: 8px;\n  padding: 15px;\n  margin: 15px 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n}\n\n.personalization-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 15px;\n  position: relative;\n  padding-bottom: 8px;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 40px;\n    height: 2px;\n    background-color: #409EFF;\n  }\n}\n\n.personalization-section {\n  margin-bottom: 15px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.section-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 13px;\n  font-weight: 500;\n  color: #606266;\n  \n  .el-icon {\n    margin-right: 6px;\n    color: #409EFF;\n  }\n}\n\n.preference-option {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 13px;\n  \n  span {\n    color: #606266;\n  }\n  \n  .el-select {\n    width: 60%;\n  }\n}\n\n.optimization-options {\n  .el-checkbox-group {\n    display: flex;\n    flex-wrap: wrap;\n    \n    .el-checkbox {\n      margin-right: 15px;\n      margin-bottom: 8px;\n      font-size: 13px;\n    }\n  }\n}\n\n.terminology-manager {\n  .terminology-input {\n    margin-bottom: 10px;\n  }\n  \n  .terminology-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n    margin-top: 8px;\n    \n    .terminology-tag {\n      margin-right: 5px;\n      margin-bottom: 5px;\n    }\n  }\n  \n  .terminology-empty {\n    font-size: 12px;\n    color: #909399;\n    text-align: center;\n    padding: 8px 0;\n  }\n}\n// ... existing code ...\n\n/* 合同检查结果区域样式 */\n.check-sidebar {\n  background: linear-gradient(135deg, #f6f8fa 0%, #eef5ff 100%);\n}\n\n.check-result-area {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  overflow-y: auto;\n  padding: 0;\n  background-color: #f9f9fc;\n}\n\n.check-result-card {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  padding: 15px 20px;\n}\n\n.check-result-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #f0f0f5;\n  padding-bottom: 10px;\n}\n\n.check-result-header h6 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin: 0;\n}\n\n.check-result-stats {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.stat-item {\n  flex: 1;\n  min-width: 100px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 6px;\n  background-color: #f9f9fa;\n  margin: 0 5px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 5px;\n  color: #409EFF;\n}\n\n.stat-value.danger {\n  color: #F56C6C;\n}\n\n.stat-value.warning {\n  color: #E6A23C;\n}\n\n.stat-value.info {\n  color: #909399;\n}\n\n.stat-label {\n  font-size: 13px;\n  color: #606266;\n}\n\n.check-result-details {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n}\n\n.check-collapse {\n  border: none;\n}\n\n.collapse-header {\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 500;\n  \n  .el-icon {\n    margin-right: 8px;\n  }\n}\n\n.check-issue-card {\n  background-color: #fafafa;\n  border-radius: 6px;\n  padding: 15px;\n  margin-bottom: 15px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.issue-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n  \n  .el-icon {\n    margin-right: 10px;\n  }\n  \n  h6 {\n    margin: 0;\n    font-size: 15px;\n    font-weight: 600;\n  }\n}\n\n.issue-content {\n  margin-bottom: 15px;\n}\n\n.issue-field {\n  margin-bottom: 8px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.field-label {\n  font-size: 13px;\n  color: #606266;\n  font-weight: 500;\n  margin-bottom: 4px;\n}\n\n.field-value {\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n  background-color: white;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: 1px solid #eee;\n}\n\n.issue-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n}\n\n.empty-result {\n  padding: 30px 0;\n  color: #909399;\n  text-align: center;\n}\n\n.check-options {\n  .el-checkbox {\n    margin-right: 0;\n    margin-left: 0;\n    display: block;\n    margin-bottom: 8px;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n/* 适配键盘快捷键处理器 */\n.check-keyboard-shortcut {\n  display: none;\n}\n\n/* 优化检查偏好设置控件样式 */\n.check-sidebar {\n  .preference-option {\n    margin-bottom: 12px;\n    \n    .el-select {\n      width: 100%;  /* 将下拉框宽度设为100% */\n      margin-top: 6px;  /* 增加上边距 */\n    }\n    \n    span {\n      display: block;  /* 标签单独一行 */\n      margin-bottom: 4px;\n      font-weight: 500;\n    }\n  }\n  \n  .check-options {\n    padding: 5px 0;\n    \n    .el-checkbox {\n      height: 32px;\n      display: flex;\n      align-items: center;\n      border-radius: 4px;\n      transition: background-color 0.2s;\n      padding: 0 8px;\n      margin-bottom: 6px;  /* 减小复选框之间的间距 */\n      \n      &:hover {\n        background-color: rgba(64, 158, 255, 0.08);\n      }\n      \n      &:last-child {\n        margin-bottom: 0;  /* 最后一个没有底部边距 */\n      }\n    }\n  }\n  \n  .ai-polish-button {\n    margin-bottom: 20px; /* 增加按钮下边距 */\n  }\n\n  /* 检查页面特定样式优化 */\n  .ai-polish-personalization {\n    background-color: #f7f9ff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);\n    width: 100%;\n    padding: 15px;\n    margin: 12px 0;\n    \n    .personalization-title {\n      font-size: 14px;\n      margin-bottom: 12px;\n      padding-bottom: 6px;  /* 减小标题下方空间 */\n      \n      &:after {\n        width: 30px;  /* 减小下划线长度 */\n        height: 2px;\n      }\n    }\n    \n    .personalization-section {\n      margin-bottom: 14px;\n      background-color: rgba(255, 255, 255, 0.6);\n      border-radius: 6px;\n      padding: 10px;\n      \n      &:last-child {\n        margin-bottom: 0;  /* 最后一个区段没有底部边距 */\n      }\n      \n      .section-header {\n        margin-bottom: 8px;\n        .el-icon {\n          font-size: 15px;\n        }\n        \n        span {\n          font-size: 13px;  /* 稍微小一点的字体 */\n        }\n      }\n    }\n  }\n  \n  /* 特性列表优化 */\n  .ai-polish-features {\n    margin-top: 12px;\n    \n    .feature-item {\n      padding: 4px 0;  /* 减小特性项目之间的空间 */\n      \n      &:last-child {\n        padding-bottom: 0;\n      }\n    }\n  }\n  \n  /* 整体宽度控制 */\n  width: 240px;  /* 控制左侧栏宽度，使其更紧凑 */\n}\n// ... existing code ...\n</style> \n\n<style lang=\"scss\">\n/* 深色模式适配 */\n:deep([data-theme=\"dark\"]), :deep(body.is-dark) {\n  /* 主容器和卡片 */\n  .contract-detail-container {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  .card {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    border-color: var(--border-color) !important;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15) !important;\n  }\n\n  .card-header {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    border-bottom-color: var(--border-color) !important;\n  }\n\n  .card-body {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  /* 白色容器元素 - 主要针对截图中显示的问题 */\n  .contract-detail-container .el-card,\n  .contract-detail-container .el-form,\n  .contract-detail-container .row {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  /* 表单区域 */\n  :deep(.el-form) {\n    background-color: var(--bg-color) !important;\n    \n    .el-form-item {\n      background-color: var(--bg-color) !important;\n      \n      .el-form-item__label {\n        color: var(--text-color) !important;\n      }\n      \n      .el-form-item__content {\n        background-color: var(--bg-color) !important;\n      }\n    }\n  }\n  \n  /* 输入框 */\n  :deep(.el-input),\n  :deep(.el-select),\n  :deep(.el-date-editor) {\n    background-color: var(--bg-color) !important;\n    \n    .el-input__wrapper {\n      background-color: var(--bg-color) !important;\n      box-shadow: 0 0 0 1px var(--border-color) inset !important;\n    }\n    \n    .el-input__inner {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n  }\n  \n  /* 标签页 */\n  :deep(.el-tabs) {\n    background-color: var(--bg-color) !important;\n    \n    .el-tabs__header {\n      background-color: var(--bg-color) !important;\n      border-bottom-color: var(--border-color) !important;\n    }\n    \n    .el-tabs__nav-wrap::after {\n      background-color: var(--border-color) !important;\n    }\n    \n    .el-tabs__item {\n      color: var(--text-color-secondary) !important;\n    }\n    \n    .el-tabs__item.is-active {\n      color: var(--primary-color) !important;\n    }\n    \n    .el-tabs__content {\n      background-color: var(--bg-color) !important;\n    }\n    \n    .el-tab-pane {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n  }\n  \n  /* 合同文本编辑器和检查区域 */\n  .contract-edit-wrapper,\n  .contract-edit-container,\n  .editor-main-area,\n  .check-result-area {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  /* 修复白色背景卡片 */\n  #contractTitleHeader {\n    color: var(--text-color) !important;\n  }\n  \n  h5, h6 {\n    color: var(--text-color) !important;\n  }\n  \n  /* 修复基本信息表单区域 */\n  .row, .col-md-6 {\n    background-color: var(--bg-color) !important;\n  }\n  \n  /* 富文本编辑器 */\n  .contract-text-editor {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    border-color: var(--border-color) !important;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.15) !important;\n    \n    :deep(.ql-toolbar) {\n      background-color: var(--bg-color-secondary) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    :deep(.ql-container) {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    :deep(.ql-editor) {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n  }\n  \n  /* AI润色侧边栏 */\n  .ai-polish-sidebar,\n  .check-sidebar {\n    background: linear-gradient(135deg, var(--bg-color-secondary) 0%, var(--bg-color-tertiary) 100%) !important;\n    border-color: var(--border-color) !important;\n  }\n  \n  /* 修复空状态图片 */\n  :deep(.el-empty) {\n    background-color: transparent !important;\n    \n    .el-empty__image, \n    .el-empty__description {\n      color: var(--text-color-secondary) !important;\n    }\n  }\n  \n  /* 时间线 */\n  :deep(.el-timeline) {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    \n    .el-timeline-item__tail {\n      border-left-color: var(--border-color) !important;\n    }\n    \n    .el-timeline-item__node {\n      background-color: var(--primary-color) !important;\n    }\n    \n    .el-timeline-item__content {\n      color: var(--text-color) !important;\n    }\n    \n    .el-timeline-item__timestamp {\n      color: var(--text-color-secondary) !important;\n    }\n  }\n  \n  /* 修复分割线 */\n  hr {\n    border-color: var(--border-color) !important;\n    background-color: var(--border-color) !important;\n  }\n  \n  /* 修复下拉菜单 */\n  :deep(.el-dropdown-menu) {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-dropdown-menu__item {\n      color: var(--text-color) !important;\n    }\n    \n    .el-dropdown-menu__item:hover {\n      background-color: var(--bg-color-tertiary) !important;\n    }\n  }\n  \n  /* 修复弹窗和对话框 */\n  :deep(.el-dialog),\n  :deep(.el-message-box) {\n    background-color: var(--bg-color) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-dialog__header,\n    .el-message-box__header {\n      background-color: var(--bg-color) !important;\n      border-bottom-color: var(--border-color) !important;\n    }\n    \n    .el-dialog__title,\n    .el-message-box__title {\n      color: var(--text-color) !important;\n    }\n    \n    .el-dialog__body,\n    .el-message-box__content {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n    \n    .el-dialog__footer,\n    .el-message-box__btns {\n      background-color: var(--bg-color) !important;\n      border-top-color: var(--border-color) !important;\n    }\n  }\n  \n  /* 修复个性化定制区域 */\n  .ai-polish-personalization {\n    background-color: var(--bg-color-secondary) !important;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n    \n    .personalization-section {\n      background-color: var(--bg-color) !important;\n      \n      .section-header {\n        color: var(--text-color) !important;\n        \n        span {\n          color: var(--text-color) !important;\n        }\n      }\n    }\n    \n    .personalization-title {\n      color: var(--text-color) !important;\n    }\n  }\n  \n  /* 修复检查结果区域 */\n  .check-result-card,\n  .check-result-details,\n  .check-issue-card {\n    background-color: var(--bg-color-secondary) !important;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.2) !important;\n  }\n  \n  .check-content-inner {\n    background-color: var(--bg-color) !important;\n  }\n  \n  .check-collapse {\n    background-color: transparent !important;\n    \n    :deep(.el-collapse-item__header) {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n      border-bottom-color: var(--border-color) !important;\n    }\n    \n    :deep(.el-collapse-item__content) {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n    }\n  }\n  \n  /* 修复统计项 */\n  .stat-item {\n    background-color: var(--bg-color) !important;\n  }\n  \n  /* 修复工具提示 */\n  :deep(.el-tooltip__popper) {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  /* 修复滚动区域 */\n  .contract-check-scrollbar {\n    background-color: var(--bg-color) !important;\n    \n    :deep(.el-scrollbar__view) {\n      background-color: var(--bg-color) !important;\n    }\n    \n    :deep(.el-scrollbar__bar) {\n      background-color: var(--bg-color-tertiary) !important;\n    }\n  }\n  \n  /* 修复底部操作按钮区域 */\n  .text-end {\n    background-color: var(--bg-color) !important;\n  }\n\n  /* 修复选择器 */\n  :deep(.el-select-dropdown) {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-select-dropdown__item {\n      color: var(--text-color) !important;\n    }\n    \n    .el-select-dropdown__item.hover, \n    .el-select-dropdown__item:hover {\n      background-color: var(--bg-color-tertiary) !important;\n    }\n    \n    .el-select-dropdown__item.selected {\n      color: var(--primary-color) !important;\n      background-color: rgba(64, 158, 255, 0.1) !important;\n    }\n  }\n  \n  /* 日期选择器 */\n  :deep(.el-picker-panel) {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    color: var(--text-color) !important;\n    \n    .el-date-picker__header {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n    }\n    \n    .el-date-table {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n      \n      th, td {\n        background-color: var(--bg-color-secondary) !important;\n        color: var(--text-color) !important;\n      }\n      \n      td.current:not(.disabled) span {\n        background-color: var(--primary-color) !important;\n        color: white !important;\n      }\n      \n      td.available:hover {\n        color: var(--primary-color) !important;\n      }\n      \n      td.next-month, td.prev-month {\n        color: var(--text-color-tertiary) !important;\n      }\n    }\n  }\n  \n  /* 复选框 */\n  :deep(.el-checkbox) {\n    .el-checkbox__label {\n      color: var(--text-color) !important;\n    }\n    \n    .el-checkbox__input.is-checked .el-checkbox__inner {\n      background-color: var(--primary-color) !important;\n      border-color: var(--primary-color) !important;\n    }\n    \n    .el-checkbox__inner {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n    }\n  }\n  \n  /* 标签 */\n  :deep(.el-tag) {\n    background-color: rgba(64, 158, 255, 0.1) !important;\n    border-color: rgba(64, 158, 255, 0.2) !important;\n    color: var(--primary-color) !important;\n    \n    &.el-tag--danger {\n      background-color: rgba(245, 108, 108, 0.1) !important;\n      border-color: rgba(245, 108, 108, 0.2) !important;\n      color: #F56C6C !important;\n    }\n    \n    &.el-tag--success {\n      background-color: rgba(103, 194, 58, 0.1) !important;\n      border-color: rgba(103, 194, 58, 0.2) !important;\n      color: #67C23A !important;\n    }\n    \n    &.el-tag--warning {\n      background-color: rgba(230, 162, 60, 0.1) !important;\n      border-color: rgba(230, 162, 60, 0.2) !important;\n      color: #E6A23C !important;\n    }\n    \n    &.el-tag--info {\n      background-color: rgba(144, 147, 153, 0.1) !important;\n      border-color: rgba(144, 147, 153, 0.2) !important;\n      color: #909399 !important;\n    }\n  }\n  \n  /* 开关 */\n  :deep(.el-switch) {\n    .el-switch__core {\n      background-color: var(--border-color) !important;\n    }\n    \n    &.is-checked .el-switch__core {\n      background-color: var(--primary-color) !important;\n    }\n  }\n}\n</style> \n\n<style lang=\"scss\">\n/* 深色模式适配 - 更强力的全局覆盖 */\nhtml[data-theme=\"dark\"] body, body.is-dark {\n  /* 强制应用深色背景到所有默认白色元素 */\n  .contract-detail-container,\n  .contract-detail-container *:not([class*=\"el-icon\"]):not(i):not(svg):not(path) {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n  }\n  \n  .contract-detail-container {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    \n    /* 卡片样式 */\n    .card, .el-card {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n      border-color: var(--border-color) !important;\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.15) !important;\n      \n      .card-header, .el-card__header {\n        background-color: var(--bg-color) !important;\n        color: var(--text-color) !important;\n        border-bottom-color: var(--border-color) !important;\n      }\n      \n      .card-body, .el-card__body {\n        background-color: var(--bg-color) !important;\n        color: var(--text-color) !important;\n      }\n    }\n    \n    /* 标签页 */\n    .el-tabs {\n      background-color: var(--bg-color) !important;\n      \n      .el-tabs__header {\n        background-color: var(--bg-color) !important;\n        border-bottom-color: var(--border-color) !important;\n      }\n      \n      .el-tabs__nav-wrap::after {\n        background-color: var(--border-color) !important;\n      }\n      \n      .el-tabs__item {\n        color: var(--text-color-secondary) !important;\n      }\n      \n      .el-tabs__item.is-active {\n        color: var(--primary-color) !important;\n      }\n      \n      .el-tabs__content {\n        background-color: var(--bg-color) !important;\n      }\n      \n      .el-tab-pane {\n        background-color: var(--bg-color) !important;\n        color: var(--text-color) !important;\n      }\n    }\n    \n    /* 表单元素 */\n    .el-form {\n      background-color: var(--bg-color) !important;\n      \n      .el-form-item {\n        background-color: var(--bg-color) !important;\n        \n        .el-form-item__label {\n          color: var(--text-color) !important;\n        }\n        \n        .el-form-item__content {\n          background-color: var(--bg-color) !important;\n        }\n      }\n    }\n    \n    /* 输入框和控件 */\n    .el-input__wrapper,\n    .el-textarea__wrapper {\n      background-color: var(--bg-color) !important;\n      box-shadow: 0 0 0 1px var(--border-color) inset !important;\n    }\n    \n    .el-input__inner,\n    .el-textarea__inner {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n    \n    .el-select .el-input__wrapper {\n      background-color: var(--bg-color) !important;\n    }\n    \n    .el-date-editor {\n      background-color: var(--bg-color) !important;\n      \n      .el-input__wrapper {\n        background-color: var(--bg-color) !important;\n      }\n    }\n    \n    /* 修复编辑器区域 */\n    .ql-toolbar.ql-snow {\n      background-color: var(--bg-color-secondary) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    .ql-container.ql-snow {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    .ql-editor {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n    \n    /* 合同文本编辑器和检查区域 */\n    .contract-edit-wrapper,\n    .contract-edit-container {\n      background-color: var(--bg-color) !important;\n      \n      .editor-main-area,\n      .check-result-area {\n        background-color: var(--bg-color) !important;\n      }\n    }\n    \n    /* AI润色侧边栏 */\n    .ai-polish-sidebar,\n    .check-sidebar {\n      background: linear-gradient(135deg, var(--bg-color-secondary) 0%, var(--bg-color-tertiary) 100%) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    /* 个性化定制区域 */\n    .ai-polish-personalization {\n      background-color: var(--bg-color-secondary) !important;\n      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;\n      \n      .personalization-section {\n        background-color: var(--bg-color) !important;\n        \n        .section-header {\n          color: var(--text-color) !important;\n          \n          span {\n            color: var(--text-color) !important;\n          }\n        }\n      }\n      \n      .personalization-title {\n        color: var(--text-color) !important;\n      }\n    }\n    \n    /* 统计项 */\n    .stat-item {\n      background-color: var(--bg-color) !important;\n      \n      .stat-label {\n        color: var(--text-color-secondary) !important;\n      }\n    }\n    \n    /* 检查结果区域 */\n    .check-result-card,\n    .check-result-details,\n    .check-issue-card {\n      background-color: var(--bg-color-secondary) !important;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.2) !important;\n    }\n    \n    .check-content-inner {\n      background-color: var(--bg-color) !important;\n      padding: 15px 20px !important;\n    }\n    \n    /* 滚动区域 */\n    .el-scrollbar {\n      background-color: var(--bg-color) !important;\n      \n      .el-scrollbar__view {\n        background-color: var(--bg-color) !important;\n      }\n    }\n    \n    /* 强制应用到动态生成的元素 */\n    div[class*=\"contract\"],\n    div[class*=\"card\"],\n    div[class*=\"box\"],\n    div[class*=\"panel\"],\n    div[class*=\"content\"],\n    div[class*=\"wrapper\"],\n    div[class*=\"container\"] {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n    \n    /* 表格 */\n    .el-table {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n      \n      .el-table__header, \n      .el-table__body, \n      .el-table__footer {\n        background-color: var(--bg-color) !important;\n      }\n      \n      th, td {\n        background-color: var(--bg-color) !important;\n        border-bottom-color: var(--border-color) !important;\n      }\n      \n      .el-table__row {\n        background-color: var(--bg-color) !important;\n        color: var(--text-color) !important;\n      }\n      \n      .el-table__cell {\n        background-color: var(--bg-color) !important;\n      }\n    }\n  }\n  \n  /* 强制覆盖弹出元素 */\n  .el-select-dropdown,\n  .el-dropdown-menu,\n  .el-picker-panel,\n  .el-tooltip__popper {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    color: var(--text-color) !important;\n    \n    .el-select-dropdown__item,\n    .el-dropdown-menu__item,\n    .el-date-table td,\n    .el-date-table th,\n    .el-month-table td,\n    .el-year-table td {\n      color: var(--text-color) !important;\n      background-color: var(--bg-color-secondary) !important;\n    }\n    \n    .el-select-dropdown__item.hover, \n    .el-select-dropdown__item:hover,\n    .el-dropdown-menu__item:hover {\n      background-color: var(--bg-color-tertiary) !important;\n    }\n    \n    .el-select-dropdown__item.selected {\n      color: var(--primary-color) !important;\n      background-color: rgba(64, 158, 255, 0.1) !important;\n    }\n    \n    .el-date-table td.current:not(.disabled) span {\n      background-color: var(--primary-color) !important;\n      color: white !important;\n    }\n  }\n  \n  /* 修复时间线 */\n  .el-timeline {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    \n    .el-timeline-item__tail {\n      border-left-color: var(--border-color) !important;\n    }\n    \n    .el-timeline-item__node {\n      background-color: var(--primary-color) !important;\n    }\n    \n    .el-timeline-item__content {\n      color: var(--text-color) !important;\n    }\n    \n    .el-timeline-item__timestamp {\n      color: var(--text-color-secondary) !important;\n    }\n  }\n  \n  /* 修复空状态 */\n  .el-empty {\n    background-color: transparent !important;\n    \n    .el-empty__image, \n    .el-empty__description {\n      color: var(--text-color-secondary) !important;\n    }\n  }\n  \n  /* 对话框和消息框 */\n  .el-dialog,\n  .el-message-box {\n    background-color: var(--bg-color) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-dialog__header,\n    .el-message-box__header {\n      background-color: var(--bg-color) !important;\n      border-bottom-color: var(--border-color) !important;\n    }\n    \n    .el-dialog__title,\n    .el-message-box__title {\n      color: var(--text-color) !important;\n    }\n    \n    .el-dialog__body,\n    .el-message-box__content {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n    }\n    \n    .el-dialog__footer,\n    .el-message-box__btns {\n      background-color: var(--bg-color) !important;\n      border-top-color: var(--border-color) !important;\n    }\n  }\n  \n  /* 修复组件边框 */\n  hr, \n  .el-divider {\n    border-color: var(--border-color) !important;\n    background-color: var(--border-color) !important;\n  }\n\n  /* 专门处理运行时生成的编辑器框架 */\n  iframe.ql-video {\n    background-color: black !important;\n  }\n  \n  .ql-picker-options {\n    background-color: var(--bg-color-secondary) !important;\n    color: var(--text-color) !important;\n    border-color: var(--border-color) !important;\n  }\n  \n  .ql-tooltip {\n    background-color: var(--bg-color-secondary) !important;\n    color: var(--text-color) !important;\n    border-color: var(--border-color) !important;\n    \n    input[type=\"text\"] {\n      background-color: var(--bg-color) !important;\n      color: var(--text-color) !important;\n      border-color: var(--border-color) !important;\n    }\n  }\n  \n  /* 修复可能的内联样式问题 */\n  [style*=\"background-color: white\"],\n  [style*=\"background-color:#fff\"],\n  [style*=\"background-color:#ffffff\"],\n  [style*=\"background: white\"],\n  [style*=\"background:#fff\"],\n  [style*=\"background:#ffffff\"] {\n    background-color: var(--bg-color) !important;\n  }\n  \n  [style*=\"color:black\"],\n  [style*=\"color: black\"],\n  [style*=\"color:#000\"],\n  [style*=\"color:#000000\"] {\n    color: var(--text-color) !important;\n  }\n  \n  /* 修复AI建议面板 */\n  .ai-suggestions-panel {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    box-shadow: -3px 0 10px rgba(0, 0, 0, 0.15) !important;\n    \n    .panel-header {\n      color: var(--text-color) !important;\n      background-color: var(--bg-color-secondary) !important;\n    }\n    \n    .suggestion-item {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    .explanation {\n      color: var(--text-color-secondary) !important;\n    }\n  }\n  \n  /* 按钮和浮动元素 */\n  .panel-open-button {\n    background-color: var(--bg-color-secondary) !important;\n    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.2) !important;\n  }\n  \n  /* 修复AI按钮在深色模式下的显示问题 */\n  .ai-polish-button, \n  .check-sidebar .ai-polish-button,\n  button.el-button.ai-polish-button {\n    background: linear-gradient(45deg, #409EFF, #64b5f6) !important;\n    \n    .ai-polish-button-content {\n      background: transparent !important;\n    }\n    \n    /* 特别针对图标区域的背景色问题 */\n    .el-icon,\n    .ai-polish-icon,\n    .ai-polish-icon svg,\n    svg,\n    path {\n      background-color: transparent !important;\n      box-shadow: none !important;\n      fill: currentColor !important;\n    }\n    \n    /* 修复文本区域 */\n    span {\n      background-color: transparent !important;\n      color: white !important;\n    }\n    \n    /* 给所有子元素强制应用透明背景 */\n    * {\n      background-color: transparent !important;\n    }\n  }\n  \n  /* 强制修复像素级别图标 */\n  .ai-polish-icon.no-bg,\n  .ai-polish-icon.no-bg svg,\n  .ai-polish-icon.no-bg path {\n    background-color: transparent !important;\n    background: transparent !important;\n    color: white !important;\n    fill: white !important;\n  }\n  \n  /* 去掉特定元素的背景 */\n  .contract-edit-wrapper .ai-polish-sidebar *,\n  .contract-edit-wrapper .check-sidebar * {\n    &:not(.ai-polish-personalization):not(.ai-polish-features) {\n      background-color: transparent !important;\n    }\n  }\n}\n</style>\n\n/* 修复建议工具提示样式 */\n.suggestion-tooltip {\n  z-index: 9999;\n  background: white;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.15);\n  border-radius: 8px;\n  padding: 0;\n  max-width: 450px;\n  border: 1px solid #ebeef5;\n  font-size: 14px;\n  position: absolute !important;\n  pointer-events: auto !important;\n}\n\n.suggestion-tooltip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #f5f7fa;\n  padding: 10px 15px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom: 1px solid #e4e7ed;\n}\n\n.suggestion-tooltip-title {\n  font-weight: bold;\n  color: #303133;\n}\n\n.suggestion-tooltip-close {\n  cursor: pointer;\n  color: #909399;\n  font-size: 18px;\n}\n\n.suggestion-tooltip-body {\n  padding: 15px;\n}\n\n.suggestion-comparison {\n  display: flex;\n  margin-bottom: 10px;\n  gap: 10px;\n}\n\n.suggestion-column {\n  flex: 1;\n}\n\n.suggestion-divider {\n  width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n.suggestion-divider:before {\n  content: \"→\";\n  color: #909399;\n  font-size: 18px;\n}\n\n.suggestion-label {\n  font-weight: bold;\n  margin-bottom: 5px;\n  color: #606266;\n}\n\n.suggestion-original {\n  background-color: #fff5f5;\n  color: #f56c6c;\n  border: 1px solid #fde2e2;\n  padding: 8px 12px;\n  border-radius: 4px;\n  word-break: break-word;\n}\n\n.suggestion-suggested {\n  background-color: #f0f9eb;\n  color: #67c23a;\n  border: 1px solid #e1f3d8;\n  padding: 8px 12px;\n  border-radius: 4px;\n  word-break: break-word;\n}\n\n.suggestion-diff-container {\n  margin-bottom: 10px;\n}\n\n.suggestion-diff {\n  background-color: #fafafa;\n  border: 1px solid #ebeef5;\n  padding: 8px 12px;\n  border-radius: 4px;\n  word-break: break-word;\n}\n\n.suggestion-explanation-container {\n  margin-bottom: 10px;\n}\n\n.suggestion-explanation {\n  font-style: italic;\n  color: #606266;\n}\n\n.suggestion-actions {\n  padding: 10px 15px;\n  border-top: 1px solid #e4e7ed;\n  text-align: right;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.suggestion-actions button {\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  border: 1px solid transparent;\n  transition: all 0.3s;\n}\n\n.suggestion-actions .btn-adopt {\n  background-color: #67c23a;\n  color: white;\n}\n\n.suggestion-actions .btn-adopt:hover {\n  background-color: #5daf34;\n}\n\n.suggestion-actions .btn-ignore {\n  background-color: #f4f4f5;\n  color: #909399;\n  border-color: #dcdfe6;\n}\n\n.suggestion-actions .btn-ignore:hover {\n  background-color: #e9e9eb;\n}\n\n/* 全局样式确保高亮建议可点击 */\n.suggestion-highlight, \n[data-suggestion-id],\n.ql-editor [data-suggestion-id],\n.ql-editor .suggestion-highlight {\n  pointer-events: auto !important;\n  cursor: pointer !important;\n  background-color: rgba(255, 217, 102, 0.3) !important;\n  border-bottom: 1px dashed #ffb300 !important;\n  z-index: 999 !important;\n  position: relative !important;\n  display: inline-block !important;\n}\n"],"mappings":"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","ignoreList":[]}]}