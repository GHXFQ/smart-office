{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue","mtime":1751962445525},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","computed","onMounted","nextTick","getCurrentInstance","provide","onActivated","watch","useRouter","useRoute","ElMessage","ElMessageBox","ElLoading","Search","Plus","EditPen","Share","Folder","Close","More","Document","Clock","Upload","User","_","getDocuments","getRecentDocuments","getSharedDocuments","getDocumentCategories","createDocument","deleteDocument","apiDeleteDocument","shareDocument","apiShareDocument","createDocumentCategory","updateDocumentCategory","deleteDocumentCategory","aiGenerateDocument","getDocumentDetail","updateDocument","importWordDocument","userApi","createChatSession","getChatSessions","request","name","components","setup","router","route","proxy","$_isDev","process","env","NODE_ENV","refreshTrigger","Date","now","documents","recentDocuments","sharedDocuments","documentCategories","searchQuery","searchCategory","newDocumentDialogVisible","shareDialogVisible","deleteDialogVisible","documentCreateType","selectedDocument","selectedUsers","selectedUsersWithPermissions","availableUsers","availableChatUsers","createLoading","shareLoading","deleteLoading","existingSharedUsers","shareMode","shareFormat","selectedChatUsers","page","pageSize","totalCount","grandTotalCount","hasMore","loadingMore","editDialogVisible","editDocumentForm","id","title","type","category_id","editLoading","newDocumentForm","aiDocumentForm","requirements","blankFormRules","required","message","trigger","min","max","aiFormRules","editFormRules","blankFormRef","aiFormRef","editFormRef","totalDocuments","value","recentEditCount","length","categoryDialogVisible","editingCategory","color","description","categoryFormRef","categoryLoading","categoryFormRules","forceUpdate","$forceUpdate","fetchDocuments","forceRefresh","append","timestamp","console","log","filters","category","search","params","page_size","_t","getTime","Object","assign","res","newDocuments","currentViewCount","warning","warn","duration","includes","setTimeout","data","Array","isArray","total","count","results","existingIds","Set","map","doc","uniqueNewDocs","filter","has","d","join","totalPages","Math","ceil","Promise","resolve","error","fetchRecentDocuments","fetchSharedDocuments","response","fetchDocumentCategories","retryCount","status","debounce","createNewDocument","dialog","document","querySelector","addEventListener","clearValidate","err","once","submitNewDocument","valid","validate","catch","content","JSON","stringify","success","docId","push","then","navErr","categoryId","requirement","doc_type","_response$data","detail","String","openDocument","editDocument","event","stopPropagation","Number","submitEditDocument","updateData","reloadAllData","exportDocument","showCancelButton","confirmButtonText","cancelButtonText","closeOnClickModal","callback","action","exportToPdf","exportToWord","loading","service","lock","text","background","documentContent","close","docTitle","filename","tempContainer","createElement","innerHTML","className","body","appendChild","options","margin","image","quality","html2canvas","scale","useCORS","jsPDF","unit","format","orientation","setText","html2pdfModule","html2pdf","default","from","set","save","removeChild","contentContainer","msWordHtml","FileSaver","saveAs","blob","Blob","detailRes","sharedWithData","shared_with","permissions","item","user","user_id","username","email","permission","userId","existingUserIds","u","currentUserJson","localStorage","getItem","currentUserId","companyId","currentUser","parse","company_id","isCreator","creator","usersRes","getCompanyUsers","getUsernameById","find","getCurrentUserId","handleUserSelectionChange","val","handleShareModeChange","confirmShare","finalPermissions","docResponse","currentDoc","documentFile","fileName","fileType","outputPdf","sessionsResponse","chatSessions","userSessionMap","Map","existingSession","session","participants","hasCurrentUser","some","p","hasTargetUser","newSessionPromises","participant_ids","all","sendPromises","failedUsers","chatId","get","formData","FormData","file","File","url","method","headers","timeout","sendResults","successCount","result","totalAttempted","totalSelected","confirmDelete","_selectedDocument$val","deletedDocId","deletedDocCategoryId","window","removeItem","e","c","document_count","currentRoute","replace","query","_refresh","refreshData","viewAllDocuments","docSection","scrollIntoView","behavior","selectCategory","toString","docCards","querySelectorAll","forEach","card","index","style","animationDelay","classList","remove","add","getSelectedCategoryColor","selectedCategory","getSelectedCategoryName","manageCategories","resetCategoryForm","editCategory","resetFields","submitCategory","categoryData","deleteCategory","confirm","formatDate","dateString","date","toDateString","toLocaleTimeString","hour","minute","yesterday","setDate","getDate","weekDays","diffDays","round","getDay","toLocaleDateString","month","day","resetCategoryFilter","分类数量","文档数量","最近文档","共享文档","总计数","newVal","path","newPath","oldPath","startsWith","onPageChange","newPage","maxPage","oldPage","loadMoreDocuments","refreshParam","handleImportWord","fileInput","accept","display","target","files","loadingInstance","fullscreen","click","removeSharedUser","userIdToRemove","userToRemove"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"smartdoc-home-container\">\n    <!-- 添加隐藏的刷新触发元素，用于强制组件刷新 -->\n    <div style=\"display: none;\">{{ refreshTrigger }}</div>\n    \n    <!-- 页面标题和操作区 -->\n    <div class=\"page-header\">\n      <div class=\"left-section\">\n        <h2 class=\"page-title\">智能文档</h2>\n        <p class=\"page-description\">创建、编辑和管理您的智能文档</p>\n        </div>\n      <div class=\"right-section\">\n        <div class=\"search-controls\">\n          <el-select \n            v-model=\"searchCategory\" \n            placeholder=\"选择分类\" \n            @change=\"selectCategory(searchCategory)\" \n            class=\"category-select\"\n          >\n            <el-option label=\"全部分类\" value=\"all\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id.toString()\"\n            />\n          </el-select>\n          \n          <el-input\n            placeholder=\"搜索文档...\"\n            v-model=\"searchQuery\"\n          class=\"search-input\"\n            clearable\n          >\n            <template #prefix>\n              <el-icon><Search /></el-icon>\n            </template>\n          </el-input>\n        </div>\n        \n        <el-button type=\"success\" @click=\"handleImportWord\" style=\"margin-right: 10px;\">\n          <el-icon><Upload /></el-icon> 导入Word\n        </el-button>\n        <el-button type=\"primary\" @click=\"createNewDocument\">\n          <el-icon><Plus /></el-icon> 新建文档\n        </el-button>\n          </div>\n        </div>\n\n    <!-- 文档概览统计卡片 -->\n    <div class=\"stats-cards\">\n      <el-card class=\"stat-card\" shadow=\"hover\" @click=\"selectCategory('all')\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon doc-icon\">\n                <el-icon><Document /></el-icon>\n              </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ totalDocuments }}</div>\n            <div class=\"stat-label\">全部文档</div>\n                </div>\n              </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon edit-icon\">\n            <el-icon><EditPen /></el-icon>\n            </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ recentEditCount }}</div>\n            <div class=\"stat-label\">近期编辑</div>\n          </div>\n        </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon share-icon\">\n            <el-icon><Share /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ sharedDocuments.length }}</div>\n            <div class=\"stat-label\">共享文档</div>\n            </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 添加筛选活动状态提示栏 -->\n    <div v-if=\"searchCategory !== 'all'\" class=\"filter-status-bar\">\n      <div class=\"filter-bar-content\">\n        <div class=\"filter-title\">\n          <span>当前筛选: </span>\n          <span class=\"filter-category\" :style=\"{ backgroundColor: getSelectedCategoryColor() }\">\n            {{ getSelectedCategoryName() }}\n          </span>\n        </div>\n        <div class=\"filter-actions\">\n          <el-button type=\"primary\" link @click=\"resetCategoryFilter\">\n            <el-icon><Close /></el-icon> 清除筛选\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 文档分类区域 - 移至文档列表上方 -->\n    <div class=\"section category-section\">\n      <div class=\"section-header\">\n        <h3>文档分类</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"manageCategories\">管理分类</el-button>\n        </div>\n      </div>\n      \n      <div class=\"category-cards\">\n        <!-- 全部分类选项 -->\n        <div \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === 'all' }\"\n          @click=\"selectCategory('all')\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: '#409EFF' }\">\n            <el-icon><Document /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>全部文档</h4>\n            <div class=\"category-count\">{{ totalDocuments }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === 'all'\" class=\"category-selected-indicator\"></div>\n        </div>\n        \n        <!-- 分类卡片 -->\n        <div \n          v-for=\"category in documentCategories\" \n          :key=\"category.id\" \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === category.id.toString() }\"\n          @click=\"selectCategory(category)\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: category.color }\">\n            <el-icon><Folder /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>{{ category.name }}</h4>\n            <div class=\"category-count\">{{ category.document_count }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === category.id.toString()\" class=\"category-selected-indicator\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加文档列表区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>我的文档</h3>\n        <div class=\"filter-controls\">\n          <el-button text @click=\"() => fetchDocuments(true)\">刷新</el-button>\n        </div>\n              </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in documents\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n              <!-- 添加共享状态标签 -->\n              <div v-if=\"doc.is_shared\" class=\"doc-shared-tag\">\n                <el-icon><User /></el-icon>\n                <span>已共享</span>\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 分页控制区 -->\n      <div v-if=\"totalCount > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next, jumper\"\n          :total=\"totalCount\"\n          :page-size=\"pageSize\"\n          v-model:current-page=\"page\"\n          @current-change=\"onPageChange\"\n          :pager-count=\"5\"\n          :disabled=\"createLoading\"\n        />\n        <!-- 添加调试信息(仅开发环境显示) -->\n        <div v-if=\"$_isDev\" class=\"pagination-debug\">\n          <small>当前页: {{ page }} / 总页数: {{ Math.ceil(totalCount / pageSize) || 0 }} (共{{ totalCount }}条记录)</small>\n        </div>\n      </div>\n    </div>\n\n    <!-- 最近编辑文档区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>最近编辑</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"viewAllDocuments('recent')\">查看全部</el-button>\n        </div>\n      </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in recentDocuments\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n              <!-- 添加共享状态标签 -->\n              <div v-if=\"doc.is_shared\" class=\"doc-shared-tag\">\n                <el-icon><User /></el-icon>\n                <span>已共享</span>\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"recentDocuments.length === 0\" class=\"empty-state\">\n        <!-- 移除暂无最近编辑文档的显示 -->\n    </div>\n  </div>\n\n    <!-- 创建新文档对话框 -->\n  <el-dialog\n      v-model=\"newDocumentDialogVisible\"\n      title=\"新建智能文档\"\n      width=\"35%\"\n    >\n      <el-tabs v-model=\"documentCreateType\">\n        <el-tab-pane label=\"空白文档\" name=\"blank\" />\n        <el-tab-pane label=\"AI生成文档\" name=\"ai\" />\n      </el-tabs>\n\n      <div v-if=\"documentCreateType === 'blank'\">\n        <el-form\n          :model=\"newDocumentForm\"\n          label-width=\"80px\"\n          class=\"mt-4\"\n          :rules=\"blankFormRules\"\n          ref=\"blankFormRef\"\n        >\n          <el-form-item label=\"文档标题\" prop=\"title\">\n            <el-input v-model=\"newDocumentForm.title\" placeholder=\"请输入文档标题\" />\n          </el-form-item>\n          <el-form-item label=\"文档类型\">\n            <el-input v-model=\"newDocumentForm.type\" placeholder=\"请输入文档类型\" />\n            <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <div v-if=\"documentCreateType === 'ai'\">\n        <el-form\n          :model=\"aiDocumentForm\"\n          label-width=\"80px\"\n          class=\"mt-4\"\n          :rules=\"aiFormRules\"\n          ref=\"aiFormRef\"\n        >\n          <el-form-item label=\"文档主题\" prop=\"title\">\n            <el-input v-model=\"aiDocumentForm.title\" placeholder=\"简短描述文档主题，如：项目周报\" />\n          </el-form-item>\n          <el-form-item label=\"文档要求\" prop=\"requirements\">\n            <el-input\n              v-model=\"aiDocumentForm.requirements\"\n              type=\"textarea\"\n              :rows=\"3\"\n              placeholder=\"详细描述您需要的文档内容和要求\"\n            />\n            <div class=\"form-tip\">人工智能会根据您的描述生成文档内容</div>\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"newDocumentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitNewDocument\" :loading=\"createLoading\">\n            创建\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分享文档对话框 -->\n    <el-dialog\n      v-model=\"shareDialogVisible\"\n      title=\"分享文档\"\n      width=\"30%\"\n      class=\"share-dialog\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您即将分享文档: <strong>{{ selectedDocument.title }}</strong></p>\n        <el-form label-width=\"120px\" class=\"mt-4\">\n          <el-form-item label=\"分享方式\">\n            <el-radio-group v-model=\"shareMode\" @change=\"handleShareModeChange\">\n              <el-radio v-if=\"selectedDocument.creator && selectedDocument.creator.id === getCurrentUserId()\" :label=\"'permission'\">授予权限</el-radio>\n              <el-radio :label=\"'chat'\">发送到聊天</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          \n          <!-- 权限分享模式 -->\n          <template v-if=\"shareMode === 'permission'\">\n            <el-form-item label=\"已分享用户\" v-if=\"existingSharedUsers.length > 0\">\n              <div class=\"user-permissions-list\">\n                <div v-for=\"user in existingSharedUsers\" :key=\"user.user_id\" class=\"user-permission-item\">\n                  <span class=\"user-name\">{{ user.username }}</span>\n                  <div class=\"permission-info\">\n                    <el-tag type=\"info\" size=\"small\">可编辑</el-tag>\n                    <el-button type=\"danger\" link @click=\"removeSharedUser(user.user_id)\" style=\"margin-left: 10px;\">移除</el-button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-tip\">已有 {{ existingSharedUsers.length }} 个用户拥有此文档的权限</div>\n            </el-form-item>\n            \n            <el-form-item label=\"添加用户\">\n              <el-select\n                v-model.number=\"selectedUsers\"\n                multiple\n                placeholder=\"请选择要添加的用户\"\n                style=\"width: 100%\"\n                popper-class=\"share-dialog-popper\"\n                @change=\"handleUserSelectionChange\"\n              >\n                <el-option\n                  v-for=\"user in availableUsers\"\n                  :key=\"user.id\"\n                  :label=\"user.username\"\n                  :value=\"user.id\"\n                />\n              </el-select>\n              <div class=\"form-tip\" v-if=\"availableUsers.length === 0\">没有可添加的用户</div>\n            </el-form-item>\n            \n            <template v-if=\"selectedUsers.length > 0\">\n              <el-form-item label=\"新增权限\">\n                <div class=\"user-permissions-list\">\n                  <div v-for=\"userPerm in selectedUsersWithPermissions\" :key=\"userPerm.user_id\" class=\"user-permission-item\">\n                    <span class=\"user-name\">{{ getUsernameById(userPerm.user_id) }}</span>\n                    <el-tag type=\"success\">可编辑</el-tag>\n                  </div>\n                </div>\n              </el-form-item>\n            </template>\n          </template>\n          \n          <!-- 聊天分享模式 -->\n          <template v-if=\"shareMode === 'chat'\">\n            <el-form-item label=\"文档格式\">\n              <el-radio-group v-model=\"shareFormat\">\n                <el-radio label=\"pdf\">PDF格式</el-radio>\n                <el-radio label=\"word\">Word格式</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            \n            <el-form-item label=\"选择用户\">\n              <el-select\n                v-model=\"selectedChatUsers\"\n                multiple\n                placeholder=\"请选择接收用户\"\n                style=\"width: 100%\"\n                popper-class=\"share-dialog-popper\"\n              >\n                <el-option\n                  v-for=\"user in availableChatUsers\"\n                  :key=\"user.id\"\n                  :label=\"user.username\"\n                  :value=\"user.id\"\n                />\n              </el-select>\n              <div class=\"form-tip\">文档将发送到与选中用户的聊天会话中</div>\n            </el-form-item>\n          </template>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"shareDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmShare\" :loading=\"shareLoading\">\n            {{ shareMode === 'permission' ? '确定' : '分享' }}\n          </el-button>\n        </span>\n    </template>\n  </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"删除文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您确定要删除文档 <strong>{{ selectedDocument.title }}</strong> 吗?</p>\n        <p class=\"warning-text\">此操作不可撤销!</p>\n  </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">\n            删除\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"categoryDialogVisible\"\n      title=\"管理文档分类\"\n      width=\"40%\"\n    >\n      <div class=\"category-management\">\n        <div class=\"category-list\">\n          <h4>当前类型</h4>\n          <el-table :data=\"documentCategories\" style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"类型名称\" />\n            <el-table-column label=\"颜色\" width=\"120\">\n              <template #default=\"scope\">\n                <div class=\"color-preview\" :style=\"{ backgroundColor: scope.row.color }\"></div>\n                {{ scope.row.color }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"文档数\" width=\"100\">\n              <template #default=\"scope\">\n                {{ scope.row.document_count || 0 }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"primary\" link @click=\"editCategory(scope.row)\">编辑</el-button>\n                <el-button \n                  type=\"danger\" \n                  link \n                  @click=\"deleteCategory(scope.row)\"\n                  :disabled=\"scope.row.document_count > 0\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        \n        <el-divider />\n        \n        <div class=\"category-form\">\n          <h4>{{ editingCategory.id ? '编辑分类' : '新增分类' }}</h4>\n          <el-form \n            :model=\"editingCategory\" \n            :rules=\"categoryFormRules\" \n            label-width=\"80px\"\n            ref=\"categoryFormRef\"\n          >\n            <el-form-item label=\"分类名称\" prop=\"name\">\n              <el-input v-model=\"editingCategory.name\" placeholder=\"输入分类名称\" />\n            </el-form-item>\n            <el-form-item label=\"分类颜色\" prop=\"color\">\n              <el-color-picker v-model=\"editingCategory.color\" />\n              <span class=\"color-value\">{{ editingCategory.color }}</span>\n            </el-form-item>\n            <el-form-item label=\"描述\">\n              <el-input \n                v-model=\"editingCategory.description\" \n                type=\"textarea\" \n                :rows=\"3\" \n                placeholder=\"输入分类描述（可选）\" \n              />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitCategory\" :loading=\"categoryLoading\">\n                {{ editingCategory.id ? '更新' : '创建' }}\n              </el-button>\n              <el-button @click=\"resetCategoryForm\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 添加编辑文档的弹窗 -->\n    <el-dialog\n      v-model=\"editDialogVisible\"\n      title=\"编辑文档\"\n      width=\"35%\"\n    >\n      <el-form \n        :model=\"editDocumentForm\" \n        label-width=\"80px\" \n        class=\"mt-4\"\n        :rules=\"editFormRules\"\n        ref=\"editFormRef\"\n      >\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"editDocumentForm.title\" placeholder=\"请输入文档标题\" />\n        </el-form-item>\n        <el-form-item label=\"文档类型\">\n          <el-input v-model=\"editDocumentForm.type\" placeholder=\"请输入文档类型\" />\n          <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n        </el-form-item>\n        <el-form-item label=\"所属分类\">\n          <el-select v-model=\"editDocumentForm.category_id\" placeholder=\"选择文档分类\" style=\"width: 100%\">\n            <el-option label=\"无分类\" :value=\"null\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditDocument\" :loading=\"editLoading\">\n            保存\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, getCurrentInstance, provide, onActivated, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport { Search, Plus, EditPen, Share, Folder, Close, More, Document, Clock, Upload, User } from '@element-plus/icons-vue'\nimport _ from 'lodash'\nimport { \n  getDocuments,\n  getRecentDocuments,\n  getSharedDocuments,\n  getDocumentCategories,\n  createDocument,\n  deleteDocument as apiDeleteDocument,\n  shareDocument as apiShareDocument,\n  createDocumentCategory,\n  updateDocumentCategory,\n  deleteDocumentCategory,\n  aiGenerateDocument,\n  getDocumentDetail,\n  updateDocument,\n  importWordDocument\n} from '@/api/smartdoc'\nimport userApi from '@/api/user';\nimport { createChatSession, getChatSessions } from '@/api/chat';\nimport request from '@/utils/request';\n\nexport default {\n  name: 'SmartDocHome',\n  components: {\n    Search,\n    Plus,\n    EditPen,\n    Share,\n    Folder,\n    Close,\n    More,\n    Document,\n    Clock,\n    Upload,\n    User\n  },\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const { proxy } = getCurrentInstance() // 获取组件实例\n    \n    // 判断是否为开发环境\n    const $_isDev = process.env.NODE_ENV === 'development'\n    \n    // 刷新触发器，用于强制组件刷新\n    const refreshTrigger = ref(Date.now())\n    \n    // 状态数据\n    const documents = ref([])\n    const recentDocuments = ref([])\n    const sharedDocuments = ref([])\n    const documentCategories = ref([])\n    const searchQuery = ref('')\n    const searchCategory = ref('all')\n    const newDocumentDialogVisible = ref(false)\n    const shareDialogVisible = ref(false)\n    const deleteDialogVisible = ref(false)\n    const documentCreateType = ref('blank')\n    const selectedDocument = ref(null)\n    const selectedUsers = ref([])\n    const selectedUsersWithPermissions = ref([]) // 添加权限控制数组\n    const availableUsers = ref([])\n    const availableChatUsers = ref([]) // 添加专用于聊天的用户列表\n    const createLoading = ref(false)\n    const shareLoading = ref(false)\n    const deleteLoading = ref(false)\n    const existingSharedUsers = ref([])\n    \n    // 添加分享相关变量\n    const shareMode = ref('permission') // 分享方式：permission(授权) 或 chat(发送到聊天)\n    const shareFormat = ref('pdf') // 分享文档格式：pdf 或 word\n    const selectedChatUsers = ref([]) // 选择的聊天用户\n    \n    // 分页相关状态\n    const page = ref(1)\n    const pageSize = 12 // 每页显示12个文档（不包含\"新建\"卡片）\n    const totalCount = ref(0)\n    const grandTotalCount = ref(0) // 用于存储真实的文档总数\n    // 添加加载更多相关状态\n    const hasMore = ref(true)\n    const loadingMore = ref(false)\n    \n    // 添加编辑文档相关状态\n    const editDialogVisible = ref(false)\n    const editDocumentForm = ref({\n      id: null,\n      title: '',\n      type: '',\n      category_id: null\n    })\n    const editLoading = ref(false)\n    \n    // 表单数据\n    const newDocumentForm = ref({\n        title: '',\n        type: ''\n    })\n    \n    const aiDocumentForm = ref({\n        title: '',\n      requirements: ''\n    })\n    \n    // 表单校验规则\n    const blankFormRules = {\n        title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ]\n    }\n    \n    const aiFormRules = {\n        title: [\n        { required: true, message: '请输入文档主题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        requirements: [\n        { required: true, message: '请输入文档要求', trigger: 'blur' },\n        { min: 10, max: 500, message: '长度在 10 到 500 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    // 添加编辑表单验证规则\n    const editFormRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    const blankFormRef = ref(null)\n    const aiFormRef = ref(null)\n    const editFormRef = ref(null)\n    \n    // 计算属性\n    const totalDocuments = computed(() => {\n      return grandTotalCount.value;\n    });\n    \n    const recentEditCount = computed(() => {\n      return recentDocuments.value.length || 0;\n    });\n    \n    // 分类管理相关状态\n    const categoryDialogVisible = ref(false)\n    const editingCategory = ref({\n      name: '',\n      color: '#409EFF',\n      description: '',\n    })\n    const categoryFormRef = ref(null)\n    const categoryLoading = ref(false)\n    const categoryFormRules = {\n      name: [\n        { required: true, message: '请输入类型名称', trigger: 'blur' },\n        { min: 2, max: 20, message: '长度在2到20个字符', trigger: 'blur' }\n      ],\n      color: [\n        { required: true, message: '请选择颜色', trigger: 'change' }\n      ]\n    }\n    \n    // 辅助方法：强制刷新视图\n    const forceUpdate = async () => {\n      // 创建临时数据，触发深度响应式更新\n      documents.value = [...documents.value];\n      recentDocuments.value = [...recentDocuments.value]; \n      sharedDocuments.value = [...sharedDocuments.value];\n      \n      // 使用Vue实例的$forceUpdate方法\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate();\n      }\n      \n      // 等待DOM更新\n      await nextTick();\n    };\n    \n    // 方法\n    const fetchDocuments = async (forceRefresh = false, append = false, timestamp = null) => {\n      if (forceRefresh) {\n        page.value = 1\n        hasMore.value = true\n      }\n      \n      // 只有在加载更多模式下才检查hasMore\n      if (append && !hasMore.value && !forceRefresh) {\n        console.log('没有更多文档，取消获取')\n        return\n      }\n      \n      if (!append) {\n        createLoading.value = true\n      } else {\n        loadingMore.value = true\n      }\n      \n      try {\n        // 构建过滤条件\n        const filters = {}\n        \n        // 添加分类过滤\n        if (searchCategory.value && searchCategory.value !== 'all') {\n          filters.category = searchCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          filters.search = searchQuery.value\n        }\n        \n        // API请求参数 - 使用与DRF兼容的page_size参数名\n        const params = {\n          page: page.value,\n          page_size: pageSize, // 将pageSize作为page_size参数传递，与后端REST framework参数保持一致\n          _t: timestamp || new Date().getTime() // 添加时间戳，确保不使用缓存\n        }\n        \n        // 合并过滤条件\n        Object.assign(params, filters)\n        \n        console.log(`获取文档列表，页码: ${page.value}，参数:`, params)\n        \n        const res = await getDocuments(params)\n        console.log('文档列表API响应:', res)\n        \n        let newDocuments = []\n        let currentViewCount = 0;\n        \n        // 处理API可能返回的警告信息\n        if (res && res.warning) {\n          console.warn('API返回警告:', res.warning)\n          ElMessage({\n            message: res.warning,\n            type: 'warning',\n            duration: 5000\n          })\n          // 如果是页码问题，重置当前页为1\n          if (res.warning.includes('页码') && res.warning.includes('无效或超出范围')) {\n            setTimeout(() => {\n              page.value = 1;\n            }, 0);\n          }\n        }\n        \n        // 处理不同格式的响应\n        if (res && res.data && Array.isArray(res.data)) {\n          // 标准格式响应\n          newDocuments = res.data\n          currentViewCount = res.total || res.count || 0\n        } else if (res && res.results && Array.isArray(res.results)) {\n          // Django REST格式响应\n          newDocuments = res.results\n          currentViewCount = res.count || 0\n        } else if (res && res.data && res.data.results && Array.isArray(res.data.results)) {\n          // 嵌套格式响应\n          newDocuments = res.data.results\n          currentViewCount = res.data.count || 0\n        } else {\n          console.warn('API返回的文档数据格式无效:', res)\n          documents.value = []\n          return\n        }\n          \n        // 更新用于分页的总数\n        totalCount.value = currentViewCount;\n\n        // 仅当没有筛选条件时，才更新\"全部文档\"的真实总数\n        if (!filters.category && !filters.search) {\n            grandTotalCount.value = currentViewCount;\n        }\n\n        // 如果是追加模式\n        if (append) {\n          // 检查并避免添加重复的文档\n          const existingIds = new Set(documents.value.map(doc => doc.id))\n          const uniqueNewDocs = newDocuments.filter(doc => !existingIds.has(doc.id))\n          \n          if (uniqueNewDocs.length > 0) {\n            documents.value = [...documents.value, ...uniqueNewDocs]\n            console.log(`追加了 ${uniqueNewDocs.length} 个新文档，当前共 ${documents.value.length} 个`)\n          } else {\n            console.log('没有新的文档被追加')\n            // 即使没有新文档，也可能是因为我们在不同的页码上获取了重复数据\n            hasMore.value = newDocuments.length > 0\n          }\n        } else {\n          // 非追加模式，直接替换\n          documents.value = newDocuments\n          console.log(`设置了 ${documents.value.length} 个文档`)\n        }\n        \n        console.log(`当前文档ID列表: [${documents.value.map(d => d.id).join(', ')}]`)\n        \n        // 计算总页数\n        const totalPages = Math.ceil(currentViewCount / pageSize);\n        console.log(`分页状态 - 当前页: ${page.value}, 总页数: ${totalPages}, 总文档数: ${currentViewCount}`);\n        \n        // 检查当前页是否超出范围\n        if (page.value > totalPages && totalPages > 0 && !append) {\n          console.warn(`当前页 ${page.value} 超出范围，自动修正为最后一页 ${totalPages}`);\n          \n          // 使用setTimeout避免触发watch事件\n          setTimeout(() => {\n            page.value = totalPages;\n          }, 0);\n          \n          return;\n        }\n        \n        // 更新是否有更多页标志\n        hasMore.value = page.value < totalPages;\n        \n        // 如果匹配的文档太少（比如低于一屏），并且有更多数据，自动加载更多\n        if (!append && documents.value.length < 8 && hasMore.value) {\n          console.log('文档数量较少，自动加载下一页')\n          // 延迟100ms避免请求过于频繁\n          await new Promise(resolve => setTimeout(resolve, 100));\n          await fetchDocuments(false, true, timestamp);\n        }\n          \n      } catch (error) {\n        console.error('获取文档列表失败', error)\n        documents.value = []\n        ElMessage.error('获取文档列表失败')\n      } finally {\n        if (!append) {\n          createLoading.value = false\n        } else {\n          loadingMore.value = false\n        }\n      }\n    }\n    \n    const fetchRecentDocuments = async (forceRefresh = false, timestamp = null) => {\n      console.log('开始获取最近文档...');\n      try {\n        // 准备参数，如果强制刷新添加时间戳\n        const params = forceRefresh ? { _t: timestamp || new Date().getTime() } : {};\n        \n        const res = await getRecentDocuments(params);\n        console.log('最近文档API响应:', res);\n        \n        if (res && res.data) {\n          // 完全替换数组而不是修改引用\n          recentDocuments.value = Array.isArray(res.data) ? [...res.data] : [];\n          console.log(`设置最近文档: ${recentDocuments.value.length}条记录`);\n        } else {\n          console.warn('API返回的最近文档数据无效:', res);\n          recentDocuments.value = [];\n        }\n      } catch (error) {\n        console.error('获取最近文档失败:', error);\n        ElMessage.error('获取最近文档失败');\n        recentDocuments.value = [];\n      }\n    }\n    \n    const fetchSharedDocuments = async (timestamp = null) => {\n      try {\n        const params = timestamp ? { _t: timestamp } : {};\n        const response = await getSharedDocuments(params)\n        sharedDocuments.value = response.data\n      } catch (error) {\n        console.error('获取共享文档失败', error)\n        ElMessage.error('获取共享文档失败')\n      }\n    }\n    \n    const fetchDocumentCategories = async (timestamp = null, retryCount = 0) => {\n      console.log('开始获取文档分类...');\n      try {\n        const params = timestamp ? { _t: timestamp } : {};\n        const res = await getDocumentCategories(params);\n        console.log('文档分类API响应:', res);\n        \n        if (res && res.data) {\n          documentCategories.value = res.data;\n          console.log(`设置文档分类: ${documentCategories.value.length}条记录, 数据:`, documentCategories.value);\n        } else {\n          console.warn('API返回的文档分类数据无效:', res);\n          documentCategories.value = [];\n          \n          // 如果返回空数据且未达到最大重试次数，尝试重试\n          if (documentCategories.value.length === 0 && retryCount < 2) {\n            console.log(`文档分类数据为空，${retryCount + 1}秒后重试...`);\n            setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n          }\n        }\n      } catch (error) {\n        console.error('获取文档分类失败:', error);\n        \n        // 如果是服务器错误且未达到最大重试次数，尝试重试\n        if (error.response && error.response.status >= 500 && retryCount < 2) {\n          console.log(`服务器错误，${retryCount + 1}秒后重试...`);\n          setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n        } else {\n          ElMessage.error('获取文档分类失败，请刷新页面重试');\n          // 初始化空数组\n          documentCategories.value = [];\n        }\n      }\n    }\n    \n    // 监听搜索查询变化，实现实时搜索\n    watch(searchQuery, _.debounce(async () => {\n      // 重置分页\n      page.value = 1\n      hasMore.value = true\n      \n      // 清空现有文档列表，显示加载状态\n      documents.value = []\n      createLoading.value = true\n      \n      try {\n        // 获取新的搜索结果\n        await fetchDocuments(true)\n      } catch (error) {\n        console.error('搜索失败:', error)\n        ElMessage.error('搜索文档失败，请重试')\n      } finally {\n        createLoading.value = false\n      }\n    }, 300))\n    \n    const createNewDocument = () => {\n      // 重置表单\n      newDocumentForm.value = { title: '', type: '' }\n      aiDocumentForm.value = { title: '', requirements: '' }\n      documentCreateType.value = 'blank'\n      newDocumentDialogVisible.value = true\n      \n      // 监听对话框关闭事件，清理表单\n      nextTick(() => {\n        try {\n          const dialog = document.querySelector('.el-dialog');\n          if (dialog) {\n            dialog.addEventListener('closed', () => {\n              try {\n                if (blankFormRef.value) {\n                  blankFormRef.value.clearValidate();\n                }\n                if (aiFormRef.value) {\n                  aiFormRef.value.clearValidate();\n                }\n              } catch (err) {\n                console.error('Error clearing form validation:', err);\n              }\n            }, { once: true });\n          }\n        } catch (err) {\n          console.error('Error setting up dialog event listener:', err);\n        }\n      });\n    }\n    \n    const submitNewDocument = async () => {\n      if (documentCreateType.value === 'blank') {\n        if (!blankFormRef.value) {\n          console.warn('表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await blankFormRef.value.validate()\n            .catch(err => {\n              console.error('表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              console.log('开始创建文档:', {\n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用'\n              });\n              \n              const response = await createDocument({ \n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用',\n                content: ''\n              });\n              \n              console.log('创建文档响应数据：', JSON.stringify(response));\n              \n              // 关闭对话框\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('文档创建成功');\n              \n              // 解析返回的文档ID\n              let docId = null;\n              if (response && response.data) {\n                if (response.data.id) {\n                  docId = response.data.id;\n                } else if (Array.isArray(response.data) && response.data.length > 0) {\n                  docId = response.data[0].id;\n                } else if (response.data.results && Array.isArray(response.data.results) && response.data.results.length > 0) {\n                  docId = response.data.results[0].id;\n                }\n              }\n              \n              // 等待对话框关闭完成后再执行跳转，避免DOM错误\n              setTimeout(() => {\n                if (docId) {\n                  console.log(`准备跳转到文档详情页，ID: ${docId}`);\n                  \n                  // 先刷新文档列表，确保数据是最新的\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                  \n                  // 然后再执行导航\n                  setTimeout(() => {\n                    router.push({\n                      name: 'SmartDocDetail',\n                      params: { id: docId }\n                    }).then(() => {\n                      createLoading.value = false;\n                    }).catch(err => {\n                      console.error('路由导航失败:', err);\n                      ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                      // 尝试路径跳转\n                      router.push(`/smartdoc/${docId}`).catch(navErr => {\n                        console.error('路径导航也失败:', navErr);\n                        ElMessage.error('路径跳转详情页也失败');\n                      });\n                      createLoading.value = false;\n                    });\n                  }, 300);\n                } else {\n                  console.warn('创建文档成功，但返回的数据格式不正确', response);\n                  // 刷新文档列表\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                }\n              }, 100);\n            } catch (error) {\n              console.error('创建文档失败', error);\n              ElMessage.error('创建文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      } else if (documentCreateType.value === 'ai') {\n        if (!aiFormRef.value) {\n          console.warn('AI表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await aiFormRef.value.validate()\n            .catch(err => {\n              console.error('AI表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              // 调用AI生成文档API\n              const categoryId = searchCategory.value !== 'all' ? searchCategory.value : null;\n              const response = await aiGenerateDocument({\n                title: aiDocumentForm.value.title,\n                requirement: aiDocumentForm.value.requirements,\n                category_id: categoryId,\n                doc_type: 'AI'\n              });\n              console.log('AI生成文档响应数据：', response);\n              // 检查超时\n              if (response && response.status === 504) {\n                ElMessage.error(response.data?.detail || 'AI生成超时，请简化需求或稍后重试');\n                createLoading.value = false;\n                return;\n              }\n              if (response && response.data && typeof response.data.detail === 'string' && response.data.detail.includes('超时')) {\n                ElMessage.error(response.data.detail);\n                createLoading.value = false;\n                return;\n              }\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('AI生成文档成功');\n              let docId = null;\n              if (response && response.data && response.data.id) {\n                docId = response.data.id;\n              }\n              if (docId) {\n                // 跳转前打印日志\n                console.log('准备跳转到文档详情页，路由名: SmartDocDetail, id:', docId);\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: String(docId) }\n                }).then(() => {\n                  createLoading.value = false;\n                }).catch(err => {\n                  console.error('路由导航失败:', err);\n                  ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                  // 尝试路径跳转\n                  router.push(`/smartdoc/${docId}`).catch(navErr => {\n                    console.error('路径导航也失败:', navErr);\n                    ElMessage.error('路径跳转详情页也失败');\n                  });\n                  createLoading.value = false;\n                });\n                // 异步刷新数据\n                fetchDocuments();\n                fetchRecentDocuments();\n              } else {\n                fetchDocuments();\n                fetchRecentDocuments();\n                createLoading.value = false;\n              }\n            } catch (error) {\n              console.error('AI生成文档失败', error);\n              ElMessage.error('AI生成文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交AI表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      }\n    }\n    \n    const openDocument = (doc) => {\n      router.push({ name: 'SmartDocDetail', params: { id: doc.id } })\n    }\n    \n    const editDocument = (doc, event) => {\n      // 阻止事件冒泡，防止触发卡片点击事件\n      if (event) {\n        event.stopPropagation();\n      }\n      \n      // 确保分类ID是数字类型\n      let categoryId = null;\n      if (doc.category && doc.category.id) {\n        categoryId = Number(doc.category.id);\n      }\n      \n      console.log('编辑文档:', doc.id, '当前分类:', categoryId);\n      \n      // 设置表单数据\n      editDocumentForm.value = {\n        id: doc.id,\n        title: doc.title,\n        type: doc.type || '',\n        category_id: categoryId\n      };\n      \n      // 显示编辑对话框\n      editDialogVisible.value = true;\n    };\n    \n    // 提交编辑文档\n    const submitEditDocument = async () => {\n      if (!editFormRef.value) return;\n      \n      try {\n        const valid = await editFormRef.value.validate();\n        \n        if (valid) {\n          editLoading.value = true;\n          \n          // 准备更新的数据\n          const updateData = {\n            title: editDocumentForm.value.title,\n            type: editDocumentForm.value.type || '通用',\n            category_id: editDocumentForm.value.category_id\n          };\n          \n          // 调用API更新文档\n          await updateDocument(editDocumentForm.value.id, updateData);\n          \n          ElMessage.success('文档更新成功');\n          editDialogVisible.value = false;\n          \n          // 强制刷新所有数据以确保视图同步\n          await reloadAllData();\n        }\n      } catch (error) {\n        console.error('更新文档失败', error);\n        ElMessage.error('更新文档失败');\n      } finally {\n        editLoading.value = false;\n      }\n    };\n    \n    const exportDocument = (doc) => {\n      ElMessageBox({\n        title: '导出文档',\n        message: '请选择导出格式',\n        showCancelButton: true,\n        confirmButtonText: '导出为PDF',\n        cancelButtonText: '导出为Word',\n        closeOnClickModal: true,\n        callback: (action) => {\n          if (action === 'confirm') {\n            exportToPdf(doc)\n          } else if (action === 'cancel') {\n            exportToWord(doc)\n          }\n        }\n      })\n    }\n    \n    // 导出为PDF\n    const exportToPdf = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      // 先获取文档详情内容\n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.pdf`\n        \n        // 创建临时容器用于导出\n        const tempContainer = document.createElement('div')\n        tempContainer.innerHTML = documentContent\n        tempContainer.className = 'temp-export-container'\n        document.body.appendChild(tempContainer)\n        \n        const options = {\n          margin: [15, 15, 15, 15],\n          filename: filename,\n          image: { type: 'jpeg', quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n        }\n        \n        // 更新加载提示\n        loading.setText('正在生成PDF...')\n        \n        // 动态导入html2pdf.js\n        const html2pdfModule = await import('html2pdf.js')\n        const html2pdf = html2pdfModule.default\n        \n        await html2pdf().from(tempContainer).set(options).save()\n        \n        // 清理临时元素\n        document.body.removeChild(tempContainer)\n        \n        loading.close()\n        ElMessage.success('PDF导出成功')\n      } catch (error) {\n        console.error('PDF导出失败:', error)\n        loading.close()\n        ElMessage.error('PDF导出失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 导出为Word（保留图片）\n    const exportToWord = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.doc`\n        \n        // 创建一个临时文档容器处理内容\n        const contentContainer = document.createElement('div')\n        contentContainer.innerHTML = documentContent\n        \n        // 更新加载提示\n        loading.setText('正在生成Word文档...')\n        \n        // 创建微软Word兼容的HTML文档\n        const msWordHtml = `\n          <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                xmlns=\"http://www.w3.org/TR/REC-html40\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>${docTitle}</title>\n            <style>\n              body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n              img { max-width: 100%; height: auto; }\n              p { margin: 0; padding: 0; }\n              h1 { font-size: 18pt; }\n              h2 { font-size: 16pt; }\n              h3 { font-size: 14pt; }\n              table { border-collapse: collapse; width: 100%; }\n              td, th { border: 1px solid #000; padding: 5px; }\n            </style>\n          </head>\n          <body>\n            <h1>${docTitle}</h1>\n            ${contentContainer.innerHTML}\n          </body>\n          </html>\n        `\n        \n        // 使用file-saver保存文件\n        const FileSaver = await import('file-saver')\n        const saveAs = FileSaver.saveAs || FileSaver.default\n        const blob = new Blob([msWordHtml], { type: 'application/msword' })\n        saveAs(blob, filename)\n        \n        loading.close()\n        ElMessage.success('Word文档导出成功')\n      } catch (error) {\n        console.error('Word导出失败:', error)\n        loading.close()\n        ElMessage.error(`Word导出失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    const shareDocument = async (doc) => {\n      selectedDocument.value = doc\n      shareLoading.value = true\n      \n      try {\n        console.log('获取文档详情，ID:', doc.id);\n        // Fetch document details to get existing permissions\n        const detailRes = await getDocumentDetail(doc.id)\n        console.log('文档详情响应:', detailRes);\n        \n        // 尝试从不同可能的响应结构中提取shared_with数据\n        let sharedWithData = [];\n        if (detailRes && detailRes.data) {\n          if (detailRes.data.shared_with && Array.isArray(detailRes.data.shared_with)) {\n            sharedWithData = detailRes.data.shared_with;\n            console.log('从data.shared_with提取共享用户:', sharedWithData);\n          } else if (detailRes.data.permissions && Array.isArray(detailRes.data.permissions)) {\n            sharedWithData = detailRes.data.permissions;\n            console.log('从data.permissions提取共享用户:', sharedWithData);\n          } else if (detailRes.shared_with && Array.isArray(detailRes.shared_with)) {\n            sharedWithData = detailRes.shared_with;\n            console.log('从直接的shared_with提取共享用户:', sharedWithData);\n          }\n        }\n        \n        // 处理不同格式的用户数据\n        if (sharedWithData.length > 0) {\n          existingSharedUsers.value = sharedWithData.map(item => {\n            // 处理可能的不同数据结构\n            if (item.user && (item.user.id || item.user.user_id)) {\n              return {\n                user_id: item.user.id || item.user.user_id,\n                username: item.user.username || item.user.name || item.user.email || `用户${item.user.id}`,\n                permission: item.permission || 'edit'\n              };\n            } else if (item.user_id || item.userId) {\n              return {\n                user_id: item.user_id || item.userId,\n                username: item.username || item.name || item.email || `用户${item.user_id || item.userId}`,\n                permission: item.permission || 'edit'\n              };\n            }\n            // 默认情况，尝试使用item本身\n            return {\n              user_id: item.id || item.user_id || 0,\n              username: item.username || item.name || item.email || '未知用户',\n              permission: item.permission || 'edit'\n            };\n          });\n        } else {\n          console.log('没有找到已分享用户数据');\n          existingSharedUsers.value = [];\n        }\n        \n        console.log('处理后的已分享用户列表:', existingSharedUsers.value);\n        const existingUserIds = new Set(existingSharedUsers.value.map(u => u.user_id));\n        console.log('已分享用户ID集合:', Array.from(existingUserIds));\n        \n        // Get current user and company info\n        const currentUserJson = localStorage.getItem('user')\n        let currentUserId = null\n        let companyId = null\n        if (currentUserJson) {\n          const currentUser = JSON.parse(currentUserJson)\n          currentUserId = currentUser.id\n          companyId = currentUser.company_id\n          console.log('当前用户ID:', currentUserId, '公司ID:', companyId);\n        }\n        \n        const isCreator = doc.creator && currentUserId && doc.creator.id === currentUserId\n        shareMode.value = isCreator ? 'permission' : 'chat'\n        console.log('是否为创建者:', isCreator, '分享模式:', shareMode.value);\n        \n        // Fetch all company users\n        const usersRes = await userApi.getCompanyUsers()\n        console.log('公司用户列表响应:', usersRes);\n        if (usersRes.success && Array.isArray(usersRes.data)) {\n          // 权限模式下的用户列表（排除已有权限的用户）\n          availableUsers.value = usersRes.data\n            .filter(user => \n              user.id !== currentUserId && \n              (!companyId || user.company_id === companyId) &&\n              !existingUserIds.has(user.id) // 排除已有权限的用户\n            )\n            .map(user => ({\n              id: user.id,\n              username: user.name || user.username || user.email || `用户${user.id}`\n            }));\n          \n          // 聊天模式下的用户列表（包含所有用户，包括已有权限的用户）\n          availableChatUsers.value = usersRes.data\n            .filter(user => \n              user.id !== currentUserId && \n              (!companyId || user.company_id === companyId)\n              // 不排除已有权限的用户\n            )\n            .map(user => ({\n              id: user.id,\n              username: user.name || user.username || user.email || `用户${user.id}`\n            }));\n          \n          console.log('授权模式可选用户列表:', availableUsers.value);\n          console.log('聊天模式可选用户列表:', availableChatUsers.value);\n        } else {\n          console.warn('获取公司用户列表失败:', usersRes);\n          availableUsers.value = [];\n          availableChatUsers.value = [];\n        }\n      } catch (error) {\n        console.error('打开分享对话框失败:', error)\n        ElMessage.error('获取分享信息失败')\n        existingSharedUsers.value = []\n      } finally {\n        shareLoading.value = false\n        \n        // Reset variables for adding new users\n        shareFormat.value = 'pdf'\n        selectedUsers.value = []\n        selectedUsersWithPermissions.value = []\n        selectedChatUsers.value = []\n        \n        shareDialogVisible.value = true\n      }\n    }\n    \n    // 通过ID获取用户名\n    const getUsernameById = (userId) => {\n      const user = availableUsers.value.find(u => u.id === userId)\n      return user ? user.username : '未知用户'\n    }\n    \n    // 获取当前用户ID\n    const getCurrentUserId = () => {\n      try {\n        const currentUserJson = localStorage.getItem('user')\n        if (currentUserJson) {\n          const currentUser = JSON.parse(currentUserJson)\n          return currentUser.id\n        }\n        return null\n      } catch (error) {\n        console.error('获取当前用户ID失败:', error)\n        return null\n      }\n    }\n\n    // 处理用户选择变化\n    const handleUserSelectionChange = (val) => {\n      console.log('选择变化 - 原始值:', val);\n      console.log('选择变化 - selectedUsers:', selectedUsers.value);\n      console.log('选择变化 - 类型:', typeof selectedUsers.value, Array.isArray(selectedUsers.value));\n      \n      // 确保selectedUsers是数组\n      if (!Array.isArray(selectedUsers.value)) {\n        console.warn('selectedUsers不是数组，强制转换为数组');\n        selectedUsers.value = Array.isArray(val) ? val : [];\n      }\n      \n      // 更新权限控制数组\n      selectedUsersWithPermissions.value = selectedUsers.value.map(userId => {\n        console.log('处理用户ID:', userId, '类型:', typeof userId);\n        return {\n          user_id: userId,\n          permission: 'edit' // 默认为只读权限\n        };\n      });\n      \n      console.log('用户选择变化，已选择用户:', selectedUsers.value);\n      console.log('用户权限数组:', selectedUsersWithPermissions.value);\n    }\n\n    // 处理分享模式变化\n    const handleShareModeChange = () => {\n      console.log('分享模式变更为:', shareMode.value);\n      // 切换分享模式时清空之前选择的用户\n      if (shareMode.value === 'permission') {\n        // 切换到权限模式，清空聊天相关的选择\n        selectedChatUsers.value = [];\n        console.log('已清空聊天用户选择');\n      } else if (shareMode.value === 'chat') {\n        // 切换到聊天模式，清空权限相关的选择\n        selectedUsers.value = [];\n        selectedUsersWithPermissions.value = [];\n        console.log('已清空权限用户选择');\n      }\n    }\n    \n    const confirmShare = async () => {\n      // 权限分享方式\n      if (shareMode.value === 'permission') {\n        // 检查是否为文档创建者\n        const currentUserId = getCurrentUserId();\n        const isCreator = selectedDocument.value && selectedDocument.value.creator && \n                          currentUserId && selectedDocument.value.creator.id === currentUserId;\n        \n        if (!isCreator) {\n          ElMessage.warning('只有文档创建者才能授予权限')\n          return\n        }\n        \n        const finalPermissions = [\n          ...existingSharedUsers.value.map(u => ({ user_id: u.user_id, permission: 'edit' })),\n          ...selectedUsersWithPermissions.value\n        ];\n        \n        shareLoading.value = true\n        try {\n          await apiShareDocument(selectedDocument.value.id, finalPermissions)\n          ElMessage.success('权限更新成功')\n          shareDialogVisible.value = false\n        } catch (error) {\n          console.error('分享文档失败', error)\n          ElMessage.error('权限更新失败')\n        } finally {\n          shareLoading.value = false\n        }\n      } \n      // 聊天分享方式\n      else if (shareMode.value === 'chat') {\n        if (!selectedDocument.value || selectedChatUsers.value.length === 0) {\n          ElMessage.warning('请选择至少一个接收用户')\n          return\n        }\n        \n        shareLoading.value = true\n        try {\n          // 获取当前用户信息\n          const currentUserJson = localStorage.getItem('user')\n          let currentUserId = null\n          if (currentUserJson) {\n            const currentUser = JSON.parse(currentUserJson)\n            currentUserId = currentUser.id\n          }\n          \n          if (!currentUserId) {\n            ElMessage.error('无法获取当前用户信息')\n            shareLoading.value = false\n            return\n          }\n          \n          // 需要获取文档内容\n          const docResponse = await getDocumentDetail(selectedDocument.value.id);\n          const currentDoc = docResponse.data;\n          \n          if (!currentDoc || !currentDoc.content) {\n            ElMessage.error('无法获取文档内容')\n            shareLoading.value = false\n            return\n          }\n          \n          // 使用前端导出文件的方式获取文件\n          const loading = ElLoading.service({\n            lock: true,\n            text: `正在准备${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文件...`,\n            background: 'rgba(255, 255, 255, 0.7)'\n          });\n          \n          try {\n            // 准备文档内容\n            const docTitle = currentDoc.title || '未命名文档';\n            const documentContent = currentDoc.content;\n            \n            // 创建临时容器用于导出\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = documentContent;\n            tempContainer.className = 'temp-export-container';\n            document.body.appendChild(tempContainer);\n            \n            let documentFile = null;\n            let fileName = docTitle;\n            let fileType = '';\n            \n            if (shareFormat.value === 'pdf') {\n              fileName += '.pdf';\n              fileType = 'application/pdf';\n              \n              loading.setText('正在生成PDF文件...');\n              \n              // 动态导入html2pdf.js\n              const html2pdfModule = await import('html2pdf.js');\n              const html2pdf = html2pdfModule.default;\n              \n              const options = {\n                margin: [15, 15, 15, 15],\n                filename: fileName,\n                image: { type: 'jpeg', quality: 0.98 },\n                html2canvas: { scale: 2, useCORS: true },\n                jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n              };\n              \n              // 生成PDF并获取Blob\n              documentFile = await html2pdf().from(tempContainer).set(options).outputPdf('blob');\n            }\n            else {\n              fileName += '.doc';\n              fileType = 'application/msword';\n              \n              loading.setText('正在生成Word文件...');\n              \n              // 创建微软Word兼容的HTML文档\n              const msWordHtml = `\n                <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                      xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                      xmlns=\"http://www.w3.org/TR/REC-html40\">\n                <head>\n                  <meta charset=\"utf-8\">\n                  <title>${docTitle}</title>\n                  <style>\n                    body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n                    img { max-width: 100%; height: auto; }\n                    p { margin: 0; padding: 0; }\n                    h1 { font-size: 18pt; }\n                    h2 { font-size: 16pt; }\n                    h3 { font-size: 14pt; }\n                    table { border-collapse: collapse; width: 100%; }\n                    td, th { border: 1px solid #000; padding: 5px; }\n                  </style>\n                </head>\n                <body>\n                  <h1>${docTitle}</h1>\n                  ${tempContainer.innerHTML}\n                </body>\n                </html>\n              `;\n              \n              // 创建Blob\n              documentFile = new Blob([msWordHtml], { type: fileType });\n            }\n            \n            // 清理临时元素\n            document.body.removeChild(tempContainer);\n            \n            // 先获取所有聊天会话列表，只获取一次\n            loading.setText('正在查找聊天会话...');\n            const sessionsResponse = await getChatSessions();\n            let chatSessions = [];\n            \n            // 处理不同格式的API返回结果\n            if (sessionsResponse && sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n              chatSessions = sessionsResponse.data;\n            } else if (sessionsResponse && sessionsResponse.results && Array.isArray(sessionsResponse.results)) {\n              chatSessions = sessionsResponse.results;\n            } else if (sessionsResponse && Array.isArray(sessionsResponse)) {\n              chatSessions = sessionsResponse;\n            }\n            \n            console.log(`获取到 ${chatSessions.length} 个会话`);\n            loading.setText('正在准备发送...');\n            \n            // 为每个用户准备会话ID，使用Map存储userId -> chatId的映射\n            const userSessionMap = new Map();\n            \n            // 先批量查找现有会话，减少重复检查\n            for (const userId of selectedChatUsers.value) {\n              // 查找是否有与该用户的会话\n              const existingSession = chatSessions.find(session => {\n                // 检查会话是否为双人会话\n                if (!session.participants || !Array.isArray(session.participants)) {\n                  return false;\n                }\n                \n                // 检查会话是否只有两个参与者\n                if (session.participants.length !== 2) {\n                  return false;\n                }\n                \n                // 检查会话参与者是否包含当前用户和目标用户\n                const hasCurrentUser = session.participants.some(p => \n                  (p.id === currentUserId) || (p.user && p.user.id === currentUserId)\n                );\n                \n                const hasTargetUser = session.participants.some(p => \n                  (p.id === userId) || (p.user && p.user.id === userId)\n                );\n                \n                return hasCurrentUser && hasTargetUser;\n              });\n              \n              if (existingSession) {\n                userSessionMap.set(userId, existingSession.id);\n                console.log(`用户${userId}有现有会话: ${existingSession.id}`);\n              }\n            }\n            \n            // 为没有会话的用户创建新会话\n            const newSessionPromises = [];\n            for (const userId of selectedChatUsers.value) {\n              if (!userSessionMap.has(userId)) {\n                console.log(`为用户${userId}创建新会话...`);\n                newSessionPromises.push(\n                  createChatSession({\n                    participant_ids: [currentUserId, userId],\n                    title: '文档分享'\n                  }).then(response => {\n                    if (response && response.data && response.data.id) {\n                      userSessionMap.set(userId, response.data.id);\n                      console.log(`为用户${userId}创建新会话成功: ${response.data.id}`);\n                    } else if (response && response.id) {\n                      userSessionMap.set(userId, response.id);\n                      console.log(`为用户${userId}创建新会话成功: ${response.id}`);\n                    } else {\n                      console.error('创建聊天会话失败，返回数据格式不正确:', response);\n                      return null;\n                    }\n                  }).catch(error => {\n                    console.error(`为用户${userId}创建会话失败:`, error);\n                    return null;\n                  })\n                );\n              }\n            }\n            \n            // 等待所有新会话创建完成\n            if (newSessionPromises.length > 0) {\n              loading.setText(`正在创建 ${newSessionPromises.length} 个新会话...`);\n              await Promise.all(newSessionPromises);\n            }\n            \n            // 准备发送文件\n            loading.setText('正在发送文件...');\n            const sendPromises = [];\n            const failedUsers = [];\n            \n            // 遍历用户发送文件\n            for (const userId of selectedChatUsers.value) {\n              const chatId = userSessionMap.get(userId);\n              if (!chatId) {\n                console.error(`未能找到或创建用户${userId}的会话`);\n                failedUsers.push(userId);\n                continue;\n              }\n              \n              console.log(`准备向会话 ${chatId} 发送文档...`);\n              \n              // 创建FormData对象，添加文件和相关信息\n              const formData = new FormData();\n              formData.append('chat', chatId);\n              formData.append('message_type', 'file');\n              formData.append('content', `分享了一个${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文档: ${docTitle}`);\n              \n              // 将文件Blob转换为File对象 - 为每个用户创建新的File对象\n              const file = new File([documentFile], fileName, { type: fileType });\n              formData.append('file', file);\n              \n              // 发送文件消息\n              sendPromises.push(\n                request({\n                  url: '/api/chat/messages/',\n                  method: 'post',\n                  data: formData,\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  },\n                  timeout: 30000 // 增加超时时间\n                }).then(response => {\n                  console.log(`向用户 ${userId} 发送文档成功:`, response);\n                  return { userId, success: true };\n                }).catch(error => {\n                  console.error(`向用户 ${userId} 发送文档失败:`, error);\n                  return { userId, success: false, error };\n                })\n              );\n            }\n            \n            // 等待所有发送操作完成\n            const sendResults = await Promise.all(sendPromises);\n            const successCount = sendResults.filter(result => result.success).length;\n            const totalAttempted = sendResults.length;\n            const totalSelected = selectedChatUsers.value.length;\n            \n            if (successCount > 0) {\n              if (successCount === totalSelected) {\n                ElMessage.success(`成功发送文档到所有 ${successCount} 个用户的聊天`);\n              } else {\n                ElMessage.warning(`部分发送成功: ${successCount}/${totalSelected} 个用户接收到文档`);\n              }\n              shareDialogVisible.value = false;\n            } else if (totalAttempted > 0) {\n              ElMessage.error('发送文档失败，请重试');\n            } else {\n              ElMessage.error('未能创建任何聊天会话，请重试');\n            }\n          } catch (error) {\n            console.error('生成文档文件失败:', error);\n            ElMessage.error('生成文档文件失败');\n          } finally {\n            loading.close();\n          }\n        } catch (error) {\n          console.error('分享文档到聊天失败:', error);\n          ElMessage.error('分享文档到聊天失败');\n        } finally {\n          shareLoading.value = false;\n        }\n      }\n    }\n    \n    const deleteDocument = (doc) => {\n      selectedDocument.value = doc\n      deleteDialogVisible.value = true\n    }\n    \n    const confirmDelete = async () => {\n      if (!selectedDocument.value) return\n      \n      deleteLoading.value = true\n      try {\n        // 记录要删除的文档ID和类别\n        const deletedDocId = selectedDocument.value.id;\n        const deletedDocCategoryId = selectedDocument.value.category?.id;\n        \n        // 先关闭对话框，提高用户体验\n        deleteDialogVisible.value = false;\n        \n        // 执行删除操作\n        await apiDeleteDocument(deletedDocId)\n        ElMessage.success('文档删除成功')\n        \n        // 强制清除选中的文档\n        selectedDocument.value = null;\n        \n        // 清除可能的缓存数据\n        if (window.localStorage) {\n          try {\n            // 移除可能存在的相关缓存\n            localStorage.removeItem(`doc_cache_${deletedDocId}`);\n            localStorage.removeItem(`recent_docs_cache`);\n            localStorage.removeItem(`doc_list_cache`);\n          } catch (e) {\n            console.error('清除本地缓存失败:', e);\n          }\n        }\n        \n        // 更新刷新触发器\n        refreshTrigger.value = Date.now();\n        \n        // 使用新数组替换原数组，确保Vue能检测到变化 \n        documents.value = [...documents.value.filter(doc => doc.id !== deletedDocId)];\n        recentDocuments.value = [...recentDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        sharedDocuments.value = [...sharedDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        \n        // 强制更新视图\n        await forceUpdate();\n        \n        // 更新分类中的文档计数\n        if (deletedDocCategoryId) {\n          const category = documentCategories.value.find(c => c.id === deletedDocCategoryId);\n          if (category && category.document_count > 0) {\n            category.document_count--;\n          }\n        }\n        \n        // 等待DOM更新\n        await nextTick();\n        \n        // 重新导航到文档首页，确保状态全部刷新\n        if (router.currentRoute.value.name === 'SmartDocDetail') {\n          console.log('从详情页删除文档，重新导航到文档首页');\n          \n          // 先强制刷新数据，确保导航后数据是最新的\n          await reloadAllData();\n          \n          // 使用replace模式跳转，不留下历史记录，并添加强制刷新参数\n          router.replace({ \n            name: 'SmartDoc',\n            query: { _refresh: Date.now() } // 添加时间戳参数防止缓存\n          });\n        } else {\n          // 如果已经在文档首页，立即重载数据并强制刷新页面\n          await refreshData();\n        }\n      } catch (error) {\n        console.error('删除文档失败', error);\n        ElMessage.error('删除文档失败');\n        // 如果删除失败，关闭对话框\n        deleteDialogVisible.value = false;\n      } finally {\n        deleteLoading.value = false;\n      }\n    }\n    \n    const viewAllDocuments = (type) => {\n      if (type === 'recent') {\n        // 路由中没有SmartDocList，直接跳转到智能文档首页并滚动到文档列表\n        router.push({ name: 'SmartDoc' }).then(() => {\n          setTimeout(() => {\n            const docSection = document.querySelector('.section');\n            if (docSection) {\n              docSection.scrollIntoView({ behavior: 'smooth' });\n            }\n          }, 300);\n        });\n      }\n    }\n    \n    const selectCategory = (category) => {\n      console.log('选择分类:', category);\n      \n      // 处理不同类型的category参数\n      let categoryId;\n      if (category === 'all') {\n        categoryId = 'all';\n      } else if (typeof category === 'string') {\n        categoryId = category;\n      } else if (typeof category === 'object' && category !== null) {\n        categoryId = category.id.toString();\n      }\n      \n      console.log('处理后的分类ID:', categoryId);\n      \n      // 如果选择的分类与当前分类相同，则不做任何操作\n      if (categoryId === searchCategory.value) {\n        console.log('分类未变化，不重新加载');\n        return;\n      }\n      \n      // 设置新的分类\n      searchCategory.value = categoryId;\n      \n      // 添加动画效果\n      documents.value = [];\n      createLoading.value = true;\n      \n      // 重置分页和加载状态\n      page.value = 1;\n      hasMore.value = true;\n      \n      // 延迟获取，实现过渡效果\n      setTimeout(async () => {\n        try {\n          // 强制刷新文档列表\n          await fetchDocuments(true);\n        } catch (error) {\n          console.error('获取文档失败:', error);\n          ElMessage.error('获取文档列表失败，请刷新页面重试');\n        } finally {\n          createLoading.value = false;\n        }\n        \n        // 触发一个简单的动画效果，突出显示已筛选的文档\n        const docCards = document.querySelectorAll('.doc-card');\n        if (docCards && docCards.length > 0) {\n          docCards.forEach((card, index) => {\n            if (card) {\n              card.style.animationDelay = `${index * 50}ms`;\n              card.classList.remove('fadeIn');\n              setTimeout(() => {\n                if (card) {\n                  card.classList.add('fadeIn');\n                }\n              }, 10);\n            }\n          });\n        }\n      }, 300);\n    };\n\n    // 获取选中分类的颜色\n    const getSelectedCategoryColor = () => {\n      if (searchCategory.value === 'all') return '#409EFF';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.color || '#67C23A';\n    };\n\n    // 获取选中分类的名称\n    const getSelectedCategoryName = () => {\n      if (searchCategory.value === 'all') return '全部文档';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.name || '未知分类';\n    };\n    \n    const manageCategories = () => {\n      categoryDialogVisible.value = true\n      resetCategoryForm()\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = { ...category }\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = {\n        id: '',\n        name: '',\n        color: '#409EFF',\n        description: ''\n      }\n      if (categoryFormRef.value) {\n        categoryFormRef.value.resetFields()\n      }\n    }\n    \n    const submitCategory = async () => {\n      if (!categoryFormRef.value) return\n      \n      await categoryFormRef.value.validate(async (valid) => {\n        if (valid) {\n          categoryLoading.value = true\n          try {\n            const categoryData = {\n              name: editingCategory.value.name,\n              color: editingCategory.value.color,\n              description: editingCategory.value.description || ''\n            }\n            \n            if (editingCategory.value.id) {\n              // 更新分类\n              await updateDocumentCategory(editingCategory.value.id, categoryData)\n              ElMessage.success('分类更新成功')\n            } else {\n              // 创建分类\n              await createDocumentCategory(categoryData)\n              ElMessage.success('分类创建成功')\n            }\n            \n            // 重新获取分类列表\n            fetchDocumentCategories()\n            resetCategoryForm()\n          } catch (error) {\n            console.error('保存分类失败:', error)\n            ElMessage.error('保存分类失败')\n          } finally {\n            categoryLoading.value = false\n          }\n        }\n      })\n    }\n    \n    const deleteCategory = (category) => {\n      if (category.document_count > 0) {\n        ElMessage.warning('该分类下有文档，无法删除')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        `确定要删除分类\"${category.name}\"吗？`,\n        '删除分类',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await deleteDocumentCategory(category.id)\n          ElMessage.success('分类删除成功')\n          fetchDocumentCategories()\n        } catch (error) {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败')\n        }\n      }).catch(() => {})\n    }\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 同一天显示时间\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天'\n      }\n      \n      // 一周内显示星期\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const diffDays = Math.round((now - date) / (1000 * 60 * 60 * 24))\n      if (diffDays < 7) {\n        return weekDays[date.getDay()]\n      }\n      \n      // 其他情况显示日期\n      return date.toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' })\n    }\n    \n    const resetCategoryFilter = () => {\n      searchCategory.value = 'all'\n      page.value = 1\n      fetchDocuments(true)\n    }\n    \n    // 添加页面激活钩子，确保从其他页面返回时重新获取数据\n    onActivated(() => {\n      console.log('SmartDoc组件被激活，重新获取数据');\n      reloadAllData();\n    });\n\n    // 页面激活后重新加载所有数据的函数\n    const reloadAllData = async () => {\n      page.value = 1\n      try {\n        console.log('重新加载所有文档数据...')\n        createLoading.value = true\n        \n        // 添加时间戳防止缓存\n        const timestamp = Date.now();\n        \n        // 清除本地缓存\n        try {\n          if (window.localStorage) {\n            // 清除文档相关的缓存\n            localStorage.removeItem('doc_list_cache');\n            localStorage.removeItem('recent_docs_cache');\n            localStorage.removeItem('doc_categories_cache');\n          }\n        } catch (e) {\n          console.error('清除缓存失败:', e);\n        }\n        \n        // 先获取分类，因为显示文档时需要分类信息\n        await fetchDocumentCategories(timestamp)\n        \n        // 然后并行获取其他数据，但不需要保存返回值\n        await Promise.all([\n          fetchDocuments(true, false, timestamp),\n          fetchRecentDocuments(true, timestamp),\n          fetchSharedDocuments(timestamp)\n        ])\n        \n        console.log('数据重新加载完成', {\n          分类数量: documentCategories.value.length,\n          文档数量: documents.value.length,\n          最近文档: recentDocuments.value.length,\n          共享文档: sharedDocuments.value.length,\n          总计数: totalCount.value,\n        })\n        \n        // 强制更新视图\n        await forceUpdate()\n        \n      } catch (error) {\n        console.error('数据重新加载失败:', error)\n        ElMessage.error('加载数据失败，请刷新页面')\n      } finally {\n        createLoading.value = false\n      }\n    }\n\n    // 提供重载函数给子组件或父组件使用\n    provide('reloadDocuments', reloadAllData);\n    \n    // 监听路由变化，强制刷新数据\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal) {\n        console.log('检测到路由刷新参数:', newVal);\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 监听路由参数，处理不同情况\n    watch(() => route.path, (newPath, oldPath) => {\n      console.log('路由变化:', oldPath, '->', newPath);\n      if (newPath === '/smartdoc' && oldPath && oldPath.startsWith('/smartdoc/')) {\n        // 从文档详情页返回文档列表页，强制刷新\n        console.log('从详情页返回列表页，强制刷新数据');\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 手动强制刷新方法\n    const refreshData = async () => {\n      page.value = 1\n      await reloadAllData()\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate()\n      }\n    }\n\n    // 处理分页变化的方法 - 简单记录事件\n    const onPageChange = (newPage) => {\n      console.log(`分页点击事件 - 切换到页面: ${newPage}`);\n      \n      // 检查页码范围\n      const maxPage = Math.ceil(totalCount.value / pageSize);\n      if (newPage > maxPage && maxPage > 0) {\n        console.warn(`请求的页码 ${newPage} 超出最大页码 ${maxPage}，自动调整为最大页码`);\n        setTimeout(() => {\n          page.value = maxPage;\n        }, 0);\n        return;\n      }\n    }\n    \n    // 监听页码变化，加载对应页面数据\n    watch(() => page.value, async (newPage, oldPage) => {\n      console.log(`页码变化: ${oldPage} -> ${newPage}`);\n      \n      if (newPage === oldPage) return;\n      \n      // 检查页码范围\n      const maxPage = Math.ceil(totalCount.value / pageSize);\n      if (newPage > maxPage && maxPage > 0) {\n        console.warn(`页码 ${newPage} 超出最大页码 ${maxPage}，自动调整为最大页码`);\n        setTimeout(() => {\n          page.value = maxPage;\n        }, 0);\n        return;\n      }\n      \n      try {\n        // 显示加载状态\n        createLoading.value = true;\n        \n        // 重置hasMore标志，确保可以加载数据\n        hasMore.value = true;\n        \n        // 获取新页面数据\n        await fetchDocuments(false, false, Date.now());\n        \n        // 滚动到列表顶部\n        const docSection = document.querySelector('.section');\n        if (docSection) {\n          docSection.scrollIntoView({ behavior: 'smooth' });\n        }\n      } catch (error) {\n        console.error('页码变化加载失败:', error);\n        ElMessage.error('加载数据失败，请重试');\n        \n        // 如果是404错误，自动返回有效页码\n        if (error.response && error.response.status === 404) {\n          console.warn('页码不存在，返回第一页');\n          setTimeout(() => {\n            page.value = 1;\n          }, 0);\n        }\n      } finally {\n        createLoading.value = false;\n      }\n    });\n\n    // 添加加载更多文档的方法\n    const loadMoreDocuments = () => {\n      if (loadingMore.value || !hasMore.value) return\n      page.value++\n      fetchDocuments(false, true)\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      console.log('SmartDoc组件mounted，加载数据');\n      \n      // 检查URL中是否有_refresh参数\n      const refreshParam = route.query._refresh;\n      if (refreshParam) {\n        console.log('检测到URL中的刷新参数:', refreshParam);\n        // 强制刷新，确保文档列表是最新的\n        refreshTrigger.value = Date.now();\n        // 设置一个超短延迟，确保DOM已经完全挂载\n        setTimeout(() => {\n          reloadAllData();\n        }, 10);\n      } else {\n        // 正常加载数据\n        reloadAllData();\n      }\n    })\n    \n    const handleImportWord = () => {\n      // 创建一个隐藏的文件上传input\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.accept = '.docx,.doc';\n      fileInput.style.display = 'none';\n      document.body.appendChild(fileInput);\n      \n      // 监听文件选择事件\n      fileInput.addEventListener('change', async (event) => {\n        if (event.target.files.length > 0) {\n          const file = event.target.files[0];\n          \n          // 显示加载中，使用全屏加载，禁止用户操作\n          const loadingInstance = ElLoading.service({\n            fullscreen: true,\n            text: '正在导入Word文档...',\n            background: 'rgba(255, 255, 255, 0.8)',\n            lock: true // 锁定屏幕，防止用户操作\n          });\n          \n          try {\n            // 创建FormData对象\n            const formData = new FormData();\n            formData.append('file', file);\n            \n            // 发送请求，调用API\n            const response = await importWordDocument(formData);\n            \n            if (response && response.id) {\n              // 先刷新文档首页\n              await reloadAllData();\n              \n              // 显示成功消息\n              ElMessage.success('Word文档导入成功');\n              \n              // 延迟一秒后跳转，确保用户看到刷新效果和成功提示\n              setTimeout(() => {\n                // 导入成功后跳转到文档详情页\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: response.id },\n                  query: { _refresh: Date.now() } // 添加刷新参数，确保详情页刷新\n                });\n              }, 1000);\n            } else {\n              ElMessage.error('导入失败：' + (response?.detail || '未知错误'));\n            }\n          } catch (error) {\n            console.error('导入Word文档出错:', error);\n            ElMessage.error('导入Word文档失败: ' + (error.message || '未知错误'));\n          } finally {\n            // 确保一定时间后关闭加载提示，防止界面卡死\n            setTimeout(() => {\n              loadingInstance.close();\n              document.body.removeChild(fileInput);\n            }, 500);\n          }\n        }\n      });\n      \n      // 触发文件选择对话框\n      fileInput.click();\n    }\n    \n    const removeSharedUser = (userIdToRemove) => {\n      console.log('尝试移除用户权限:', userIdToRemove);\n      const userToRemove = existingSharedUsers.value.find(u => u.user_id === userIdToRemove);\n      if (userToRemove) {\n        console.log('找到要移除权限的用户:', userToRemove);\n        // 将用户添加回可选列表\n        availableUsers.value.push({ \n          id: userToRemove.user_id, \n          username: userToRemove.username \n        });\n        \n        // 从已分享列表中移除\n        existingSharedUsers.value = existingSharedUsers.value.filter(u => u.user_id !== userIdToRemove);\n        console.log('移除后的已分享用户列表:', existingSharedUsers.value);\n        \n        // 显示提示\n        ElMessage({\n          message: `已移除用户 ${userToRemove.username} 的权限，点击分享按钮保存更改`,\n          type: 'warning'\n        });\n      } else {\n        console.warn('未找到要移除的用户:', userIdToRemove);\n      }\n    };\n    \n    return {\n      documents,\n      recentDocuments,\n      sharedDocuments,\n      documentCategories,\n      searchQuery,\n      searchCategory,\n      totalDocuments,\n      recentEditCount,\n      newDocumentDialogVisible,\n      shareDialogVisible,\n      deleteDialogVisible,\n      documentCreateType,\n      newDocumentForm,\n      aiDocumentForm,\n      blankFormRules,\n      aiFormRules,\n      blankFormRef,\n      aiFormRef,\n      selectedDocument,\n      selectedUsers,\n      selectedUsersWithPermissions,\n      availableUsers,\n      availableChatUsers,\n      createLoading,\n      shareLoading,\n      deleteLoading,\n      createNewDocument,\n      submitNewDocument,\n      openDocument,\n      editDocument,\n      submitEditDocument,\n      exportDocument,\n      shareDocument,\n      confirmShare,\n      deleteDocument,\n      confirmDelete,\n      viewAllDocuments,\n      formatDate,\n      categoryDialogVisible,\n      editingCategory,\n      categoryFormRef,\n      categoryLoading,\n      categoryFormRules,\n      editCategory,\n      resetCategoryForm,\n      submitCategory,\n      deleteCategory,\n      resetCategoryFilter,\n      selectCategory,\n      getSelectedCategoryColor,\n      getSelectedCategoryName,\n      manageCategories,\n      reloadAllData,\n      refreshData,\n      refreshTrigger,\n      hasMore,\n      loadingMore,\n      loadMoreDocuments,\n      exportToPdf,\n      exportToWord,\n      // 添加编辑对话框相关变量\n      editDialogVisible,\n      editDocumentForm,\n      editFormRef,\n      editLoading,\n      editFormRules,\n      // 添加分页处理方法\n      onPageChange,\n      page,\n      pageSize,\n      totalCount,\n      // 开发环境标志\n      $_isDev,\n      // 添加直接API调用函数\n      fetchDocuments,\n      // 添加分享方式相关变量\n      shareMode,\n      shareFormat,\n      selectedChatUsers,\n      handleImportWord,\n      getUsernameById,\n      handleUserSelectionChange,\n      handleShareModeChange,\n      getCurrentUserId,\n      existingSharedUsers,\n      removeSharedUser\n    }\n  }\n}\n</script>\n\n<style scoped>\n.smartdoc-home-container {\n  padding: 20px;\n  background-color: var(--el-bg-color-page);\n}\n\n/* 页面标题和操作区 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.page-description {\n  color: var(--el-text-color-secondary);\n  margin: 4px 0 0 0;\n}\n\n.right-section {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 240px;\n}\n\n/* 统计卡片 */\n.stats-cards {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  flex: 1;\n  transition: all 0.3s;\n  background-color: var(--el-bg-color-overlay);\n  border-color: var(--el-border-color-lighter);\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n.stat-content {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n}\n\n.stat-icon {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 16px;\n  font-size: 24px;\n  color: white;\n}\n\n.doc-icon {\n  background-color: #409EFF;\n}\n\n.edit-icon {\n  background-color: #67C23A;\n}\n\n.share-icon {\n  background-color: #E6A23C;\n}\n\n.stat-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: var(--el-text-color-primary);\n}\n\n.stat-label {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n}\n\n/* 区域通用样式 */\n.section {\n  margin-bottom: 32px;\n}\n\n/* 分类区域特殊样式 */\n.category-section {\n  margin-bottom: 16px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.filter-tag {\n  background-color: #f0f2f5;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #606266;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 文档卡片 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  transition: all 0.3s ease;\n  height: 230px; /* 设置固定高度 */\n  display: flex;\n  flex-direction: column;\n}\n\n.doc-card :deep(.el-card__body) {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 16px;\n  min-height: 0;\n}\n\n.doc-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n/* 鼠标悬浮时显示操作按钮 */\n.doc-card:hover .doc-actions {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.doc-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n}\n\n.doc-info {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.doc-type-tag {\n  font-size: 12px;\n  color: #606266;\n  background-color: #f5f7fa;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n}\n\n.doc-category-tag {\n  font-size: 12px;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n}\n\n/* 共享标签样式 */\n.doc-shared-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  color: #E6A23C;\n  background-color: #fdf6ec;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  border: 1px solid #f5dab1;\n}\n\n\n:deep([data-theme=\"dark\"]) .doc-shared-tag span,\n:deep(body.is-dark) .doc-shared-tag span,\n[data-theme=\"dark\"] .doc-shared-tag span,\nhtml[data-theme=\"dark\"] .doc-shared-tag span {\n  color: #000000 !important; \n  font-weight: 400; \n}\n\n.doc-title {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--el-text-color-primary);\n  line-height: 1.5;\n  height: calc(1.5em * 2); /* 固定两行高度 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n}\n\n.doc-preview {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n  line-height: 1.6;\n  height: calc(1.6em * 3); /* 固定三行高度 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n  margin-bottom: 12px;\n}\n\n.doc-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0 4px;\n  border-top: 1px solid var(--el-border-color-lighter);\n  margin-top: auto;\n  position: relative;\n  z-index: 2;\n}\n\n.doc-time {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-weight: 500;\n}\n\n.doc-actions {\n  display: flex;\n  gap: 8px;\n  position: relative;\n  opacity: 0;\n  transform: translateY(10px);\n  transition: all 0.2s ease-in-out;\n}\n\n.new-doc-card {\n  border: 2px dashed var(--el-border-color);\n  background-color: var(--el-fill-color-light);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.new-doc-card:hover {\n  border-color: var(--el-color-primary);\n  color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.new-doc-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  color: var(--el-text-color-secondary);\n}\n\n.new-doc-content .el-icon {\n  font-size: 32px;\n}\n\n/* 分类卡片 */\n.category-cards {\n  display: flex;\n  gap: 16px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n}\n\n.category-card {\n  min-width: 180px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 8px;\n  padding: 12px 16px;\n  border: 2px solid transparent;\n  position: relative;\n  overflow: hidden;\n  background-color: var(--el-fill-color-light);\n}\n\n.category-card:hover {\n  transform: translateY(-4px);\n  box-shadow: var(--el-box-shadow-light);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-active {\n  transform: translateY(-2px);\n  box-shadow: var(--el-box-shadow-light);\n  border-color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-selected-indicator {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background-color: var(--el-color-primary);\n  transition: all 0.3s;\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  color: white;\n  margin-right: 12px;\n  transition: all 0.3s;\n}\n\n.category-active .category-icon {\n  transform: scale(1.1);\n}\n\n.category-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.category-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 15px;\n  font-weight: 500;\n  color: var(--el-text-color-primary);\n  transition: all 0.3s;\n}\n\n.category-active .category-info h4 {\n  color: var(--el-color-primary);\n  font-weight: 600;\n}\n\n.category-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n.form-tip {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 4px;\n}\n\n.category-management {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.category-list {\n  margin-bottom: 20px;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.color-preview {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n.color-value {\n  margin-left: 12px;\n  color: var(--el-text-color-regular);\n}\n\n.category-select {\n  width: 200px;\n}\n\n.doc-menu {\n  color: var(--el-text-color-secondary);\n  cursor: pointer;\n  position: relative;\n}\n\n/* 筛选状态栏样式 */\n.filter-status-bar {\n  background-color: var(--el-color-primary-light-9);\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  animation: slideDown 0.3s ease-in-out;\n  box-shadow: var(--el-box-shadow-light);\n  border-left: 4px solid var(--el-color-primary);\n  position: relative;\n  overflow: hidden;\n}\n\n/* 确保深色模式下的筛选状态栏有足够的对比度 */\n:deep(.dark .filter-status-bar) {\n  background-color: var(--el-color-primary-dark-2);\n  border-left-color: var(--el-color-primary-light-3);\n}\n\n.filter-bar-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.filter-title {\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--el-text-color-primary);\n}\n\n.filter-category {\n  padding: 4px 10px;\n  border-radius: 4px;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.filter-actions {\n  display: flex;\n  align-items: center;\n}\n\n.section {\n  margin-bottom: 32px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加动画 */\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.empty-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.loading-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 20;\n}\n\n.pagination-container :deep(.el-pagination) {\n  user-select: none;\n}\n\n.pagination-container :deep(.el-pagination button),\n.pagination-container :deep(.el-pagination .el-pager li) {\n  cursor: pointer !important;\n  z-index: 30;\n  position: relative;\n}\n\n.pagination-debug {\n  margin-top: 8px;\n  color: #909399;\n  font-size: 12px;\n  background-color: #f5f7fa;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n/* 添加以下CSS，确保按钮区域独立可点击 */\n.btn-container {\n  position: relative;\n  z-index: 5;\n}\n\n.doc-actions .el-button {\n  position: relative;\n  z-index: 5;\n}\n\n/* 确保下拉菜单显示在最上层 */\n:deep(.el-dropdown-menu) {\n  z-index: 3000 !important;\n}\n\n/* 调整卡片内容区域的点击行为 */\n.card-content-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n  min-height: 0;\n}\n\n.filter-controls {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加文档卡片的动画效果 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.fadeIn {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 临时导出容器样式 */\n.temp-export-container {\n  position: fixed;\n  top: -9999px;\n  left: -9999px;\n  width: 210mm; /* A4宽度 */\n  background: var(--el-bg-color);\n  padding: 20px;\n  z-index: -1;\n  font-family: SimSun, Arial, sans-serif;\n  font-size: 12pt;\n  line-height: 1.5;\n}\n\n.temp-export-container img {\n  max-width: 100%;\n  height: auto;\n}\n\n.user-permissions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  margin-top: 8px;\n}\n\n.user-permission-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #eaeaea;\n}\n\n.user-name {\n  min-width: 60px;\n  margin-right: 12px;\n  font-weight: 500;\n}\n\n.permission-info {\n  display: flex;\n  align-items: center;\n}\n\n/* 确保表单提示文本样式正确 */\n.form-tip {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 4px;\n}\n\n.dialog-tabs {\n  position: absolute;\n  top: 55px; /* Adjust this value to position the tabs correctly */\n  left: 20px;\n}\n</style> \n\n<style>\n/* --- 深色模式分享弹窗样式 --- */\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog {\n  background-color: #2c2c2c;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__header {\n  border-bottom: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__title {\n  color: #e0e0e0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__body {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog p {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-form-item__label {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__label {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__input .el-radio__inner {\n    background-color: transparent;\n    border-color: #8c8c8c;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__input.is-checked .el-radio__inner {\n    border-color: var(--el-color-primary);\n    background-color: var(--el-color-primary);\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item {\n  background-color: #383838;\n  border-color: #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .user-name {\n  color: #e0e0e0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-tag {\n    background-color: #4f4f4f;\n    border-color: #6a6a6a;\n    color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .el-button--danger.is-link {\n  color: #ff7b7b;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .el-button--danger.is-link:hover {\n  color: #ff5252;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .form-tip {\n  color: #a0a0a0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-select .el-input__wrapper {\n  background-color: #383838;\n  box-shadow: none;\n  border: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-select .el-input__inner {\n  color: #e0e0e0;\n}\n\n/* Select dropdown panel */\nhtml[data-theme=\"dark\"] .share-dialog-popper.el-popper {\n  background-color: #2c2c2c;\n  border: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item.is-selected {\n  color: var(--el-color-primary);\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item.hover,\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item:hover {\n  background-color: #383838;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-popper__arrow::before {\n  background: #2c2c2c;\n  border-right-color: #4f4f4f !important;\n  border-bottom-color: #4f4f4f !important;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}