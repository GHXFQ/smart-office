{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue","mtime":1749994859364},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","nextTick","watch","ElMessage","dayjs","buildKnowledgeBase","getKnowledgeBaseStatus","Loading","CircleCheckFilled","CircleCloseFilled","name","components","props","modelValue","type","Boolean","default","emits","setup","emit","visible","get","set","val","buildingStatus","buildingProgress","buildingMessage","buildingOutput","fullOutput","buildingStats","pollTimer","buildingRetryCount","clearPollTimer","clearTimeout","console","log","startBuild","value","response","setTimeout","pollBuildStatus","error","_error$response","_error$response$data","data","message","JSON","stringify","statusData","status","progress","full_output","graphrag_output","outputElem","document","querySelector","scrollTop","scrollHeight","startTime","started_at","Date","endTime","finished_at","duration","calculateDuration","totalDocs","total_docs","totalChunks","total_chunks","success","detail","error_detail","pollInterval","warn","start","end","diff","Math","abs","minutes","floor","seconds","toFixed","formatBuildTime","dateObj","format","close","newVal"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\components\\KnowledgeBuilder.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-builder\">\n    <!-- 知识库构建对话框 -->\n    <el-dialog\n      v-model=\"visible\"\n      title=\"构建知识库\"\n      width=\"650px\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"buildingStatus !== 'processing'\"\n      class=\"builder-dialog\"\n    >\n      <div class=\"building-status\" :key=\"buildingStatus\">\n        <div class=\"status-icon\">\n          <el-icon v-if=\"buildingStatus === 'processing'\" class=\"spinning\"><Loading /></el-icon>\n          <el-icon v-else-if=\"buildingStatus === 'completed'\" class=\"success\"><CircleCheckFilled /></el-icon>\n          <el-icon v-else-if=\"buildingStatus === 'failed'\" class=\"error\"><CircleCloseFilled /></el-icon>\n        </div>\n        <div class=\"status-text\">\n          <h3>{{ buildingStatus === 'pending' ? '准备构建知识库' : \n                buildingStatus === 'processing' ? '正在构建知识库' : \n                buildingStatus === 'completed' ? '知识库构建完成' : '知识库构建失败' }}</h3>\n          <p>{{ buildingMessage }}</p>\n          \n          <div v-if=\"buildingStatus === 'processing'\" class=\"progress-container\">\n            <el-progress :percentage=\"buildingProgress\" :format=\"p => `${p}%`\"></el-progress>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'pending'\" class=\"info-container\">\n            <el-alert\n              title=\"构建知识库将处理所有已上传的文档，并将它们整合到一个统一的知识库中\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>这个过程可能需要一些时间，取决于文档数量和大小。</p>\n              <p>构建完成后，您将能够使用智能问答功能对知识库进行提问。</p>\n            </el-alert>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'completed'\" class=\"success-container\">\n            <el-alert\n              title=\"知识库已成功构建！\"\n              type=\"success\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>所有文档已被处理并整合到知识库中，您现在可以使用智能问答功能。</p>\n            </el-alert>\n          </div>\n          \n          <div v-if=\"buildingStatus === 'failed'\" class=\"error-container\">\n            <el-alert\n              title=\"知识库构建失败\"\n              type=\"error\"\n              :closable=\"false\"\n              show-icon\n            >\n              <p>{{ buildingMessage }}</p>\n              <p>请检查日志或联系管理员解决问题。</p>\n            </el-alert>\n          </div>\n        </div>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button v-if=\"buildingStatus !== 'processing'\" @click=\"close\">关闭</el-button>\n          <el-button \n            v-if=\"buildingStatus === 'pending'\" \n            type=\"primary\" \n            @click=\"startBuild\">开始构建</el-button>\n          <el-button \n            v-if=\"buildingStatus === 'failed'\" \n            type=\"primary\" \n            @click=\"startBuild\">重试</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount, nextTick, watch } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport dayjs from 'dayjs'\nimport { buildKnowledgeBase, getKnowledgeBaseStatus } from '@/api/knowledge'\nimport { \n  Loading, \n  CircleCheckFilled, \n  CircleCloseFilled \n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'KnowledgeBuilder',\n  components: {\n    Loading,\n    CircleCheckFilled,\n    CircleCloseFilled\n  },\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'build-completed', 'build-failed'],\n  setup(props, { emit }) {\n    // 构建相关状态\n    const visible = computed({\n      get: () => props.modelValue,\n      set: (val) => emit('update:modelValue', val)\n    })\n    const buildingStatus = ref('pending') // pending, processing, completed, failed\n    const buildingProgress = ref(0)\n    const buildingMessage = ref('正在初始化...') // 初始化消息\n    const buildingOutput = ref('') // GraphRAG命令输出\n    const fullOutput = ref('') // 完整GraphRAG命令输出 (备用)\n    const buildingStats = ref(null) // 构建统计信息\n    \n    // 定时器ID\n    let pollTimer = null\n    // 重试计数器\n    let buildingRetryCount = 0\n\n    // 清除轮询定时器\n    const clearPollTimer = () => {\n      if (pollTimer) {\n        clearTimeout(pollTimer)\n        pollTimer = null\n        console.log('Polling timer cleared.');\n      }\n    }\n\n    // 启动知识库构建\n    const startBuild = async () => {\n      console.log('startBuild called');\n      try {\n        buildingStatus.value = 'processing'\n        buildingMessage.value = '正在启动知识库构建，请稍候...' // 更明确的启动消息\n        buildingProgress.value = 0\n        buildingOutput.value = '' // 清空旧输出\n        fullOutput.value = ''   // 清空旧输出\n        buildingStats.value = null\n        buildingRetryCount = 0 // 重置重试计数器\n        \n        clearPollTimer(); // 开始构建前先清除旧的定时器\n        console.log('Calling buildKnowledgeBase API...');\n        const response = await buildKnowledgeBase()\n        console.log('buildKnowledgeBase API response:', response)\n        \n        // API调用成功后立即开始轮询，初始延迟短一点\n        pollTimer = setTimeout(pollBuildStatus, 100); \n        console.log('Initial pollBuildStatus scheduled.');\n\n      } catch (error) {\n        console.error('启动知识库构建时出错:', error)\n        buildingStatus.value = 'failed'\n        buildingMessage.value = error.response?.data?.message || error.message || '启动构建失败'\n        emit('build-failed', error)\n        clearPollTimer();\n      }\n    }\n\n    // 轮询构建状态\n    const pollBuildStatus = async () => {\n      console.log('pollBuildStatus called. Current status:', buildingStatus.value);\n      // 如果已经是完成或失败状态，或者对话框不可见，则不应再轮询\n      if ((buildingStatus.value === 'completed' || buildingStatus.value === 'failed') && pollTimer) {\n          console.log('Build already completed or failed, clearing timer from pollBuildStatus.')\n          clearPollTimer();\n          return;\n      }\n      if (!visible.value && pollTimer) {\n          console.log('Dialog not visible, clearing timer from pollBuildStatus.');\n          clearPollTimer();\n          return;\n      }\n\n      try {\n        console.log('Calling getKnowledgeBaseStatus API...');\n        const response = await getKnowledgeBaseStatus()\n        console.log('getKnowledgeBaseStatus API response:', JSON.stringify(response, null, 2));\n\n        // 直接从响应中获取状态数据，不额外嵌套data属性\n        const statusData = response || {};\n        \n        if (statusData && typeof statusData === 'object') { \n          console.log('Status object received:', statusData);\n          \n          // 获取状态，确保使用正确的字段名\n          const status = statusData.status || 'pending';\n          buildingStatus.value = status;\n          buildingMessage.value = statusData.message || (status === 'processing' ? '正在处理中，请稍候...' : '等待状态更新...');\n          buildingProgress.value = statusData.progress || buildingProgress.value;\n          \n          console.log('Updated frontend status:', buildingStatus.value, 'Progress:', buildingProgress.value, 'Message:', buildingMessage.value);\n\n          // 处理GraphRAG命令输出\n          if (statusData.full_output) {\n            buildingOutput.value = statusData.full_output;\n            fullOutput.value = statusData.full_output;\n          } else if (statusData.graphrag_output) {\n            buildingOutput.value = statusData.graphrag_output;\n          }\n          \n          // 滚动输出框到底部\n          nextTick(() => {\n            const outputElem = document.querySelector('.output-content pre')\n            if (outputElem) {\n              outputElem.scrollTop = outputElem.scrollHeight\n            }\n          });\n          \n          // 根据状态决定下一步操作\n          if (status === 'completed' || status === 'failed') {\n            console.log(`Build ended with status: ${status}. Stopping poll.`);\n            clearPollTimer();\n\n            if (status === 'completed') {\n              buildingProgress.value = 100; // 确保完成时进度为100%\n              // 构建完成，处理统计数据\n              const startTime = statusData.started_at ? new Date(statusData.started_at) : null;\n              const endTime = statusData.finished_at ? new Date(statusData.finished_at) : new Date();\n            \n              buildingStats.value = {\n                startTime: startTime,\n                endTime: endTime,\n                duration: startTime && endTime ? calculateDuration(startTime, endTime) : '未知',\n                totalDocs: statusData.total_docs || 0,\n                totalChunks: statusData.total_chunks || 0\n              };\n            \n              ElMessage.success(statusData.message || '知识库构建完成！');\n              emit('build-completed');\n            } else { // failed\n              ElMessage.error(statusData.message || '知识库构建失败，请查看输出或日志。');\n              emit('build-failed', { message: statusData.message, detail: statusData.error_detail });\n            }\n          } else if (status === 'processing') {\n            const pollInterval = 1000; // 统一轮询间隔为1秒\n            console.log(`Status is 'processing'. Scheduling next poll in ${pollInterval}ms.`);\n            clearPollTimer(); // 清除旧的，避免重复\n            pollTimer = setTimeout(pollBuildStatus, pollInterval);\n          } else if (status === 'pending') {\n            // 对于pending状态，也需要继续轮询，但可以间隔长一些\n            const pollInterval = 2000;\n            console.log(`Status is 'pending'. Scheduling next poll in ${pollInterval}ms.`);\n            clearPollTimer();\n            pollTimer = setTimeout(pollBuildStatus, pollInterval);\n          } else {\n            console.warn('Unknown status from backend:', status, 'Stopping poll.');\n            clearPollTimer(); // 未知状态，停止轮询以防意外\n          }\n\n        } else {\n          console.warn('Invalid or empty response object from getKnowledgeBaseStatus. Response:', JSON.stringify(response));\n          buildingMessage.value = '获取状态响应格式无效...';\n          \n          if (buildingStatus.value === 'processing') {\n             const pollInterval = 3000; \n             clearPollTimer();\n             pollTimer = setTimeout(pollBuildStatus, pollInterval);\n          } else {\n            buildingStatus.value = 'failed';\n            buildingMessage.value = '获取状态失败，响应无效。';\n            emit('build-failed', { message: '获取状态失败，响应无效。'});\n            clearPollTimer();\n          }\n        }\n      } catch (error) {\n        console.error('获取构建状态时出错 (pollBuildStatus catch):', error)\n        buildingMessage.value = '获取构建状态失败: ' + (error.message || '未知错误') + '. 将尝试再次轮询。'\n        \n        // 在错误情况下，如果当前是processing状态，尝试再次轮询几次\n        if (buildingStatus.value === 'processing') {\n            // 增加重试计数器，避免无限轮询\n            buildingRetryCount = (buildingRetryCount || 0) + 1;\n            \n            if (buildingRetryCount <= 5) { // 最多重试5次\n                const pollInterval = 3000; // 错误后延长轮询间隔\n                clearPollTimer();\n                pollTimer = setTimeout(pollBuildStatus, pollInterval);\n                console.log(`轮询错误，第${buildingRetryCount}次重试，${pollInterval}ms后重试`);\n            } else {\n                console.error('轮询重试次数已达上限，停止轮询');\n                buildingStatus.value = 'failed';\n                buildingMessage.value = '获取构建状态失败，已达重试上限。';\n                emit('build-failed', error);\n                clearPollTimer();\n            }\n        } else {\n            buildingStatus.value = 'failed';\n            buildingMessage.value = '获取构建状态失败。';\n            emit('build-failed', error);\n            clearPollTimer();\n        }\n      }\n    }\n    \n    // 计算持续时间\n    const calculateDuration = (start, end) => {\n      const diff = Math.abs(end - start)\n      const minutes = Math.floor(diff / 60000)\n      const seconds = ((diff % 60000) / 1000).toFixed(0)\n      return `${minutes}分${seconds}秒`\n    }\n    \n    // 格式化构建时间\n    const formatBuildTime = (dateObj) => {\n      if (!dateObj) return '未知'\n      return dayjs(dateObj).format('YYYY-MM-DD HH:mm:ss')\n    }\n    \n    // 关闭对话框\n    const close = () => {\n      visible.value = false\n    }\n    \n    // 组件挂载时\n    onMounted(() => {\n      console.log('KnowledgeBuilder onMounted. Initial modelValue:', props.modelValue);\n      // 不自动开始轮询，等待startBuild被调用\n    })\n    \n    // 组件销毁前清理\n    onBeforeUnmount(() => {\n      console.log('KnowledgeBuilder onBeforeUnmount. Clearing poll timer.');\n      clearPollTimer()\n    })\n\n    watch(visible, (newVal) => {\n      if (newVal) {\n        // 当对话框打开时\n        console.log('Dialog became visible. Current status:', buildingStatus.value);\n        if (buildingStatus.value !== 'processing') {\n          // 如果不是正在处理中 (例如是 completed, failed, 或初始的 pending)，\n          // 则重置为初始待构建状态，以便用户可以开始新的构建。\n          console.log('Resetting status to pending for new build session.');\n          buildingStatus.value = 'pending';\n          buildingMessage.value = '准备开始新的知识库构建。'; // 或者更合适的初始消息\n          buildingProgress.value = 0;\n          buildingOutput.value = '';\n          fullOutput.value = '';\n          buildingStats.value = null;\n          buildingRetryCount = 0; // 重置重试计数器\n          clearPollTimer(); // 确保没有意外的轮询\n        }\n        // 如果是 processing，则什么都不做，让它继续处理或轮询\n      } else {\n        // 当对话框关闭时\n        console.log('Dialog closed. Current status:', buildingStatus.value);\n        // 如果正在处理中，用户关闭了对话框，最好停止轮询，避免后台继续请求\n        if (buildingStatus.value === 'processing') {\n            console.log('Dialog closed during processing, stopping poll timer.');\n            clearPollTimer();\n        }\n      }\n    });\n\n    return {\n      visible,\n      buildingStatus,\n      buildingProgress,\n      buildingMessage,\n      buildingOutput,\n      fullOutput,\n      buildingStats,\n      startBuild,\n      formatBuildTime,\n      close\n    }\n  }\n}\n</script>\n\n<style scoped>\n.builder-dialog {\n  max-width: 90vw;\n}\n\n.building-status {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.status-icon {\n  margin-bottom: 20px;\n  font-size: 48px;\n  display: flex;\n  justify-content: center;\n  color: #6c757d;\n}\n\n.status-icon .spinning {\n  animation: spin 2s linear infinite;\n}\n\n.status-icon .success {\n  color: #67C23A;\n}\n\n.status-icon .error {\n  color: #F56C6C;\n}\n\n.status-text {\n  text-align: center;\n  width: 100%;\n}\n\n.status-text h3 {\n  margin-bottom: 15px;\n  font-size: 20px;\n  font-weight: 600;\n}\n\n.status-text p {\n  margin: 5px 0;\n}\n\n.progress-container {\n  margin: 20px 0;\n  width: 100%;\n}\n\n.info-container, .success-container, .error-container {\n  margin: 20px 0;\n  width: 100%;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n</style> "],"mappings":"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","ignoreList":[]}]}