{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\api\\user.js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\api\\user.js","mtime":1747456164203},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["request","userApi","getUserProfile","console","log","response","get","success","data","code","id","error","message","updateUserProfile","profileData","userId","userJson","localStorage","getItem","user","JSON","parse","cleanedData","username","name","email","phone","position","department","office","employee_id","manager","bio","stringify","put","errorMessage","errorFields","status","detail","hasFields","Object","entries","forEach","field","messages","Array","isArray","length","includes","fieldErrors","map","msgs","join","fields","updateUserAvatar","formData","Error","post","headers","changePassword","passwordData","old_password","new_password","confirm_password","requestData","isValidationResult","toLowerCase","isOldPasswordError","non_field_errors","newPasswordErrors","err","errorDetails","fieldName","push","e"],"sources":["C:/Users/18083/Desktop/CCIT/office/smart-office/frontend/src/api/user.js"],"sourcesContent":["import request from '@/utils/request';\n\n/**\n * 用户API - 提供与用户相关的接口调用\n */\nconst userApi = {\n  /**\n   * 获取当前用户信息\n   */\n  async getUserProfile() {\n    console.log('调用getUserProfile API');\n    try {\n    const response = await request.get('/api/auth/users/me/');\n      console.log('getUserProfile API响应:', response);\n      \n      // 检查响应数据结构\n      if (response && response.success && response.data) {\n        // 标准格式：{success: true, data: {...}}\n    return response;\n      } else if (response && response.code === 200 && response.data) {\n        // 另一种格式：{code: 200, data: {...}}\n        return {\n          success: true,\n          data: response.data\n        };\n      } else if (response && typeof response === 'object' && response.id) {\n        // 后端直接返回用户对象，需要包装成统一格式\n        return {\n          success: true,\n          data: response\n        };\n      } else {\n        console.error('getUserProfile API响应格式未识别:', response);\n        return {\n          success: false,\n          message: '用户信息响应格式错误',\n          error: response\n        };\n      }\n    } catch (error) {\n      console.error('getUserProfile API错误:', error);\n      return {\n        success: false,\n        message: error.message || '获取用户信息失败',\n        error: error\n      };\n    }\n  },\n\n  /**\n   * 更新用户个人资料\n   * @param {Object} profileData - 用户个人资料数据\n   */\n  async updateUserProfile(profileData) {\n    let userId = profileData.id;\n    if (!userId) {\n      const userJson = localStorage.getItem('user');\n      if (userJson) {\n        const user = JSON.parse(userJson);\n        userId = user.id;\n      }\n    }\n    \n    if (!userId) {\n      return {\n        success: false,\n        message: '用户ID不存在，无法更新个人信息'\n      };\n    }\n    \n    const cleanedData = {\n      username: profileData.username || '',\n      name: profileData.name || '',\n      email: profileData.email || '',\n      phone: profileData.phone || '',\n      position: profileData.position || '',\n      department: profileData.department || '',\n      office: profileData.office || '',\n      employee_id: profileData.employee_id || '',\n      manager: profileData.manager || '',\n      bio: profileData.bio || ''\n    };\n    \n    if (!cleanedData.username) {\n      const userJson = localStorage.getItem('user');\n      if (userJson) {\n        const user = JSON.parse(userJson);\n        if (user.username) {\n          cleanedData.username = user.username;\n        }\n      }\n    }\n    \n    console.log(`正在发送PUT请求到: /api/auth/users/${userId}/`);\n    console.log('发送的数据:', JSON.stringify(cleanedData));\n    \n    try {\n      const response = await request.put(`/api/auth/users/${userId}/`, cleanedData);\n      \n      return {\n        success: true,\n        message: '个人信息更新成功',\n        data: response.data || response\n      };\n    } catch (error) {\n      console.error('API请求失败:', error);\n      \n      let errorMessage = '更新用户信息失败，请稍后重试';\n      let errorFields = null;\n      \n      if (error.response) {\n        console.error('状态码:', error.response.status);\n        console.error('响应数据:', error.response.data);\n        \n        if (error.response.data) {\n          if (typeof error.response.data === 'string') {\n            errorMessage = error.response.data;\n          } else if (error.response.data.message) {\n            errorMessage = error.response.data.message;\n          } else if (error.response.data.detail) {\n            errorMessage = error.response.data.detail;\n          } else if (error.response.data.error) {\n            errorMessage = error.response.data.error;\n          } else {\n            errorFields = {};\n            let hasFields = false;\n            \n            Object.entries(error.response.data).forEach(([field, messages]) => {\n              if (Array.isArray(messages) && messages.length > 0) {\n                errorFields[field] = messages;\n                hasFields = true;\n                \n                if (field === 'username' && messages.includes('用户名已存在')) {\n                  errorMessage = '该用户名已被使用，请选择其他用户名';\n                } else if (field === 'email' && messages.includes('邮箱已存在')) {\n                  errorMessage = '该邮箱已被注册，请使用其他邮箱';\n                }\n              }\n            });\n            \n            if (hasFields) {\n              const fieldErrors = Object.entries(errorFields)\n                .map(([field, msgs]) => `${field}: ${msgs.join(', ')}`)\n                .join('; ');\n              \n              if (fieldErrors) {\n                errorMessage = fieldErrors;\n              }\n            }\n          }\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      return {\n        success: false,\n        message: errorMessage,\n        fields: errorFields,\n        error: error\n      };\n    }\n  },\n\n  /**\n   * 更新用户头像\n   * @param {FormData} formData - 包含头像文件的表单数据\n   */\n  async updateUserAvatar(formData) {\n    const userId = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).id : null;\n    if (!userId) {\n      throw new Error('用户未登录');\n    }\n    const response = await request.post(`/api/auth/users/${userId}/avatar/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response;\n  },\n\n  /**\n   * 修改用户密码\n   * @param {Object} passwordData - 包含旧密码和新密码的对象\n   */\n  async changePassword(passwordData) {\n    const { old_password, new_password, confirm_password } = passwordData;\n    \n    // 使用后端实际期望的字段名\n    const requestData = {\n      old_password,\n      new_password,\n      confirm_password  // 确认密码需与新密码相同\n    };\n    \n    console.log('发送密码修改请求');\n    \n    try {\n      const response = await request.put('/api/auth/users/change_password/', requestData);\n      console.log('密码修改成功');\n      return {\n        success: true,\n        message: '密码修改成功',\n        data: response\n      };\n    } catch (error) {\n      // 检查是否是预期的密码验证结果\n      if (error.isValidationResult) {\n        console.log('密码验证：当前密码不正确');\n        return {\n          success: false,\n          message: '',\n          fieldErrors: error.fieldErrors || error.data\n        };\n      }\n      \n      // 正常错误处理\n      console.error('密码修改失败');\n      \n      // 详细记录错误信息\n      if (error.response) {\n        console.error('错误状态码:', error.response.status);\n        \n        const data = error.response.data;\n        \n        // 检查是否包含成功消息\n        if (data && data.message && (\n            data.message.toLowerCase().includes('success') || \n            data.message.toLowerCase().includes('successfully')\n          )) {\n          console.log('实际上密码修改成功了，返回成功消息');\n          return {\n            success: true,\n            message: '密码修改成功',\n            data: data\n          };\n        }\n        \n        // 检查是否是当前密码不正确的错误\n        const isOldPasswordError = data && \n          data.old_password && \n          Array.isArray(data.old_password) && \n          data.old_password.includes(\"Incorrect password.\");\n        \n        // 提取详细错误信息\n        let errorMessage = '密码修改失败，请检查您输入的当前密码是否正确';\n        \n        if (typeof data === 'string') {\n          errorMessage = data;\n        } else if (data) {\n          if (data.message) {\n            errorMessage = data.message;\n          } else if (data.detail) {\n            errorMessage = data.detail;\n          } else if (data.non_field_errors && Array.isArray(data.non_field_errors)) {\n            errorMessage = data.non_field_errors.join(', ');\n          } else if (data.old_password && Array.isArray(data.old_password)) {\n            // 翻译常见的密码错误消息\n            if (data.old_password.includes(\"Incorrect password.\")) {\n              errorMessage = \"当前密码不正确，请重新输入\";\n            } else {\n              errorMessage = `当前密码: ${data.old_password.join(', ')}`;\n            }\n          } else if (data.new_password && Array.isArray(data.new_password)) {\n            // 翻译常见的新密码错误消息\n            const newPasswordErrors = data.new_password.map(err => {\n              if (err.includes(\"too short\")) return \"新密码太短\";\n              if (err.includes(\"too common\")) return \"新密码太简单\";\n              if (err.includes(\"entirely numeric\")) return \"新密码不能全为数字\";\n              if (err.includes(\"similar to\")) return \"新密码与用户信息过于相似\";\n              return err;\n            });\n            errorMessage = `新密码问题: ${newPasswordErrors.join(', ')}`;\n          } else {\n            // 尝试提取错误字段信息\n            const errorDetails = [];\n            try {\n              Object.entries(data).forEach(([field, messages]) => {\n                // 字段名称翻译\n                let fieldName = field;\n                if (field === 'old_password') fieldName = '当前密码';\n                if (field === 'new_password') fieldName = '新密码';\n                if (field === 'confirm_password') fieldName = '确认密码';\n                \n                if (Array.isArray(messages) && messages.length > 0) {\n                  errorDetails.push(`${fieldName}: ${messages.join(', ')}`);\n                } else if (typeof messages === 'string') {\n                  errorDetails.push(`${fieldName}: ${messages}`);\n                } else if (messages !== null && typeof messages === 'object') {\n                  errorDetails.push(`${fieldName}: ${JSON.stringify(messages)}`);\n                }\n              });\n            } catch (e) {\n              console.error('解析错误字段时出错:', e);\n            }\n            \n            if (errorDetails.length > 0) {\n              errorMessage = errorDetails.join('; ');\n            }\n          }\n        }\n        \n        return {\n          success: false,\n          message: isOldPasswordError ? '' : errorMessage, // 当密码错误时不设置通用错误消息\n          fieldErrors: data  // 返回原始字段错误，便于界面处理\n        };\n      }\n      \n      return {\n        success: false,\n        message: error.message || '密码修改失败，请重试'\n      };\n    }\n  }\n};\n\nexport default userApi; "],"mappings":"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","ignoreList":[]}]}