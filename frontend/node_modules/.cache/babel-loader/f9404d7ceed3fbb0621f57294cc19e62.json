{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue?vue&type=template&id=3005a10c&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue","mtime":1750938394745},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","style","backgroundColor","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_toDisplayString","$setup","refreshTrigger","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_el_select","searchCategory","$event","placeholder","onChange","_cache","selectCategory","_component_el_option","label","value","_Fragment","_renderList","documentCategories","category","_createBlock","key","id","name","toString","_component_el_input","searchQuery","clearable","prefix","_withCtx","_component_el_icon","_component_Search","_component_el_button","type","onClick","handleImportWord","_component_Upload","createNewDocument","_component_Plus","_hoisted_6","_component_el_card","shadow","_hoisted_7","_hoisted_8","_component_Document","_hoisted_9","_hoisted_10","totalDocuments","_hoisted_11","_hoisted_12","_component_EditPen","_hoisted_13","_hoisted_14","recentEditCount","_hoisted_15","_hoisted_16","_component_Share","_hoisted_17","_hoisted_18","sharedDocuments","length","_hoisted_19","_hoisted_20","_hoisted_21","_normalizeStyle","getSelectedCategoryColor","getSelectedCategoryName","_hoisted_22","link","resetCategoryFilter","_component_Close","_hoisted_23","_hoisted_24","_hoisted_25","text","manageCategories","_hoisted_26","_normalizeClass","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","color","_component_Folder","_hoisted_32","_hoisted_33","document_count","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","fetchDocuments","_hoisted_38","documents","doc","openDocument","_hoisted_39","_hoisted_40","_hoisted_41","_withModifiers","_component_el_dropdown","trigger","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","editDocument","exportDocument","shareDocument","divided","deleteDocument","_component_More","_hoisted_42","title","_hoisted_43","innerHTML","preview","_hoisted_45","_hoisted_46","_component_Clock","formatDate","update_time","_hoisted_47","_component_el_tooltip","content","placement","circle","size","args","_hoisted_48","totalCount","_hoisted_49","_component_el_pagination","background","layout","total","pageSize","page","onCurrentChange","onPageChange","$_isDev","_hoisted_50","Math","ceil","_hoisted_51","_hoisted_52","_hoisted_53","viewAllDocuments","_hoisted_54","recentDocuments","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_component_el_dialog","newDocumentDialogVisible","width","footer","_hoisted_66","submitNewDocument","loading","createLoading","_component_el_tabs","documentCreateType","_component_el_tab_pane","_component_el_form","model","newDocumentForm","rules","blankFormRules","ref","_component_el_form_item","prop","aiDocumentForm","aiFormRules","requirements","rows","shareDialogVisible","_hoisted_68","confirmShare","shareLoading","selectedDocument","_hoisted_67","_component_el_radio_group","shareMethod","_component_el_radio","selectedUsers","multiple","availableUsers","user","username","shareFormat","selectedChatUsers","deleteDialogVisible","_hoisted_70","confirmDelete","deleteLoading","_hoisted_69","categoryDialogVisible","_hoisted_71","_hoisted_72","_component_el_table","data","_component_el_table_column","default","scope","row","editCategory","deleteCategory","disabled","_component_el_divider","_hoisted_73","editingCategory","categoryFormRules","_component_el_color_picker","_hoisted_74","description","submitCategory","categoryLoading","resetCategoryForm","editDialogVisible","_hoisted_75","submitEditDocument","editLoading","editDocumentForm","editFormRules","category_id"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"smartdoc-home-container\">\n    <!-- 添加隐藏的刷新触发元素，用于强制组件刷新 -->\n    <div style=\"display: none;\">{{ refreshTrigger }}</div>\n    \n    <!-- 页面标题和操作区 -->\n    <div class=\"page-header\">\n      <div class=\"left-section\">\n        <h2 class=\"page-title\">智能文档</h2>\n        <p class=\"page-description\">创建、编辑和管理您的智能文档</p>\n        </div>\n      <div class=\"right-section\">\n        <div class=\"search-controls\">\n          <el-select \n            v-model=\"searchCategory\" \n            placeholder=\"选择分类\" \n            @change=\"selectCategory(searchCategory)\" \n            class=\"category-select\"\n          >\n            <el-option label=\"全部分类\" value=\"all\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id.toString()\"\n            />\n          </el-select>\n          \n          <el-input\n            placeholder=\"搜索文档...\"\n            v-model=\"searchQuery\"\n          class=\"search-input\"\n            clearable\n          >\n            <template #prefix>\n              <el-icon><Search /></el-icon>\n            </template>\n          </el-input>\n        </div>\n        \n        <el-button type=\"success\" @click=\"handleImportWord\" style=\"margin-right: 10px;\">\n          <el-icon><Upload /></el-icon> 导入Word\n        </el-button>\n        <el-button type=\"primary\" @click=\"createNewDocument\">\n          <el-icon><Plus /></el-icon> 新建文档\n        </el-button>\n          </div>\n        </div>\n\n    <!-- 文档概览统计卡片 -->\n    <div class=\"stats-cards\">\n      <el-card class=\"stat-card\" shadow=\"hover\" @click=\"selectCategory('all')\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon doc-icon\">\n                <el-icon><Document /></el-icon>\n              </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ totalDocuments }}</div>\n            <div class=\"stat-label\">全部文档</div>\n                </div>\n              </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon edit-icon\">\n            <el-icon><EditPen /></el-icon>\n            </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ recentEditCount }}</div>\n            <div class=\"stat-label\">近期编辑</div>\n          </div>\n        </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon share-icon\">\n            <el-icon><Share /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ sharedDocuments.length }}</div>\n            <div class=\"stat-label\">共享文档</div>\n            </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 添加筛选活动状态提示栏 -->\n    <div v-if=\"searchCategory !== 'all'\" class=\"filter-status-bar\">\n      <div class=\"filter-bar-content\">\n        <div class=\"filter-title\">\n          <span>当前筛选: </span>\n          <span class=\"filter-category\" :style=\"{ backgroundColor: getSelectedCategoryColor() }\">\n            {{ getSelectedCategoryName() }}\n          </span>\n        </div>\n        <div class=\"filter-actions\">\n          <el-button type=\"primary\" link @click=\"resetCategoryFilter\">\n            <el-icon><Close /></el-icon> 清除筛选\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 文档分类区域 - 移至文档列表上方 -->\n    <div class=\"section category-section\">\n      <div class=\"section-header\">\n        <h3>文档分类</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"manageCategories\">管理分类</el-button>\n        </div>\n      </div>\n      \n      <div class=\"category-cards\">\n        <!-- 全部分类选项 -->\n        <div \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === 'all' }\"\n          @click=\"selectCategory('all')\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: '#409EFF' }\">\n            <el-icon><Document /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>全部文档</h4>\n            <div class=\"category-count\">{{ totalDocuments }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === 'all'\" class=\"category-selected-indicator\"></div>\n        </div>\n        \n        <!-- 分类卡片 -->\n        <div \n          v-for=\"category in documentCategories\" \n          :key=\"category.id\" \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === category.id.toString() }\"\n          @click=\"selectCategory(category)\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: category.color }\">\n            <el-icon><Folder /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>{{ category.name }}</h4>\n            <div class=\"category-count\">{{ category.document_count }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === category.id.toString()\" class=\"category-selected-indicator\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加文档列表区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>我的文档</h3>\n        <div class=\"filter-controls\">\n          <el-button text @click=\"() => fetchDocuments(true)\">刷新</el-button>\n        </div>\n              </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in documents\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 分页控制区 -->\n      <div v-if=\"totalCount > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next, jumper\"\n          :total=\"totalCount\"\n          :page-size=\"pageSize\"\n          v-model:current-page=\"page\"\n          @current-change=\"onPageChange\"\n          :pager-count=\"7\"\n        />\n        <!-- 添加调试信息(仅开发环境显示) -->\n        <div v-if=\"$_isDev\" class=\"pagination-debug\">\n          <small>当前页: {{ page }} / 总页数: {{ Math.ceil(totalCount / pageSize) || 0 }} (共{{ totalCount }}条记录)</small>\n        </div>\n      </div>\n    </div>\n\n    <!-- 最近编辑文档区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>最近编辑</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"viewAllDocuments('recent')\">查看全部</el-button>\n        </div>\n      </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in recentDocuments\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"recentDocuments.length === 0\" class=\"empty-state\">\n        <!-- 移除暂无最近编辑文档的显示 -->\n    </div>\n  </div>\n\n    <!-- 创建新文档对话框 -->\n  <el-dialog\n      v-model=\"newDocumentDialogVisible\"\n      title=\"新建智能文档\"\n      width=\"35%\"\n    >\n      <el-tabs v-model=\"documentCreateType\">\n        <el-tab-pane label=\"空白文档\" name=\"blank\">\n          <el-form \n            :model=\"newDocumentForm\" \n            label-width=\"80px\" \n            class=\"mt-4\"\n            :rules=\"blankFormRules\"\n            ref=\"blankFormRef\"\n          >\n            <el-form-item label=\"文档标题\" prop=\"title\">\n              <el-input v-model=\"newDocumentForm.title\" placeholder=\"请输入文档标题\" />\n      </el-form-item>\n            <el-form-item label=\"文档类型\">\n              <el-input v-model=\"newDocumentForm.type\" placeholder=\"请输入文档类型\" />\n              <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n            </el-form-item>\n          </el-form>\n        </el-tab-pane>\n        <el-tab-pane label=\"AI生成文档\" name=\"ai\">\n          <el-form \n            :model=\"aiDocumentForm\" \n            label-width=\"80px\" \n            class=\"mt-4\"\n            :rules=\"aiFormRules\"\n            ref=\"aiFormRef\"\n          >\n            <el-form-item label=\"文档主题\" prop=\"title\">\n              <el-input v-model=\"aiDocumentForm.title\" placeholder=\"简短描述文档主题，如：项目周报\" />\n            </el-form-item>\n            <el-form-item label=\"文档要求\" prop=\"requirements\">\n        <el-input\n                v-model=\"aiDocumentForm.requirements\" \n          type=\"textarea\"\n                :rows=\"3\" \n                placeholder=\"详细描述您需要的文档内容和要求\"\n        />\n              <div class=\"form-tip\">人工智能会根据您的描述生成文档内容</div>\n      </el-form-item>\n    </el-form>\n        </el-tab-pane>\n      </el-tabs>\n    <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"newDocumentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitNewDocument\" :loading=\"createLoading\">\n            创建\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分享文档对话框 -->\n    <el-dialog\n      v-model=\"shareDialogVisible\"\n      title=\"分享文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您即将分享文档: <strong>{{ selectedDocument.title }}</strong></p>\n        \n        <!-- 添加分享方式选择 -->\n        <el-form label-width=\"120px\" class=\"mt-4\">\n          <el-form-item label=\"分享方式\">\n            <el-radio-group v-model=\"shareMethod\">\n              <el-radio label=\"permission\">授予权限</el-radio>\n              <el-radio label=\"chat\">发送到聊天</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          \n          <!-- 权限分享 -->\n          <el-form-item label=\"选择用户\" v-if=\"shareMethod === 'permission'\">\n            <el-select\n              v-model=\"selectedUsers\"\n              multiple\n              placeholder=\"请选择用户\"\n              style=\"width: 100%\"\n            >\n              <el-option\n                v-for=\"user in availableUsers\"\n                :key=\"user.id\"\n                :label=\"user.username\"\n                :value=\"user.id\"\n              />\n            </el-select>\n          </el-form-item>\n          \n          <!-- 聊天分享 -->\n          <template v-if=\"shareMethod === 'chat'\">\n            <el-form-item label=\"文档格式\">\n              <el-radio-group v-model=\"shareFormat\">\n                <el-radio label=\"pdf\">PDF格式</el-radio>\n                <el-radio label=\"word\">Word格式</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            \n            <el-form-item label=\"选择用户\">\n              <el-select\n                v-model=\"selectedChatUsers\"\n                multiple\n                placeholder=\"请选择接收用户\"\n                style=\"width: 100%\"\n              >\n                <el-option\n                  v-for=\"user in availableUsers\"\n                  :key=\"user.id\"\n                  :label=\"user.username\"\n                  :value=\"user.id\"\n                />\n              </el-select>\n              <div class=\"form-tip\">文档将发送到与选中用户的聊天会话中</div>\n            </el-form-item>\n          </template>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"shareDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmShare\" :loading=\"shareLoading\">\n            分享\n          </el-button>\n        </span>\n    </template>\n  </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"删除文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您确定要删除文档 <strong>{{ selectedDocument.title }}</strong> 吗?</p>\n        <p class=\"warning-text\">此操作不可撤销!</p>\n  </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">\n            删除\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"categoryDialogVisible\"\n      title=\"管理文档分类\"\n      width=\"40%\"\n    >\n      <div class=\"category-management\">\n        <div class=\"category-list\">\n          <h4>当前类型</h4>\n          <el-table :data=\"documentCategories\" style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"类型名称\" />\n            <el-table-column label=\"颜色\" width=\"120\">\n              <template #default=\"scope\">\n                <div class=\"color-preview\" :style=\"{ backgroundColor: scope.row.color }\"></div>\n                {{ scope.row.color }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"文档数\" width=\"100\">\n              <template #default=\"scope\">\n                {{ scope.row.document_count || 0 }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"primary\" link @click=\"editCategory(scope.row)\">编辑</el-button>\n                <el-button \n                  type=\"danger\" \n                  link \n                  @click=\"deleteCategory(scope.row)\"\n                  :disabled=\"scope.row.document_count > 0\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        \n        <el-divider />\n        \n        <div class=\"category-form\">\n          <h4>{{ editingCategory.id ? '编辑分类' : '新增分类' }}</h4>\n          <el-form \n            :model=\"editingCategory\" \n            :rules=\"categoryFormRules\" \n            label-width=\"80px\"\n            ref=\"categoryFormRef\"\n          >\n            <el-form-item label=\"分类名称\" prop=\"name\">\n              <el-input v-model=\"editingCategory.name\" placeholder=\"输入分类名称\" />\n            </el-form-item>\n            <el-form-item label=\"分类颜色\" prop=\"color\">\n              <el-color-picker v-model=\"editingCategory.color\" />\n              <span class=\"color-value\">{{ editingCategory.color }}</span>\n            </el-form-item>\n            <el-form-item label=\"描述\">\n              <el-input \n                v-model=\"editingCategory.description\" \n                type=\"textarea\" \n                :rows=\"3\" \n                placeholder=\"输入分类描述（可选）\" \n              />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitCategory\" :loading=\"categoryLoading\">\n                {{ editingCategory.id ? '更新' : '创建' }}\n              </el-button>\n              <el-button @click=\"resetCategoryForm\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 添加编辑文档的弹窗 -->\n    <el-dialog\n      v-model=\"editDialogVisible\"\n      title=\"编辑文档\"\n      width=\"35%\"\n    >\n      <el-form \n        :model=\"editDocumentForm\" \n        label-width=\"80px\" \n        class=\"mt-4\"\n        :rules=\"editFormRules\"\n        ref=\"editFormRef\"\n      >\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"editDocumentForm.title\" placeholder=\"请输入文档标题\" />\n        </el-form-item>\n        <el-form-item label=\"文档类型\">\n          <el-input v-model=\"editDocumentForm.type\" placeholder=\"请输入文档类型\" />\n          <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n        </el-form-item>\n        <el-form-item label=\"所属分类\">\n          <el-select v-model=\"editDocumentForm.category_id\" placeholder=\"选择文档分类\" style=\"width: 100%\">\n            <el-option label=\"无分类\" :value=\"null\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditDocument\" :loading=\"editLoading\">\n            保存\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, getCurrentInstance, provide, onActivated, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport { Search, Plus, EditPen, Share, Folder, Close, More, Document, Clock, Upload } from '@element-plus/icons-vue'\nimport _ from 'lodash'\nimport { \n  getDocuments,\n  getRecentDocuments,\n  getSharedDocuments,\n  getDocumentCategories,\n  createDocument,\n  deleteDocument as apiDeleteDocument,\n  shareDocument as apiShareDocument,\n  createDocumentCategory,\n  updateDocumentCategory,\n  deleteDocumentCategory,\n  aiGenerateDocument,\n  getDocumentDetail,\n  updateDocument,\n  importWordDocument\n} from '@/api/smartdoc'\nimport userApi from '@/api/user';\nimport { createChatSession, getChatSessions } from '@/api/chat';\nimport request from '@/utils/request';\n\nexport default {\n  name: 'SmartDocHome',\n  components: {\n    Search,\n    Plus,\n    EditPen,\n    Share,\n    Folder,\n    Close,\n    More,\n    Document,\n    Clock,\n    Upload\n  },\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const { proxy } = getCurrentInstance() // 获取组件实例\n    \n    // 判断是否为开发环境\n    const $_isDev = process.env.NODE_ENV === 'development'\n    \n    // 刷新触发器，用于强制组件刷新\n    const refreshTrigger = ref(Date.now())\n    \n    // 状态数据\n    const documents = ref([])\n    const recentDocuments = ref([])\n    const sharedDocuments = ref([])\n    const documentCategories = ref([])\n    const searchQuery = ref('')\n    const searchCategory = ref('all')\n    const newDocumentDialogVisible = ref(false)\n    const shareDialogVisible = ref(false)\n    const deleteDialogVisible = ref(false)\n    const documentCreateType = ref('blank')\n    const selectedDocument = ref(null)\n    const selectedUsers = ref([])\n    const availableUsers = ref([])\n    const createLoading = ref(false)\n    const shareLoading = ref(false)\n    const deleteLoading = ref(false)\n    \n    // 添加分享相关变量\n    const shareMethod = ref('permission') // 分享方式：permission(授权) 或 chat(发送到聊天)\n    const shareFormat = ref('pdf') // 分享文档格式：pdf 或 word\n    const selectedChatUsers = ref([]) // 选择的聊天用户\n    \n    // 分页相关状态\n    const page = ref(1)\n    const pageSize = 11 // 每页显示11个文档，加上\"新建\"卡片共12个\n    const totalCount = ref(0)\n    const grandTotalCount = ref(0) // 用于存储真实的文档总数\n    // 添加加载更多相关状态\n    const hasMore = ref(true)\n    const loadingMore = ref(false)\n    \n    // 添加编辑文档相关状态\n    const editDialogVisible = ref(false)\n    const editDocumentForm = ref({\n      id: null,\n      title: '',\n      type: '',\n      category_id: null\n    })\n    const editLoading = ref(false)\n    \n    // 表单数据\n    const newDocumentForm = ref({\n        title: '',\n        type: ''\n    })\n    \n    const aiDocumentForm = ref({\n        title: '',\n      requirements: ''\n    })\n    \n    // 表单校验规则\n    const blankFormRules = {\n        title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ]\n    }\n    \n    const aiFormRules = {\n        title: [\n        { required: true, message: '请输入文档主题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        requirements: [\n        { required: true, message: '请输入文档要求', trigger: 'blur' },\n        { min: 10, max: 500, message: '长度在 10 到 500 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    // 添加编辑表单验证规则\n    const editFormRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    const blankFormRef = ref(null)\n    const aiFormRef = ref(null)\n    const editFormRef = ref(null)\n    \n    // 计算属性\n    const totalDocuments = computed(() => {\n      return grandTotalCount.value;\n    });\n    \n    const recentEditCount = computed(() => {\n      return recentDocuments.value.length || 0;\n    });\n    \n    // 分类管理相关状态\n    const categoryDialogVisible = ref(false)\n    const editingCategory = ref({\n      name: '',\n      color: '#409EFF',\n      description: '',\n    })\n    const categoryFormRef = ref(null)\n    const categoryLoading = ref(false)\n    const categoryFormRules = {\n      name: [\n        { required: true, message: '请输入类型名称', trigger: 'blur' },\n        { min: 2, max: 20, message: '长度在2到20个字符', trigger: 'blur' }\n      ],\n      color: [\n        { required: true, message: '请选择颜色', trigger: 'change' }\n      ]\n    }\n    \n    // 辅助方法：强制刷新视图\n    const forceUpdate = async () => {\n      // 创建临时数据，触发深度响应式更新\n      documents.value = [...documents.value];\n      recentDocuments.value = [...recentDocuments.value]; \n      sharedDocuments.value = [...sharedDocuments.value];\n      \n      // 使用Vue实例的$forceUpdate方法\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate();\n      }\n      \n      // 等待DOM更新\n      await nextTick();\n    };\n    \n    // 方法\n    const fetchDocuments = async (forceRefresh = false, append = false, timestamp = null) => {\n      if (forceRefresh) {\n        page.value = 1\n        hasMore.value = true\n      }\n      \n      // 只有在加载更多模式下才检查hasMore\n      if (append && !hasMore.value && !forceRefresh) {\n        console.log('没有更多文档，取消获取')\n        return\n      }\n      \n      if (!append) {\n        createLoading.value = true\n      } else {\n        loadingMore.value = true\n      }\n      \n      try {\n        // 构建过滤条件\n        const filters = {}\n        \n        // 添加分类过滤\n        if (searchCategory.value && searchCategory.value !== 'all') {\n          filters.category = searchCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          filters.search = searchQuery.value\n        }\n        \n        // API请求参数 - 使用与DRF兼容的page_size参数名\n        const params = {\n          page: page.value,\n          page_size: pageSize, // 将pageSize作为page_size参数传递，与后端REST framework参数保持一致\n          _t: timestamp || new Date().getTime() // 添加时间戳，确保不使用缓存\n        }\n        \n        // 合并过滤条件\n        Object.assign(params, filters)\n        \n        console.log(`获取文档列表，页码: ${page.value}，参数:`, params)\n        \n        const res = await getDocuments(params)\n        console.log('文档列表API响应:', res)\n        \n        let newDocuments = []\n        let currentViewCount = 0;\n        \n        // 处理不同格式的响应\n        if (res && res.data && Array.isArray(res.data)) {\n          // 标准格式响应\n          newDocuments = res.data\n          currentViewCount = res.total || res.count || 0\n        } else if (res && res.results && Array.isArray(res.results)) {\n          // Django REST格式响应\n          newDocuments = res.results\n          currentViewCount = res.count || 0\n        } else if (res && res.data && res.data.results && Array.isArray(res.data.results)) {\n          // 嵌套格式响应\n          newDocuments = res.data.results\n          currentViewCount = res.data.count || 0\n        } else {\n          console.warn('API返回的文档数据格式无效:', res)\n          documents.value = []\n          return\n        }\n          \n        // 更新用于分页的总数\n        totalCount.value = currentViewCount;\n\n        // 仅当没有筛选条件时，才更新\"全部文档\"的真实总数\n        if (!filters.category && !filters.search) {\n            grandTotalCount.value = currentViewCount;\n        }\n\n        // 如果是追加模式\n        if (append) {\n          // 检查并避免添加重复的文档\n          const existingIds = new Set(documents.value.map(doc => doc.id))\n          const uniqueNewDocs = newDocuments.filter(doc => !existingIds.has(doc.id))\n          \n          if (uniqueNewDocs.length > 0) {\n            documents.value = [...documents.value, ...uniqueNewDocs]\n            console.log(`追加了 ${uniqueNewDocs.length} 个新文档，当前共 ${documents.value.length} 个`)\n          } else {\n            console.log('没有新的文档被追加')\n            // 即使没有新文档，也可能是因为我们在不同的页码上获取了重复数据\n            hasMore.value = newDocuments.length > 0\n          }\n        } else {\n          // 非追加模式，直接替换\n          documents.value = newDocuments\n          console.log(`设置了 ${documents.value.length} 个文档`)\n        }\n        \n        console.log(`当前文档ID列表: [${documents.value.map(d => d.id).join(', ')}]`)\n        \n        // 计算总页数\n        const totalPages = Math.ceil(currentViewCount / pageSize);\n        console.log(`分页状态 - 当前页: ${page.value}, 总页数: ${totalPages}, 总文档数: ${currentViewCount}`);\n        \n        // 检查当前页是否超出范围\n        if (page.value > totalPages && totalPages > 0 && !append) {\n          console.warn(`当前页 ${page.value} 超出范围，自动修正为最后一页 ${totalPages}`);\n          \n          // 使用setTimeout避免触发watch事件\n          setTimeout(() => {\n            page.value = totalPages;\n          }, 0);\n          \n          return;\n        }\n        \n        // 更新是否有更多页标志\n        hasMore.value = page.value < totalPages;\n        \n        // 如果匹配的文档太少（比如低于一屏），并且有更多数据，自动加载更多\n        if (!append && documents.value.length < 8 && hasMore.value) {\n          console.log('文档数量较少，自动加载下一页')\n          // 延迟100ms避免请求过于频繁\n          await new Promise(resolve => setTimeout(resolve, 100));\n          await fetchDocuments(false, true, timestamp);\n        }\n          \n      } catch (error) {\n        console.error('获取文档列表失败', error)\n        documents.value = []\n        ElMessage.error('获取文档列表失败')\n      } finally {\n        if (!append) {\n          createLoading.value = false\n        } else {\n          loadingMore.value = false\n        }\n      }\n    }\n    \n    const fetchRecentDocuments = async (forceRefresh = false, timestamp = null) => {\n      console.log('开始获取最近文档...');\n      try {\n        // 准备参数，如果强制刷新添加时间戳\n        const params = forceRefresh ? { _t: timestamp || new Date().getTime() } : {};\n        \n        const res = await getRecentDocuments(params);\n        console.log('最近文档API响应:', res);\n        \n        if (res && res.data) {\n          // 完全替换数组而不是修改引用\n          recentDocuments.value = Array.isArray(res.data) ? [...res.data] : [];\n          console.log(`设置最近文档: ${recentDocuments.value.length}条记录`);\n        } else {\n          console.warn('API返回的最近文档数据无效:', res);\n          recentDocuments.value = [];\n        }\n      } catch (error) {\n        console.error('获取最近文档失败:', error);\n        ElMessage.error('获取最近文档失败');\n        recentDocuments.value = [];\n      }\n    }\n    \n    const fetchSharedDocuments = async (timestamp = null) => {\n      try {\n        const response = await getSharedDocuments(timestamp)\n        sharedDocuments.value = response.data\n      } catch (error) {\n        console.error('获取共享文档失败', error)\n        ElMessage.error('获取共享文档失败')\n      }\n    }\n    \n    const fetchDocumentCategories = async (timestamp = null, retryCount = 0) => {\n      console.log('开始获取文档分类...');\n      try {\n        const res = await getDocumentCategories(timestamp);\n        console.log('文档分类API响应:', res);\n        \n        if (res && res.data) {\n          documentCategories.value = res.data;\n          console.log(`设置文档分类: ${documentCategories.value.length}条记录, 数据:`, documentCategories.value);\n        } else {\n          console.warn('API返回的文档分类数据无效:', res);\n          documentCategories.value = [];\n          \n          // 如果返回空数据且未达到最大重试次数，尝试重试\n          if (documentCategories.value.length === 0 && retryCount < 2) {\n            console.log(`文档分类数据为空，${retryCount + 1}秒后重试...`);\n            setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n          }\n        }\n      } catch (error) {\n        console.error('获取文档分类失败:', error);\n        \n        // 如果是服务器错误且未达到最大重试次数，尝试重试\n        if (error.response && error.response.status >= 500 && retryCount < 2) {\n          console.log(`服务器错误，${retryCount + 1}秒后重试...`);\n          setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n        } else {\n          ElMessage.error('获取文档分类失败，请刷新页面重试');\n          // 初始化空数组\n          documentCategories.value = [];\n        }\n      }\n    }\n    \n    // 监听搜索查询变化，实现实时搜索\n    watch(searchQuery, _.debounce(async () => {\n      // 重置分页\n      page.value = 1\n      hasMore.value = true\n      \n      // 清空现有文档列表，显示加载状态\n      documents.value = []\n      createLoading.value = true\n      \n      try {\n        // 获取新的搜索结果\n        await fetchDocuments(true)\n      } catch (error) {\n        console.error('搜索失败:', error)\n        ElMessage.error('搜索文档失败，请重试')\n      } finally {\n        createLoading.value = false\n      }\n    }, 300))\n    \n    const createNewDocument = () => {\n      // 重置表单\n      newDocumentForm.value = { title: '', type: '' }\n      aiDocumentForm.value = { title: '', requirements: '' }\n      documentCreateType.value = 'blank'\n      newDocumentDialogVisible.value = true\n      \n      // 监听对话框关闭事件，清理表单\n      nextTick(() => {\n        try {\n          const dialog = document.querySelector('.el-dialog');\n          if (dialog) {\n            dialog.addEventListener('closed', () => {\n              try {\n                if (blankFormRef.value) {\n                  blankFormRef.value.clearValidate();\n                }\n                if (aiFormRef.value) {\n                  aiFormRef.value.clearValidate();\n                }\n              } catch (err) {\n                console.error('Error clearing form validation:', err);\n              }\n            }, { once: true });\n          }\n        } catch (err) {\n          console.error('Error setting up dialog event listener:', err);\n        }\n      });\n    }\n    \n    const submitNewDocument = async () => {\n      if (documentCreateType.value === 'blank') {\n        if (!blankFormRef.value) {\n          console.warn('表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await blankFormRef.value.validate()\n            .catch(err => {\n              console.error('表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              console.log('开始创建文档:', {\n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用'\n              });\n              \n              const response = await createDocument({ \n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用',\n                content: ''\n              });\n              \n              console.log('创建文档响应数据：', JSON.stringify(response));\n              \n              // 关闭对话框\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('文档创建成功');\n              \n              // 解析返回的文档ID\n              let docId = null;\n              if (response && response.data) {\n                if (response.data.id) {\n                  docId = response.data.id;\n                } else if (Array.isArray(response.data) && response.data.length > 0) {\n                  docId = response.data[0].id;\n                } else if (response.data.results && Array.isArray(response.data.results) && response.data.results.length > 0) {\n                  docId = response.data.results[0].id;\n                }\n              }\n              \n              // 等待对话框关闭完成后再执行跳转，避免DOM错误\n              setTimeout(() => {\n                if (docId) {\n                  console.log(`准备跳转到文档详情页，ID: ${docId}`);\n                  \n                  // 先刷新文档列表，确保数据是最新的\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                  \n                  // 然后再执行导航\n                  setTimeout(() => {\n                    router.push({\n                      name: 'SmartDocDetail',\n                      params: { id: docId }\n                    }).then(() => {\n                      createLoading.value = false;\n                    }).catch(err => {\n                      console.error('路由导航失败:', err);\n                      ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                      // 尝试路径跳转\n                      router.push(`/smartdoc/${docId}`).catch(navErr => {\n                        console.error('路径导航也失败:', navErr);\n                        ElMessage.error('路径跳转详情页也失败');\n                      });\n                      createLoading.value = false;\n                    });\n                  }, 300);\n                } else {\n                  console.warn('创建文档成功，但返回的数据格式不正确', response);\n                  // 刷新文档列表\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                }\n              }, 100);\n            } catch (error) {\n              console.error('创建文档失败', error);\n              ElMessage.error('创建文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      } else if (documentCreateType.value === 'ai') {\n        if (!aiFormRef.value) {\n          console.warn('AI表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await aiFormRef.value.validate()\n            .catch(err => {\n              console.error('AI表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              // 调用AI生成文档API\n              const categoryId = searchCategory.value !== 'all' ? searchCategory.value : null;\n              const response = await aiGenerateDocument({\n                title: aiDocumentForm.value.title,\n                requirement: aiDocumentForm.value.requirements,\n                category_id: categoryId,\n                doc_type: 'AI'\n              });\n              console.log('AI生成文档响应数据：', response);\n              // 检查超时\n              if (response && response.status === 504) {\n                ElMessage.error(response.data?.detail || 'AI生成超时，请简化需求或稍后重试');\n                createLoading.value = false;\n                return;\n              }\n              if (response && response.data && typeof response.data.detail === 'string' && response.data.detail.includes('超时')) {\n                ElMessage.error(response.data.detail);\n                createLoading.value = false;\n                return;\n              }\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('AI生成文档成功');\n              let docId = null;\n              if (response && response.data && response.data.id) {\n                docId = response.data.id;\n              }\n              if (docId) {\n                // 跳转前打印日志\n                console.log('准备跳转到文档详情页，路由名: SmartDocDetail, id:', docId);\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: String(docId) }\n                }).then(() => {\n                  createLoading.value = false;\n                }).catch(err => {\n                  console.error('路由导航失败:', err);\n                  ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                  // 尝试路径跳转\n                  router.push(`/smartdoc/${docId}`).catch(navErr => {\n                    console.error('路径导航也失败:', navErr);\n                    ElMessage.error('路径跳转详情页也失败');\n                  });\n                  createLoading.value = false;\n                });\n                // 异步刷新数据\n                fetchDocuments();\n                fetchRecentDocuments();\n              } else {\n                fetchDocuments();\n                fetchRecentDocuments();\n                createLoading.value = false;\n              }\n            } catch (error) {\n              console.error('AI生成文档失败', error);\n              ElMessage.error('AI生成文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交AI表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      }\n    }\n    \n    const openDocument = (doc) => {\n      router.push({ name: 'SmartDocDetail', params: { id: doc.id } })\n    }\n    \n    const editDocument = (doc, event) => {\n      // 阻止事件冒泡，防止触发卡片点击事件\n      if (event) {\n        event.stopPropagation();\n      }\n      \n      // 确保分类ID是数字类型\n      let categoryId = null;\n      if (doc.category && doc.category.id) {\n        categoryId = Number(doc.category.id);\n      }\n      \n      console.log('编辑文档:', doc.id, '当前分类:', categoryId);\n      \n      // 设置表单数据\n      editDocumentForm.value = {\n        id: doc.id,\n        title: doc.title,\n        type: doc.type || '',\n        category_id: categoryId\n      };\n      \n      // 显示编辑对话框\n      editDialogVisible.value = true;\n    };\n    \n    // 提交编辑文档\n    const submitEditDocument = async () => {\n      if (!editFormRef.value) return;\n      \n      try {\n        const valid = await editFormRef.value.validate();\n        \n        if (valid) {\n          editLoading.value = true;\n          \n          // 准备更新的数据\n          const updateData = {\n            title: editDocumentForm.value.title,\n            type: editDocumentForm.value.type || '通用',\n            category_id: editDocumentForm.value.category_id\n          };\n          \n          // 调用API更新文档\n          await updateDocument(editDocumentForm.value.id, updateData);\n          \n          ElMessage.success('文档更新成功');\n          editDialogVisible.value = false;\n          \n          // 强制刷新所有数据以确保视图同步\n          await reloadAllData();\n        }\n      } catch (error) {\n        console.error('更新文档失败', error);\n        ElMessage.error('更新文档失败');\n      } finally {\n        editLoading.value = false;\n      }\n    };\n    \n    const exportDocument = (doc) => {\n      ElMessageBox({\n        title: '导出文档',\n        message: '请选择导出格式',\n        showCancelButton: true,\n        confirmButtonText: '导出为PDF',\n        cancelButtonText: '导出为Word',\n        closeOnClickModal: true,\n        callback: (action) => {\n          if (action === 'confirm') {\n            exportToPdf(doc)\n          } else if (action === 'cancel') {\n            exportToWord(doc)\n          }\n        }\n      })\n    }\n    \n    // 导出为PDF\n    const exportToPdf = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      // 先获取文档详情内容\n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.pdf`\n        \n        // 创建临时容器用于导出\n        const tempContainer = document.createElement('div')\n        tempContainer.innerHTML = documentContent\n        tempContainer.className = 'temp-export-container'\n        document.body.appendChild(tempContainer)\n        \n        const options = {\n          margin: [15, 15, 15, 15],\n          filename: filename,\n          image: { type: 'jpeg', quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n        }\n        \n        // 更新加载提示\n        loading.setText('正在生成PDF...')\n        \n        // 动态导入html2pdf.js\n        const html2pdfModule = await import('html2pdf.js')\n        const html2pdf = html2pdfModule.default\n        \n        await html2pdf().from(tempContainer).set(options).save()\n        \n        // 清理临时元素\n        document.body.removeChild(tempContainer)\n        \n        loading.close()\n        ElMessage.success('PDF导出成功')\n      } catch (error) {\n        console.error('PDF导出失败:', error)\n        loading.close()\n        ElMessage.error('PDF导出失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 导出为Word（保留图片）\n    const exportToWord = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.doc`\n        \n        // 创建一个临时文档容器处理内容\n        const contentContainer = document.createElement('div')\n        contentContainer.innerHTML = documentContent\n        \n        // 更新加载提示\n        loading.setText('正在生成Word文档...')\n        \n        // 创建微软Word兼容的HTML文档\n        const msWordHtml = `\n          <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                xmlns=\"http://www.w3.org/TR/REC-html40\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>${docTitle}</title>\n            <style>\n              body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n              img { max-width: 100%; height: auto; }\n              p { margin: 0; padding: 0; }\n              h1 { font-size: 18pt; }\n              h2 { font-size: 16pt; }\n              h3 { font-size: 14pt; }\n              table { border-collapse: collapse; width: 100%; }\n              td, th { border: 1px solid #000; padding: 5px; }\n            </style>\n          </head>\n          <body>\n            <h1>${docTitle}</h1>\n            ${contentContainer.innerHTML}\n          </body>\n          </html>\n        `\n        \n        // 使用file-saver保存文件\n        const FileSaver = await import('file-saver')\n        const saveAs = FileSaver.saveAs || FileSaver.default\n        const blob = new Blob([msWordHtml], { type: 'application/msword' })\n        saveAs(blob, filename)\n        \n        loading.close()\n        ElMessage.success('Word文档导出成功')\n      } catch (error) {\n        console.error('Word导出失败:', error)\n        loading.close()\n        ElMessage.error(`Word导出失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    const shareDocument = async (doc) => {\n      selectedDocument.value = doc\n      \n      // 显示加载状态\n      shareLoading.value = true\n      \n      try {\n        // 从API获取公司所有用户\n        const result = await userApi.getCompanyUsers()\n        \n        if (result.success && Array.isArray(result.data)) {\n          // 获取当前用户ID\n          const currentUserJson = localStorage.getItem('user')\n          let currentUserId = null\n          if (currentUserJson) {\n            const currentUser = JSON.parse(currentUserJson)\n            currentUserId = currentUser.id\n          }\n          \n          // 过滤掉当前用户，只显示其他用户\n          availableUsers.value = result.data\n            .filter(user => user.id !== currentUserId)\n            .map(user => ({\n              id: user.id,\n              username: user.name || user.username || user.email || `用户${user.id}`\n            }))\n          \n          console.log('可分享用户列表:', availableUsers.value)\n        } else {\n          ElMessage.warning('获取用户列表失败: ' + (result.message || '未知错误'))\n          availableUsers.value = []\n        }\n      } catch (error) {\n        console.error('获取用户列表失败:', error)\n        ElMessage.warning('获取用户列表失败，请重试')\n        availableUsers.value = []\n      } finally {\n        // 隐藏加载状态\n        shareLoading.value = false\n        \n        // 重置分享相关变量\n        shareMethod.value = 'permission'\n        shareFormat.value = 'pdf'\n        selectedUsers.value = []\n        selectedChatUsers.value = []\n        \n        // 显示对话框\n        shareDialogVisible.value = true\n      }\n    }\n    \n    const confirmShare = async () => {\n      // 权限分享方式\n      if (shareMethod.value === 'permission') {\n        if (!selectedDocument.value || selectedUsers.value.length === 0) {\n          ElMessage.warning('请选择至少一个用户')\n          return\n        }\n        \n        shareLoading.value = true\n        try {\n          await apiShareDocument(selectedDocument.value.id, selectedUsers.value)\n          ElMessage.success('文档分享成功')\n          shareDialogVisible.value = false\n        } catch (error) {\n          console.error('分享文档失败', error)\n          ElMessage.error('分享文档失败')\n        } finally {\n          shareLoading.value = false\n        }\n      } \n      // 聊天分享方式\n      else if (shareMethod.value === 'chat') {\n        if (!selectedDocument.value || selectedChatUsers.value.length === 0) {\n          ElMessage.warning('请选择至少一个接收用户')\n          return\n        }\n        \n        shareLoading.value = true\n        try {\n          // 获取当前用户信息\n          const currentUserJson = localStorage.getItem('user')\n          let currentUserId = null\n          if (currentUserJson) {\n            const currentUser = JSON.parse(currentUserJson)\n            currentUserId = currentUser.id\n          }\n          \n          if (!currentUserId) {\n            ElMessage.error('无法获取当前用户信息')\n            shareLoading.value = false\n            return\n          }\n          \n          // 需要获取文档内容\n          const docResponse = await getDocumentDetail(selectedDocument.value.id);\n          const currentDoc = docResponse.data;\n          \n          if (!currentDoc || !currentDoc.content) {\n            ElMessage.error('无法获取文档内容')\n            shareLoading.value = false\n            return\n          }\n          \n          // 使用前端导出文件的方式获取文件\n          const loading = ElLoading.service({\n            lock: true,\n            text: `正在准备${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文件...`,\n            background: 'rgba(255, 255, 255, 0.7)'\n          });\n          \n          try {\n            // 准备文档内容\n            const docTitle = currentDoc.title || '未命名文档';\n            const documentContent = currentDoc.content;\n            \n            // 创建临时容器用于导出\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = documentContent;\n            tempContainer.className = 'temp-export-container';\n            document.body.appendChild(tempContainer);\n            \n            let documentFile = null;\n            let fileName = docTitle;\n            let fileType = '';\n            \n            if (shareFormat.value === 'pdf') {\n              fileName += '.pdf';\n              fileType = 'application/pdf';\n              \n              loading.setText('正在生成PDF文件...');\n              \n              // 动态导入html2pdf.js\n              const html2pdfModule = await import('html2pdf.js');\n              const html2pdf = html2pdfModule.default;\n              \n              const options = {\n                margin: [15, 15, 15, 15],\n                filename: fileName,\n                image: { type: 'jpeg', quality: 0.98 },\n                html2canvas: { scale: 2, useCORS: true },\n                jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n              };\n              \n              // 生成PDF并获取Blob\n              documentFile = await html2pdf().from(tempContainer).set(options).outputPdf('blob');\n            }\n            else {\n              fileName += '.doc';\n              fileType = 'application/msword';\n              \n              loading.setText('正在生成Word文件...');\n              \n              // 创建微软Word兼容的HTML文档\n              const msWordHtml = `\n                <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                      xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                      xmlns=\"http://www.w3.org/TR/REC-html40\">\n                <head>\n                  <meta charset=\"utf-8\">\n                  <title>${docTitle}</title>\n                  <style>\n                    body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n                    img { max-width: 100%; height: auto; }\n                    p { margin: 0; padding: 0; }\n                    h1 { font-size: 18pt; }\n                    h2 { font-size: 16pt; }\n                    h3 { font-size: 14pt; }\n                    table { border-collapse: collapse; width: 100%; }\n                    td, th { border: 1px solid #000; padding: 5px; }\n                  </style>\n                </head>\n                <body>\n                  <h1>${docTitle}</h1>\n                  ${tempContainer.innerHTML}\n                </body>\n                </html>\n              `;\n              \n              // 创建Blob\n              documentFile = new Blob([msWordHtml], { type: fileType });\n            }\n            \n            // 清理临时元素\n            document.body.removeChild(tempContainer);\n            \n            // 先获取所有聊天会话列表，只获取一次\n            loading.setText('正在查找聊天会话...');\n            const sessionsResponse = await getChatSessions();\n            let chatSessions = [];\n            \n            // 处理不同格式的API返回结果\n            if (sessionsResponse && sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n              chatSessions = sessionsResponse.data;\n            } else if (sessionsResponse && sessionsResponse.results && Array.isArray(sessionsResponse.results)) {\n              chatSessions = sessionsResponse.results;\n            }\n            \n            console.log(`获取到 ${chatSessions.length} 个会话`);\n            loading.setText('正在准备发送...');\n            \n            // 为每个用户准备会话ID，使用Map存储userId -> chatId的映射\n            const userSessionMap = new Map();\n            \n            // 先批量查找现有会话，减少重复检查\n            for (const userId of selectedChatUsers.value) {\n              // 查找是否有与该用户的会话\n              const existingSession = chatSessions.find(session => \n                session.participants.length === 2 && \n                session.participants.some(p => p.id === userId) &&\n                session.participants.some(p => p.id === currentUserId)\n              );\n              \n              if (existingSession) {\n                userSessionMap.set(userId, existingSession.id);\n                console.log(`用户${userId}有现有会话: ${existingSession.id}`);\n              }\n            }\n            \n            // 为没有会话的用户创建新会话\n            const newSessionPromises = [];\n            for (const userId of selectedChatUsers.value) {\n              if (!userSessionMap.has(userId)) {\n                newSessionPromises.push(\n                  createChatSession({\n                    participant_ids: [currentUserId, userId],\n                    title: '文档分享'\n                  }).then(response => {\n                    if (response && response.data && response.data.id) {\n                      userSessionMap.set(userId, response.data.id);\n                      console.log(`为用户${userId}创建新会话: ${response.data.id}`);\n                    } else {\n                      console.error('创建聊天会话失败:', response);\n                      return null;\n                    }\n                  }).catch(error => {\n                    console.error(`为用户${userId}创建会话失败:`, error);\n                    return null;\n                  })\n                );\n              }\n            }\n            \n            // 等待所有新会话创建完成\n            if (newSessionPromises.length > 0) {\n              loading.setText(`正在创建 ${newSessionPromises.length} 个新会话...`);\n              await Promise.all(newSessionPromises);\n            }\n            \n            // 准备发送文件\n            loading.setText('正在发送文件...');\n            const sendPromises = [];\n            \n            // 遍历用户发送文件\n            for (const userId of selectedChatUsers.value) {\n              const chatId = userSessionMap.get(userId);\n              if (!chatId) {\n                console.error(`未能找到或创建用户${userId}的会话`);\n                continue;\n              }\n              \n              // 创建FormData对象，添加文件和相关信息\n              const formData = new FormData();\n              formData.append('chat', chatId);\n              formData.append('message_type', 'file');\n              formData.append('content', `分享了一个${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文档: ${docTitle}`);\n              \n              // 将文件Blob转换为File对象 - 为每个用户创建新的File对象\n              const file = new File([documentFile], fileName, { type: fileType });\n              formData.append('file', file);\n              \n              // 发送文件消息\n              sendPromises.push(\n                request({\n                  url: '/api/chat/messages/',\n                  method: 'post',\n                  data: formData,\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  },\n                  timeout: 30000 // 增加超时时间\n                }).then(() => {\n                  return { userId, success: true };\n                }).catch(error => {\n                  console.error(`向用户 ${userId} 发送文档失败:`, error);\n                  return { userId, success: false, error };\n                })\n              );\n            }\n            \n            // 等待所有发送操作完成\n            const sendResults = await Promise.all(sendPromises);\n            const successCount = sendResults.filter(result => result.success).length;\n            \n            if (successCount > 0) {\n              ElMessage.success(`成功发送文档到 ${successCount}/${selectedChatUsers.value.length} 个用户的聊天`);\n              shareDialogVisible.value = false;\n            } else {\n              ElMessage.error('发送文档失败，请重试');\n            }\n          } catch (error) {\n            console.error('生成文档文件失败:', error);\n            ElMessage.error('生成文档文件失败');\n          } finally {\n            loading.close();\n          }\n        } catch (error) {\n          console.error('分享文档到聊天失败:', error);\n          ElMessage.error('分享文档到聊天失败');\n        } finally {\n          shareLoading.value = false;\n        }\n      }\n    }\n    \n    const deleteDocument = (doc) => {\n      selectedDocument.value = doc\n      deleteDialogVisible.value = true\n    }\n    \n    const confirmDelete = async () => {\n      if (!selectedDocument.value) return\n      \n      deleteLoading.value = true\n      try {\n        // 记录要删除的文档ID和类别\n        const deletedDocId = selectedDocument.value.id;\n        const deletedDocCategoryId = selectedDocument.value.category?.id;\n        \n        // 先关闭对话框，提高用户体验\n        deleteDialogVisible.value = false;\n        \n        // 执行删除操作\n        await apiDeleteDocument(deletedDocId)\n        ElMessage.success('文档删除成功')\n        \n        // 强制清除选中的文档\n        selectedDocument.value = null;\n        \n        // 清除可能的缓存数据\n        if (window.localStorage) {\n          try {\n            // 移除可能存在的相关缓存\n            localStorage.removeItem(`doc_cache_${deletedDocId}`);\n            localStorage.removeItem(`recent_docs_cache`);\n            localStorage.removeItem(`doc_list_cache`);\n          } catch (e) {\n            console.error('清除本地缓存失败:', e);\n          }\n        }\n        \n        // 更新刷新触发器\n        refreshTrigger.value = Date.now();\n        \n        // 使用新数组替换原数组，确保Vue能检测到变化 \n        documents.value = [...documents.value.filter(doc => doc.id !== deletedDocId)];\n        recentDocuments.value = [...recentDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        sharedDocuments.value = [...sharedDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        \n        // 强制更新视图\n        await forceUpdate();\n        \n        // 更新分类中的文档计数\n        if (deletedDocCategoryId) {\n          const category = documentCategories.value.find(c => c.id === deletedDocCategoryId);\n          if (category && category.document_count > 0) {\n            category.document_count--;\n          }\n        }\n        \n        // 等待DOM更新\n        await nextTick();\n        \n        // 重新导航到文档首页，确保状态全部刷新\n        if (router.currentRoute.value.name === 'SmartDocDetail') {\n          console.log('从详情页删除文档，重新导航到文档首页');\n          \n          // 先强制刷新数据，确保导航后数据是最新的\n          await reloadAllData();\n          \n          // 使用replace模式跳转，不留下历史记录，并添加强制刷新参数\n          router.replace({ \n            name: 'SmartDoc',\n            query: { _refresh: Date.now() } // 添加时间戳参数防止缓存\n          });\n        } else {\n          // 如果已经在文档首页，立即重载数据并强制刷新页面\n          await refreshData();\n        }\n      } catch (error) {\n        console.error('删除文档失败', error);\n        ElMessage.error('删除文档失败');\n        // 如果删除失败，关闭对话框\n        deleteDialogVisible.value = false;\n      } finally {\n        deleteLoading.value = false;\n      }\n    }\n    \n    const viewAllDocuments = (type) => {\n      if (type === 'recent') {\n        // 路由中没有SmartDocList，直接跳转到智能文档首页并滚动到文档列表\n        router.push({ name: 'SmartDoc' }).then(() => {\n          setTimeout(() => {\n            const docSection = document.querySelector('.section');\n            if (docSection) {\n              docSection.scrollIntoView({ behavior: 'smooth' });\n            }\n          }, 300);\n        });\n      }\n    }\n    \n    const selectCategory = (category) => {\n      console.log('选择分类:', category);\n      \n      // 处理不同类型的category参数\n      let categoryId;\n      if (category === 'all') {\n        categoryId = 'all';\n      } else if (typeof category === 'string') {\n        categoryId = category;\n      } else if (typeof category === 'object' && category !== null) {\n        categoryId = category.id.toString();\n      }\n      \n      console.log('处理后的分类ID:', categoryId);\n      \n      // 如果选择的分类与当前分类相同，则不做任何操作\n      if (categoryId === searchCategory.value) {\n        console.log('分类未变化，不重新加载');\n        return;\n      }\n      \n      // 设置新的分类\n      searchCategory.value = categoryId;\n      \n      // 添加动画效果\n      documents.value = [];\n      createLoading.value = true;\n      \n      // 重置分页和加载状态\n      page.value = 1;\n      hasMore.value = true;\n      \n      // 延迟获取，实现过渡效果\n      setTimeout(async () => {\n        try {\n          // 强制刷新文档列表\n          await fetchDocuments(true);\n        } catch (error) {\n          console.error('获取文档失败:', error);\n          ElMessage.error('获取文档列表失败，请刷新页面重试');\n        } finally {\n          createLoading.value = false;\n        }\n        \n        // 触发一个简单的动画效果，突出显示已筛选的文档\n        const docCards = document.querySelectorAll('.doc-card');\n        if (docCards && docCards.length > 0) {\n          docCards.forEach((card, index) => {\n            if (card) {\n              card.style.animationDelay = `${index * 50}ms`;\n              card.classList.remove('fadeIn');\n              setTimeout(() => {\n                if (card) {\n                  card.classList.add('fadeIn');\n                }\n              }, 10);\n            }\n          });\n        }\n      }, 300);\n    };\n\n    // 获取选中分类的颜色\n    const getSelectedCategoryColor = () => {\n      if (searchCategory.value === 'all') return '#409EFF';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.color || '#67C23A';\n    };\n\n    // 获取选中分类的名称\n    const getSelectedCategoryName = () => {\n      if (searchCategory.value === 'all') return '全部文档';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.name || '未知分类';\n    };\n    \n    const manageCategories = () => {\n      categoryDialogVisible.value = true\n      resetCategoryForm()\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = { ...category }\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = {\n        id: '',\n        name: '',\n        color: '#409EFF',\n        description: ''\n      }\n      if (categoryFormRef.value) {\n        categoryFormRef.value.resetFields()\n      }\n    }\n    \n    const submitCategory = async () => {\n      if (!categoryFormRef.value) return\n      \n      await categoryFormRef.value.validate(async (valid) => {\n        if (valid) {\n          categoryLoading.value = true\n          try {\n            const categoryData = {\n              name: editingCategory.value.name,\n              color: editingCategory.value.color,\n              description: editingCategory.value.description || ''\n            }\n            \n            if (editingCategory.value.id) {\n              // 更新分类\n              await updateDocumentCategory(editingCategory.value.id, categoryData)\n              ElMessage.success('分类更新成功')\n            } else {\n              // 创建分类\n              await createDocumentCategory(categoryData)\n              ElMessage.success('分类创建成功')\n            }\n            \n            // 重新获取分类列表\n            fetchDocumentCategories()\n            resetCategoryForm()\n          } catch (error) {\n            console.error('保存分类失败:', error)\n            ElMessage.error('保存分类失败')\n          } finally {\n            categoryLoading.value = false\n          }\n        }\n      })\n    }\n    \n    const deleteCategory = (category) => {\n      if (category.document_count > 0) {\n        ElMessage.warning('该分类下有文档，无法删除')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        `确定要删除分类\"${category.name}\"吗？`,\n        '删除分类',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await deleteDocumentCategory(category.id)\n          ElMessage.success('分类删除成功')\n          fetchDocumentCategories()\n        } catch (error) {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败')\n        }\n      }).catch(() => {})\n    }\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 同一天显示时间\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天'\n      }\n      \n      // 一周内显示星期\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const diffDays = Math.round((now - date) / (1000 * 60 * 60 * 24))\n      if (diffDays < 7) {\n        return weekDays[date.getDay()]\n      }\n      \n      // 其他情况显示日期\n      return date.toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' })\n    }\n    \n    const resetCategoryFilter = () => {\n      searchCategory.value = 'all'\n      page.value = 1\n      fetchDocuments(true)\n    }\n    \n    // 添加页面激活钩子，确保从其他页面返回时重新获取数据\n    onActivated(() => {\n      console.log('SmartDoc组件被激活，重新获取数据');\n      reloadAllData();\n    });\n\n    // 页面激活后重新加载所有数据的函数\n    const reloadAllData = async () => {\n      page.value = 1\n      try {\n        console.log('重新加载所有文档数据...')\n        createLoading.value = true\n        \n        // 添加时间戳防止缓存\n        const timestamp = Date.now();\n        \n        // 清除本地缓存\n        try {\n          if (window.localStorage) {\n            // 清除文档相关的缓存\n            localStorage.removeItem('doc_list_cache');\n            localStorage.removeItem('recent_docs_cache');\n            localStorage.removeItem('doc_categories_cache');\n          }\n        } catch (e) {\n          console.error('清除缓存失败:', e);\n        }\n        \n        // 先获取分类，因为显示文档时需要分类信息\n        await fetchDocumentCategories(timestamp)\n        \n        // 然后并行获取其他数据，但不需要保存返回值\n        await Promise.all([\n          fetchDocuments(true, false, timestamp),\n          fetchRecentDocuments(true, timestamp),\n          fetchSharedDocuments(timestamp)\n        ])\n        \n        console.log('数据重新加载完成', {\n          分类数量: documentCategories.value.length,\n          文档数量: documents.value.length,\n          最近文档: recentDocuments.value.length,\n          共享文档: sharedDocuments.value.length,\n          总计数: totalCount.value,\n        })\n        \n        // 强制更新视图\n        await forceUpdate()\n        \n      } catch (error) {\n        console.error('数据重新加载失败:', error)\n        ElMessage.error('加载数据失败，请刷新页面')\n      } finally {\n        createLoading.value = false\n      }\n    }\n\n    // 提供重载函数给子组件或父组件使用\n    provide('reloadDocuments', reloadAllData);\n    \n    // 监听路由变化，强制刷新数据\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal) {\n        console.log('检测到路由刷新参数:', newVal);\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 监听路由参数，处理不同情况\n    watch(() => route.path, (newPath, oldPath) => {\n      console.log('路由变化:', oldPath, '->', newPath);\n      if (newPath === '/smartdoc' && oldPath && oldPath.startsWith('/smartdoc/')) {\n        // 从文档详情页返回文档列表页，强制刷新\n        console.log('从详情页返回列表页，强制刷新数据');\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 手动强制刷新方法\n    const refreshData = async () => {\n      page.value = 1\n      await reloadAllData()\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate()\n      }\n    }\n\n    // 处理分页变化的方法 - 简单记录事件\n    const onPageChange = (newPage) => {\n      console.log(`分页点击事件 - 切换到页面: ${newPage}`);\n    }\n    \n    // 监听页码变化，加载对应页面数据\n    watch(() => page.value, async (newPage, oldPage) => {\n      console.log(`页码变化: ${oldPage} -> ${newPage}`);\n      \n      if (newPage === oldPage) return;\n      \n      try {\n        // 显示加载状态\n        createLoading.value = true;\n        \n        // 重置hasMore标志，确保可以加载数据\n        hasMore.value = true;\n        \n        // 获取新页面数据\n        await fetchDocuments(false, false, Date.now());\n        \n        // 滚动到列表顶部\n        const docSection = document.querySelector('.section');\n        if (docSection) {\n          docSection.scrollIntoView({ behavior: 'smooth' });\n        }\n      } catch (error) {\n        console.error('页码变化加载失败:', error);\n        ElMessage.error('加载数据失败，请重试');\n      } finally {\n        createLoading.value = false;\n      }\n    });\n\n    // 添加加载更多文档的方法\n    const loadMoreDocuments = () => {\n      if (loadingMore.value || !hasMore.value) return\n      page.value++\n      fetchDocuments(false, true)\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      console.log('SmartDoc组件mounted，加载数据');\n      \n      // 检查URL中是否有_refresh参数\n      const refreshParam = route.query._refresh;\n      if (refreshParam) {\n        console.log('检测到URL中的刷新参数:', refreshParam);\n        // 强制刷新，确保文档列表是最新的\n        refreshTrigger.value = Date.now();\n        // 设置一个超短延迟，确保DOM已经完全挂载\n        setTimeout(() => {\n          reloadAllData();\n        }, 10);\n      } else {\n        // 正常加载数据\n        reloadAllData();\n      }\n    })\n    \n    const handleImportWord = () => {\n      // 创建一个隐藏的文件上传input\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.accept = '.docx,.doc';\n      fileInput.style.display = 'none';\n      document.body.appendChild(fileInput);\n      \n      // 监听文件选择事件\n      fileInput.addEventListener('change', async (event) => {\n        if (event.target.files.length > 0) {\n          const file = event.target.files[0];\n          \n          // 显示加载中，使用全屏加载，禁止用户操作\n          const loadingInstance = ElLoading.service({\n            fullscreen: true,\n            text: '正在导入Word文档...',\n            background: 'rgba(255, 255, 255, 0.8)',\n            lock: true // 锁定屏幕，防止用户操作\n          });\n          \n          try {\n            // 创建FormData对象\n            const formData = new FormData();\n            formData.append('file', file);\n            \n            // 发送请求，调用API\n            const response = await importWordDocument(formData);\n            \n            if (response && response.id) {\n              // 先刷新文档首页\n              await reloadAllData();\n              \n              // 显示成功消息\n              ElMessage.success('Word文档导入成功');\n              \n              // 延迟一秒后跳转，确保用户看到刷新效果和成功提示\n              setTimeout(() => {\n                // 导入成功后跳转到文档详情页\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: response.id },\n                  query: { _refresh: Date.now() } // 添加刷新参数，确保详情页刷新\n                });\n              }, 1000);\n            } else {\n              ElMessage.error('导入失败：' + (response?.detail || '未知错误'));\n            }\n          } catch (error) {\n            console.error('导入Word文档出错:', error);\n            ElMessage.error('导入Word文档失败: ' + (error.message || '未知错误'));\n          } finally {\n            // 确保一定时间后关闭加载提示，防止界面卡死\n            setTimeout(() => {\n              loadingInstance.close();\n              document.body.removeChild(fileInput);\n            }, 500);\n          }\n        }\n      });\n      \n      // 触发文件选择对话框\n      fileInput.click();\n    }\n    \n    return {\n      documents,\n      recentDocuments,\n      sharedDocuments,\n      documentCategories,\n      searchQuery,\n      searchCategory,\n      totalDocuments,\n      recentEditCount,\n      newDocumentDialogVisible,\n      shareDialogVisible,\n      deleteDialogVisible,\n      documentCreateType,\n      newDocumentForm,\n      aiDocumentForm,\n      blankFormRules,\n      aiFormRules,\n      blankFormRef,\n      aiFormRef,\n      selectedDocument,\n      selectedUsers,\n      availableUsers,\n      createLoading,\n      shareLoading,\n      deleteLoading,\n      createNewDocument,\n      submitNewDocument,\n      openDocument,\n      editDocument,\n      submitEditDocument,\n      exportDocument,\n      shareDocument,\n      confirmShare,\n      deleteDocument,\n      confirmDelete,\n      viewAllDocuments,\n      formatDate,\n      categoryDialogVisible,\n      editingCategory,\n      categoryFormRef,\n      categoryLoading,\n      categoryFormRules,\n      editCategory,\n      resetCategoryForm,\n      submitCategory,\n      deleteCategory,\n      resetCategoryFilter,\n      selectCategory,\n      getSelectedCategoryColor,\n      getSelectedCategoryName,\n      manageCategories,\n      reloadAllData,\n      refreshData,\n      refreshTrigger,\n      hasMore,\n      loadingMore,\n      loadMoreDocuments,\n      exportToPdf,\n      exportToWord,\n      // 添加编辑对话框相关变量\n      editDialogVisible,\n      editDocumentForm,\n      editFormRef,\n      editLoading,\n      editFormRules,\n      // 添加分页处理方法\n      onPageChange,\n      page,\n      pageSize,\n      totalCount,\n      // 开发环境标志\n      $_isDev,\n      // 添加直接API调用函数\n      fetchDocuments,\n      // 添加分享方式相关变量\n      shareMethod,\n      shareFormat,\n      selectedChatUsers,\n      handleImportWord\n    }\n  }\n}\n</script>\n\n<style scoped>\n.smartdoc-home-container {\n  padding: 20px;\n  background-color: var(--el-bg-color-page);\n}\n\n/* 页面标题和操作区 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.page-description {\n  color: var(--el-text-color-secondary);\n  margin: 4px 0 0 0;\n}\n\n.right-section {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 240px;\n}\n\n/* 统计卡片 */\n.stats-cards {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  flex: 1;\n  transition: all 0.3s;\n  background-color: var(--el-bg-color-overlay);\n  border-color: var(--el-border-color-lighter);\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n.stat-content {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n}\n\n.stat-icon {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 16px;\n  font-size: 24px;\n  color: white;\n}\n\n.doc-icon {\n  background-color: #409EFF;\n}\n\n.edit-icon {\n  background-color: #67C23A;\n}\n\n.share-icon {\n  background-color: #E6A23C;\n}\n\n.stat-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: var(--el-text-color-primary);\n}\n\n.stat-label {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n}\n\n/* 区域通用样式 */\n.section {\n  margin-bottom: 32px;\n}\n\n/* 分类区域特殊样式 */\n.category-section {\n  margin-bottom: 16px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.filter-tag {\n  background-color: #f0f2f5;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #606266;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 文档卡片 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  height: 220px;\n  display: flex;\n  flex-direction: column;\n  transition: all 0.3s;\n  position: relative;\n  overflow: hidden;\n  background-color: var(--el-bg-color-overlay);\n  border-color: var(--el-border-color-lighter);\n}\n\n.doc-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n.doc-card:hover .doc-actions {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.doc-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n}\n\n.doc-info {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 8px;\n}\n\n.doc-type-tag {\n  font-size: 12px;\n  color: #606266;\n  background-color: #f5f7fa;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n}\n\n.doc-category-tag {\n  font-size: 12px;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n}\n\n.doc-title {\n  margin: 0 0 12px 0;\n  font-size: 16px;\n  font-weight: 600;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  color: var(--el-text-color-primary);\n}\n\n.doc-preview {\n  font-size: 14px;\n  color: var(--el-text-color-regular);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  margin-bottom: 12px;\n  line-height: 1.5;\n}\n\n.doc-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0 4px;\n  border-top: 1px solid var(--el-border-color-lighter);\n  margin-top: auto;\n  position: relative;\n  z-index: 2;\n}\n\n.doc-time {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-weight: 500;\n}\n\n.doc-actions {\n  display: flex;\n  gap: 8px;\n  position: relative;\n  opacity: 0;\n  transform: translateY(10px);\n  transition: all 0.3s ease;\n}\n\n.new-doc-card {\n  border: 2px dashed var(--el-border-color);\n  background-color: var(--el-fill-color-light);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n}\n\n.new-doc-card:hover {\n  border-color: var(--el-color-primary);\n  color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.new-doc-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  color: var(--el-text-color-secondary);\n}\n\n.new-doc-content .el-icon {\n  font-size: 32px;\n}\n\n/* 分类卡片 */\n.category-cards {\n  display: flex;\n  gap: 16px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n}\n\n.category-card {\n  min-width: 180px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 8px;\n  padding: 12px 16px;\n  border: 2px solid transparent;\n  position: relative;\n  overflow: hidden;\n  background-color: var(--el-fill-color-light);\n}\n\n.category-card:hover {\n  transform: translateY(-4px);\n  box-shadow: var(--el-box-shadow-light);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-active {\n  transform: translateY(-2px);\n  box-shadow: var(--el-box-shadow-light);\n  border-color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-selected-indicator {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background-color: var(--el-color-primary);\n  transition: all 0.3s;\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  color: white;\n  margin-right: 12px;\n  transition: all 0.3s;\n}\n\n.category-active .category-icon {\n  transform: scale(1.1);\n}\n\n.category-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.category-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 15px;\n  font-weight: 500;\n  color: var(--el-text-color-primary);\n  transition: all 0.3s;\n}\n\n.category-active .category-info h4 {\n  color: var(--el-color-primary);\n  font-weight: 600;\n}\n\n.category-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n.form-tip {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 4px;\n}\n\n.category-management {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.category-list {\n  margin-bottom: 20px;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.color-preview {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n.color-value {\n  margin-left: 12px;\n  color: var(--el-text-color-regular);\n}\n\n.category-select {\n  width: 200px;\n}\n\n.doc-menu {\n  color: var(--el-text-color-secondary);\n  cursor: pointer;\n  position: relative;\n}\n\n/* 筛选状态栏样式 */\n.filter-status-bar {\n  background-color: var(--el-color-primary-light-9);\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  animation: slideDown 0.3s ease-in-out;\n  box-shadow: var(--el-box-shadow-light);\n  border-left: 4px solid var(--el-color-primary);\n  position: relative;\n  overflow: hidden;\n}\n\n/* 确保深色模式下的筛选状态栏有足够的对比度 */\n:deep(.dark .filter-status-bar) {\n  background-color: var(--el-color-primary-dark-2);\n  border-left-color: var(--el-color-primary-light-3);\n}\n\n.filter-bar-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.filter-title {\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--el-text-color-primary);\n}\n\n.filter-category {\n  padding: 4px 10px;\n  border-radius: 4px;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.filter-actions {\n  display: flex;\n  align-items: center;\n}\n\n.section {\n  margin-bottom: 32px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加动画 */\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.empty-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.loading-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 20;\n}\n\n.pagination-container :deep(.el-pagination) {\n  user-select: none;\n}\n\n.pagination-container :deep(.el-pagination button),\n.pagination-container :deep(.el-pagination .el-pager li) {\n  cursor: pointer !important;\n  z-index: 30;\n  position: relative;\n}\n\n.pagination-debug {\n  margin-top: 8px;\n  color: #909399;\n  font-size: 12px;\n  background-color: #f5f7fa;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n/* 添加以下CSS，确保按钮区域独立可点击 */\n.btn-container {\n  position: relative;\n  z-index: 5;\n}\n\n.doc-actions .el-button {\n  position: relative;\n  z-index: 5;\n}\n\n/* 确保下拉菜单显示在最上层 */\n:deep(.el-dropdown-menu) {\n  z-index: 3000 !important;\n}\n\n/* 调整卡片内容区域的点击行为 */\n.card-content-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n  min-height: 0;\n}\n\n.filter-controls {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加文档卡片的动画效果 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.fadeIn {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 临时导出容器样式 */\n.temp-export-container {\n  position: fixed;\n  top: -9999px;\n  left: -9999px;\n  width: 210mm; /* A4宽度 */\n  background: var(--el-bg-color);\n  padding: 20px;\n  z-index: -1;\n  font-family: SimSun, Arial, sans-serif;\n  font-size: 12pt;\n  line-height: 1.5;\n}\n\n.temp-export-container img {\n  max-width: 100%;\n  height: auto;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}