{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=template&id=6ea7d8d9&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1751549342385},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_createBlock","_component_el_card","shadow","_hoisted_4","_createVNode","_component_el_input","$setup","searchQuery","$event","placeholder","clearable","_hoisted_5","_Fragment","_renderList","departments","dept","index","key","id","_normalizeClass","selectedDept","onClick","_component_el_icon","_resolveDynamicComponent","getDeptIcon","icon","_toDisplayString","name","_component_el_badge","value","count","type","loading","_hoisted_7","header","_withCtx","_$setup$departments$$","_hoisted_8","_hoisted_9","_hoisted_10","contacts","length","_hoisted_11","_hoisted_12","_component_InfoFilled","_hoisted_13","contact","selectedContact","avatar_url","_hoisted_15","src","alt","_normalizeStyle","getAvatarStyle","getInitials","_hoisted_17","_hoisted_18","_hoisted_19","position","department_name","_component_el_empty","description","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_el_button","size","_cache","startChat","_component_ChatDotRound","plain","sendEmail","_component_Message","makePhoneCall","_component_Phone","_component_el_divider","_hoisted_29","_hoisted_30","_hoisted_31","_component_Promotion","_hoisted_32","_hoisted_33","_hoisted_34","_component_Iphone","_hoisted_35","_hoisted_36","mobile","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","phone","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","email","_hoisted_45","_hoisted_46","_component_Location","_hoisted_47","_hoisted_48","office","_hoisted_49","_hoisted_50","_component_User","_hoisted_51","_hoisted_52","_hoisted_53","_component_Ticket","_hoisted_54","_hoisted_55","employee_id","_hoisted_56","_hoisted_57","_component_Calendar","_hoisted_58","_hoisted_59","join_date","_hoisted_60","_hoisted_61","_component_Present","_hoisted_62","_hoisted_63","birthday","_hoisted_64","_hoisted_65","_component_UserFilled","_hoisted_66","_hoisted_67","manager","skills","_hoisted_68","_hoisted_69","_component_Medal","_hoisted_70","skill","_component_el_tag","effect","round","projects","_hoisted_71","_hoisted_72","_component_SetUp","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","default","scope","row","status"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"contact-wrapper\">\n      <!-- 左侧部门导航 -->\n      <div class=\"contact-sidebar\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\" shadow=\"hover\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索联系人...\"\n              clearable\n              prefix-icon=\"Search\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <el-icon><component :is=\"getDeptIcon(dept.icon)\" /></el-icon>\n              <span>{{ dept.name }}</span>\n              <el-badge :value=\"dept.count || 0\" type=\"info\" class=\"dept-badge\" />\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"contact-list\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span class=\"header-title\">{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n              <span class=\"contact-count\">{{ contacts.length }}人</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\" v-if=\"contact.avatar_url\" style=\"background-color: transparent;\">\n                <img :src=\"contact.avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n              </div>\n              <div class=\"contact-avatar\" v-else :style=\"getAvatarStyle(contact)\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name || '未分配部门' }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"contact-detail\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\" shadow=\"hover\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\" v-if=\"contacts[selectedContact].avatar_url\" style=\"background-color: transparent;\">\n              <img :src=\"contacts[selectedContact].avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n            </div>\n            <div class=\"detail-avatar\" v-else :style=\"getAvatarStyle(contacts[selectedContact])\">\n              {{ getInitials(contacts[selectedContact].name) }}\n            </div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name || '未分配部门' }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <el-icon><ChatDotRound /></el-icon> 发送消息\n                </el-button>\n                <el-button type=\"info\" size=\"small\" plain @click=\"sendEmail(contacts[selectedContact])\">\n                  <el-icon><Message /></el-icon> 发送邮件\n                </el-button>\n                <el-button type=\"success\" size=\"small\" plain @click=\"makePhoneCall(contacts[selectedContact])\">\n                  <el-icon><Phone /></el-icon> 电话联系\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider />\n\n          <div class=\"contact-sections\">\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><Promotion /></el-icon> 联系方式\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Iphone /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">手机号码</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].mobile || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Phone /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">工作电话</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].phone || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Message /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">电子邮箱</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].email || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Location /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">办公地点</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].office || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><User /></el-icon> 个人信息\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Ticket /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">员工编号</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].employee_id || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Calendar /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">入职日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].join_date || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Present /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">出生日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].birthday || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><UserFilled /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">直系领导</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].manager || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].skills && contacts[selectedContact].skills.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><Medal /></el-icon> 技能专长\n              </div>\n              <div class=\"skills-tags\">\n                <el-tag \n                  v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                  :key=\"index\"\n                  class=\"skill-tag\"\n                  effect=\"light\"\n                  round\n                >\n                  {{ skill }}\n                </el-tag>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].projects && contacts[selectedContact].projects.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><SetUp /></el-icon> 管理项目\n              </div>\n              <el-table \n                :data=\"contacts[selectedContact].projects || []\" \n                style=\"width: 100%\"\n                :border=\"false\"\n                size=\"small\"\n                stripe\n              >\n                <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n                <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n                <el-table-column prop=\"status\" label=\"状态\">\n                  <template #default=\"scope\">\n                    <el-tag \n                      :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                      size=\"small\"\n                    >\n                      {{ scope.row.status }}\n                    </el-tag>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\" :image-size=\"200\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { \n  Search, \n  InfoFilled, \n  ChatDotRound, \n  Message, \n  Phone, \n  Iphone,\n  User, \n  UserFilled, \n  Location, \n  Calendar, \n  Present, \n  Ticket, \n  Medal, \n  SetUp,\n  Promotion,\n  OfficeBuilding,\n  Briefcase,\n  House,\n  PieChart,\n  Money,\n  Headset,\n  Connection,\n  More\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Contact',\n  components: {\n    Search, \n    InfoFilled, \n    ChatDotRound, \n    Message, \n    Phone, \n    Iphone,\n    User, \n    UserFilled, \n    Location, \n    Calendar, \n    Present, \n    Ticket, \n    Medal, \n    SetUp,\n    Promotion,\n    OfficeBuilding,\n    Briefcase,\n    House,\n    PieChart,\n    Money,\n    Headset,\n    Connection,\n    More\n  },\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取部门图标\n    const getDeptIcon = (iconClass) => {\n      const iconMap = {\n        'bi bi-building': 'House',\n        'bi bi-people-fill': 'User',\n        'bi bi-person-workspace': 'UserFilled',\n        'bi bi-people': 'OfficeBuilding',\n        'bi bi-cash-coin': 'Money',\n        'bi bi-graph-up': 'PieChart',\n        'bi bi-code-slash': 'Connection',\n        'bi bi-box': 'Briefcase',\n        'bi bi-headset': 'Headset',\n        'bi bi-three-dots': 'More'\n      }\n      \n      return iconMap[iconClass] || 'House'\n    }\n    \n    // 生成头像样式\n    const getAvatarStyle = (contact) => {\n      if (!contact) return {}\n      \n      // 根据用户名生成一个固定的颜色\n      const colors = [\n        '#409EFF', '#67C23A', '#E6A23C', '#F56C6C', \n        '#909399', '#3B71CA', '#14A44D', '#DC4C64',\n        '#54B4D3', '#9FA6B2', '#3E4551', '#6610F2'\n      ]\n      \n      let hash = 0\n      if (contact.name) {\n        for (let i = 0; i < contact.name.length; i++) {\n          hash = contact.name.charCodeAt(i) + ((hash << 5) - hash)\n        }\n      }\n      \n      const colorIndex = Math.abs(hash) % colors.length\n      return { backgroundColor: colors[colorIndex] }\n    }\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        console.log('获取用户信息响应:', res)\n        \n        // 检查不同的响应格式\n        if (res && res.success && res.data) {\n          // 标准格式：{success: true, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从标准格式中获取到公司ID:', companyId.value)\n        } else if (res && res.code === 200 && res.data) {\n          // 另一种格式：{code: 200, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从code=200格式中获取到公司ID:', companyId.value)\n        } else if (res && typeof res === 'object') {\n          // 直接返回数据对象的格式\n          currentUser.value = res\n          companyId.value = res.company\n          console.log('从直接返回对象中获取到公司ID:', companyId.value)\n        } else {\n          console.error('无法解析用户信息响应:', res)\n          ElMessage.warning('用户信息格式异常')\n        }\n          \n          if (!companyId.value) {\n          console.error('当前用户没有关联公司信息:', currentUser.value)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n        return currentUser.value\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法加载部门列表')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        console.log('开始获取公司部门，公司ID:', companyId.value)\n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        console.log('获取公司部门响应:', res)\n        \n        if (res && res.success && res.data) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          console.log('联系人总数:', totalContactsCount)\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset',\n            '其他': 'bi bi-three-dots'  // 添加\"其他\"部门的图标\n          }\n          \n          // 确保每个部门都有count属性\n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count || 0  // 确保count属性存在，如果为null或undefined则设为0\n          }))\n          \n          // 统计没有部门的用户数量\n          const noDeptCount = await getContactsWithNoDept()\n          \n          // 添加\"其他\"部门选项 (如果有无部门用户)\n          if (noDeptCount > 0) {\n            formattedDepts.push({\n              id: 'no-dept', // 特殊ID用于标识没有部门的用户\n              name: '其他',\n              icon: deptIcons['其他'],\n              count: noDeptCount\n            })\n          }\n          \n          departments.value = [...allDepts, ...formattedDepts]\n          console.log('部门列表加载完成:', departments.value)\n        } else {\n          console.error('获取部门列表响应格式错误:', res)\n          ElMessage.error('获取部门列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人总数')\n          return 0\n        }\n        \n        console.log('开始获取联系人总数，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          return res.data.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取没有部门的用户数量\n    const getContactsWithNoDept = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人')\n          return 0\n        }\n        \n        console.log('开始获取无部门联系人，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 筛选没有部门的联系人\n          const contactsWithNoDept = res.data.filter(contact => \n            !contact.department || contact.department === null || contact.department === '' || \n            !contact.department_name || contact.department_name === null || contact.department_name === ''\n          )\n          return contactsWithNoDept.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取无部门联系人数量失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人列表')\n          ElMessage.warning('未找到当前用户所属公司，无法获取联系人')\n          loading.value.contacts = false\n          return\n        }\n        \n        console.log('开始获取联系人列表，公司ID:', companyId.value)\n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          const selectedDeptInfo = departments.value[selectedDept.value]\n          \n          if (selectedDeptInfo) {\n            if (selectedDeptInfo.id === 'no-dept') {\n              // 如果选择了\"其他\"部门，不需要添加部门参数，稍后会在结果中筛选\n              console.log('已选择\"其他\"部门，将筛选没有部门的联系人')\n            } else {\n              // 正常部门，添加部门ID参数\n              params.department = selectedDeptInfo.id\n            }\n          } else {\n            console.error('选择的部门索引无效:', selectedDept.value)\n          }\n        }\n        \n        console.log('请求联系人列表参数:', params)\n        const res = await request(url, { params })\n        console.log('获取联系人列表响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 处理返回的联系人数据，添加avatar_url\n          res.data.forEach(contact => {\n            // 检查联系人自身是否有avatar字段\n            if (contact.avatar) {\n              // 处理头像路径，将avatar转换为完整URL\n              const avatar = contact.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            } \n            // 检查联系人是否关联了用户，用户可能有头像\n            else if (contact.user && typeof contact.user === 'object' && contact.user.avatar) {\n              const avatar = contact.user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            // 如果用户ID是数字，可能需要额外获取用户信息\n            else if (contact.user && typeof contact.user === 'number') {\n              // 这里需要异步获取用户信息，但为简单起见，先设置一个标记\n              contact.need_fetch_avatar = true;\n            }\n\n            // 添加调试日志\n            console.log(`联系人 ${contact.name} 的头像信息:`, { \n              avatar: contact.avatar, \n              avatar_url: contact.avatar_url,\n              user: contact.user\n            });\n          });\n\n          // 如果选择了\"其他\"部门，筛选没有部门的联系人\n          if (selectedDept.value !== 0 && \n              departments.value[selectedDept.value] && \n              departments.value[selectedDept.value].id === 'no-dept') {\n            \n            contacts.value = res.data.filter(contact => \n              !contact.department || contact.department === null || contact.department === '' ||\n              !contact.department_name || contact.department_name === null || contact.department_name === ''\n            )\n            console.log('筛选出的无部门联系人:', contacts.value)\n          } else {\n            // 正常显示所有联系人或特定部门的联系人\n            contacts.value = res.data\n          }\n          \n          // 加载那些需要获取额外用户信息的联系人头像\n          contacts.value.forEach(async (contact, index) => {\n            if (contact.need_fetch_avatar) {\n              await fetchUserAvatar(contact, index);\n            }\n          });\n          \n          // 打印第一个联系人数据以查看结构\n          if (contacts.value && contacts.value.length > 0) {\n            console.log('联系人数据结构示例:', contacts.value[0])\n          } else {\n            console.log('未找到任何联系人')\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        } else {\n          console.error('获取联系人列表响应格式错误:', res)\n          ElMessage.error('获取联系人列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      try {\n      // 先获取当前用户信息\n        console.log('开始初始化联系人页面...')\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          console.error('未能获取到用户信息，中断初始化流程')\n          return\n        }\n        \n        if (!companyId.value) {\n          console.error('未找到用户所属公司ID，中断初始化流程')\n          return\n        }\n      \n      // 再加载部门列表\n        console.log('开始加载部门列表...')\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n        console.log('开始加载联系人列表...')\n      await fetchContacts()\n        \n        console.log('联系人页面初始化完成')\n      } catch (error) {\n        console.error('联系人页面初始化失败:', error)\n        ElMessage.error('页面加载失败：' + (error.message || '未知错误'))\n      }\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 直接使用联系人的ID创建聊天会话\n        // 因为联系人现在就是用户，所以ID直接用联系人的ID\n        const userId = parseInt(contact.id)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contact.id)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        // 首先获取现有的聊天会话列表\n        try {\n          console.log('正在检查是否已有与该联系人的聊天会话...')\n          const sessionsResponse = await axios.get('/api/chat/sessions/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n          \n          console.log('获取到的会话列表:', sessionsResponse.data)\n          \n          // 解析会话数据\n          let sessions = []\n          if (sessionsResponse.data && sessionsResponse.data.results) {\n            // 分页格式\n            sessions = sessionsResponse.data.results\n          } else if (sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n            // 直接数组格式\n            sessions = sessionsResponse.data\n          } else if (sessionsResponse.data && sessionsResponse.data.data && Array.isArray(sessionsResponse.data.data)) {\n            // 嵌套data格式\n            sessions = sessionsResponse.data.data\n          }\n          \n          // 查找是否有与当前联系人的单聊会话\n          // 单聊会话的特点是不是群组，且只有两个参与者\n          const existingSession = sessions.find(session => {\n            // 跳过群聊\n            if (session.is_group) return false\n            \n            // 确保有参与者数据且为数组\n            if (!session.participants || !Array.isArray(session.participants)) return false\n            \n            // 确保参与者数量为2（当前用户+目标联系人）\n            if (session.participants.length !== 2) return false\n            \n            // 查找是否有目标联系人在参与者中\n            const hasTargetUser = session.participants.some(participant => {\n              return participant.user && participant.user.id === userId\n            })\n            \n            return hasTargetUser\n          })\n          \n          if (existingSession) {\n            // 找到现有会话，直接跳转\n            console.log('找到现有会话:', existingSession)\n            router.push({\n              path: '/chat',\n              query: { id: existingSession.id }\n            })\n            return\n          } else {\n            console.log('未找到与该联系人的现有会话，将创建新会话')\n          }\n          \n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: contact.name ? `与${contact.name}的聊天` : '新聊天'\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n          throw error\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    // 添加获取用户头像的辅助函数\n    const fetchUserAvatar = async (contact, index) => {\n      if (!contact.user || typeof contact.user !== 'number') return;\n      \n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log(`为联系人 ${contact.name} 获取用户头像...`);\n        const response = await axios.get(`/api/auth/users/${contact.user}/`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        let userData = null;\n        if (response.data && response.data.success && response.data.data) {\n          userData = response.data.data;\n        } else if (response.data) {\n          userData = response.data;\n        }\n        \n        if (userData && userData.avatar) {\n          const avatar = userData.avatar;\n          if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n            contact.avatar_url = avatar;\n          } else if (avatar.startsWith('/')) {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n          } else {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n          }\n          console.log(`成功获取联系人 ${contact.name} 的头像:`, contact.avatar_url);\n          \n          // 这里需要通过Vue的响应式系统更新联系人数据\n          if (index !== undefined && index >= 0 && index < contacts.value.length) {\n            contacts.value[index] = { ...contact };\n          }\n        }\n      } catch (error) {\n        console.error(`获取联系人 ${contact.name} 的用户头像失败:`, error);\n      }\n    };\n\n    const sendEmail = (contact) => {\n      if (contact && contact.email) {\n        window.location.href = `mailto:${contact.email}`;\n      } else {\n        ElMessage.warning('该联系人没有提供邮箱地址');\n      }\n    }\n\n    const makePhoneCall = (contact) => {\n      if (contact && contact.mobile) {\n        window.location.href = `tel:${contact.mobile}`;\n      } else if (contact && contact.phone) {\n        window.location.href = `tel:${contact.phone}`;\n      } else {\n        ElMessage.warning('该联系人没有提供电话号码');\n      }\n    }\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat,\n      getDeptIcon,\n      getAvatarStyle,\n      sendEmail,\n      makePhoneCall\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.contact-wrapper {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 140px);\n}\n\n.contact-sidebar {\n  width: 240px;\n  flex-shrink: 0;\n}\n\n.contact-list {\n  width: 320px;\n  flex-shrink: 0;\n}\n\n.contact-detail {\n  flex: 1;\n  min-width: 0;\n}\n\n.contacts-nav-card,\n.contacts-list-card,\n.contact-detail-card {\n  height: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  transition: all 0.3s;\n  \n  &:hover {\n    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n  }\n}\n\n.search-box {\n  margin-bottom: 15px;\n}\n\n.contacts-nav {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.dept-item {\n  padding: 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  transition: all 0.3s ease;\n  \n  .el-icon {\n    font-size: 16px;\n    margin-right: 10px;\n    color: var(--el-text-color-secondary);\n  }\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n    color: var(--el-color-primary);\n    \n    .el-icon {\n      color: var(--el-color-primary);\n    }\n  }\n  \n  span {\n    flex: 1;\n    font-size: 14px;\n  }\n}\n\n.dept-badge {\n  margin-left: 5px;\n}\n\n.dept-badge :deep(.el-badge__content) {\n  background-color: #909399 !important;\n  color: white !important;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.contact-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  background-color: var(--el-fill-color-light);\n  padding: 2px 8px;\n  border-radius: 10px;\n}\n\n.search-info {\n  background-color: var(--el-fill-color-light);\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 6px;\n    color: var(--el-color-info);\n  }\n}\n\n.contacts-list {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.contact-item {\n  display: flex;\n  padding: 12px;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n  }\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-right: 12px;\n  font-size: 16px;\n}\n\n.contact-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.contact-name {\n  font-weight: 500;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-position {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-header {\n  display: flex;\n  margin-bottom: 24px;\n}\n\n.detail-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 24px;\n  margin-right: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.detail-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.detail-name {\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 6px;\n}\n\n.detail-position, .detail-department {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-actions {\n  margin-top: 12px;\n  display: flex;\n  gap: 10px;\n}\n\n.contact-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.contact-section {\n  margin-bottom: 0;\n}\n\n.section-title {\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 8px;\n    color: var(--el-color-primary);\n    font-size: 18px;\n  }\n}\n\n.contact-grid {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -10px;\n}\n\n.contact-item-box {\n  width: 50%;\n  padding: 0 10px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.contact-item-icon {\n  color: var(--el-color-info);\n  margin-right: 10px;\n  font-size: 16px;\n}\n\n.contact-item-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.contact-item-label {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-item-value {\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.skills-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.skill-tag {\n  margin: 0;\n}\n\n// 响应式布局\n@media (max-width: 1200px) {\n  .contact-wrapper {\n    flex-wrap: wrap;\n    height: auto;\n  }\n  \n  .contact-sidebar {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-nav {\n    max-height: 200px;\n  }\n  \n  .contact-list {\n    width: 40%;\n  }\n  \n  .contact-detail {\n    width: 60%;\n  }\n  \n  .contact-item-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .contact-wrapper {\n    flex-direction: column;\n  }\n  \n  .contact-list,\n  .contact-detail {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-list,\n  .contacts-nav {\n    max-height: 300px;\n  }\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n:deep(.el-tag) {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--text-color) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-tag.el-tag--info) {\n  background: var(--bg-color-tertiary) !important;\n  border-color: var(--border-color) !important;\n  color: var(--text-color) !important;\n}\n:deep(.el-tag.el-tag--success) {\n  background: var(--success-color) !important;\n  border-color: var(--success-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--primary) {\n  background: var(--primary-color) !important;\n  border-color: var(--primary-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--warning) {\n  background: var(--warning-color) !important;\n  border-color: var(--warning-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--danger) {\n  background: var(--danger-color) !important;\n  border-color: var(--danger-color) !important;\n  color: #fff !important;\n}\n:deep(.el-badge__content) {\n  background: var(--danger-color) !important;\n  color: #fff !important;\n}\n.contact-item:hover,\n.dept-item:hover,\n.search-info,\n.contact-count {\n  background-color: var(--hover-color) !important;\n}\n:deep(.el-table__row:hover > td.el-table__cell) {\n  background-color: var(--hover-color) !important;\n}\n\n.contacts-nav-card {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-card.contacts-nav-card) {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n.dept-item.active {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--primary-color) !important;\n}\n.dept-item {\n  background: transparent !important;\n}\n\n:deep(.el-badge__content.is-fixed) {\n  position: static !important;\n  transform: none !important;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}