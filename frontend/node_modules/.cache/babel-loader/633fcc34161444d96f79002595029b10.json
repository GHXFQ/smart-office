{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1747456513868},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","onMounted","watch","useRequest","ElMessage","useRouter","axios","name","setup","searchQuery","selectedDept","selectedContact","departments","id","icon","count","contacts","loading","currentUser","companyId","router","request","fetchCurrentUser","res","console","log","success","data","value","company","code","error","warning","message","fetchDepartments","totalContactsCount","getTotalContactsCount","allDepts","deptIcons","formattedDepts","map","dept","noDeptCount","getContactsWithNoDept","push","params","Array","isArray","length","contactsWithNoDept","filter","contact","department","department_name","fetchContacts","url","search","selectedDeptInfo","searchTimeout","clearTimeout","setTimeout","userData","getInitials","substring","startChat","token","localStorage","getItem","currentUserResponse","get","headers","currentUserId","userId","parseInt","isNaN","sessionsResponse","sessions","results","existingSession","find","session","is_group","participants","hasTargetUser","some","participant","user","path","query","chatData","participant_ids","title","chatResponse","post","sessionId","response","status","errorMessage","detail","JSON","stringify"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"row\">\n      <!-- 左侧部门导航 -->\n      <div class=\"col-md-2\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\">\n          <div class=\"search-box mb-3\">\n            <i class=\"bi bi-search search-icon\"></i>\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索全公司联系人...\"\n              clearable\n              class=\"search-input\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <i :class=\"dept.icon\"></i>\n              <span>{{ dept.name }}</span>\n              <span class=\"badge\">{{ dept.count }}</span>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"col-md-4\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span>{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"col-md-6\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\">{{ getInitials(contacts[selectedContact].name) }}</div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <i class=\"bi bi-chat-dots\"></i> 发送消息\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-envelope\"></i> 发送邮件\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-telephone\"></i> 电话联系\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider></el-divider>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">联系方式</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">手机号码</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].mobile }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">工作电话</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].phone }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">电子邮箱</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].email }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">办公地点</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].office }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">个人信息</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">员工编号</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].employee_id }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">入职日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].join_date }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">出生日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].birthday }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">直系领导</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].manager }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">技能专长</div>\n            <div class=\"skills-tags\">\n              <el-tag \n                v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                :key=\"index\"\n                class=\"mr-2 mb-2\"\n              >\n                {{ skill }}\n              </el-tag>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">管理项目</div>\n            <el-table :data=\"contacts[selectedContact].projects || []\" style=\"width: 100%\">\n              <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\">\n                <template #default=\"scope\">\n                  <el-tag \n                    :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                  >\n                    {{ scope.row.status }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'Contact',\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        console.log('获取用户信息响应:', res)\n        \n        // 检查不同的响应格式\n        if (res && res.success && res.data) {\n          // 标准格式：{success: true, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从标准格式中获取到公司ID:', companyId.value)\n        } else if (res && res.code === 200 && res.data) {\n          // 另一种格式：{code: 200, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从code=200格式中获取到公司ID:', companyId.value)\n        } else if (res && typeof res === 'object') {\n          // 直接返回数据对象的格式\n          currentUser.value = res\n          companyId.value = res.company\n          console.log('从直接返回对象中获取到公司ID:', companyId.value)\n        } else {\n          console.error('无法解析用户信息响应:', res)\n          ElMessage.warning('用户信息格式异常')\n        }\n          \n          if (!companyId.value) {\n          console.error('当前用户没有关联公司信息:', currentUser.value)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n        return currentUser.value\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法加载部门列表')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        console.log('开始获取公司部门，公司ID:', companyId.value)\n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        console.log('获取公司部门响应:', res)\n        \n        if (res && res.success && res.data) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          console.log('联系人总数:', totalContactsCount)\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset',\n            '其他': 'bi bi-three-dots'  // 添加\"其他\"部门的图标\n          }\n          \n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count\n          }))\n          \n          // 统计没有部门的用户数量\n          const noDeptCount = await getContactsWithNoDept()\n          \n          // 添加\"其他\"部门选项 (如果有无部门用户)\n          if (noDeptCount > 0) {\n            formattedDepts.push({\n              id: 'no-dept', // 特殊ID用于标识没有部门的用户\n              name: '其他',\n              icon: deptIcons['其他'],\n              count: noDeptCount\n            })\n          }\n          \n          departments.value = [...allDepts, ...formattedDepts]\n          console.log('部门列表加载完成:', departments.value)\n        } else {\n          console.error('获取部门列表响应格式错误:', res)\n          ElMessage.error('获取部门列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人总数')\n          return 0\n        }\n        \n        console.log('开始获取联系人总数，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          return res.data.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取没有部门的用户数量\n    const getContactsWithNoDept = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人')\n          return 0\n        }\n        \n        console.log('开始获取无部门联系人，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 筛选没有部门的联系人\n          const contactsWithNoDept = res.data.filter(contact => \n            !contact.department || contact.department === null || contact.department === '' || \n            !contact.department_name || contact.department_name === null || contact.department_name === ''\n          )\n          return contactsWithNoDept.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取无部门联系人数量失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人列表')\n          ElMessage.warning('未找到当前用户所属公司，无法获取联系人')\n          loading.value.contacts = false\n          return\n        }\n        \n        console.log('开始获取联系人列表，公司ID:', companyId.value)\n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          const selectedDeptInfo = departments.value[selectedDept.value]\n          \n          if (selectedDeptInfo) {\n            if (selectedDeptInfo.id === 'no-dept') {\n              // 如果选择了\"其他\"部门，不需要添加部门参数，稍后会在结果中筛选\n              console.log('已选择\"其他\"部门，将筛选没有部门的联系人')\n            } else {\n              // 正常部门，添加部门ID参数\n              params.department = selectedDeptInfo.id\n            }\n          } else {\n            console.error('选择的部门索引无效:', selectedDept.value)\n          }\n        }\n        \n        console.log('请求联系人列表参数:', params)\n        const res = await request(url, { params })\n        console.log('获取联系人列表响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 如果选择了\"其他\"部门，筛选没有部门的联系人\n          if (selectedDept.value !== 0 && \n              departments.value[selectedDept.value] && \n              departments.value[selectedDept.value].id === 'no-dept') {\n            \n            contacts.value = res.data.filter(contact => \n              !contact.department || contact.department === null || contact.department === '' ||\n              !contact.department_name || contact.department_name === null || contact.department_name === ''\n            )\n            console.log('筛选出的无部门联系人:', contacts.value)\n          } else {\n            // 正常显示所有联系人或特定部门的联系人\n            contacts.value = res.data\n          }\n          \n          // 打印第一个联系人数据以查看结构\n          if (contacts.value && contacts.value.length > 0) {\n            console.log('联系人数据结构示例:', contacts.value[0])\n          } else {\n            console.log('未找到任何联系人')\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        } else {\n          console.error('获取联系人列表响应格式错误:', res)\n          ElMessage.error('获取联系人列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      try {\n      // 先获取当前用户信息\n        console.log('开始初始化联系人页面...')\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          console.error('未能获取到用户信息，中断初始化流程')\n          return\n        }\n        \n        if (!companyId.value) {\n          console.error('未找到用户所属公司ID，中断初始化流程')\n          return\n        }\n      \n      // 再加载部门列表\n        console.log('开始加载部门列表...')\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n        console.log('开始加载联系人列表...')\n      await fetchContacts()\n        \n        console.log('联系人页面初始化完成')\n      } catch (error) {\n        console.error('联系人页面初始化失败:', error)\n        ElMessage.error('页面加载失败：' + (error.message || '未知错误'))\n      }\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 直接使用联系人的ID创建聊天会话\n        // 因为联系人现在就是用户，所以ID直接用联系人的ID\n        const userId = parseInt(contact.id)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contact.id)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        // 首先获取现有的聊天会话列表\n        try {\n          console.log('正在检查是否已有与该联系人的聊天会话...')\n          const sessionsResponse = await axios.get('/api/chat/sessions/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n          \n          console.log('获取到的会话列表:', sessionsResponse.data)\n          \n          // 解析会话数据\n          let sessions = []\n          if (sessionsResponse.data && sessionsResponse.data.results) {\n            // 分页格式\n            sessions = sessionsResponse.data.results\n          } else if (sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n            // 直接数组格式\n            sessions = sessionsResponse.data\n          } else if (sessionsResponse.data && sessionsResponse.data.data && Array.isArray(sessionsResponse.data.data)) {\n            // 嵌套data格式\n            sessions = sessionsResponse.data.data\n          }\n          \n          // 查找是否有与当前联系人的单聊会话\n          // 单聊会话的特点是不是群组，且只有两个参与者\n          const existingSession = sessions.find(session => {\n            // 跳过群聊\n            if (session.is_group) return false\n            \n            // 确保有参与者数据且为数组\n            if (!session.participants || !Array.isArray(session.participants)) return false\n            \n            // 确保参与者数量为2（当前用户+目标联系人）\n            if (session.participants.length !== 2) return false\n            \n            // 查找是否有目标联系人在参与者中\n            const hasTargetUser = session.participants.some(participant => {\n              return participant.user && participant.user.id === userId\n            })\n            \n            return hasTargetUser\n          })\n          \n          if (existingSession) {\n            // 找到现有会话，直接跳转\n            console.log('找到现有会话:', existingSession)\n            router.push({\n              path: '/chat',\n              query: { id: existingSession.id }\n            })\n            return\n          } else {\n            console.log('未找到与该联系人的现有会话，将创建新会话')\n          }\n          \n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: contact.name ? `与${contact.name}的聊天` : '新聊天'\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n          throw error\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat\n    }\n  }\n}\n</script>\n\n<style scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.contacts-nav-card,\n.contacts-nav {\n  height: 700px;\n}\n\n.contacts-list-card,\n.contacts-list {\n  height: 700px;\n}\n\n.contacts-nav,\n.contacts-list {\n  overflow-y: auto;\n}\n\n.dept-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  color: #495057;\n  transition: all 0.2s;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-bottom: 5px;\n}\n\n.dept-item:hover {\n  background-color: #f8f9fa;\n  color: #007bff;\n}\n\n.dept-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n}\n\n.dept-item i {\n  margin-right: 10px;\n  font-size: 18px;\n  width: 24px;\n  text-align: center;\n}\n\n.dept-item .badge {\n  margin-left: auto;\n  background-color: #6c757d;\n  color: white;\n  font-weight: 500;\n  padding: 4px 8px;\n  border-radius: 10px;\n}\n\n.contact-item {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n}\n\n.contact-item:hover {\n  background-color: #f8f9fa;\n}\n\n.contact-item.active {\n  background-color: #e9f4ff;\n  border-left: 3px solid #007bff;\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.contact-info {\n  flex-grow: 1;\n}\n\n.contact-name {\n  font-weight: 500;\n  color: #343a40;\n  margin-bottom: 3px;\n}\n\n.contact-position {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.contact-detail-card {\n  min-height: 700px;\n}\n\n.contact-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.detail-avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  font-size: 30px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.detail-info {\n  flex-grow: 1;\n}\n\n.detail-name {\n  font-size: 24px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 5px;\n}\n\n.detail-position {\n  font-size: 16px;\n  color: #6c757d;\n  margin-bottom: 5px;\n}\n\n.detail-department {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.contact-actions {\n  display: flex;\n}\n\n.contact-actions .el-button {\n  margin-right: 10px;\n}\n\n.contact-section {\n  margin-bottom: 25px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.contact-row {\n  display: flex;\n  margin-bottom: 12px;\n}\n\n.contact-label {\n  width: 100px;\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.contact-value {\n  color: #343a40;\n}\n\n.search-box {\n  position: relative;\n}\n\n.search-input {\n  padding-left: 35px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  color: #6c757d;\n  z-index: 2;\n}\n\n.skills-tags .el-tag {\n  margin-right: 8px;\n  margin-bottom: 8px;\n}\n\n.search-info {\n  padding: 8px 15px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 13px;\n  color: #6c757d;\n  display: flex;\n  align-items: center;\n}\n\n.search-info i {\n  margin-right: 5px;\n  font-size: 14px;\n  color: #17a2b8;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}