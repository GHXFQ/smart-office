{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue?vue&type=template&id=58ef6f92","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue","mtime":1749710892814},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_createVNode","_component_el_card","_hoisted_4","_component_el_input","$setup","searchQuery","$event","placeholder","clearable","Search","onInput","handleSearch","_hoisted_5","_Fragment","_renderList","categories","category","index","key","id","_normalizeClass","selectedCategory","onClick","selectCategory","style","_normalizeStyle","color","_component_el_icon","size","_createBlock","_resolveDynamicComponent","icon","_hoisted_7","_toDisplayString","name","_hoisted_8","document_count","isAdmin","_component_el_button","type","_cache","showCategoryDialog","_component_Plus","_hoisted_9","_hoisted_10","_hoisted_11","_component_el_checkbox","filters","types","pdf","onChange","applyFilters","doc","xls","ppt","img","txt","_hoisted_12","_hoisted_13","_component_el_radio_group","status","_component_el_radio","value","_hoisted_14","_hoisted_15","date","_hoisted_16","_component_el_date_picker","dateRange","format","_hoisted_17","_hoisted_18","_hoisted_19","currentCategoryName","totalDocs","_component_el_tag","_hoisted_20","openUploadDialog","_component_Upload","buildingVisible","_component_Crop","_component_FolderAdd","documents","length","args","_hoisted_21","getFileIcon","_hoisted_22","_hoisted_23","title","_hoisted_24","creator","_hoisted_25","tags","tag","i","_hoisted_26","circle","_withModifiers","previewDocument","_component_View","downloadDocument","_component_Download","_component_el_dropdown","trigger","teleported","dropdown","_withCtx","_component_el_dropdown_menu","_component_el_dropdown_item","shareDocument","_component_Share","editDocument","_component_Edit","_ctx","renameDocument","_component_EditPen","moveDocument","_component_FolderOpened","starDocument","_component_Star","divided","deleteDocument","_component_Delete","_component_More","_hoisted_27","_component_el_pagination","background","layout","total","pageSize","currentPage","onCurrentChange","handlePageChange","onSizeChange","handleSizeChange","_component_el_dialog","uploadVisible","width","handleCloseUploadDialog","footer","_hoisted_28","handleCancelUpload","submitUpload","loading","uploading","_component_el_form","ref","model","uploadForm","rules","uploadRules","_component_el_form_item","label","prop","description","rows","_component_el_select","filter","c","cat","idx","_component_el_option","_component_el_upload","drag","action","handleFileChange","handleRemove","limit","beforeUpload","handleUploadError","tip","_component_upload_filled","_hoisted_29","_hoisted_30","_hoisted_31","resetCategoryForm","categoryLoading","_hoisted_32","_component_Loading","_hoisted_33","_component_el_empty","_hoisted_34","_hoisted_35","backgroundColor","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","plain","editCategory","handleDeleteCategory","showAddCategoryForm","_hoisted_41","_hoisted_42","editingCategory","cancelCategoryForm","categoryForm","required","_hoisted_43","_component_Document","_hoisted_44","_component_Files","_hoisted_45","_component_Tickets","_hoisted_46","_component_DataAnalysis","_hoisted_47","_component_PictureFilled","_component_el_color_picker","_hoisted_48","saveCategoryForm","_component_KnowledgeBuilder","onBuildCompleted","handleBuildCompleted","onBuildFailed","handleBuildFailed"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-container\">\n    <div class=\"row\">\n      <!-- 左侧导航 -->\n      <div class=\"col-lg-3\">\n        <el-card class=\"category-card\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索文档...\"\n              clearable\n              :prefix-icon=\"Search\"\n              @input=\"handleSearch\"\n            ></el-input>\n          </div>\n          \n          <div class=\"category-list\">\n            <div v-for=\"(category, index) in categories\" :key=\"category.id || index\" \n                 class=\"category-item\" \n                 :class=\"{'active': selectedCategory === (category.id || index)}\"\n                 @click=\"selectCategory(category.id || index)\">\n              <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                <el-icon :size=\"20\" color=\"white\">\n                  <component :is=\"category.icon\"></component>\n                </el-icon>\n              </div>\n              <span class=\"category-name\">{{ category.name }}</span>\n              <span class=\"category-count\">{{ category.document_count || 0 }}</span>\n            </div>\n            \n            <el-button \n              v-if=\"isAdmin\"\n              type=\"primary\" \n              size=\"small\" \n              class=\"add-category-btn\"\n              @click=\"showCategoryDialog = true\">\n              <el-icon><Plus /></el-icon> 添加分类\n            </el-button>\n          </div>\n          \n          <div class=\"filter-section\">\n            <h6>筛选条件</h6>\n            <div class=\"filter-group\">\n              <h6>文件类型</h6>\n              <div class=\"filter-options\">\n                <el-checkbox v-model=\"filters.types.pdf\" @change=\"applyFilters\">PDF文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.doc\" @change=\"applyFilters\">Word文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.xls\" @change=\"applyFilters\">Excel表格</el-checkbox>\n                <el-checkbox v-model=\"filters.types.ppt\" @change=\"applyFilters\">PPT演示文稿</el-checkbox>\n                <el-checkbox v-model=\"filters.types.img\" @change=\"applyFilters\">图片</el-checkbox>\n                <el-checkbox v-model=\"filters.types.txt\" @change=\"applyFilters\">文本文件</el-checkbox>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>文档状态</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.status\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部状态</el-radio>\n                  <el-radio :value=\"'completed'\">处理完成</el-radio>\n                  <el-radio :value=\"'processing'\">处理中</el-radio>\n                  <el-radio :value=\"'pending'\">待处理</el-radio>\n                  <el-radio :value=\"'failed'\">处理失败</el-radio>\n                </el-radio-group>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>创建日期</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.date\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部时间</el-radio>\n                  <el-radio :value=\"'today'\">今天</el-radio>\n                  <el-radio :value=\"'week'\">本周</el-radio>\n                  <el-radio :value=\"'month'\">本月</el-radio>\n                  <el-radio :value=\"'custom'\">自定义</el-radio>\n                </el-radio-group>\n                <div v-if=\"filters.date === 'custom'\" class=\"mt-2\">\n                  <el-date-picker\n                    v-model=\"filters.dateRange\"\n                    type=\"daterange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    format=\"YYYY/MM/DD\"\n                    style=\"width: 100%\"\n                    @change=\"applyFilters\"\n                  ></el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </div>\n      \n      <!-- 右侧内容区 -->\n      <div class=\"col-lg-9\">\n        <el-card class=\"mb-3\">\n          <div class=\"card-header-flex\">\n            <div class=\"header-title\">\n              <span>{{ currentCategoryName }}</span>\n              <el-tag v-if=\"totalDocs > 0\" class=\"ml-2\">{{ totalDocs }}个文档</el-tag>\n            </div>\n            <div class=\"header-actions\">\n              <el-button type=\"primary\" @click=\"openUploadDialog\">\n                <el-icon><Upload /></el-icon> 上传文档\n              </el-button>\n              <el-button type=\"success\" @click=\"buildingVisible = true\">\n                <el-icon><Crop /></el-icon> 构建知识库\n              </el-button>\n              <el-button v-if=\"isAdmin\" @click=\"showCategoryDialog = true\">\n                <el-icon><FolderAdd /></el-icon> 管理分类\n              </el-button>\n            </div>\n          </div>\n          \n          <div class=\"upload-zone\" @click=\"openUploadDialog\" v-if=\"documents.length === 0\">\n            <el-icon class=\"upload-icon\"><Upload /></el-icon>\n            <div class=\"upload-text\">点击或拖拽文件到此处上传</div>\n            <div class=\"upload-hint\">支持单个或批量上传，最大支持10MB</div>\n          </div>\n          \n          <div v-else class=\"document-list\">\n            <div v-for=\"(doc, index) in documents\" :key=\"index\" class=\"document-card\">\n              <div class=\"document-icon\" :class=\"'icon-' + doc.type\">\n                <component :is=\"getFileIcon(doc.type)\"></component>\n              </div>\n              <div class=\"document-content\">\n                <div class=\"document-title\">{{ doc.title }}</div>\n                <div class=\"document-info\">\n                  <span>{{ doc.creator }} · {{ doc.date }}</span>\n                  <div class=\"document-tags\">\n                    <span v-for=\"(tag, i) in doc.tags\" :key=\"i\" class=\"tag\">{{ tag }}</span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"document-actions\">\n                <el-button circle size=\"small\" @click.stop=\"previewDocument(doc)\">\n                  <el-icon><View /></el-icon>\n                </el-button>\n                <el-button circle size=\"small\" @click.stop=\"downloadDocument(doc)\">\n                  <el-icon><Download /></el-icon>\n                </el-button>\n                <el-dropdown trigger=\"click\" :teleported=\"true\">\n                  <el-button circle size=\"small\">\n                    <el-icon><More /></el-icon>\n                  </el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                      <el-dropdown-item @click=\"shareDocument(doc)\">\n                        <el-icon><Share /></el-icon> 分享\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"editDocument(doc)\">\n                        <el-icon><Edit /></el-icon> 编辑\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"renameDocument(doc)\">\n                        <el-icon><EditPen /></el-icon> 重命名\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"moveDocument(doc)\">\n                        <el-icon><FolderOpened /></el-icon> 移动到\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"starDocument(doc)\">\n                        <el-icon><Star /></el-icon> 收藏\n                      </el-dropdown-item>\n                      <el-dropdown-item divided @click=\"deleteDocument(doc)\">\n                        <el-icon><Delete /></el-icon> 删除\n                      </el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              v-if=\"documents.length > 0\"\n              background\n              layout=\"sizes, prev, pager, next, total\"\n              :total=\"totalDocs\"\n              :page-size=\"pageSize\"\n              :page-sizes=\"[10, 20, 50, 100]\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n              @size-change=\"handleSizeChange\"\n            ></el-pagination>\n          </div>\n        </el-card>\n      </div>\n    </div>\n    \n    <!-- 文件上传对话框 -->\n    <el-dialog\n      v-model=\"uploadVisible\"\n      title=\"上传文档\"\n      width=\"500px\"\n      :before-close=\"handleCloseUploadDialog\"\n    >\n      <el-form ref=\"uploadFormRef\" :model=\"uploadForm\" :rules=\"uploadRules\">\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"uploadForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"uploadForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"文档文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"javascript:void(0);\"\n            :auto-upload=\"false\"\n            :on-change=\"handleFileChange\"\n            :on-remove=\"handleRemove\"\n            :limit=\"1\"\n            :before-upload=\"beforeUpload\"\n            :on-error=\"handleUploadError\"\n            ref=\"uploadRef\"\n          >\n            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            <div class=\"el-upload__text\">\n              拖拽文件到此处或<em>点击上传</em>\n            </div>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                <strong>仅支持</strong>上传 txt, pdf, doc, docx, md, ppt, pptx, xls, xlsx 格式文件，单个文件不超过10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCancelUpload\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">上传</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"showCategoryDialog\"\n      title=\"分类管理\"\n      width=\"650px\"\n    >\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n          <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button>\n          </div>\n          \n          <div v-if=\"categoryLoading\" class=\"text-center p-4\">\n            <el-icon class=\"is-loading\"><Loading /></el-icon> 加载中...\n          </div>\n          \n          <div v-else-if=\"categories.length <= 1\" class=\"empty-categories\">\n            <el-empty description=\"\" />\n          </div>\n          \n          <div v-else class=\"category-items\">\n            <div v-for=\"(category, index) in categories.filter(c => c.id !== 'all')\" :key=\"index\" class=\"category-list-item\">\n              <div class=\"category-info\">\n                <div class=\"category-color\" :style=\"{ backgroundColor: category.color }\"></div>\n                <div class=\"category-name-section\">\n                  <span class=\"category-name\">{{ category.name }}</span>\n                  <span class=\"category-desc\">{{ category.description }}</span>\n                </div>\n                <span class=\"category-count\">{{ category.document_count || 0 }}个文档</span>\n              </div>\n              \n              <div class=\"category-actions\">\n                <el-button type=\"primary\" size=\"small\" plain @click=\"editCategory(category)\">\n                  <el-icon><Edit /></el-icon>\n                </el-button>\n                <el-button type=\"danger\" size=\"small\" plain @click=\"handleDeleteCategory(category)\">\n                  <el-icon><Delete /></el-icon>\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAddCategoryForm\" class=\"category-form-section\">\n          <div class=\"section-header\">\n            <h5>{{ editingCategory ? '编辑分类' : '新增分类' }}</h5>\n            <el-button size=\"small\" @click=\"cancelCategoryForm\">\n              取消\n            </el-button>\n          </div>\n          \n          <el-form :model=\"categoryForm\" label-width=\"80px\">\n            <el-form-item label=\"分类名称\" required>\n              <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"分类描述\">\n              <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"2\" placeholder=\"请输入分类描述\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"图标\">\n              <el-select v-model=\"categoryForm.icon\" placeholder=\"选择图标\" style=\"width: 100%\">\n                <el-option value=\"Document\" label=\"文档\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Document /></el-icon> <span class=\"ml-2\">文档</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Files\" label=\"文件夹\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Files /></el-icon> <span class=\"ml-2\">文件夹</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Tickets\" label=\"票据\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Tickets /></el-icon> <span class=\"ml-2\">票据</span>\n                  </div>\n                </el-option>\n                <el-option value=\"DataAnalysis\" label=\"数据分析\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><DataAnalysis /></el-icon> <span class=\"ml-2\">数据分析</span>\n                  </div>\n                </el-option>\n                <el-option value=\"PictureFilled\" label=\"图片\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><PictureFilled /></el-icon> <span class=\"ml-2\">图片</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"颜色\">\n              <el-color-picker v-model=\"categoryForm.color\" show-alpha></el-color-picker>\n              <span class=\"ml-2\">{{ categoryForm.color }}</span>\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\n              <el-button @click=\"cancelCategoryForm\">取消</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 知识库构建对话框组件 -->\n    <KnowledgeBuilder \n      v-model=\"buildingVisible\"\n      @build-completed=\"handleBuildCompleted\"\n      @build-failed=\"handleBuildFailed\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport axios from 'axios'\nimport { \n  Search, Upload, FolderAdd, View, Download, More, Share, \n  Edit, EditPen, FolderOpened, Star, Delete, Document, \n  Files, Tickets, DataAnalysis, PictureFilled, UploadFilled,\n  Loading, List, Grid, Crop, Plus, ArrowDown, ArrowUp\n} from '@element-plus/icons-vue'\nimport { getCategories, getDocuments, getDocumentChunks, uploadDocument, deleteDocument as apiDeleteDocument, deleteCategory, updateCategory, addCategory } from '@/api/knowledge'\nimport KnowledgeBuilder from '@/components/KnowledgeBuilder.vue'\nimport request from '@/utils/request'\n\nexport default {\n  name: 'Knowledge',\n  components: {\n    KnowledgeBuilder,\n    Plus,\n    Upload,\n    Delete,\n    Refresh,\n    View,\n    Folder,\n    Document,\n    Search,\n    ArrowDown,\n    ArrowUp\n  },\n  setup() {\n    const API_URL = '/api/knowledge'\n    \n    // 状态变量\n    const searchQuery = ref('')\n    const selectedCategory = ref('all')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const uploadVisible = ref(false)\n    const showCategoryDialog = ref(false)\n    const showAddCategoryForm = ref(false)\n    const showChunksDialog = ref(false)\n    const editingCategory = ref(null)\n    const viewMode = ref('list')\n    const sortOrder = ref('-created_at')\n    const categoryLoading = ref(false)\n    const loading = ref(false)\n    const uploading = ref(false)\n    const chunksLoading = ref(false)\n    const isAdmin = ref(true) // 实际应用中从用户会话获取\n    const selectedDocument = ref(null)\n    const documentChunks = ref([])\n    const uploadFormRef = ref(null)\n    const uploadRef = ref(null)\n    const totalDocs = ref(0)\n    \n    // 上传表单\n    const uploadForm = reactive({\n      title: '',\n      description: '',\n      file: null,\n      category: null,\n      tags: '',\n      chunk_size: 500,\n      chunk_overlap: 50,\n      is_public: true\n    })\n    \n    // 上传表单验证规则\n    const uploadRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' }\n      ],\n      file: [\n        { required: true, message: '请上传文件', trigger: 'change' }\n      ]\n    }\n    \n    // 分类表单\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      icon: 'Document',\n      color: '#409EFF'\n    })\n    \n    // 筛选条件\n    const filters = reactive({\n      types: {\n        pdf: false,\n        doc: false,\n        xls: false,\n        ppt: false,\n        img: false,\n        txt: false\n      },\n      status: 'all',\n      date: 'all',\n      dateRange: []\n    })\n    \n    // 知识分类\n    const categories = ref([\n      { id: 'all', name: '全部文档', icon: 'Files', color: '#007bff', document_count: 0 }\n    ])\n    \n    // 文档列表\n    const documents = ref([])\n    \n    // 计算属性\n    const currentCategoryName = computed(() => {\n      const category = categories.value.find(cat => cat.id === selectedCategory.value)\n      return category ? category.name : '全部文档'\n    })\n    \n    const processingCount = computed(() => {\n      return documents.value.filter(doc => doc.status === 'processing').length\n    })\n    \n    // 知识库构建相关状态\n    const buildingVisible = ref(false)\n    \n    const buildStatus = ref({\n      status: 'not_started',\n      message: '尚未开始',\n      last_built_at: null,\n      progress: 0,\n      log: '暂无日志信息。'\n    })\n    const pollInterval = ref(null)\n    const showBuildLog = ref(false)\n    \n    // 方法\n    const fetchCategories = async () => {\n      categoryLoading.value = true\n      console.log('开始获取知识库分类...')\n      try {\n        // console.log('请求URL:', `${API_URL}/categories/`) // 已被实际API调用取代\n        const response = await getCategories() // API call for specific categories\n        console.log('获取分类响应:', response)\n        \n        let categoryList = []\n        \n        // 处理不同格式的响应 (for specific categories)\n        if (response) {\n          if (response.results && Array.isArray(response.results)) {\n            categoryList = response.results\n          } \n          else if (Array.isArray(response)) {\n            categoryList = response\n          } \n          else if (typeof response === 'object') {\n            const possibleArrayFields = ['data', 'categories', 'items'];\n            for (const field of possibleArrayFields) {\n              if (response[field] && Array.isArray(response[field])) {\n                categoryList = response[field];\n                break;\n              }\n            }\n          }\n        }\n\n        // Fetch the grand total of all documents\n        let grandTotalAllDocuments = 0;\n        try {\n          // Lightweight request to get the total count of all documents\n          const allDocsResponse = await getDocuments({ page: 1, page_size: 1 }); \n          if (allDocsResponse && Object.prototype.hasOwnProperty.call(allDocsResponse, 'count')) {\n            grandTotalAllDocuments = allDocsResponse.count;\n            console.log('获取到全部文档总数:', grandTotalAllDocuments);\n          } else {\n            console.warn('未能从 getDocuments 响应中获取总数 count:', allDocsResponse);\n          }\n        } catch (docError) {\n          console.error('获取全部文档总数失败:', docError);\n          // 保留 grandTotalAllDocuments = 0 或根据需要处理错误\n        }\n        \n        // 创建 \"全部文档\" 分类\n        const allCategory = { \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: grandTotalAllDocuments // 使用获取到的真实总数\n        }\n        \n        if (categoryList && categoryList.length > 0) {\n          console.log('找到分类数据，数量:', categoryList.length);\n          // 不再通过累加其他分类来计算 allCategory.document_count\n          categories.value = [allCategory, ...categoryList]\n        } else {\n          console.warn('未找到有效的分类数据');\n          if (response && response.message) {\n            ElMessage.warning(response.message);\n          } else if (!response && !categoryList.length) { // Only show if response was truly empty and no list was parsed\n             // 删除警告消息\n          }\n          categories.value = [allCategory]; // 至少显示\"全部文档\"分类\n        }\n      } catch (error) {\n        console.error('获取分类失败:', error)\n        if (error.response) {\n          console.error('错误响应状态:', error.response.status)\n          console.error('错误响应数据:', error.response.data)\n        } else if (error.message && error.message.includes('message channel closed')) {\n          console.warn('通信通道关闭：', error.message);\n          // 静默处理此类错误，不向用户显示\n        } else {\n          ElMessage.error('无法加载知识库分类，请检查网络连接或联系管理员')\n        }\n        // 确保至少有\"全部\"分类可显示\n        categories.value = [{ \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }];\n      } finally {\n        categoryLoading.value = false\n      }\n    }\n    \n    const fetchDocuments = async () => {\n      loading.value = true\n      try {\n        // 构建参数对象\n        const params = {\n          page: currentPage.value,\n          page_size: pageSize.value,\n          ordering: sortOrder.value\n        }\n        \n        // 添加筛选条件\n        if (selectedCategory.value && selectedCategory.value !== 'all') {\n          params.category = selectedCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        // 添加文件类型筛选\n        const selectedTypes = []\n        for (const [type, selected] of Object.entries(filters.types)) {\n          if (selected) selectedTypes.push(type)\n        }\n        if (selectedTypes.length > 0) {\n          params.file_type = selectedTypes.join(',')\n        }\n        \n        // 添加状态筛选\n        if (filters.status !== 'all') {\n          params.status = filters.status\n        }\n        \n        // 添加日期筛选\n        if (filters.date !== 'all') {\n          const now = new Date()\n          let startDate = new Date()\n          \n          if (filters.date === 'today') {\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'week') {\n            startDate.setDate(now.getDate() - now.getDay())\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'month') {\n            startDate.setDate(1)\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'custom' && filters.dateRange.length === 2) {\n            startDate = filters.dateRange[0]\n            const endDate = filters.dateRange[1]\n            params.created_after = formatDateForAPI(startDate)\n            params.created_before = formatDateForAPI(endDate)\n          } else {\n            params.created_after = formatDateForAPI(startDate)\n          }\n        }\n        \n        const response = await getDocuments(params)\n        if (response) {\n          console.log('获取文档响应:', response)\n          \n          // 处理不同格式的响应\n          if (response.results && Array.isArray(response.results)) {\n            // 分页格式的响应\n            documents.value = response.results\n            totalDocs.value = response.count || response.total || documents.value.length\n          } else if (Array.isArray(response)) {\n            // 数组格式的响应\n            documents.value = response\n            totalDocs.value = response.length\n          } else if (response.data && Array.isArray(response.data)) {\n            // 另一种常见的对象包装格式\n            documents.value = response.data\n            totalDocs.value = response.total || response.count || documents.value.length\n          } else if (typeof response === 'object') {\n            // 尝试提取可能的文档列表\n            const possibleDocuments = Object.values(response).filter(item => \n              item && typeof item === 'object' && ('title' in item || 'file' in item)\n            )\n            if (possibleDocuments.length > 0) {\n              documents.value = possibleDocuments\n              totalDocs.value = possibleDocuments.length\n            } else {\n              console.error('无法从响应中提取文档列表:', response)\n              documents.value = []\n              totalDocs.value = 0\n              ElMessage.warning('获取文档列表格式异常')\n            }\n          } else {\n            console.error('文档响应格式不支持:', typeof response, response)\n            documents.value = []\n            totalDocs.value = 0\n            ElMessage.warning('获取文档列表格式不支持')\n          }\n        } else {\n          documents.value = []\n          totalDocs.value = 0\n        }\n      } catch (error) {\n        console.error('获取文档失败:', error)\n        ElMessage.error('无法加载知识库文档')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const fetchDocumentChunks = async (documentId) => {\n      chunksLoading.value = true\n      try {\n        const response = await getDocumentChunks(documentId)\n        documentChunks.value = response\n      } catch (error) {\n        console.error('获取文档分块失败:', error)\n        ElMessage.error('无法加载文档分块数据')\n      } finally {\n        chunksLoading.value = false\n      }\n    }\n    \n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchDocuments()\n    }\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const selectCategory = (categoryId) => {\n      selectedCategory.value = categoryId\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const applyFilters = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleFileChange = (file) => {\n      console.log(\">>> handleFileChange: Received file object from el-upload:\", file);\n      if (file && file.raw) {\n        console.log(\">>> handleFileChange: file.raw (the actual File object):\", file.raw);\n        \n        // 检查文件大小是否为0，这会导致上传失败\n        if (file.raw.size === 0) {\n          ElMessage.error('文件大小为0，请选择有效文件');\n          return false;\n        }\n        \n        // 检查文件是否过大（例如超过10MB）\n        const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n        if (file.raw.size > maxSizeInBytes) {\n          ElMessage.error(`文件过大，最大支持${maxSizeInBytes / (1024 * 1024)}MB`);\n          return false;\n        }\n        \n        // 严格检查文件扩展名是否支持\n        const fileName = file.raw.name;\n        const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n        const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n        \n        if (!allowedFileTypes.includes(ext)) {\n          ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n          // 不支持的文件类型不应该更新uploadForm.file\n          uploadForm.file = null;\n          // 清除上传组件中显示的文件\n          if (uploadRef.value) {\n            uploadRef.value.clearFiles();\n          }\n          return false;\n        }\n        \n        // 仅在验证通过后设置文件\n        uploadForm.file = file.raw\n        console.log(\">>> handleFileChange: uploadForm.file after assignment:\", uploadForm.file, uploadForm.file ? `Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}` : 'No file');\n        uploadForm.title = uploadForm.title || file.name.split('.')[0];\n        \n        // 返回true表示验证通过\n        return true;\n      } else {\n        console.warn(\">>> handleFileChange: file.raw is not available. File:\", file);\n        return false;\n      }\n    }\n    \n    const handleRemove = () => {\n      console.log(\">>> handleRemove: File removed by user. Setting uploadForm.file to null.\");\n      uploadForm.file = null;\n      \n      // 如果标题是自动从文件名生成的，也清除标题\n      if (uploadForm.title && uploadForm.title.includes('.')) {\n        const fileNameWithoutExt = uploadForm.file?.name?.split('.')[0];\n        if (uploadForm.title === fileNameWithoutExt) {\n          uploadForm.title = '';\n        }\n      }\n    }\n    \n    const beforeUpload = (file) => {\n      // 获取文件扩展名\n      const fileName = file.name;\n      const ext = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n      \n      // 允许的文件类型列表\n      const allowedFileTypes = ['txt', 'pdf', 'doc', 'docx', 'md', 'ppt', 'pptx', 'xls', 'xlsx'];\n      \n      // 严格检查文件类型\n      if (!allowedFileTypes.includes(ext)) {\n        ElMessage.error(`不支持的文件类型: ${ext}。仅支持 ${allowedFileTypes.join(', ')} 格式。`);\n        return false;\n      }\n      \n      // 检查文件大小\n      const maxSizeInBytes = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSizeInBytes) {\n        ElMessage.error(`文件大小超过限制，最大支持 ${maxSizeInBytes / (1024 * 1024)}MB`);\n        return false;\n      }\n      \n      // 检查文件是否为空\n      if (file.size === 0) {\n        ElMessage.error('文件为空，请选择有效文件');\n        return false;\n      }\n      \n      return true;\n    }\n    \n    const handleUploadError = (error) => {\n      console.error('上传错误:', error);\n      ElMessage.error('上传错误，请检查文件格式或网络连接');\n      // 移除错误文件\n      uploadForm.file = null;\n    }\n    \n    const submitUpload = async () => {\n      if (!uploadFormRef.value) return\n      \n      await uploadFormRef.value.validate(async (valid) => {\n        if (valid) {\n          uploading.value = true\n          \n          console.log(\">>> submitUpload: Current uploadForm.file before appending to FormData:\", uploadForm.file);\n          if (!uploadForm.file) {\n            console.warn(\">>> submitUpload: uploadForm.file is null or undefined before appending.\");\n            uploading.value = false;\n            ElMessage.warning(\"请先选择文件再上传\");\n            return;\n          }\n          \n          // 再次检查文件大小，确保不是空文件或损坏文件\n          if (uploadForm.file.size === 0) {\n            console.error(\">>> submitUpload: 文件大小为0，无法上传\");\n            uploading.value = false;\n            ElMessage.error(\"文件大小为0，请选择有效文件\");\n            return;\n          }\n          \n          console.log(`>>> submitUpload: uploadForm.file details - Name: ${uploadForm.file.name}, Size: ${uploadForm.file.size} bytes, Type: ${uploadForm.file.type}`);\n          \n          // 创建formData对象，并添加文件和其他参数\n          const formData = new FormData()\n          formData.append('title', uploadForm.title)\n          formData.append('description', uploadForm.description)\n          formData.append('file', uploadForm.file) // Appending the file\n          \n          if (uploadForm.category) {\n            formData.append('category', uploadForm.category)\n            console.log(`>>> submitUpload: Attaching category to FormData: ${uploadForm.category}`)\n          } else {\n            console.log(\">>> submitUpload: No category selected (uploadForm.category is null/empty). Not attaching to FormData.\")\n          }\n          \n          formData.append('tags', JSON.stringify(uploadForm.tags))\n          formData.append('chunk_size', uploadForm.chunk_size.toString())\n          formData.append('chunk_overlap', uploadForm.chunk_overlap.toString())\n          formData.append('is_public', uploadForm.is_public.toString())\n          \n          // 再次检查formData中的文件是否正确\n          const fileInFormData = formData.get('file');\n          if (!fileInFormData || fileInFormData.size === 0) {\n            console.error(\">>> submitUpload: FormData中的文件无效或大小为0\");\n            uploading.value = false;\n            ElMessage.error(\"FormData处理文件失败，请重试\");\n            return;\n          }\n\n          try {\n            const response = await uploadDocument(formData) // Assuming uploadDocument returns the new document object or its ID\n            console.log(\">>> submitUpload: API Response from uploadDocument:\", response);\n\n            ElMessage.success('文档上传请求已发送，后台正在处理...')\n            uploading.value = false // 确保上传状态被重置\n            uploadVisible.value = false\n            const uploadedFileTitle = uploadForm.title; // Store title for polling check\n            resetUploadForm()\n\n            // Start polling for document status if response contains an ID or enough info\n            // For simplicity, we'll poll fetchDocuments and look for the title, assuming titles are reasonably unique for recent uploads.\n            // A more robust way is if backend returns the new document ID, and we poll a getDocumentById(id) endpoint.\n            // Or if the document object in fetchDocuments has a clear 'status' field (e.g., 'processing', 'completed').\n            \n            let attempts = 0;\n            const maxAttempts = 10; // Poll for max 30 seconds (10 attempts * 3s interval)\n            const pollInterval = 3000; // 3 seconds\n\n            const poll = setInterval(async () => {\n              attempts++;\n              console.log(`>>> Polling for document status (attempt ${attempts}/${maxAttempts})...`);\n              try {\n                // Fetch the list of documents, usually sorted by creation date descending\n                const documentsResponse = await getDocuments({ \n                  page: 1, \n                  page_size: 10, // Check recent documents\n                  ordering: '-created_at', \n                  category: selectedCategory.value || undefined, // Use current category or all if 'all'\n                  // search: uploadedFileTitle // Optionally, if backend supports search by title for recent items\n                });\n\n                let foundDoc = null;\n                if (documentsResponse && documentsResponse.results && documentsResponse.results.length > 0) {\n                  // Attempt to find the document by title. This is a simplification.\n                  // Ideally, backend returns ID and we poll for that ID, or a status field directly.\n                  foundDoc = documentsResponse.results.find(doc => doc.title === uploadedFileTitle);\n                  \n                  // MORE ROBUST CHECK: Assume doc object has a 'status' field from backend\n                  // Example: if (doc.status === 'completed') { ... }\n                  // For now, if we find it by title recently, we assume it might be processed or soon.\n                }\n\n                if (foundDoc) {\n                  // Let's assume if found by title, it's processed enough for a refresh.\n                  // Replace this with actual status check if backend provides 'status' field.\n                  console.log(`>>> Polling: Document \"${uploadedFileTitle}\" found (or assumed processed). Refreshing lists.`);\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.success(`文档 \"${uploadedFileTitle}\" 处理完毕并已刷新列表!`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                } else if (attempts >= maxAttempts) {\n                  console.log(\">>> Polling: Max attempts reached. Refreshing lists anyway.\");\n                  clearInterval(poll);\n                  fetchDocuments();\n                  fetchCategories();\n                  ElMessage.info(`文档 \"${uploadedFileTitle}\" 可能仍在后台处理中，列表已刷新。`);\n                  // 确保所有状态正确重置\n                  uploading.value = false;\n                }\n              } catch (pollError) {\n                console.error(\">>> Polling error:\", pollError);\n                clearInterval(poll);\n                // Still refresh, as the document might be there despite polling error\n                fetchDocuments();\n                fetchCategories();\n                ElMessage.error('检查文档状态时出错，列表已刷新。');\n                // 确保所有状态正确重置\n                uploading.value = false;\n              }\n            }, pollInterval);\n\n          } catch (error) {\n            console.error('上传文档失败:', error)\n            uploading.value = false;\n            // 在上传失败时清除文件选择状态\n            if (uploadRef.value) {\n              uploadRef.value.clearFiles();\n            }\n            let errorMsg = '文档上传失败'\n            if (error.response && error.response.data) {\n              const data = error.response.data;\n              if (typeof data === 'string') errorMsg += ': ' + data;\n              else if (data.detail) errorMsg += ': ' + data.detail;\n              else if (data.message) errorMsg += ': ' + data.message;\n              else if (data.file && Array.isArray(data.file)) errorMsg += ': ' + data.file.join(', ');\n              // 处理特定的文件类型错误\n              else if (data.status === 'error' && data.message && data.message.includes('不支持的文件类型')) {\n                errorMsg = data.message; // 直接使用后端的错误消息\n              }\n              else if (typeof data === 'object') errorMsg += ': ' + JSON.stringify(data).substring(0, 100);\n            }\n            ElMessage.error(errorMsg);\n          }\n        } else {\n          console.log('error submit!! Form validation failed.');\n          uploading.value = false; // Ensure uploading is reset if validation fails\n          return false;\n        }\n      })\n    }\n    \n    const showDocumentChunks = async (doc) => {\n      selectedDocument.value = doc\n      showChunksDialog.value = true\n      await fetchDocumentChunks(doc.id)\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = category\n      categoryForm.id = category.id\n      categoryForm.name = category.name\n      categoryForm.description = category.description || ''\n      categoryForm.icon = category.icon || 'Document'\n      categoryForm.color = category.color || '#409EFF'\n      showAddCategoryForm.value = true // 显示编辑表单\n    }\n    \n    const handleDeleteCategory = async (category) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗？`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteCategory(category.id)\n        ElMessage.success('分类删除成功')\n        fetchCategories()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const saveCategoryForm = async () => {\n      console.log('保存分类表单被调用，模式:', editingCategory.value ? 'edit' : 'add')\n      showAddCategoryForm.value = false\n      if (editingCategory.value) {\n        console.log('尝试更新分类:', categoryForm)\n        if (!editingCategory.value.id) {\n            ElMessage.error('无法更新分类，未找到当前编辑的分类ID');\n            return;\n        }\n        try {\n          const response = await updateCategory(editingCategory.value.id, categoryForm)\n          console.log('更新分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类更新成功')\n            await fetchCategories() // 刷新分类列表\n            // 如果当前编辑的分类就是选中的分类，可能需要刷新文档列表\n            if (selectedCategory.value === (response.id || response.data.id)) {\n              await fetchDocuments();\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`更新分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`更新分类失败: ${response.detail}`)\n          }\n          else {\n            ElMessage.error('更新分类失败，响应格式不符合预期或无ID返回')\n          }\n        } catch (error) {\n          console.error('更新分类失败:', error)\n          ElMessage.error('更新分类失败，请检查网络或联系管理员')\n        }\n      } else {\n        console.log('尝试添加新分类:', categoryForm)\n        try {\n          const response = await addCategory(categoryForm)\n          console.log('添加分类响应:', response)\n          if (response && (response.id || (response.data && response.data.id))) {\n            ElMessage.success('分类添加成功')\n            await fetchCategories() // 刷新分类列表\n            // 自动选中新创建的分类并刷新文档列表\n            const newCategoryId = response.id || response.data.id;\n            if (newCategoryId) {\n              selectedCategory.value = newCategoryId;\n              console.log(`新分类创建成功，自动选中新分类 ID: ${newCategoryId}`);\n              await fetchDocuments(); // 刷新文档列表以显示新选中的分类（初始为空）\n            } else {\n              console.warn(\"新创建的分类ID未找到，无法自动选中。\");\n            }\n          } else if (response && response.error) {\n            ElMessage.error(`添加分类失败: ${response.error.message || '未知错误'}`)\n          } else if (response && response.detail) {\n             ElMessage.error(`添加分类失败: ${response.detail}`)\n          }\n           else {\n            ElMessage.error('添加分类失败，响应格式不符合预期或无ID返回')\n            console.error(\"添加分类失败，响应:\", response);\n          }\n        } catch (error) {\n          console.error('添加分类失败:', error)\n          ElMessage.error('添加分类失败，请检查网络或联系管理员')\n        }\n      }\n      resetCategoryForm()\n    }\n    \n    const cancelCategoryForm = () => {\n      showAddCategoryForm.value = false\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n      showAddCategoryForm.value = true\n    }\n    \n    const resetUploadForm = () => {\n      if (uploadFormRef.value) {\n        // 使用el-form的resetFields方法重置表单\n        uploadFormRef.value.resetFields(); \n      }\n      \n      // 手动重置所有uploadForm字段，确保全部清空\n      uploadForm.title = ''\n      uploadForm.description = ''\n      uploadForm.file = null\n      uploadForm.category = null // Explicitly reset category\n      uploadForm.tags = ''\n      uploadForm.is_public = true\n      uploadForm.chunk_size = 500 // 重置为初始默认值\n      uploadForm.chunk_overlap = 50 // 重置为初始默认值\n      \n      // 清除上传组件中的文件\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles();\n      }\n      \n      console.log(\">>> resetUploadForm: uploadForm和上传组件已完全重置\");\n    }\n    \n    const handleCancelUpload = () => {\n      // 如果正在上传，不允许关闭\n      if (uploading.value) {\n        ElMessage.warning('文件正在上传中，请等待上传完成');\n        return;\n      }\n      resetUploadForm();\n      uploadVisible.value = false;\n    }\n    \n    const handleCloseUploadDialog = (done) => {\n      handleCancelUpload();\n      done(); // 允许关闭对话框\n    }\n    \n    const openUploadDialog = () => {\n      resetUploadForm(); // Reset form first for a clean state\n      if (selectedCategory.value && selectedCategory.value !== 'all') {\n        uploadForm.category = selectedCategory.value;\n        console.log(`>>> openUploadDialog: Auto-selecting current category: ${selectedCategory.value}`);\n      } else {\n        uploadForm.category = null; // If 'all' or no category is selected, let user choose in dialog\n        console.log(\">>> openUploadDialog: No category auto-selected (current is 'all' or none).\");\n      }\n      uploadVisible.value = true;\n    };\n    \n    // 文件操作函数\n    const previewDocument = (doc) => {\n      if (doc.status !== 'completed') {\n        ElMessage.warning('文档正在处理中，暂时无法预览')\n        return\n      }\n      \n      // 增加查看计数\n      axios.get(`${API_URL}/documents/${doc.id}/`)\n        .catch(err => console.error('更新查看计数失败:', err))\n      \n      // 这里应该实现文档预览功能\n      window.open(doc.file_url, '_blank')\n    }\n    \n    const downloadDocument = async (doc) => {\n      try {\n        const response = await axios.get(`${API_URL}/documents/${doc.id}/download/`, {\n          responseType: 'blob'\n        })\n        \n        // 创建临时下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', doc.title)\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        \n        ElMessage.success('文档下载成功')\n      } catch (error) {\n        console.error('下载文档失败:', error)\n        ElMessage.error('下载文档失败')\n      }\n    }\n    \n    const shareDocument = (doc) => {\n      // 实现文档分享功能\n      console.log('准备分享文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的分享功能即将上线`)\n    }\n    \n    const editDocument = (doc) => {\n      // 实现文档编辑功能\n      console.log('准备编辑文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的编辑功能即将上线`)\n    }\n    \n    const deleteDocument = async (doc) => {\n      console.log('>>> Vue component: Attempting to delete document (local method):', doc); // Log entry\n      try {\n        await ElMessageBox.confirm(`确定要删除文档 \"${doc.title}\" 吗？此操作不可撤销。`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        console.log('>>> Vue component: Calling apiDeleteDocument for ID:', doc.id); // Log before API call\n        await apiDeleteDocument(doc.id) // MODIFIED: Use imported and renamed apiDeleteDocument\n        \n        ElMessage.success('文档删除成功')\n        fetchDocuments()\n        fetchCategories() // 更新分类文档计数\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除文档失败:', error)\n          // 使用更安全的错误消息提取\n          const errorMessage = error?.response?.data?.detail || error?.message || '未知错误';\n          ElMessage.error('删除文档失败: ' + errorMessage);\n        }\n      }\n    }\n    \n    // 获取文件图标\n    const getFileIcon = (type) => {\n      const iconMap = {\n        pdf: Document,\n        doc: Document,\n        xls: DataAnalysis,\n        ppt: Tickets,\n        img: PictureFilled,\n        txt: Files,\n        other: Files\n      }\n      return iconMap[type] || Document\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      })\n    }\n    \n    // 格式化日期为API格式\n    const formatDateForAPI = (date) => {\n      if (!date) return ''\n      return date.toISOString().split('T')[0]\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (!sizeInKB) return '0 KB'\n      \n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取标签列表\n    const getTagsList = (tags) => {\n      if (!tags) return []\n      if (Array.isArray(tags)) return tags\n      return tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n    }\n    \n    // 处理构建完成\n    const handleBuildCompleted = () => {\n      // 刷新文档列表\n      fetchDocuments()\n      fetchCategories()\n      ElMessage.success('知识库构建完成，现在可以使用智能问答功能了！')\n    }\n\n    // 处理构建失败\n    const handleBuildFailed = (error) => {\n      console.error('知识库构建失败:', error)\n      ElMessage.error('知识库构建失败，请检查日志或联系管理员')\n    }\n    \n    // 生命周期钩子\n    onMounted(() => {\n      // 添加加载状态和错误处理\n      Promise.all([\n        fetchCategories().catch(err => {\n          console.error('初始化加载分类失败:', err);\n          ElMessage.error('加载知识库分类失败，请稍后重试');\n          return [];\n        }),\n        fetchDocuments().catch(err => {\n          console.error('初始化加载文档失败:', err);\n          ElMessage.error('加载知识库文档失败，请稍后重试');\n          return [];\n        })\n      ]).finally(() => {\n        // 初始化完成，不需要轮询\n        // pollBuildStatus();\n      });\n    })\n    \n    onBeforeUnmount(() => {\n      // 无需清除，因为没有设置轮询\n      // if (pollingInterval) {\n      //   clearInterval(pollingInterval)\n      // }\n    })\n    \n    return {\n      searchQuery,\n      selectedCategory,\n      categories,\n      documents,\n      filters,\n      currentPage,\n      pageSize,\n      totalDocs,\n      uploadVisible,\n      uploadForm,\n      uploadFormRef,\n      uploadRef,\n      uploadRules,\n      uploading,\n      loading,\n      viewMode,\n      sortOrder,\n      showCategoryDialog,\n      showAddCategoryForm,\n      editingCategory,\n      categoryForm,\n      categoryLoading,\n      showChunksDialog,\n      selectedDocument,\n      documentChunks,\n      chunksLoading,\n      isAdmin,\n      currentCategoryName,\n      processingCount,\n      \n      // 图标\n      Search,\n      Upload,\n      FolderAdd,\n      View,\n      Download,\n      More,\n      Share,\n      Edit,\n      EditPen,\n      FolderOpened,\n      Star,\n      Delete,\n      Document,\n      Files,\n      Tickets,\n      DataAnalysis,\n      PictureFilled,\n      UploadFilled,\n      Loading,\n      List,\n      Grid,\n      Crop,\n      Plus,\n      ArrowDown,\n      ArrowUp,\n      \n      // 方法\n      selectCategory,\n      handleSearch,\n      applyFilters,\n      getFileIcon,\n      formatDate,\n      formatFileSize,\n      getTagsList,\n      previewDocument,\n      downloadDocument,\n      shareDocument,\n      editDocument,\n      deleteDocument,\n      handleFileChange,\n      handleRemove,\n      beforeUpload,\n      handleUploadError,\n      submitUpload,\n      handlePageChange,\n      handleSizeChange,\n      showDocumentChunks,\n      editCategory,\n      handleDeleteCategory,\n      saveCategoryForm,\n      cancelCategoryForm,\n      resetCategoryForm,\n      buildingVisible,\n      handleBuildCompleted,\n      handleBuildFailed,\n      resetUploadForm,\n      handleCloseUploadDialog,\n      openUploadDialog,\n      handleCancelUpload,\n      buildStatus,\n      pollInterval,\n      showBuildLog\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.knowledge-container {\n  padding: 20px;\n}\n\n.category-card {\n  height: calc(100vh - 150px);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.search-box {\n  margin-bottom: 20px;\n}\n\n.category-list {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 5px;\n  margin-bottom: 15px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.header-title {\n  font-weight: 600;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.header-title .el-tag {\n  margin-left: 10px;\n}\n\n.category-item {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  transition: all 0.2s;\n  color: #495057;\n  cursor: pointer;\n  background-color: #f8f9fa;\n}\n\n.category-item:hover {\n  background-color: #e9ecef;\n  transform: translateY(-2px);\n}\n\n.category-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n  box-shadow: 0 2px 6px rgba(0, 123, 255, 0.15);\n}\n\n.category-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n}\n\n.category-name {\n  font-weight: 500;\n  flex: 1;\n}\n\n.category-count {\n  background-color: #e9ecef;\n  border-radius: 15px;\n  padding: 2px 10px;\n  font-size: 12px;\n  color: #6c757d;\n}\n\n.add-category-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.filter-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #f0f0f0;\n  overflow-y: auto;\n}\n\n.filter-section h6 {\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: #495057;\n}\n\n.filter-group {\n  margin-bottom: 15px;\n}\n\n.filter-options {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.document-list {\n  margin-top: 20px;\n}\n\n.view-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.list-view {\n  margin-bottom: 20px;\n}\n\n.grid-view {\n  margin-bottom: 20px;\n}\n\n.document-card {\n  display: flex;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #fff;\n  margin-bottom: 15px;\n  transition: all 0.2s;\n  border: 1px solid #f0f0f0;\n  align-items: center;\n}\n\n.document-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-2px);\n}\n\n.document-card.processing {\n  background-color: #fff9e6;\n  border-color: #ffd04b;\n}\n\n.document-icon {\n  width: 45px;\n  height: 45px;\n  border-radius: 5px;\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  color: white;\n}\n\n.document-content {\n  flex: 1;\n}\n\n.document-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.document-title .el-tag {\n  margin-left: 10px;\n  font-weight: normal;\n}\n\n.document-info {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.document-meta {\n  display: flex;\n  gap: 15px;\n  margin-top: 5px;\n  color: #909399;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.document-tags {\n  margin-top: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.document-progress {\n  margin-top: 10px;\n  padding: 8px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.progress-info {\n  margin-top: 5px;\n  font-size: 12px;\n  color: #606266;\n}\n\n.document-actions {\n  display: flex;\n  gap: 5px;\n}\n\n.icon-pdf {\n  background-color: #dc3545;\n}\n\n.icon-doc {\n  background-color: #007bff;\n}\n\n.icon-xls {\n  background-color: #28a745;\n}\n\n.icon-ppt {\n  background-color: #fd7e14;\n}\n\n.icon-img {\n  background-color: #6f42c1;\n}\n\n.icon-txt {\n  background-color: #17a2b8;\n}\n\n.icon-other {\n  background-color: #6c757d;\n}\n\n.grid-card {\n  height: 220px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f0f0f0;\n  overflow: hidden;\n  transition: all 0.2s;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n}\n\n.grid-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-5px);\n}\n\n.grid-card-icon {\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 42px;\n}\n\n.grid-card-content {\n  padding: 12px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n}\n\n.grid-card-title {\n  font-weight: 500;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.grid-card-meta {\n  display: flex;\n  justify-content: space-between;\n  color: #909399;\n  font-size: 12px;\n  margin-bottom: 8px;\n}\n\n.grid-card-status {\n  margin-bottom: 8px;\n}\n\n.grid-card-actions {\n  margin-top: auto;\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n}\n\n.upload-zone {\n  border: 2px dashed #ced4da;\n  border-radius: 10px;\n  padding: 40px 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-top: 20px;\n}\n\n.upload-zone:hover {\n  border-color: #007bff;\n  background-color: #f8f9fa;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.upload-text {\n  font-size: 18px;\n  color: #495057;\n  margin-bottom: 10px;\n}\n\n.upload-hint {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 20px;\n}\n\n.upload-features {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  gap: 30px;\n}\n\n.feature-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #495057;\n}\n\n.feature-item .el-icon {\n  font-size: 32px;\n  margin-bottom: 8px;\n  color: #007bff;\n}\n\n.tag {\n  display: inline-block;\n  padding: 2px 10px;\n  background-color: #e9ecef;\n  border-radius: 15px;\n  font-size: 12px;\n  color: #495057;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.knowledge-status-bar {\n  margin-bottom: 15px;\n}\n\n.processing-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  color: #e6a23c;\n}\n\n.form-help-text {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.category-row {\n  display: flex;\n  align-items: center;\n}\n\n.category-color {\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n\n.dialog-add-section {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.chunks-container {\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n.chunk-item {\n  margin-bottom: 15px;\n  border: 1px solid #f0f0f0;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.chunk-header {\n  display: flex;\n  justify-content: space-between;\n  background-color: #f8f9fa;\n  padding: 10px 15px;\n}\n\n.chunk-index {\n  font-weight: 500;\n}\n\n.chunk-meta {\n  color: #909399;\n  font-size: 13px;\n}\n\n.chunk-content {\n  padding: 15px;\n  white-space: pre-wrap;\n  line-height: 1.6;\n}\n\n.category-dialog-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.section-header h5 {\n  margin: 0;\n  font-weight: 600;\n}\n\n.category-list-section {\n  margin-bottom: 20px;\n}\n\n.category-items {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.category-list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.category-list-item:hover {\n  background-color: #f0f2f5;\n  transform: translateY(-2px);\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.category-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 3px;\n  margin-right: 12px;\n}\n\n.category-name-section {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.category-name {\n  font-weight: 500;\n}\n\n.category-desc {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 2px;\n}\n\n.category-count {\n  font-size: 13px;\n  color: #606266;\n  margin-left: 10px;\n}\n\n.category-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.category-form-section {\n  padding: 15px;\n  border-radius: 6px;\n  background-color: #f8f9fa;\n  margin-top: 20px;\n}\n\n.empty-categories {\n  padding: 40px 0;\n  text-align: center;\n}\n\n/* 深色模式下知识库分类对话框样式修复 */\n:deep([data-theme=\"dark\"]), :deep(body.is-dark) {\n  /* 分类管理对话框样式 */\n  .el-dialog {\n    background-color: #f5f5f5 !important;\n    color: #333 !important;\n    \n    .el-dialog__header {\n      background-color: #f5f5f5 !important;\n      border-bottom-color: #e0e0e0 !important;\n      \n      .el-dialog__title {\n        color: #333 !important;\n      }\n      \n      .el-dialog__headerbtn .el-dialog__close {\n        color: #333 !important;\n      }\n    }\n    \n    .el-dialog__body {\n      background-color: #f5f5f5 !important;\n      color: #333 !important;\n    }\n    \n    .el-dialog__footer {\n      background-color: #f5f5f5 !important;\n      border-top-color: #e0e0e0 !important;\n    }\n  }\n  \n  /* 分类表单元素样式 */\n  .el-form-item__label {\n    color: #333 !important;\n  }\n  \n  .el-input__wrapper {\n    background-color: #ffffff !important;\n    box-shadow: 0 0 0 1px #dcdfe6 inset !important;\n  }\n  \n  .el-input__inner {\n    color: #333 !important;\n  }\n  \n  .el-textarea__wrapper {\n    background-color: #ffffff !important;\n    box-shadow: 0 0 0 1px #dcdfe6 inset !important;\n  }\n  \n  .el-textarea__inner {\n    color: #333 !important;\n  }\n  \n  /* 分类列表项样式 */\n  .category-list-item {\n    background-color: #ffffff !important;\n    color: #333 !important;\n    border: 1px solid #e4e7ed !important;\n    \n    &:hover {\n      background-color: #f0f2f5 !important;\n    }\n  }\n  \n  .category-form-section {\n    background-color: #ffffff !important;\n    border: 1px solid #e4e7ed !important;\n    \n    h5 {\n      color: #333 !important;\n    }\n  }\n  \n  /* 表单内部元素 */\n  .section-header h5 {\n    color: #333 !important;\n  }\n  \n  .category-name {\n    color: #333 !important;\n  }\n  \n  .category-desc {\n    color: #606266 !important;\n  }\n  \n  /* 按钮样式保持高对比度 */\n  .el-button--default {\n    background-color: #ffffff !important;\n    border-color: #dcdfe6 !important;\n    color: #333 !important;\n    \n    &:hover {\n      color: #409EFF !important;\n      border-color: #c6e2ff !important;\n      background-color: #ecf5ff !important;\n    }\n  }\n  \n  .el-select__popper {\n    background-color: #ffffff !important;\n    border-color: #e4e7ed !important;\n    \n    .el-select-dropdown__item {\n      color: #333 !important;\n      \n      &.hover, &:hover {\n        background-color: #f5f7fa !important;\n      }\n      \n      .el-icon {\n        color: #333 !important;\n        background-color: transparent !important;\n      }\n    }\n  }\n  \n  .el-color-picker__mask {\n    background-color: transparent !important;\n  }\n  \n  /* 手动对关键的分类对话框元素应用深色模式覆盖 */\n  .showCategoryDialog .el-dialog,\n  div[aria-label=\"分类管理\"] {\n    background-color: #f5f5f5 !important;\n    \n    * {\n      background-color: transparent !important;\n    }\n    \n    .el-dialog__body,\n    .category-dialog-content {\n      background-color: #f5f5f5 !important;\n      color: #333 !important;\n    }\n    \n    .el-input__wrapper,\n    .el-textarea__wrapper {\n      background-color: #ffffff !important;\n    }\n    \n    .el-input__inner,\n    .el-textarea__inner {\n      color: #333 !important;\n    }\n    \n    .category-form-section,\n    .category-list-section {\n      h5, label, span, div:not(.el-select-dropdown__item) {\n        color: #333 !important;\n      }\n    }\n  }\n  \n  /* 知识库主界面深色模式样式 */\n  .knowledge-container {\n    /* 左侧导航卡片 */\n    .category-card {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n      \n      .search-box {\n        .el-input__wrapper {\n          background-color: var(--bg-color-tertiary) !important;\n          box-shadow: 0 0 0 1px var(--border-color) inset !important;\n        }\n        .el-input__inner {\n          color: var(--text-color) !important;\n        }\n      }\n      \n      .category-list {\n        .category-item {\n          background-color: var(--bg-color-secondary) !important;\n          color: var(--text-color) !important;\n          \n          &:hover {\n            background-color: var(--bg-color-tertiary) !important;\n          }\n          \n          &.active {\n            background-color: rgba(64, 158, 255, 0.1) !important;\n            color: #409EFF !important;\n          }\n          \n          .category-count {\n            background-color: var(--bg-color-tertiary) !important;\n            color: var(--text-color-secondary) !important;\n          }\n        }\n      }\n      \n      .filter-section {\n        border-top-color: var(--border-color) !important;\n        \n        h6 {\n          color: var(--text-color) !important;\n        }\n        \n        .el-checkbox, .el-radio {\n          color: var(--text-color) !important;\n        }\n        \n        .el-checkbox__label, .el-radio__label {\n          color: var(--text-color) !important;\n        }\n      }\n    }\n    \n    /* 右侧内容区卡片 */\n    .col-lg-9 .el-card {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n      \n      .card-header-flex {\n        border-bottom-color: var(--border-color) !important;\n        \n        .header-title {\n          color: var(--text-color) !important;\n        }\n      }\n      \n      /* 上传区域 */\n      .upload-zone {\n        border-color: var(--border-color) !important;\n        \n        &:hover {\n          background-color: var(--bg-color-secondary) !important;\n          border-color: #409EFF !important;\n        }\n        \n        .upload-icon {\n          color: var(--text-color-secondary) !important;\n        }\n        \n        .upload-text, .upload-hint {\n          color: var(--text-color) !important;\n        }\n      }\n      \n      /* 文档列表 */\n      .document-list {\n        .document-card {\n          background-color: var(--bg-color-secondary) !important;\n          border-color: var(--border-color) !important;\n          \n          &:hover {\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2) !important;\n          }\n          \n          .document-content {\n            .document-title {\n              color: var(--text-color) !important;\n            }\n            \n            .document-info {\n              color: var(--text-color-secondary) !important;\n            }\n            \n            .document-tags {\n              .tag {\n                background-color: var(--bg-color-tertiary) !important;\n                color: var(--text-color) !important;\n              }\n            }\n          }\n          \n          &.processing {\n            background-color: rgba(255, 208, 75, 0.1) !important;\n            border-color: #ffd04b !important;\n          }\n        }\n      }\n      \n      /* 分页容器 */\n      .pagination-container {\n        .el-pagination {\n          background-color: transparent !important;\n          \n          .el-pagination__total {\n            color: var(--text-color) !important;\n          }\n          \n          .el-pagination button {\n            background-color: var(--bg-color-secondary) !important;\n            color: var(--text-color) !important;\n          }\n          \n          .el-pager li {\n            background-color: var(--bg-color-secondary) !important;\n            color: var(--text-color) !important;\n            \n            &.active {\n              color: #409EFF !important;\n            }\n          }\n        }\n      }\n    }\n    \n    /* 上传对话框 */\n    .el-dialog[aria-label=\"上传文档\"] {\n      background-color: #f5f5f5 !important;\n      color: #333 !important;\n      \n      .el-dialog__header {\n        background-color: #f5f5f5 !important;\n        \n        .el-dialog__title {\n          color: #333 !important;\n        }\n      }\n      \n      .el-dialog__body {\n        background-color: #f5f5f5 !important;\n        \n        .el-form-item__label {\n          color: #333 !important;\n        }\n        \n        .el-input__wrapper, .el-textarea__wrapper {\n          background-color: #ffffff !important;\n          box-shadow: 0 0 0 1px #dcdfe6 inset !important;\n        }\n        \n        .el-input__inner, .el-textarea__inner {\n          color: #333 !important;\n        }\n        \n        .el-upload {\n          background-color: #ffffff !important;\n          border-color: #dcdfe6 !important;\n          \n          .el-upload-dragger {\n            background-color: #ffffff !important;\n            border-color: #dcdfe6 !important;\n            \n            .el-icon {\n              color: #409EFF !important;\n            }\n            \n            .el-upload__text {\n              color: #333 !important;\n              \n              em {\n                color: #409EFF !important;\n              }\n            }\n          }\n          \n          .el-upload__tip {\n            color: #666 !important;\n          }\n        }\n      }\n      \n      .el-dialog__footer {\n        background-color: #f5f5f5 !important;\n      }\n    }\n    \n    /* 知识库构建对话框 */\n    div:has(> .knowledge-builder) {\n      .el-dialog {\n        background-color: #f5f5f5 !important;\n        color: #333 !important;\n        \n        .el-dialog__header {\n          background-color: #f5f5f5 !important;\n          \n          .el-dialog__title {\n            color: #333 !important;\n          }\n        }\n        \n        .el-dialog__body {\n          background-color: #f5f5f5 !important;\n          color: #333 !important;\n        }\n        \n        .el-form-item__label {\n          color: #333 !important;\n        }\n        \n        .el-input__wrapper, .el-textarea__wrapper {\n          background-color: #ffffff !important;\n          box-shadow: 0 0 0 1px #dcdfe6 inset !important;\n        }\n        \n        .el-input__inner, .el-textarea__inner {\n          color: #333 !important;\n        }\n      }\n    }\n  }\n}\n\n/* 全局深色模式样式覆盖 - 更高的特异性权重 */\nhtml[data-theme=\"dark\"] {\n  .knowledge-container {\n    /* 左侧分类列表样式 */\n    .category-card {\n      background-color: #121212 !important;  /* 更深的黑色 */\n      border-color: #2a2a2a !important;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.5) !important;\n    }\n    \n    .search-box .el-input__wrapper {\n      background-color: #1a1a1a !important;  /* 更深的黑色 */\n      box-shadow: 0 0 0 1px #333333 inset !important;\n      \n      .el-input__inner {\n        color: #ffffff !important;\n      }\n    }\n    \n    .category-item {\n      background-color: #1a1a1a !important;  /* 更深的黑色 */\n      color: #f0f0f0 !important;\n      border: 1px solid #333333 !important;\n      margin-bottom: 8px !important;\n      \n      &:hover {\n        background-color: #252525 !important;  /* 更深的黑色 */\n        transform: translateY(-2px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5) !important;\n      }\n      \n      &.active {\n        background-color: rgba(64, 158, 255, 0.15) !important;\n        color: #5caefd !important; /* 更亮的蓝色 */\n        border-color: #409EFF !important;\n      }\n      \n      .category-icon {\n        background-color: inherit !important;\n      }\n    }\n    \n    .category-count {\n      background-color: #252525 !important;  /* 更深的黑色 */\n      color: #e0e0e0 !important;\n    }\n    \n    /* 筛选区域 */\n    .filter-section {\n      border-top-color: #333333 !important;\n      \n      h6 {\n        color: #f0f0f0 !important;\n        margin-top: 15px !important;\n        font-weight: bold !important;\n      }\n      \n      .el-checkbox, .el-radio {\n        margin-bottom: 8px !important;\n        \n        .el-checkbox__label, .el-radio__label {\n          color: #e0e0e0 !important;\n        }\n      }\n    }\n    \n    /* 右侧内容区域 */\n    .col-lg-9 .el-card {\n      background-color: #121212 !important;  /* 更深的黑色 */\n      border-color: #2a2a2a !important;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.5) !important;\n      \n      .card-header-flex {\n        border-bottom-color: #333333 !important;\n      }\n      \n      .header-title {\n        color: #f0f0f0 !important;\n        \n        .el-tag {\n          background-color: #252525 !important;  /* 更深的黑色 */\n          border-color: #333333 !important;\n          color: #e0e0e0 !important;\n        }\n      }\n    }\n    \n    /* 文档卡片 */\n    .document-card {\n      background-color: #1a1a1a !important;  /* 更深的黑色 */\n      border: 1px solid #333333 !important;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;\n      margin-bottom: 12px !important;\n      \n      &:hover {\n        background-color: #252525 !important;  /* 更深的黑色 */\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5) !important;\n      }\n      \n      .document-title {\n        color: #f0f0f0 !important;\n        font-weight: 600 !important;\n      }\n      \n      .document-info {\n        color: #cccccc !important;\n      }\n      \n      .tag {\n        background-color: #252525 !important;  /* 更深的黑色 */\n        color: #e0e0e0 !important;\n        border: 1px solid #333333 !important;\n      }\n      \n      .document-actions .el-button {\n        background-color: #252525 !important;  /* 更深的黑色 */\n        border-color: #333333 !important;\n        color: #e0e0e0 !important;\n        \n        &:hover {\n          background-color: #333333 !important;\n          color: #ffffff !important;\n        }\n        \n        .el-icon {\n          color: #e0e0e0 !important;\n        }\n      }\n    }\n    \n    /* 上传区域 */\n    .upload-zone {\n      background-color: #1a1a1a !important;  /* 更深的黑色 */\n      border: 2px dashed #333333 !important;\n      \n      &:hover {\n        background-color: #252525 !important;  /* 更深的黑色 */\n        border-color: #409EFF !important;\n      }\n      \n      .upload-icon {\n        color: #cccccc !important;\n      }\n      \n      .upload-text {\n        color: #f0f0f0 !important;\n        font-weight: 500 !important;\n      }\n      \n      .upload-hint {\n        color: #cccccc !important;\n      }\n    }\n    \n    /* 添加分类按钮 */\n    .add-category-btn {\n      background-color: #409EFF !important;\n      border-color: #409EFF !important;\n      color: white !important;\n      font-weight: 500 !important;\n      \n      &:hover {\n        background-color: #66b1ff !important;\n        border-color: #66b1ff !important;\n      }\n      \n      .el-icon {\n        color: white !important;\n      }\n    }\n    \n    /* 分页器 */\n    .pagination-container .el-pagination {\n      .el-pagination__total {\n        color: #e0e0e0 !important;\n      }\n      \n      button {\n        background: #1a1a1a !important;  /* 更深的黑色 */\n        color: #e0e0e0 !important;\n        border: 1px solid #333333 !important;\n        \n        &:hover {\n          color: #5caefd !important;  /* 更亮的蓝色 */\n        }\n        \n        &:disabled {\n          background: #121212 !important;  /* 更深的黑色 */\n          color: #666666 !important;\n        }\n      }\n      \n      .el-pager li {\n        background: #1a1a1a !important;  /* 更深的黑色 */\n        color: #e0e0e0 !important;\n        border: 1px solid #333333 !important;\n        \n        &.is-active {\n          background-color: #409EFF !important;\n          color: white !important;\n        }\n        \n        &:hover {\n          color: #5caefd !important;  /* 更亮的蓝色 */\n        }\n      }\n    }\n    \n    /* 顶部按钮组 */\n    .header-actions {\n      .el-button {\n        &.el-button--primary {\n          background-color: #409EFF !important;\n          border-color: #409EFF !important;\n          color: white !important;\n          \n          &:hover {\n            background-color: #66b1ff !important;\n            border-color: #66b1ff !important;\n          }\n          \n          .el-icon {\n            color: white !important;\n          }\n        }\n        \n        &.el-button--success {\n          background-color: #67c23a !important;\n          border-color: #67c23a !important;\n          color: white !important;\n          \n          &:hover {\n            background-color: #85ce61 !important;\n            border-color: #85ce61 !important;\n          }\n          \n          .el-icon {\n            color: white !important;\n          }\n        }\n        \n        &:not(.el-button--primary):not(.el-button--success) {\n          background-color: #1a1a1a !important;  /* 更深的黑色 */\n          border-color: #333333 !important;\n          color: #e0e0e0 !important;\n          \n          &:hover {\n            color: #ffffff !important;\n            border-color: #444444 !important;\n          }\n          \n          .el-icon {\n            color: #e0e0e0 !important;\n          }\n        }\n      }\n    }\n  }\n  \n  // ... existing dialog styles ...\n}\n\n/* 确保弹出式下拉菜单也能正确显示 - 另一种选择器匹配方式 */\nbody.is-dark {\n  .el-popper, .el-select__popper, .el-dropdown-menu, .el-color-dropdown {\n    background-color: #ffffff !important;\n    border-color: #e4e7ed !important;\n    color: #333 !important;\n    \n    .el-select-dropdown__item, .el-dropdown-menu__item {\n      color: #333 !important;\n      \n      &.hover, &:hover {\n        background-color: #f5f7fa !important;\n      }\n      \n      .el-icon {\n        color: #606266 !important;\n      }\n      \n      .d-flex {\n        display: flex !important;\n        align-items: center !important;\n        \n        .el-icon {\n          margin-right: 5px !important;\n        }\n        \n        span.ml-2 {\n          color: #333 !important;\n          margin-left: 8px !important;\n        }\n      }\n    }\n    \n    .el-select-dropdown__item.selected {\n      color: #409EFF !important;\n      font-weight: bold !important;\n      \n      .el-icon {\n        color: #409EFF !important;\n      }\n      \n      span.ml-2 {\n        color: #409EFF !important;\n      }\n    }\n  }\n  \n  /* 修复表单底部取消按钮 */\n  .category-form-section .el-form-item:last-child .el-button {\n    margin-right: 10px !important;\n    \n    &.el-button--primary {\n      background-color: #409EFF !important;\n      border-color: #409EFF !important;\n      color: white !important;\n    }\n    \n    &.el-button--default, &:not(.el-button--primary) {\n      background-color: #ffffff !important;\n      border-color: #dcdfe6 !important;\n      color: #606266 !important;\n    }\n  }\n}\n\n/* 全局深色模式样式覆盖 - 更高的特异性权重 */\nhtml[data-theme=\"dark\"] {\n  // ... existing code ...\n  \n  /* 分类管理对话框样式 - 将对话框也改为深色而非浅色 */\n  div[aria-label=\"分类管理\"], div.showCategoryDialog {\n    .el-dialog {\n      background-color: #121212 !important;\n      color: #f0f0f0 !important;\n      border: 1px solid #2a2a2a !important;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.5) !important;\n      \n      .el-dialog__header {\n        background-color: #121212 !important;\n        border-bottom: 1px solid #2a2a2a !important;\n        \n        .el-dialog__title {\n          color: #f0f0f0 !important;\n          font-weight: 600 !important;\n        }\n        \n        .el-dialog__headerbtn .el-dialog__close {\n          color: #e0e0e0 !important;\n        }\n      }\n      \n      .el-dialog__body {\n        background-color: #121212 !important;\n        color: #f0f0f0 !important;\n        \n        .category-dialog-content {\n          background-color: #121212 !important;\n          \n          .section-header h5 {\n            color: #f0f0f0 !important;\n          }\n          \n          .category-list-section {\n            background-color: #121212 !important;\n          }\n          \n          .category-form-section {\n            background-color: #1a1a1a !important;\n            border: 1px solid #333333 !important;\n            \n            .el-form-item__label {\n              color: #e0e0e0 !important;\n            }\n            \n            .el-input__wrapper, .el-textarea__wrapper {\n              background-color: #1a1a1a !important;\n              box-shadow: 0 0 0 1px #333333 inset !important;\n            }\n            \n            .el-input__inner, .el-textarea__inner {\n              color: #f0f0f0 !important;\n              background-color: #1a1a1a !important;\n            }\n            \n            .el-select .el-input__wrapper {\n              background-color: #1a1a1a !important;\n            }\n            \n            .el-color-picker .el-color-picker__trigger {\n              background-color: #1a1a1a !important;\n              border-color: #333333 !important;\n            }\n            \n            .el-form-item:last-child .el-button {\n              &.el-button--primary {\n                background-color: #409EFF !important;\n                border-color: #409EFF !important;\n                color: white !important;\n              }\n              \n              &.el-button--default, &:not(.el-button--primary) {\n                background-color: #1a1a1a !important;\n                border-color: #333333 !important;\n                color: #e0e0e0 !important;\n              }\n            }\n          }\n          \n          .category-list-item {\n            background-color: #1a1a1a !important;\n            border: 1px solid #333333 !important;\n            \n            .category-name, .category-desc, .category-count {\n              color: #f0f0f0 !important;\n            }\n            \n            .category-actions .el-button {\n              background-color: #1a1a1a !important;\n              border-color: #333333 !important;\n              \n              .el-icon {\n                color: #e0e0e0 !important;\n              }\n            }\n          }\n        }\n      }\n      \n      .el-dialog__footer {\n        background-color: #121212 !important;\n        border-top: 1px solid #2a2a2a !important;\n      }\n    }\n  }\n}\n\n/* 单独设置对话框和表单元素样式 - 最高特异性 */\nbody.is-dark {\n  /* 修复分类管理对话框 */\n  div[aria-label=\"分类管理\"] .el-dialog, .showCategoryDialog .el-dialog {\n    background-color: #121212 !important;\n    \n    .el-dialog__header {\n      background-color: #121212 !important;\n      border-bottom-color: #2a2a2a !important;\n      \n      .el-dialog__title {\n        color: #f0f0f0 !important;\n      }\n    }\n    \n    .el-dialog__body {\n      background-color: #121212 !important;\n      \n      input, textarea, select {\n        background-color: #1a1a1a !important;\n        color: #f0f0f0 !important;\n        border-color: #333333 !important;\n      }\n      \n      .el-input__wrapper, .el-textarea__wrapper {\n        background-color: #1a1a1a !important;\n        box-shadow: 0 0 0 1px #333333 inset !important;\n      }\n      \n      .el-input__inner {\n        color: #f0f0f0 !important;\n      }\n      \n      .el-form-item__label {\n        color: #e0e0e0 !important;\n      }\n    }\n    \n    .el-dialog__footer {\n      background-color: #121212 !important;\n      border-top-color: #2a2a2a !important;\n    }\n  }\n  \n  /* 修复图标选择器下拉菜单 */\n  .el-select__popper {\n    background-color: #1a1a1a !important;\n    border-color: #333333 !important;\n    \n    .el-select-dropdown__item {\n      color: #f0f0f0 !important;\n      background-color: #1a1a1a !important;\n      \n      &:hover {\n        background-color: #252525 !important;\n      }\n      \n      &.selected {\n        color: #409EFF !important;\n      }\n      \n      .d-flex {\n        .el-icon, span {\n          color: #f0f0f0 !important;\n        }\n      }\n    }\n  }\n  \n  /* 修复颜色选择器面板 */\n  .el-color-picker__panel, .el-color-dropdown {\n    background-color: #1a1a1a !important;\n    border-color: #333333 !important;\n    \n    .el-color-dropdown__main-wrapper {\n      background-color: #1a1a1a !important;\n    }\n    \n    .el-color-dropdown__btns {\n      background-color: #1a1a1a !important;\n      \n      .el-button {\n        background-color: #252525 !important;\n        color: #e0e0e0 !important;\n      }\n    }\n  }\n}\n\n.build-status-alert {\n  margin-top: 15px;\n}\n\n.status-content p {\n  margin: 0 0 10px 0;\n}\n\n.progress-container {\n  margin-bottom: 10px;\n}\n\n.last-built-time {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 10px;\n}\n\n.log-toggle-btn {\n  padding: 0;\n  margin-left: 10px;\n}\n\n.log-viewer {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: #f5f5f5;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  max-height: 400px;\n  overflow-y: auto;\n  font-family: 'Courier New', Courier, monospace;\n}\n\n.log-viewer pre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  font-size: 13px;\n  color: #333;\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}