{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\components\\ReportsView.vue?vue&type=template&id=b23d398a&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\components\\ReportsView.vue","mtime":1748675746256},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB3aXRoQ3R4IGFzIF93aXRoQ3R4LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nIH0gZnJvbSAidnVlIjsKY29uc3QgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogIm1vZHVsZS1jYXJkIG1vZGVybi1yZXBvcnQiCn07CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJtb2R1bGUtaGVhZGVyIgp9Owpjb25zdCBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiYnRuLWdyb3VwIgp9Owpjb25zdCBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAicm93IG1iLTQiCn07CmNvbnN0IF9ob2lzdGVkXzUgPSB7CiAgY2xhc3M6ICJjb2wtbWQtNiIKfTsKY29uc3QgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogIm1vZGVybi1jYXJkIgp9Owpjb25zdCBfaG9pc3RlZF83ID0gewogIGNsYXNzOiAiY2hhcnQtY2VudGVyLXdyYXAiCn07CmNvbnN0IF9ob2lzdGVkXzggPSB7CiAgcmVmOiAiZG9jVHJlbmRDaGFydCIsCiAgY2xhc3M6ICJtb2Rlcm4tZWNoYXJ0Igp9Owpjb25zdCBfaG9pc3RlZF85ID0gewogIGtleTogMCwKICBjbGFzczogImNoYXJ0LWVtcHR5Igp9Owpjb25zdCBfaG9pc3RlZF8xMCA9IHsKICBjbGFzczogImNvbC1tZC02Igp9Owpjb25zdCBfaG9pc3RlZF8xMSA9IHsKICBjbGFzczogIm1vZGVybi1jYXJkIgp9Owpjb25zdCBfaG9pc3RlZF8xMiA9IHsKICBjbGFzczogImNoYXJ0LWNlbnRlci13cmFwIgp9Owpjb25zdCBfaG9pc3RlZF8xMyA9IHsKICByZWY6ICJyZXFDaGFydCIsCiAgY2xhc3M6ICJtb2Rlcm4tZWNoYXJ0Igp9Owpjb25zdCBfaG9pc3RlZF8xNCA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjaGFydC1lbXB0eSIKfTsKY29uc3QgX2hvaXN0ZWRfMTUgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAibW9kZXJuLXN1bW1hcnkgbWFpbi12YWx1ZSIKfTsKY29uc3QgX2hvaXN0ZWRfMTYgPSB7CiAgY2xhc3M6ICJyb3cgbWItNCIKfTsKY29uc3QgX2hvaXN0ZWRfMTcgPSB7CiAgY2xhc3M6ICJjb2wtbWQtNiIKfTsKY29uc3QgX2hvaXN0ZWRfMTggPSB7CiAgY2xhc3M6ICJtb2Rlcm4tY2FyZCIKfTsKY29uc3QgX2hvaXN0ZWRfMTkgPSB7CiAgY2xhc3M6ICJjaGFydC1jZW50ZXItd3JhcCIKfTsKY29uc3QgX2hvaXN0ZWRfMjAgPSB7CiAgcmVmOiAiZ2F1Z2VDaGFydCIsCiAgY2xhc3M6ICJtb2Rlcm4tZWNoYXJ0Igp9Owpjb25zdCBfaG9pc3RlZF8yMSA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjaGFydC1lbXB0eSIKfTsKY29uc3QgX2hvaXN0ZWRfMjIgPSB7CiAgY2xhc3M6ICJjb2wtbWQtNiIKfTsKY29uc3QgX2hvaXN0ZWRfMjMgPSB7CiAgY2xhc3M6ICJtb2Rlcm4tY2FyZCIKfTsKY29uc3QgX2hvaXN0ZWRfMjQgPSB7CiAgY2xhc3M6ICJjaGFydC1jZW50ZXItd3JhcCIKfTsKY29uc3QgX2hvaXN0ZWRfMjUgPSB7CiAgcmVmOiAidHJlbmRDaGFydCIsCiAgY2xhc3M6ICJtb2Rlcm4tZWNoYXJ0Igp9Owpjb25zdCBfaG9pc3RlZF8yNiA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjaGFydC1lbXB0eSIKfTsKY29uc3QgX2hvaXN0ZWRfMjcgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAibW9kZXJuLXN1bW1hcnkgbWFpbi12YWx1ZSIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICBjb25zdCBfY29tcG9uZW50X2VsX2J1dHRvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1idXR0b24iKTsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDUiLCB7CiAgICBjbGFzczogIm1vZHVsZS10aXRsZSIKICB9LCAi6aG555uu5pWw5o2u5YiG5p6QIiwgLTEgLyogSE9JU1RFRCAqLykpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7CiAgICBzaXplOiAic21hbGwiLAogICAgcGxhaW46ICIiLAogICAgaWNvbjogImVsLWljb24tbWFnaWMtc3RpY2siLAogICAgb25DbGljazogJHNldHVwLmRvd25sb2FkQWlSZXBvcnQKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eCgoKSA9PiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IFtfY3JlYXRlVGV4dFZOb2RlKCJBSeWIhuaekOaKpeWRiiIpXSkpLAogICAgXzogMSAvKiBTVEFCTEUgKi8KICB9KV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNiwgW19jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDYiLCB7CiAgICBjbGFzczogInRleHQtcHJpbWFyeSIKICB9LCAi5paH5qGj5LiK5Lyg6LaL5Yq/IiwgLTEgLyogSE9JU1RFRCAqLykpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF83LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgbnVsbCwgNTEyIC8qIE5FRURfUEFUQ0ggKi8pLCAhJHNldHVwLmRvY1RyZW5kSGFzRGF0YSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzksICLmmoLml6DmlbDmja4iKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTEsIFtfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IF9jcmVhdGVFbGVtZW50Vk5vZGUoImg2IiwgewogICAgY2xhc3M6ICJ0ZXh0LXByaW1hcnkiCiAgfSwgIumcgOaxguS8mOWFiOe6p+WIhuW4gyIsIC0xIC8qIEhPSVNURUQgKi8pKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMywgbnVsbCwgNTEyIC8qIE5FRURfUEFUQ0ggKi8pLCAhJHNldHVwLnJlcVRvdGFsID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTQsICLmmoLml6DmlbDmja4iKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgJHNldHVwLnJlcVRvdGFsID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTUsICLlhbEgIiArIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLnJlcVRvdGFsKSArICIg5Liq6ZyA5rGCIiwgMSAvKiBURVhUICovKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE2LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xOCwgW19jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDYiLCB7CiAgICBjbGFzczogInRleHQtcHJpbWFyeSIKICB9LCAi6ZyA5rGC5a6M5oiQ546HIiwgLTEgLyogSE9JU1RFRCAqLykpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xOSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIwLCBudWxsLCA1MTIgLyogTkVFRF9QQVRDSCAqLyksICEkc2V0dXAucmVxVG90YWwgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yMSwgIuaaguaXoOaVsOaNriIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMjIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yMywgW19jYWNoZVs1XSB8fCAoX2NhY2hlWzVdID0gX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDYiLCB7CiAgICBjbGFzczogInRleHQtcHJpbWFyeSIKICB9LCAi5Lu75Yqh5a6M5oiQ6LaL5Yq/IiwgLTEgLyogSE9JU1RFRCAqLykpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yNCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzI1LCBudWxsLCA1MTIgLyogTkVFRF9QQVRDSCAqLyksICEkc2V0dXAudHJlbmRIYXNEYXRhID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMjYsICLmmoLml6DmlbDmja4iKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgJHNldHVwLnRhc2tUb3RhbCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzI3LCAi5YWxICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC50YXNrVG90YWwpICsgIiDkuKrku7vliqEiLCAxIC8qIFRFWFQgKi8pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pXSldKV0pOwp9"},{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_el_button","size","plain","icon","onClick","$setup","downloadAiReport","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","docTrendHasData","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","reqTotal","_hoisted_14","_hoisted_15","_toDisplayString","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","trendHasData","_hoisted_26","taskTotal","_hoisted_27"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\project\\components\\ReportsView.vue"],"sourcesContent":["<template>\n  <div class=\"module-card modern-report\">\n    <div class=\"module-header\">\n      <h5 class=\"module-title\">项目数据分析</h5>\n      <div class=\"btn-group\">\n        <el-button size=\"small\" plain icon=\"el-icon-magic-stick\" @click=\"downloadAiReport\">AI分析报告</el-button>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"col-md-6\">\n        <div class=\"modern-card\">\n          <h6 class=\"text-primary\">文档上传趋势</h6>\n          <div class=\"chart-center-wrap\">\n            <div ref=\"docTrendChart\" class=\"modern-echart\" />\n            <div v-if=\"!docTrendHasData\" class=\"chart-empty\">暂无数据</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"modern-card\">\n          <h6 class=\"text-primary\">需求优先级分布</h6>\n          <div class=\"chart-center-wrap\">\n            <div ref=\"reqChart\" class=\"modern-echart\" />\n            <div v-if=\"!reqTotal\" class=\"chart-empty\">暂无数据</div>\n          </div>\n          <div class=\"modern-summary main-value\" v-if=\"reqTotal\">共 {{ reqTotal }} 个需求</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"col-md-6\">\n        <div class=\"modern-card\">\n          <h6 class=\"text-primary\">需求完成率</h6>\n          <div class=\"chart-center-wrap\">\n            <div ref=\"gaugeChart\" class=\"modern-echart\" />\n            <div v-if=\"!reqTotal\" class=\"chart-empty\">暂无数据</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6\">\n        <div class=\"modern-card\">\n          <h6 class=\"text-primary\">任务完成趋势</h6>\n          <div class=\"chart-center-wrap\">\n            <div ref=\"trendChart\" class=\"modern-echart\" />\n            <div v-if=\"!trendHasData\" class=\"chart-empty\">暂无数据</div>\n          </div>\n          <div class=\"modern-summary main-value\" v-if=\"taskTotal\">共 {{ taskTotal }} 个任务</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { onMounted, ref, watch, onBeforeUnmount, nextTick, computed } from 'vue'\nimport * as echarts from 'echarts'\nimport { exportProjectAiReport } from '@/api/project'\n\nconst props = defineProps({\n  project: Object,\n  tasks: Array,\n  documents: Array,\n  requirements: Array\n})\n\nconst docTrendChart = ref(null)\nconst reqChart = ref(null)\nconst gaugeChart = ref(null)\nconst trendChart = ref(null)\n\nlet docTrendChartInstance = null\nlet reqChartInstance = null\nlet gaugeChartInstance = null\nlet trendChartInstance = null\n\n// 新增：标准化任务数据，兼容\"已完成\"状态和完成时间\nconst normalizedTasks = computed(() => {\n  if (!Array.isArray(props.tasks)) return []\n  return props.tasks.map(task => {\n    let status = task.status\n    if (status === '已完成') status = 'done'\n    // 可扩展更多映射\n    return {\n      ...task,\n      status,\n      due_date: task.due_date || task.updated_at || task.update_time || task.end_time || new Date().toISOString()\n    }\n  })\n})\n\n// 统计数据摘要\nconst reqTotal = computed(() => props.requirements?.length || 0)\nconst taskTotal = computed(() => normalizedTasks.value.length || 0)\n\n// 图表数据预处理\nconst docTrendHasData = computed(() => {\n  if (!Array.isArray(props.documents) || !props.documents.length) return false\n  return props.documents.some(doc => doc.uploaded_at || doc.created_at)\n})\n\nconst trendHasData = computed(() => {\n  if (!Array.isArray(normalizedTasks.value) || !normalizedTasks.value.length) return false\n  return normalizedTasks.value.some(task => task.completed_at || task.finish_time || task.status === 'done')\n})\n\nfunction renderCharts() {\n  // 销毁旧实例\n  if (docTrendChartInstance) docTrendChartInstance.dispose()\n  if (reqChartInstance) reqChartInstance.dispose()\n  if (gaugeChartInstance) gaugeChartInstance.dispose()\n  if (trendChartInstance) trendChartInstance.dispose()\n\n  // 文档上传趋势\n  if (docTrendChart.value) {\n    docTrendChartInstance = echarts.init(docTrendChart.value)\n    const docMonthMap = {}\n    props.documents?.forEach(doc => {\n      if (doc.uploaded_at) {\n        const month = (doc.uploaded_at + '').slice(0, 7)\n        docMonthMap[month] = (docMonthMap[month] || 0) + 1\n      }\n    })\n    const docMonths = Object.keys(docMonthMap).sort()\n    const docMonthData = docMonths.map(m => docMonthMap[m])\n    docTrendChartInstance.setOption({\n      tooltip: { trigger: 'axis' },\n      grid: { left: 40, right: 20, top: 30, bottom: 40 },\n      xAxis: {\n        type: 'category',\n        data: docMonths,\n        axisLabel: { color: '#888', fontSize: 13 },\n        name: docMonths.length ? '' : '暂无数据',\n      },\n      yAxis: {\n        type: 'value',\n        min: 0,\n        axisLabel: { color: '#888', fontSize: 13 }\n      },\n      series: [\n        {\n          name: '上传文档数', type: 'line', data: docMonthData, smooth: true,\n          itemStyle: { color: '#4F8CFF' },\n          areaStyle: { color: 'rgba(79,140,255,0.1)' },\n          symbolSize: 10\n        }\n      ]\n    })\n  }\n  // 需求优先级分布\n  if (reqChart.value) {\n    reqChartInstance = echarts.init(reqChart.value)\n    const reqPriorityMap = { 高: 0, 中: 0, 低: 0 }\n    if (Array.isArray(props.requirements)) {\n      props.requirements.forEach(req => {\n        let pri = req.priority\n        if (typeof pri === 'object' && pri !== null) pri = pri.value || pri.label || JSON.stringify(pri)\n        if (typeof pri !== 'string') pri = String(pri || '').trim()\n        if (['high', 'High', 'HIGH', '高', '1'].includes(pri)) {\n          pri = '高'\n        } else if (['medium', 'Medium', 'MEDIUM', '中', '2'].includes(pri)) {\n          pri = '中'\n        } else if (['low', 'Low', 'LOW', '低', '3'].includes(pri)) {\n          pri = '低'\n        } else {\n          // 不是高/中/低的全部跳过，不计入图表\n          return\n        }\n        reqPriorityMap[pri] = (reqPriorityMap[pri] || 0) + 1\n      })\n    }\n    reqChartInstance.setOption({\n      tooltip: { trigger: 'item' },\n      legend: { bottom: 0, textStyle: { color: '#666', fontSize: 13 } },\n      color: ['#4F8CFF', '#34C759', '#FF9500'],\n      series: [\n        {\n          name: '优先级分布', type: 'pie', radius: ['60%', '80%'],\n          data: Object.keys(reqPriorityMap).map(k => ({ value: reqPriorityMap[k], name: k })),\n          label: {\n            show: true,\n            position: 'outside',\n            fontSize: 14,\n            color: '#333',\n            formatter: '{b}: {d}%'\n          },\n          labelLine: { length: 18, length2: 10 },\n          avoidLabelOverlap: false,\n          emphasis: { itemStyle: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0,0,0,0.2)' } }\n        }\n      ]\n    })\n  }\n  // 需求完成率仪表盘\n  if (gaugeChart.value) {\n    gaugeChartInstance = echarts.init(gaugeChart.value)\n    let reqCompleted = 0\n    if (Array.isArray(props.requirements)) {\n      // 调试输出原始数据\n      console.log('需求原始数据:', props.requirements)\n      props.requirements.forEach(req => {\n        let status = req.status\n        if (typeof status === 'object' && status !== null) status = status.value || status.label || JSON.stringify(status)\n        if (typeof status !== 'string') status = String(status || '').trim().toLowerCase()\n        if ([\n          '已完成', '完成', 'completed', 'done', 'finished', '已关闭', 'closed', '已解决', 'resolved', '1', 'true', '是', 'success'\n        ].some(s => status.includes(s))) {\n          reqCompleted++\n        }\n      })\n    }\n    const percent = reqTotal.value ? Math.round(reqCompleted / reqTotal.value * 100) : 0\n    gaugeChartInstance.setOption({\n      series: [\n        {\n          type: 'gauge',\n          center: ['50%', '60%'],\n          radius: '90%',\n          min: 0,\n          max: 100,\n          progress: { show: true, width: 18 },\n          axisLine: { lineStyle: { width: 18, color: [[1, '#4F8CFF']] } },\n          pointer: { width: 6, length: '70%' },\n          detail: {\n            valueAnimation: true,\n            fontSize: 32,\n            color: '#4F8CFF',\n            fontWeight: 'bold',\n            offsetCenter: [0, '40%'],\n            formatter: '{value}%'\n          },\n          data: [{ value: percent, name: '完成率' }],\n          title: { fontSize: 16, color: '#888', offsetCenter: [0, '80%'] }\n        }\n      ]\n    })\n  }\n  // 任务完成趋势\n  if (trendChart.value) {\n    // 调试输出原始任务数据\n    console.log('任务原始数据:', normalizedTasks.value)\n    trendChartInstance = echarts.init(trendChart.value)\n    const monthMap = {}\n    let hasCompleted = false\n    if (Array.isArray(normalizedTasks.value)) {\n      normalizedTasks.value.forEach(task => {\n        // 仅根据 status 字段判断是否已完成\n        let status = (task.status || '').toLowerCase()\n        if ([\n          '已完成', '完成', 'done', 'finished', '已关闭', 'closed', 'success', 'true', '1'\n        ].some(s => status.includes(s))) {\n          hasCompleted = true\n          // 取 due_date 或 updated_at 作为完成时间\n          let finish = task.due_date || task.updated_at || task.update_time || task.end_time || ''\n          if (!finish) {\n            // 没有时间字段时，使用当前月\n            const now = new Date()\n            finish = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`\n          }\n          const month = (finish + '').slice(0, 7)\n          monthMap[month] = (monthMap[month] || 0) + 1\n        }\n      })\n    }\n    let months = Object.keys(monthMap).sort()\n    let monthData = months.map(m => monthMap[m])\n    // 如果有任务但都未完成，显示0\n    if (Array.isArray(normalizedTasks.value) && normalizedTasks.value.length > 0 && !hasCompleted) {\n      const now = new Date()\n      const thisMonth = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}`\n      months = [thisMonth]\n      monthData = [0]\n    }\n    trendChartInstance.setOption({\n      tooltip: { trigger: 'axis' },\n      grid: { left: 40, right: 20, top: 30, bottom: 40 },\n      xAxis: {\n        type: 'category',\n        data: months,\n        axisLabel: { color: '#888', fontSize: 13 },\n        name: months.length ? '' : '暂无数据',\n      },\n      yAxis: {\n        type: 'value',\n        min: 0,\n        axisLabel: { color: '#888', fontSize: 13 }\n      },\n      series: [\n        {\n          name: '完成任务数', type: 'bar', data: monthData,\n          itemStyle: { color: '#34C759' },\n          barWidth: 32,\n          label: { show: true, position: 'top', color: '#34C759', fontSize: 16, fontWeight: 'bold' }\n        }\n      ]\n    })\n  }\n}\n\nasync function downloadAiReport() {\n  if (!props.project?.id) return\n  // 导出四个ECharts图表为base64图片\n  const getBase64 = (chartInstance) => chartInstance ? chartInstance.getDataURL({ type: 'png', pixelRatio: 2, backgroundColor: '#fff' }) : ''\n  const docTrendImg = getBase64(docTrendChartInstance)\n  const reqChartImg = getBase64(reqChartInstance)\n  const gaugeChartImg = getBase64(gaugeChartInstance)\n  const trendChartImg = getBase64(trendChartInstance)\n  // 组装数据\n  const payload = {\n    doc_trend_img: docTrendImg,\n    req_chart_img: reqChartImg,\n    gauge_chart_img: gaugeChartImg,\n    trend_chart_img: trendChartImg,\n    project_name: props.project.name || '',\n    project_id: props.project.id\n  }\n  // POST给后端，返回PDF\n  exportProjectAiReport(props.project.id, payload).then(res => {\n    const blob = new Blob([res.data], { type: 'application/pdf' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `${props.project.name || '项目'}_AI分析报告.pdf`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    window.URL.revokeObjectURL(url)\n  })\n}\n\nonMounted(() => {\n  nextTick(() => setTimeout(renderCharts, 300))\n})\nwatch(\n  () => [props.tasks, props.documents, props.requirements],\n  () => {\n    nextTick(() => setTimeout(renderCharts, 300))\n  },\n  { deep: true }\n)\nonBeforeUnmount(() => {\n  if (docTrendChartInstance) docTrendChartInstance.dispose()\n  if (reqChartInstance) reqChartInstance.dispose()\n  if (gaugeChartInstance) gaugeChartInstance.dispose()\n  if (trendChartInstance) trendChartInstance.dispose()\n})\n</script>\n<style scoped>\n.modern-report { background: var(--bg-color); border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.04); padding: 24px; }\n.modern-card { background: var(--bg-color-secondary); border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.06); padding: 18px; margin-bottom: 18px; }\n.modern-echart { width: 100%; height: 260px; min-height: 180px; }\n.chart-center-wrap { position: relative; display: flex; align-items: center; justify-content: center; min-height: 220px; }\n.chart-empty { position: absolute; left: 0; right: 0; top: 50%; transform: translateY(-50%); text-align: center; color: #bbb; font-size: 20px; font-weight: 500; z-index: 2; }\n.main-value { font-size: 18px; color: #222; font-weight: bold; margin-top: 10px; }\n.module-title { font-size: 1.2rem; font-weight: 700; color: var(--text-color) !important; margin: 0; }\n.text-primary { color: #4F8CFF!important; }\n.text-muted { color: #bbb!important; }\n.mb-4 { margin-bottom: 24px; }\n.row { display: flex; flex-wrap: wrap; margin-left: -12px; margin-right: -12px; }\n.col-md-6 { flex: 0 0 50%; max-width: 50%; padding-left: 12px; padding-right: 12px; box-sizing: border-box; }\n.col-md-12 { flex: 0 0 100%; max-width: 100%; padding-left: 12px; padding-right: 12px; box-sizing: border-box; }\n@media (max-width: 900px) {\n  .col-md-6, .col-md-12 { flex: 0 0 100%; max-width: 100%; }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAW;;EAInBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAmB;;EACvBC,GAAG,EAAC,eAAe;EAACD,KAAK,EAAC;;;;EACFA,KAAK,EAAC;;;EAIpCA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAmB;;EACvBC,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;;EACJA,KAAK,EAAC;;;;EAEzBA,KAAK,EAAC;;;EAIZA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAmB;;EACvBC,GAAG,EAAC,YAAY;EAACD,KAAK,EAAC;;;;EACNA,KAAK,EAAC;;;EAI7BA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAmB;;EACvBC,GAAG,EAAC,YAAY;EAACD,KAAK,EAAC;;;;EACFA,KAAK,EAAC;;;;EAE7BA,KAAK,EAAC;;;;uBA7CnBE,mBAAA,CAiDM,OAjDNC,UAiDM,GAhDJC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAoC;IAAhCJ,KAAK,EAAC;EAAc,GAAC,QAAM,sBAC/BI,mBAAA,CAEM,OAFNE,UAEM,GADJC,YAAA,CAAqGC,oBAAA;IAA1FC,IAAI,EAAC,OAAO;IAACC,KAAK,EAAL,EAAK;IAACC,IAAI,EAAC,qBAAqB;IAAEC,OAAK,EAAEC,MAAA,CAAAC;;sBAAkB,MAAMC,MAAA,QAAAA,MAAA,O,iBAAN,QAAM,E;;UAG7FX,mBAAA,CAoBM,OApBNY,UAoBM,GAnBJZ,mBAAA,CAQM,OARNa,UAQM,GAPJb,mBAAA,CAMM,OANNc,UAMM,G,0BALJd,mBAAA,CAAoC;IAAhCJ,KAAK,EAAC;EAAc,GAAC,QAAM,sBAC/BI,mBAAA,CAGM,OAHNe,UAGM,GAFJf,mBAAA,CAAiD,OAAjDgB,UAAiD,+B,CACrCP,MAAA,CAAAQ,eAAe,I,cAA3BnB,mBAAA,CAA2D,OAA3DoB,UAA2D,EAAV,MAAI,K,yCAI3DlB,mBAAA,CASM,OATNmB,WASM,GARJnB,mBAAA,CAOM,OAPNoB,WAOM,G,0BANJpB,mBAAA,CAAqC;IAAjCJ,KAAK,EAAC;EAAc,GAAC,SAAO,sBAChCI,mBAAA,CAGM,OAHNqB,WAGM,GAFJrB,mBAAA,CAA4C,OAA5CsB,WAA4C,+B,CAChCb,MAAA,CAAAc,QAAQ,I,cAApBzB,mBAAA,CAAoD,OAApD0B,WAAoD,EAAV,MAAI,K,qCAEHf,MAAA,CAAAc,QAAQ,I,cAArDzB,mBAAA,CAAiF,OAAjF2B,WAAiF,EAA1B,IAAE,GAAAC,gBAAA,CAAGjB,MAAA,CAAAc,QAAQ,IAAG,MAAI,mB,yCAIjFvB,mBAAA,CAoBM,OApBN2B,WAoBM,GAnBJ3B,mBAAA,CAQM,OARN4B,WAQM,GAPJ5B,mBAAA,CAMM,OANN6B,WAMM,G,0BALJ7B,mBAAA,CAAmC;IAA/BJ,KAAK,EAAC;EAAc,GAAC,OAAK,sBAC9BI,mBAAA,CAGM,OAHN8B,WAGM,GAFJ9B,mBAAA,CAA8C,OAA9C+B,WAA8C,+B,CAClCtB,MAAA,CAAAc,QAAQ,I,cAApBzB,mBAAA,CAAoD,OAApDkC,WAAoD,EAAV,MAAI,K,yCAIpDhC,mBAAA,CASM,OATNiC,WASM,GARJjC,mBAAA,CAOM,OAPNkC,WAOM,G,0BANJlC,mBAAA,CAAoC;IAAhCJ,KAAK,EAAC;EAAc,GAAC,QAAM,sBAC/BI,mBAAA,CAGM,OAHNmC,WAGM,GAFJnC,mBAAA,CAA8C,OAA9CoC,WAA8C,+B,CAClC3B,MAAA,CAAA4B,YAAY,I,cAAxBvC,mBAAA,CAAwD,OAAxDwC,WAAwD,EAAV,MAAI,K,qCAEP7B,MAAA,CAAA8B,SAAS,I,cAAtDzC,mBAAA,CAAmF,OAAnF0C,WAAmF,EAA3B,IAAE,GAAAd,gBAAA,CAAGjB,MAAA,CAAA8B,SAAS,IAAG,MAAI,mB","ignoreList":[]}]}