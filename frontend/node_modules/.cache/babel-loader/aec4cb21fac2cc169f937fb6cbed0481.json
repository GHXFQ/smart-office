{"remainingRequest":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue?vue&type=template&id=3eeeff55&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue","mtime":1747048534989},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728272},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202324},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218792},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","ref","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","$setup","loading","_hoisted_2","_component_el_alert","title","type","closable","contacts","length","_hoisted_3","default","_withCtx","_createElementVNode","_hoisted_4","_component_el_button","size","onClick","forceRefresh","_component_el_icon","_component_Refresh","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_component_el_input","searchQuery","$event","placeholder","clearable","Search","circle","refreshChatSessions","_hoisted_9","_Fragment","_renderList","tabs","tab","index","key","_normalizeClass","activeTab","_hoisted_10","_hoisted_11","filteredContacts","contact","id","selectedContact","selectContact","_hoisted_13","avatar","_normalizeStyle","backgroundColor","color","_hoisted_14","_toDisplayString","initial","src","alt","status","_hoisted_16","_hoisted_17","name","_hoisted_18","lastTime","_hoisted_19","lastMessage","unread","_createBlock","_component_el_badge","value","_hoisted_20","_component_el_empty","description","image","_component_UserFilled","_hoisted_21","_component_el_skeleton","rows","animated","_hoisted_22","_hoisted_23","_hoisted_24","currentContact","_hoisted_25","_hoisted_27","getStatusText","_hoisted_28","_component_el_tooltip","content","placement","_component_Phone","_component_VideoCamera","_component_InfoFilled","_hoisted_29","messages","message","sender","userId","_hoisted_30","_hoisted_31","getSenderColor","_hoisted_32","getSenderInitial","_hoisted_33","message_type","_hoisted_34","_hoisted_35","file","downloadFile","_component_Document","file_name","_hoisted_38","formatFileSize","file_size","viewKnowledge","_component_Reading","_hoisted_40","_hoisted_41","knowledge_detail","_hoisted_42","_hoisted_43","formatMessageTime","created_at","_hoisted_44","_hoisted_45","openImageUpload","_component_PictureFilled","openFileUpload","_component_FolderOpened","openKnowledgeDialog","_component_Microphone","_hoisted_46","messageInput","resize","onKeyup","_withKeys","_withModifiers","sendMessage","_hoisted_47","_component_Position","_hoisted_48","_hoisted_49","_component_ChatDotSquare","_hoisted_50","_component_ChatLineSquare","_hoisted_51","_hoisted_52","onChange","_cache","args","handleFileUpload","accept","handleImageUpload","_component_el_dialog","knowledgeDialogVisible","width","footer","_hoisted_53","_component_el_table","data","knowledgeList","onRowClick","selectKnowledge","_component_el_table_column","prop","label","scope","_component_el_tag","row","file_type","formatDate","shareKnowledge","knowledgeLoading"],"sources":["C:\\Users\\18083\\Desktop\\offic_ai\\office\\smart-office\\frontend\\src\\views\\chat\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n        <el-card class=\"chat-card\">\n          <div class=\"chat-header-actions\" v-if=\"loading\">\n            <el-alert\n              title=\"正在加载数据...\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n          <div class=\"chat-header-actions\" v-else-if=\"!loading && contacts.length === 0\">\n            <el-alert\n              title=\"未找到任何聊天会话\"\n              type=\"warning\"\n              :closable=\"false\"\n              show-icon\n            >\n              <template #default>\n                <div class=\"refresh-action\">\n                  <span>可能是服务器连接问题或身份认证已过期</span>\n                  <el-button type=\"primary\" size=\"small\" @click=\"forceRefresh\">\n                    <el-icon><Refresh /></el-icon> 强制刷新\n                  </el-button>\n                </div>\n              </template>\n            </el-alert>\n          </div>\n          <div class=\"chat-layout\">\n            <!-- 左侧联系人列表 -->\n            <div class=\"chat-sidebar\">\n              <!-- 搜索框 -->\n              <div class=\"search-box\">\n                <div class=\"search-header\">\n                  <el-input \n                    v-model=\"searchQuery\" \n                    placeholder=\"搜索联系人...\"\n                    clearable\n                    :prefix-icon=\"Search\"\n                  ></el-input>\n                  <el-button circle size=\"small\" @click=\"refreshChatSessions\" title=\"刷新列表\">\n                    <el-icon><Refresh /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 聊天标签页 -->\n              <div class=\"chat-tabs\">\n                <div \n                  v-for=\"(tab, index) in tabs\" \n                  :key=\"index\"\n                  class=\"chat-tab\"\n                  :class=\"{'active': activeTab === index}\"\n                  @click=\"activeTab = index\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              \n              <!-- 联系人列表 -->\n              <div class=\"contacts-list\">\n                <div \n                  v-for=\"(contact, index) in filteredContacts\" \n              :key=\"contact.id || index\"\n                  class=\"contact-item\"\n              :class=\"{'active': selectedContact === contact.id}\"\n              @click=\"selectContact(contact)\"\n                >\n                  <div class=\"contact-avatar\">\n                    <div \n                      v-if=\"!contact.avatar\" \n                      class=\"avatar\" \n                      :style=\"{backgroundColor: contact.color}\"\n                    >\n                      <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                    </div>\n                    <img v-else :src=\"contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                    <div \n                      class=\"contact-status\" \n                      :class=\"'status-' + contact.status\"\n                    ></div>\n                  </div>\n                  <div class=\"contact-info\">\n                    <div class=\"contact-name\">\n                      <span>{{ contact.name }}</span>\n                      <span class=\"time\">{{ contact.lastTime }}</span>\n                    </div>\n                    <div class=\"contact-message\">\n                      <span>{{ contact.lastMessage }}</span>\n                      <el-badge \n                        v-if=\"contact.unread\" \n                        :value=\"contact.unread\" \n                        class=\"message-badge\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n            <!-- 无联系人提示 -->\n            <div v-if=\"!loading && filteredContacts.length === 0\" class=\"empty-contacts\">\n              <el-empty \n                description=\"暂无联系人\" \n                :image-size=\"100\"\n              >\n                <template #image>\n                  <el-icon :size=\"64\" class=\"empty-icon\"><UserFilled /></el-icon>\n                </template>\n              </el-empty>\n            </div>\n\n            <!-- 加载中提示 -->\n            <div v-if=\"loading\" class=\"loading-container\">\n              <el-skeleton :rows=\"5\" animated />\n            </div>\n              </div>\n            </div>\n            \n            <!-- 右侧聊天内容 -->\n            <div class=\"chat-content\">\n              <!-- 聊天头部 -->\n              <div class=\"chat-header\" v-if=\"selectedContact !== null\">\n                <div class=\"contact-avatar\">\n                  <div \n                v-if=\"!currentContact.avatar\" \n                    class=\"avatar\" \n                :style=\"{backgroundColor: currentContact.color}\"\n                  >\n                <span class=\"avatar-initial\">{{ currentContact.initial }}</span>\n                  </div>\n                  <img \n                    v-else \n                :src=\"currentContact.avatar\" \n                    alt=\"avatar\" \n                    class=\"avatar\" \n                  />\n                  <div \n                    class=\"contact-status\" \n                :class=\"'status-' + currentContact.status\"\n                  ></div>\n                </div>\n                <div class=\"contact-info\">\n              <h6>{{ currentContact.name }}</h6>\n              <p>{{ getStatusText(currentContact.status) }}</p>\n                </div>\n                <div class=\"chat-actions\">\n                  <el-tooltip content=\"语音通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><Phone /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"视频通话\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><VideoCamera /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"聊天信息\" placement=\"bottom\">\n                    <el-button circle>\n                      <el-icon><InfoFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n              </div>\n              \n              <!-- 聊天消息区域 -->\n              <div class=\"chat-messages\" v-if=\"selectedContact !== null\" ref=\"messageContainer\">\n                <div \n                  v-for=\"(message, index) in messages\" \n                  :key=\"message.id || index\"\n                  class=\"message\"\n                  :class=\"message.sender.id === userId ? 'message-sent' : 'message-received'\"\n                >\n                  <div class=\"message-container\">\n                    <div v-if=\"message.sender.id !== userId\" class=\"message-avatar\">\n                      <div \n                        class=\"avatar small\" \n                        :style=\"{backgroundColor: getSenderColor(message.sender)}\"\n                      >\n                        <span class=\"avatar-initial\">{{ getSenderInitial(message.sender) }}</span>\n                      </div>\n                    </div>\n                    <div class=\"message-content-wrapper\">\n                      <div \n                        class=\"message-content\"\n                        :class=\"message.sender.id === userId ? 'sent' : 'received'\"\n                      >\n                        <span v-if=\"message.message_type === 'text'\">{{ message.content }}</span>\n                    \n                        <div v-else-if=\"message.message_type === 'image'\" class=\"message-image\">\n                          <img :src=\"message.file\" alt=\"image\" />\n                        </div>\n                    \n                        <div v-else-if=\"message.message_type === 'file'\" class=\"message-file\" @click=\"downloadFile(message)\">\n                          <el-icon><Document /></el-icon>\n                          <span>{{ message.file_name }}</span>\n                          <span class=\"file-size\">{{ formatFileSize(message.file_size) }}</span>\n                        </div>\n                    \n                        <div v-else-if=\"message.message_type === 'knowledge'\" class=\"message-knowledge\" @click=\"viewKnowledge(message)\">\n                          <el-icon><Reading /></el-icon>\n                          <div class=\"knowledge-info\">\n                            <div class=\"knowledge-title\">{{ message.knowledge_detail.title }}</div>\n                            <div class=\"knowledge-desc\">{{ message.knowledge_detail.description }}</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"message-time\">{{ formatMessageTime(message.created_at) }}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- 聊天输入框 -->\n              <div class=\"chat-input\" v-if=\"selectedContact !== null\">\n                <div class=\"chat-tools\">\n              <el-tooltip content=\"发送图片\" placement=\"top\">\n                <el-button circle @click=\"openImageUpload\">\n                    <el-icon><PictureFilled /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"发送文件\" placement=\"top\">\n                <el-button circle @click=\"openFileUpload\">\n                    <el-icon><FolderOpened /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享知识库文件\" placement=\"top\">\n                <el-button circle @click=\"openKnowledgeDialog\">\n                  <el-icon><Reading /></el-icon>\n                  </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"语音消息\" placement=\"top\">\n                  <el-button circle>\n                    <el-icon><Microphone /></el-icon>\n                  </el-button>\n              </el-tooltip>\n                </div>\n                <div class=\"input-area\">\n                  <el-input\n                    v-model=\"messageInput\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    placeholder=\"输入消息...\"\n                    resize=\"none\"\n                    @keyup.enter.prevent=\"sendMessage\"\n                  ></el-input>\n                </div>\n                <div class=\"send-button\">\n                  <el-button type=\"primary\" @click=\"sendMessage\">\n                    <el-icon><Position /></el-icon>\n                    发送\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 无选中联系人提示 -->\n              <div class=\"empty-chat\" v-if=\"selectedContact === null\">\n                <div class=\"empty-illustration\">\n                  <el-icon :size=\"64\"><ChatDotSquare /></el-icon>\n                </div>\n                <h4>选择一个联系人开始聊天</h4>\n            <p>从左侧列表选择联系人开始对话</p>\n              </div>\n          \n          <!-- 无消息提示 -->\n          <div v-if=\"selectedContact !== null && !loading && messages.length === 0\" class=\"empty-messages\">\n            <el-empty description=\"暂无消息记录\">\n              <template #image>\n                <el-icon :size=\"64\" class=\"empty-icon\"><ChatLineSquare /></el-icon>\n              </template>\n              <p>发送第一条消息开始对话吧</p>\n            </el-empty>\n            </div>\n          \n          <!-- 消息加载中 -->\n          <div v-if=\"selectedContact !== null && loading\" class=\"loading-messages\">\n            <el-skeleton :rows=\"3\" animated />\n            <el-skeleton style=\"margin-top: 20px\" :rows=\"2\" animated />\n            <div style=\"text-align: right; margin-top: 20px\">\n              <el-skeleton :rows=\"2\" animated />\n          </div>\n      </div>\n    </div>\n      </div>\n    </el-card>\n  \n  <!-- 隐藏的文件上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"fileInput\" \n    style=\"display: none\" \n    @change=\"handleFileUpload\" \n  />\n  \n  <!-- 隐藏的图片上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"imageInput\" \n    style=\"display: none\" \n    accept=\"image/*\" \n    @change=\"handleImageUpload\" \n  />\n  \n  <!-- 知识库选择对话框 -->\n  <el-dialog\n    v-model=\"knowledgeDialogVisible\"\n    title=\"选择知识库文件\"\n    width=\"50%\"\n  >\n    <el-table\n      v-loading=\"knowledgeLoading\"\n      :data=\"knowledgeList\"\n      style=\"width: 100%\"\n      @row-click=\"selectKnowledge\"\n    >\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n      <el-table-column prop=\"file_type\" label=\"类型\">\n        <template #default=\"scope\">\n          <el-tag>{{ scope.row.file_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"shareKnowledge(scope.row)\">\n            分享\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"knowledgeDialogVisible = false\">取消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, nextTick, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, Phone, VideoCamera, InfoFilled, Document, PictureFilled, \n  FolderOpened, Microphone, Position, ChatDotSquare, Reading, UserFilled, ChatLineSquare,\n  Refresh\n} from '@element-plus/icons-vue'\nimport { \n  getChatSessions, \n  getChatSession, \n  sendTextMessage, \n  sendFileMessage,\n  sendImageMessage,\n  sendKnowledgeMessage,\n  downloadMessageFile\n} from '@/api/chat'\nimport { getKnowledgeList } from '@/api/knowledge'\nimport { useRoute } from 'vue-router'\nimport request from '@/utils/request'\n\nexport default {\n  name: 'Chat',\n  setup() {\n    const store = useStore()\n    const currentUser = computed(() => store.getters.user)\n    \n    // 添加本地用户数据存储\n    const userInfo = ref(null)\n    \n    const searchQuery = ref('')\n    const activeTab = ref(0)\n    const selectedContact = ref(null)\n    const messageInput = ref('')\n    const messageContainer = ref(null)\n    const fileInput = ref(null)\n    const imageInput = ref(null)\n    const messages = ref([])\n    const loading = ref(false)\n    const chatSessions = ref([])\n    const currentChatId = ref(null)\n    \n    // 知识库相关\n    const knowledgeDialogVisible = ref(false)\n    const knowledgeLoading = ref(false)\n    const knowledgeList = ref([])\n    const selectedKnowledge = ref(null)\n    \n    // 标签页\n    const tabs = ref(['最近聊天', '同事', '群组'])\n    \n    // 联系人列表\n    const contacts = ref([])\n    \n    // 当前选中的联系人\n    const currentContact = computed(() => {\n      if (selectedContact.value === null) return {}\n      return contacts.value.find(c => c.id === selectedContact.value) || {}\n    })\n    \n    // 安全地获取用户ID，避免模板中的null错误\n    const userId = computed(() => {\n      return userInfo.value?.id || null\n    })\n    \n    // 根据搜索过滤联系人\n    const filteredContacts = computed(() => {\n      if (!searchQuery.value) return contacts.value\n      return contacts.value.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n      )\n    })\n    \n    // 路由\n    const route = useRoute()\n    \n    // 定义一个refreshInterval的引用，以便在组件卸载时清除\n    let refreshInterval = null\n    \n    // 组件卸载时清除定时器\n    onBeforeUnmount(() => {\n      if (refreshInterval) {\n        clearInterval(refreshInterval)\n      }\n    })\n    \n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        console.log('开始获取当前用户信息...')\n        \n        // 检查localStorage中是否有token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          console.warn('本地存储中没有找到认证token')\n          ElMessage.warning('未登录或登录已过期，请重新登录')\n          return null\n        }\n        \n        const response = await request({\n          url: '/api/auth/users/me/',\n          method: 'get'\n        })\n        \n        console.log('获取用户信息响应:', response)\n        \n        // 检查响应格式并获取用户数据\n        let userData = null\n        if (response.data && response.data.id) {\n          // 直接从data字段获取用户数据\n          userData = response.data\n          console.log('从data字段获取用户数据:', userData)\n        } else if (response.data && response.data.data && response.data.data.id) {\n          // 从嵌套data字段获取用户数据\n          userData = response.data.data\n          console.log('从嵌套data字段获取用户数据:', userData)\n        } else if (response.id) {\n          // 直接响应就是用户数据\n          userData = response\n          console.log('直接获取用户数据:', userData)\n        } else {\n          console.error('获取用户信息响应格式异常:', response)\n          throw new Error('用户信息格式异常')\n        }\n        \n        if (!userData || !userData.id) {\n          console.error('获取的用户数据无效:', userData)\n          throw new Error('无效的用户数据')\n        }\n        \n        // 不使用未定义的mutation，而是直接更新本地状态\n        userInfo.value = userData\n        \n        // 保存到localStorage以便持久化\n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        console.log('用户数据已更新:', userInfo.value)\n        return userData\n      } catch (error) {\n        console.error('获取当前用户信息失败:', error)\n        ElMessage.error('获取用户信息失败: ' + (error.message || '未知错误'))\n        return null\n      }\n    }\n    \n    // 加载聊天会话列表\n    const loadChatSessions = async () => {\n      try {\n        loading.value = true\n        console.log('正在加载聊天会话列表...')\n        \n        const response = await getChatSessions()\n        console.log('获取聊天会话响应:', response)\n        \n        // 确保我们有响应数据\n        if (!response) {\n          console.error('获取聊天会话返回空响应')\n          contacts.value = []\n          return\n        }\n        \n        let data\n        if (response.success && response.data) {\n          data = response.data\n          console.log('使用包装格式的聊天数据:', data)\n        } else {\n          data = response\n          console.log('使用直接返回的聊天数据:', data)\n        }\n        \n        // 转换数据格式\n        chatSessions.value = data\n        \n        // 构建联系人列表\n        if (data && Array.isArray(data.results)) {\n          console.log('处理分页数据结构, 共有会话数:', data.results.length)\n          // 处理分页数据结构\n          contacts.value = data.results.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              return {\n                id: session.id,\n                name: `${user.first_name} ${user.last_name}`.trim() || user.username,\n                initial: (user.first_name || user.username)[0],\n                avatar: user.avatar,\n                color: getRandomColor(user.id),\n                status: 'online', // 假设所有用户都在线\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else if (data && Array.isArray(data)) {\n          console.log('处理非分页数据结构, 共有会话数:', data.length)\n          // 处理非分页数据结构\n          contacts.value = data.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              return {\n                id: session.id,\n                name: `${user.first_name} ${user.last_name}`.trim() || user.username,\n                initial: (user.first_name || user.username)[0],\n                avatar: user.avatar,\n                color: getRandomColor(user.id),\n                status: 'online', // 假设所有用户都在线\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group\n            }\n          })\n        } else {\n          // 如果没有有效数据\n          console.error('获取聊天会话格式异常或为空:', data)\n          contacts.value = []\n        }\n        \n        console.log('处理后的联系人列表:', contacts.value)\n        \n        // 如果有未读消息，按未读数量排序\n        if (contacts.value.length > 0) {\n          contacts.value.sort((a, b) => b.unread - a.unread)\n        }\n      } catch (error) {\n        console.error('加载聊天会话失败:', error)\n        ElMessage.error('加载聊天会话失败: ' + (error.message || '未知错误'))\n        contacts.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 加载聊天消息\n    const loadChatMessages = async (chatId) => {\n      if (!chatId) {\n        console.error('无法加载消息: chatId为空')\n        return\n      }\n      \n      try {\n        loading.value = true\n        console.log(`正在加载聊天会话 ${chatId} 的消息...`)\n        \n        const response = await getChatSession(chatId)\n        console.log('聊天会话详情响应:', response)\n        \n        if (!response) {\n          console.error('获取聊天会话详情返回空响应')\n          messages.value = []\n          return\n        }\n        \n        // 处理不同的响应格式\n        let messageData = []\n        let sessionData = null\n        \n        if (response.data && response.data.messages) {\n          // 标准格式：响应直接包含messages字段\n          messageData = response.data.messages\n          sessionData = response.data\n          console.log('标准格式消息数据，消息数量:', messageData.length)\n        } else if (response.data && response.data.data && response.data.data.messages) {\n          // 包装格式：{success: true, data: {messages: [...]}}\n          messageData = response.data.data.messages\n          sessionData = response.data.data\n          console.log('包装格式消息数据，消息数量:', messageData.length)\n        } else if (response.messages) {\n          // 直接返回格式: {messages: [...]}\n          messageData = response.messages\n          sessionData = response\n          console.log('直接返回格式消息数据，消息数量:', messageData.length)\n        } else {\n          console.warn('无法识别的消息数据格式:', response)\n          console.log('尝试检查是否有其他可能的消息字段...')\n          \n          // 尝试查找其他可能的消息字段\n          const possibleMessageFields = ['message', 'chat_messages', 'chats', 'content']\n          for (const field of possibleMessageFields) {\n            if (response[field] && Array.isArray(response[field])) {\n              console.log(`找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response[field]\n              sessionData = response\n              break\n            } else if (response.data && response.data[field] && Array.isArray(response.data[field])) {\n              console.log(`在data字段中找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response.data[field]\n              sessionData = response.data\n              break\n            }\n          }\n          \n          if (messageData.length === 0) {\n            console.warn('未找到任何消息数据，使用空数组')\n          }\n        }\n        \n        // 记录会话和消息数据\n        console.log('处理后的会话数据:', sessionData)\n        console.log('处理后的消息数据:', messageData)\n        \n        // 如果会话不在联系人列表中，添加它\n        if (sessionData && !contacts.value.some(c => c.id === parseInt(chatId))) {\n          console.log('会话不在联系人列表中，添加它:', sessionData)\n          \n          // 创建临时联系人对象\n          const session = sessionData\n          // 找到对方用户（非当前用户）\n          let otherParticipant = null\n          \n          // 确保 session.participants 存在且是数组\n          if (session.participants && Array.isArray(session.participants) && session.participants.length > 0 && userInfo.value) {\n            otherParticipant = session.participants.find(p => p.user && p.user.id !== userInfo.value.id)\n          }\n          \n          let tempContact = null\n          \n          // 如果是群聊，使用群聊信息\n          if (session.is_group) {\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '群聊',\n              initial: (session.title || '群聊')[0],\n              avatar: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: true\n            }\n          // 单聊，使用对方信息\n          } else if (otherParticipant && otherParticipant.user) {\n            const user = otherParticipant.user\n            tempContact = {\n              id: parseInt(chatId),\n              name: `${user.first_name || ''} ${user.last_name || ''}`.trim() || user.username,\n              initial: ((user.first_name || user.username) || '用户')[0],\n              avatar: user.avatar,\n              color: getRandomColor(user.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: false\n            }\n          } else {\n            // 如果无法找到对方信息，使用默认值\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: session.is_group\n            }\n          }\n          \n          // 添加临时联系人到列表\n          if (tempContact) {\n            contacts.value.unshift(tempContact)\n            console.log('添加临时联系人:', tempContact)\n          }\n        }\n        \n        // 更新组件数据\n        messages.value = messageData || []\n        currentChatId.value = parseInt(chatId)\n        selectedContact.value = parseInt(chatId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载会话详情失败:', error)\n        \n        let errorMessage = '加载聊天消息失败'\n        if (error.response) {\n          const status = error.response.status\n          if (status === 404) {\n            errorMessage = '聊天会话不存在或已被删除'\n          } else if (status === 403) {\n            errorMessage = '无权访问此聊天会话'\n          } else if (error.response.data && error.response.data.message) {\n            errorMessage = error.response.data.message\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n        messages.value = []\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    // 刷新聊天会话列表\n    const refreshChatSessions = async () => {\n      await loadChatSessions()\n      \n      // 如果有当前聊天ID，确保选中正确的联系人\n      if (currentChatId.value) {\n        const contact = contacts.value.find(c => c.id === currentChatId.value)\n        if (contact) {\n          selectedContact.value = contact.id\n        }\n      }\n    }\n    \n    // 确保消息容器滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 在选择联系人后，滚动到底部\n    const selectContact = async (contact) => {\n      if (selectedContact.value === contact.id) return\n      \n      selectedContact.value = contact.id\n      currentChatId.value = contact.id\n      \n      // 加载会话消息\n      await loadChatMessages(contact.id)\n      \n      // 等待DOM更新后滚动到底部\n      await nextTick()\n      scrollToBottom()\n      \n      // 清空输入框\n      messageInput.value = ''\n    }\n    \n    // 在消息列表更新后，滚动到底部\n    watch(messages, () => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim() || !currentChatId.value) return\n      \n      try {\n        // 检查当前用户信息是否存在\n        if (!userInfo.value || !userInfo.value.id) {\n          console.log('当前用户信息不存在，尝试重新获取...')\n          // 尝试重新获取用户信息\n          const userData = await fetchCurrentUser()\n          if (!userData || !userData.id) {\n            throw new Error('无法获取当前用户信息，请刷新页面重试')\n          }\n          \n          console.log('成功获取用户信息:', userData)\n        }\n        \n        // 创建临时消息对象\n        // 再次检查用户信息是否已更新\n        if (!userInfo.value || !userInfo.value.id) {\n          throw new Error('用户信息未更新，请刷新页面重试')\n        }\n        \n        const tempMessage = {\n          id: 'temp-' + Date.now(),\n          content: messageInput.value.trim(),\n          sender: {\n            id: userInfo.value.id,\n            username: userInfo.value.username || '用户',\n            first_name: userInfo.value.first_name || '',\n            last_name: userInfo.value.last_name || ''\n          },\n          message_type: 'text',\n          created_at: new Date().toISOString(),\n          is_temp: true\n        }\n        \n        // 先将临时消息添加到列表中\n        messages.value.push(tempMessage)\n        \n        // 清空输入框\n        const messageCopy = messageInput.value\n        messageInput.value = ''\n        \n        // 滚动到底部\n        await nextTick()\n        scrollToBottom()\n        \n        // 发送消息到服务器\n        const response = await sendTextMessage(currentChatId.value, messageCopy)\n        console.log('发送消息响应:', response)\n        \n        // 适应不同的响应格式\n        let messageData = null\n        \n        if (response && response.success && response.data) {\n          // 标准包装格式: {success: true, data: {}}\n          messageData = response.data\n        } else if (response && response.id) {\n          // 包含ID的DRF格式\n          messageData = response\n        } else if (response && response.chat) {\n          // 新API格式: {chat, content, message_type, file, ...}\n          // 构造完整的消息对象\n          messageData = {\n            id: response.id || 'msg-' + Date.now(),\n            content: response.content,\n            message_type: response.message_type,\n            file: response.file,\n            created_at: response.created_at || new Date().toISOString(),\n            sender: {\n              id: userInfo.value.id,\n              username: userInfo.value.username || '用户',\n              first_name: userInfo.value.first_name || '',\n              last_name: userInfo.value.last_name || ''\n            }\n          }\n        } else {\n          console.warn('无法识别的消息响应格式:', response)\n          throw new Error('发送消息响应格式异常')\n        }\n        \n        // 用服务器返回的消息替换临时消息\n        const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n        if (tempIndex !== -1) {\n          messages.value.splice(tempIndex, 1, messageData)\n        } else {\n          messages.value.push(messageData)\n        }\n        \n        // 更新联系人最新消息\n        const contactIndex = contacts.value.findIndex(c => c.id === selectedContact.value)\n        if (contactIndex !== -1) {\n          contacts.value[contactIndex].lastMessage = messageCopy\n          contacts.value[contactIndex].lastTime = formatMessageTime(new Date())\n        }\n        \n        // 再次滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        \n        // 移除临时消息\n        messages.value = messages.value.filter(m => !m.is_temp)\n        \n        // 将消息内容放回输入框\n        messageInput.value = error.savedMessage || messageInput.value\n        \n        ElMessage.error('发送消息失败，请重试')\n      }\n    }\n    \n    // 打开文件上传\n    const openFileUpload = () => {\n      fileInput.value.click()\n    }\n    \n    // 打开图片上传\n    const openImageUpload = () => {\n      imageInput.value.click()\n    }\n    \n    // 处理文件上传\n    const handleFileUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendFileMessage(\n          currentChatId.value, \n          `发送文件: ${file.name}`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送文件失败:', error)\n        ElMessage.error('发送文件失败')\n      }\n    }\n    \n    // 处理图片上传\n    const handleImageUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        await sendImageMessage(\n          currentChatId.value, \n          `发送图片`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送图片失败:', error)\n        ElMessage.error('发送图片失败')\n      }\n    }\n    \n    // 打开知识库对话框\n    const openKnowledgeDialog = async () => {\n      knowledgeDialogVisible.value = true\n      await loadKnowledgeList()\n    }\n    \n    // 加载知识库列表\n    const loadKnowledgeList = async () => {\n      try {\n        knowledgeLoading.value = true\n        const { data } = await getKnowledgeList()\n        knowledgeList.value = data\n      } catch (error) {\n        console.error('加载知识库列表失败:', error)\n        ElMessage.error('加载知识库列表失败')\n      } finally {\n        knowledgeLoading.value = false\n      }\n    }\n    \n    // 选择知识库文件\n    const selectKnowledge = (row) => {\n      selectedKnowledge.value = row\n    }\n    \n    // 分享知识库文件\n    const shareKnowledge = async (knowledge) => {\n      if (!currentChatId.value) return\n      \n      try {\n        await sendKnowledgeMessage(\n          currentChatId.value,\n          `分享知识库文件: ${knowledge.title}`,\n          knowledge.id\n        )\n        \n        // 关闭对话框\n        knowledgeDialogVisible.value = false\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value)\n      } catch (error) {\n        console.error('分享知识库文件失败:', error)\n        ElMessage.error('分享知识库文件失败')\n      }\n    }\n    \n    // 下载文件\n    const downloadFile = async (message) => {\n      try {\n        const response = await downloadMessageFile(message.id)\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', message.file_name || 'download')\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 查看知识库文件\n    const viewKnowledge = (message) => {\n      if (message.knowledge_detail) {\n        // 可以跳转到知识库详情页面\n        ElMessageBox.alert(\n          `标题: ${message.knowledge_detail.title}<br>描述: ${message.knowledge_detail.description || '无'}`, \n          '知识库文件', \n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '确定'\n          }\n        )\n      }\n    }\n    \n    // 获取发送者颜色\n    const getSenderColor = (sender) => {\n      return getRandomColor(sender.id)\n    }\n    \n    // 获取发送者首字母\n    const getSenderInitial = (sender) => {\n      return (sender.first_name || sender.username)[0]\n    }\n    \n    // 根据ID生成随机颜色\n    const getRandomColor = (id) => {\n      const colors = [\n        '#007bff', '#28a745', '#dc3545', '#fd7e14', \n        '#6f42c1', '#20c997', '#17a2b8', '#6c757d'\n      ]\n      \n      // 使用ID作为索引，确保同一用户颜色一致\n      const index = typeof id === 'number' ? id % colors.length : 0\n      return colors[index]\n    }\n    \n    // 格式化消息时间\n    const formatMessageTime = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      const now = new Date()\n      const diff = now - date\n      \n      // 今天内的消息显示时间\n      if (diff < 24 * 60 * 60 * 1000) {\n      const hours = date.getHours().toString().padStart(2, '0')\n      const minutes = date.getMinutes().toString().padStart(2, '0')\n      return `${hours}:${minutes}`\n      }\n      \n      // 一周内的消息显示星期几\n      if (diff < 7 * 24 * 60 * 60 * 1000) {\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n        return days[date.getDay()]\n      }\n      \n      // 更早的消息显示日期\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    // 格式化日期\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取状态文字\n    const getStatusText = (status) => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'busy': '忙碌',\n        'away': '离开'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 添加强制刷新方法\n    const forceRefresh = async () => {\n      try {\n        ElMessage.info('正在强制刷新数据...')\n        \n        // 重新获取用户信息\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          ElMessage.error('无法获取用户信息，请尝试重新登录')\n          return\n        }\n        \n        // 重新加载聊天会话\n        await loadChatSessions()\n        \n        if (contacts.value.length === 0) {\n          ElMessage.warning('未找到任何聊天会话，您可能还没有开始任何对话')\n        } else {\n          ElMessage.success('刷新成功！找到 ' + contacts.value.length + ' 个聊天会话')\n        }\n      } catch (error) {\n        console.error('强制刷新失败:', error)\n        ElMessage.error('刷新失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 路由相关操作\n    onMounted(async () => {\n      try {\n        // 先加载用户数据\n        const userData = await fetchCurrentUser()\n        \n        // 如果获取用户信息失败，显示错误并返回\n        if (!userData) {\n          ElMessage.error('无法加载用户信息，请刷新页面重试')\n          return\n        }\n        \n        console.log('组件挂载时获取的用户信息:', userData)\n        \n        // 确保用户数据已经更新\n        if (!userInfo.value || !userInfo.value.id) {\n          console.error('用户数据未正确加载:', userInfo.value)\n          ElMessage.error('用户数据加载异常，请刷新页面重试')\n          return\n        } else {\n          console.log('当前用户数据已正确加载:', userInfo.value)\n        }\n        \n        // 再加载聊天会话列表\n        await loadChatSessions()\n        \n        // 检查URL参数中是否有会话ID\n        const sessionId = route.query.session || route.query.id\n        if (sessionId) {\n          // 查找对应的联系人\n          const foundContact = contacts.value.find(c => c.id === parseInt(sessionId))\n          if (foundContact) {\n            // 选中该联系人\n            selectedContact.value = foundContact.id\n            // 加载聊天记录\n            await loadChatMessages(sessionId)\n          } else {\n            // 如果未找到对应联系人，尝试直接加载会话\n            console.log('通过ID直接加载聊天会话:', sessionId)\n            await loadChatMessages(sessionId)\n          }\n        }\n      \n        // 设置定时刷新\n        refreshInterval = setInterval(async () => {\n          if (selectedContact.value) {\n            await loadChatMessages(selectedContact.value)\n          }\n          await loadChatSessions()\n        }, 30000)\n        \n        // 初始滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('初始化聊天组件失败:', error)\n        ElMessage.error('初始化聊天组件失败: ' + error.message)\n      }\n    })\n    \n    return {\n      searchQuery,\n      activeTab,\n      selectedContact,\n      tabs,\n      contacts,\n      currentContact,\n      filteredContacts,\n      messages,\n      messageInput,\n      messageContainer,\n      fileInput,\n      imageInput,\n      currentUser,\n      userInfo,\n      userId,\n      knowledgeDialogVisible,\n      knowledgeLoading,\n      knowledgeList,\n      loading,\n      // 图标\n      Search,\n      Phone,\n      VideoCamera,\n      InfoFilled,\n      Document,\n      PictureFilled,\n      FolderOpened,\n      Microphone,\n      Position,\n      ChatDotSquare,\n      Reading,\n      UserFilled,\n      ChatLineSquare,\n      Refresh,\n      // 方法\n      sendMessage,\n      getStatusText,\n      selectContact,\n      openFileUpload,\n      openImageUpload,\n      handleFileUpload,\n      handleImageUpload,\n      openKnowledgeDialog,\n      selectKnowledge,\n      shareKnowledge,\n      downloadFile,\n      viewKnowledge,\n      getSenderColor,\n      getSenderInitial,\n      formatMessageTime,\n      formatDate,\n      formatFileSize,\n      refreshChatSessions,\n      forceRefresh\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  height: calc(100vh - 64px); /* 减去顶部导航栏的高度 */\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n.chat-card {\n  height: 100%;\n  width: 100%;\n  border-radius: 8px;\n  margin: 0;\n  overflow: hidden;\n}\n\n.chat-card :deep(.el-card__body) {\n  height: 100%;\n  padding: 0;\n}\n\n.chat-layout {\n  display: flex;\n  height: 100%;\n  width: 100%;\n}\n\n/* 侧边栏样式 */\n.chat-sidebar {\n  width: 280px;\n  border-right: 1px solid #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  height: 100%;\n  overflow: hidden;\n}\n\n.search-box {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.chat-tabs {\n  display: flex;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.chat-tab {\n  flex: 1;\n  text-align: center;\n  padding: 12px;\n  cursor: pointer;\n  font-weight: 500;\n  color: #666;\n  transition: all 0.3s ease;\n}\n\n.chat-tab.active {\n  color: var(--el-color-primary);\n  border-bottom: 2px solid var(--el-color-primary);\n}\n\n.contacts-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0;\n}\n\n.contact-item {\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid #f5f5f5;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.contact-item:hover {\n  background-color: #f9f9f9;\n}\n\n.contact-item.active {\n  background-color: #f0f7ff;\n}\n\n.contact-avatar {\n  position: relative;\n  margin-right: 12px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n}\n\n.avatar.small {\n  width: 32px;\n  height: 32px;\n  font-size: 12px;\n}\n\n.avatar-initial {\n  font-size: 16px;\n}\n\n.contact-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid white;\n}\n\n.status-online {\n  background-color: #28a745;\n}\n\n.status-offline {\n  background-color: #6c757d;\n}\n\n.status-busy {\n  background-color: #dc3545;\n}\n\n.status-away {\n  background-color: #fd7e14;\n}\n\n.contact-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.contact-name {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.contact-name span {\n  font-weight: 500;\n}\n\n.time {\n  font-size: 12px;\n  color: #999;\n}\n\n.contact-message {\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.message-badge {\n  margin-left: 5px;\n}\n\n/* 聊天内容样式 */\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #f5f7fa;\n  height: 100%;\n  overflow: hidden;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  background-color: #fff;\n}\n\n.chat-header .contact-info {\n  margin-right: auto;\n}\n\n.chat-header h6 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.chat-header p {\n  margin: 0;\n  font-size: 12px;\n  color: #666;\n}\n\n.chat-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  max-height: calc(100% - 150px); /* 调整聊天框高度 */\n  display: flex;\n  flex-direction: column;\n}\n\n.message {\n  margin-bottom: 20px;\n}\n\n.message-container {\n  display: flex;\n}\n\n.message-sent .message-container {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.message-sent .message-avatar {\n  margin-right: 0;\n  margin-left: 10px;\n}\n\n.message-content-wrapper {\n  max-width: 70%;\n}\n\n.message-content {\n  padding: 12px 15px;\n  border-radius: 18px;\n  position: relative;\n  word-break: break-word;\n}\n\n.message-content.received {\n  background-color: #fff;\n  border-top-left-radius: 4px;\n}\n\n.message-content.sent {\n  background-color: var(--el-color-primary);\n  color: white;\n  border-top-right-radius: 4px;\n}\n\n.message-time {\n  font-size: 12px;\n  color: #999;\n  margin-top: 5px;\n  text-align: right;\n}\n\n.message-sent .message-time {\n  text-align: right;\n}\n\n.message-received .message-time {\n  text-align: left;\n}\n\n.message-image img {\n  max-width: 100%;\n  max-height: 300px;\n  border-radius: 8px;\n}\n\n.message-file {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-file .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.file-size {\n  margin-left: 8px;\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.message-knowledge {\n  display: flex;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 10px;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.message-knowledge .el-icon {\n  font-size: 24px;\n  margin-right: 10px;\n}\n\n.knowledge-info {\n  flex: 1;\n}\n\n.knowledge-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\n.knowledge-desc {\n  font-size: 12px;\n  opacity: 0.8;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n}\n\n.chat-input {\n  padding: 15px;\n  background-color: #fff;\n  border-top: 1px solid #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  min-height: 150px; /* 确保输入框有足够高度 */\n}\n\n.chat-tools {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.input-area {\n  margin-bottom: 10px;\n  flex: 1;\n}\n\n.send-button {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-illustration {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-chat h4 {\n  margin: 0 0 10px;\n}\n\n.empty-chat p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.empty-contacts {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-icon {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-contacts h4 {\n  margin: 0 0 10px;\n}\n\n.empty-contacts p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.loading-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.empty-messages {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.loading-messages {\n  flex: 1;\n  padding: 20px;\n}\n\n.mt-3 {\n  margin-top: 15px;\n}\n\n.search-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.search-header .el-input {\n  flex: 1;\n}\n\n.chat-header-actions {\n  margin-bottom: 10px;\n}\n\n.refresh-action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 5px;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;;EAEdA,KAAK,EAAC;;;;EAQNA,KAAK,EAAC;;;EAQAA,KAAK,EAAC;AAAgB;;EAS5BA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAe;;EAcvBA,KAAK,EAAC;AAAW;;;EAajBA,KAAK,EAAC;AAAe;;;EAQjBA,KAAK,EAAC;AAAgB;;EAMjBA,KAAK,EAAC;AAAgB;;;EAQ3BA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAc;;EAEjBA,KAAK,EAAC;AAAM;;EAEfA,KAAK,EAAC;AAAiB;;;EAYkBA,KAAK,EAAC;;;;EAYxCA,KAAK,EAAC;;;EAOrBA,KAAK,EAAC;AAAc;;;EAElBA,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAgB;;EAMrBA,KAAK,EAAC;AAAgB;;;EAavBA,KAAK,EAAC;AAAc;;EAIpBA,KAAK,EAAC;AAAc;;;EAoBtBA,KAAK,EAAC,eAAe;EAAiCC,GAAG,EAAC;;;EAOtDD,KAAK,EAAC;AAAmB;;;EACaA,KAAK,EAAC;;;EAKrCA,KAAK,EAAC;AAAgB;;EAG3BA,KAAK,EAAC;AAAyB;;;;;;EAOkBA,KAAK,EAAC;;;;;EAOhDA,KAAK,EAAC;AAAW;;;EAKlBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAiB;;EACvBA,KAAK,EAAC;AAAgB;;EAI5BA,KAAK,EAAC;AAAc;;;EAO5BA,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAY;;EAsBlBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAa;;;EASrBA,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAoB;;;EAQqCA,KAAK,EAAC;;;;EAUhCA,KAAK,EAAC;;;EAG/CE,KAA2C,EAA3C;IAAA;IAAA;EAAA;AAA2C;;EAyDhDF,KAAK,EAAC;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA5U/BG,mBAAA,CAiVM,OAjVNC,UAiVM,GAhVAC,YAAA,CAwRMC,kBAAA;IAxRGN,KAAK,EAAC;EAAW;sBACxB,MAOM,CAPiCO,MAAA,CAAAC,OAAO,I,cAA9CL,mBAAA,CAOM,OAPNM,UAOM,GANJJ,YAAA,CAKEK,mBAAA;MAJAC,KAAK,EAAC,WAAW;MACjBC,IAAI,EAAC,MAAM;MACVC,QAAQ,EAAE,KAAK;MAChB,WAAS,EAAT;aAGyCN,MAAA,CAAAC,OAAO,IAAID,MAAA,CAAAO,QAAQ,CAACC,MAAM,U,cAAvEZ,mBAAA,CAgBM,OAhBNa,UAgBM,GAfJX,YAAA,CAcWK,mBAAA;MAbTC,KAAK,EAAC,WAAW;MACjBC,IAAI,EAAC,SAAS;MACbC,QAAQ,EAAE,KAAK;MAChB,WAAS,EAAT;;MAEWI,OAAO,EAAAC,QAAA,CAChB,MAKM,CALNC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAA+B,cAAzB,oBAAkB,sBACxBd,YAAA,CAEYgB,oBAAA;QAFDT,IAAI,EAAC,SAAS;QAACU,IAAI,EAAC,OAAO;QAAEC,OAAK,EAAEhB,MAAA,CAAAiB;;0BAC7C,MAA8B,CAA9BnB,YAAA,CAA8BoB,kBAAA;4BAArB,MAAW,CAAXpB,YAAA,CAAWqB,kBAAA,E;;uDAAU,QAChC,G;;;;+CAKRP,mBAAA,CA6PE,OA7PFQ,UA6PE,GA5PAC,mBAAA,aAAgB,EAChBT,mBAAA,CAqFM,OArFNU,UAqFM,GApFJD,mBAAA,SAAY,EACZT,mBAAA,CAYM,OAZNW,UAYM,GAXJX,mBAAA,CAUM,OAVNY,UAUM,GATJ1B,YAAA,CAKY2B,mBAAA;kBAJDzB,MAAA,CAAA0B,WAAW;iEAAX1B,MAAA,CAAA0B,WAAW,GAAAC,MAAA;MACpBC,WAAW,EAAC,UAAU;MACtBC,SAAS,EAAT,EAAS;MACR,aAAW,EAAE7B,MAAA,CAAA8B;4DAEhBhC,YAAA,CAEYgB,oBAAA;MAFDiB,MAAM,EAAN,EAAM;MAAChB,IAAI,EAAC,OAAO;MAAEC,OAAK,EAAEhB,MAAA,CAAAgC,mBAAmB;MAAE5B,KAAK,EAAC;;wBAChE,MAA8B,CAA9BN,YAAA,CAA8BoB,kBAAA;0BAArB,MAAW,CAAXpB,YAAA,CAAWqB,kBAAA,E;;;;wCAK1BE,mBAAA,WAAc,EACdT,mBAAA,CAUM,OAVNqB,UAUM,I,kBATJrC,mBAAA,CAQMsC,SAAA,QAAAC,WAAA,CAPmBnC,MAAA,CAAAoC,IAAI,GAAnBC,GAAG,EAAEC,KAAK;2BADpB1C,mBAAA,CAQM;QANH2C,GAAG,EAAED,KAAK;QACX7C,KAAK,EAAA+C,eAAA,EAAC,UAAU;UAAA,UACGxC,MAAA,CAAAyC,SAAS,KAAKH;QAAK;QACrCtB,OAAK,EAAAW,MAAA,IAAE3B,MAAA,CAAAyC,SAAS,GAAGH;0BAEjBD,GAAG,gCAAAK,WAAA;sCAIVrB,mBAAA,WAAc,EACdT,mBAAA,CAsDM,OAtDN+B,WAsDM,I,kBArDJ/C,mBAAA,CAmCMsC,SAAA,QAAAC,WAAA,CAlCuBnC,MAAA,CAAA4C,gBAAgB,GAAnCC,OAAO,EAAEP,KAAK;2BADxB1C,mBAAA,CAmCM;QAjCP2C,GAAG,EAAEM,OAAO,CAACC,EAAE,IAAIR,KAAK;QACrB7C,KAAK,EAAA+C,eAAA,EAAC,cAAc;UAAA,UACLxC,MAAA,CAAA+C,eAAe,KAAKF,OAAO,CAACC;QAAE;QAChD9B,OAAK,EAAAW,MAAA,IAAE3B,MAAA,CAAAgD,aAAa,CAACH,OAAO;UAEzBjC,mBAAA,CAaM,OAbNqC,WAaM,G,CAXKJ,OAAO,CAACK,MAAM,I,cADvBtD,mBAAA,CAMM;;QAJJH,KAAK,EAAC,QAAQ;QACbE,KAAK,EAAAwD,eAAA;UAAAC,eAAA,EAAoBP,OAAO,CAACQ;QAAK;UAEvCzC,mBAAA,CAAyD,QAAzD0C,WAAyD,EAAAC,gBAAA,CAAzBV,OAAO,CAACW,OAAO,iB,mCAEjD5D,mBAAA,CAAgE;;QAAnD6D,GAAG,EAAEZ,OAAO,CAACK,MAAM;QAAEQ,GAAG,EAAC,QAAQ;QAACjE,KAAK,EAAC;6CACrDmB,mBAAA,CAGO;QAFLnB,KAAK,EAAA+C,eAAA,EAAC,gBAAgB,cACFK,OAAO,CAACc,MAAM;iCAGtC/C,mBAAA,CAaM,OAbNgD,WAaM,GAZJhD,mBAAA,CAGM,OAHNiD,WAGM,GAFJjD,mBAAA,CAA+B,cAAA2C,gBAAA,CAAtBV,OAAO,CAACiB,IAAI,kBACrBlD,mBAAA,CAAgD,QAAhDmD,WAAgD,EAAAR,gBAAA,CAA1BV,OAAO,CAACmB,QAAQ,iB,GAExCpD,mBAAA,CAOM,OAPNqD,WAOM,GANJrD,mBAAA,CAAsC,cAAA2C,gBAAA,CAA7BV,OAAO,CAACqB,WAAW,kBAEpBrB,OAAO,CAACsB,MAAM,I,cADtBC,YAAA,CAIEC,mBAAA;;QAFCC,KAAK,EAAEzB,OAAO,CAACsB,MAAM;QACtB1E,KAAK,EAAC;;oCAMlB4B,mBAAA,YAAe,E,CACHrB,MAAA,CAAAC,OAAO,IAAID,MAAA,CAAA4C,gBAAgB,CAACpC,MAAM,U,cAA9CZ,mBAAA,CASM,OATN2E,WASM,GARJzE,YAAA,CAOW0E,mBAAA;MANTC,WAAW,EAAC,OAAO;MAClB,YAAU,EAAE;;MAEFC,KAAK,EAAA/D,QAAA,CACd,MAA+D,CAA/Db,YAAA,CAA+DoB,kBAAA;QAArDH,IAAI,EAAE,EAAE;QAAEtB,KAAK,EAAC;;0BAAa,MAAc,CAAdK,YAAA,CAAc6E,qBAAA,E;;;;+CAK3DtD,mBAAA,WAAc,EACHrB,MAAA,CAAAC,OAAO,I,cAAlBL,mBAAA,CAEM,OAFNgF,WAEM,GADJ9E,YAAA,CAAkC+E,sBAAA;MAApBC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAR;mDAKzB1D,mBAAA,YAAe,EACfT,mBAAA,CAkKF,OAlKEoE,WAkKF,GAjKI3D,mBAAA,UAAa,EACkBrB,MAAA,CAAA+C,eAAe,a,cAA9CnD,mBAAA,CAyCM,OAzCNqF,WAyCM,GAxCJrE,mBAAA,CAkBM,OAlBNsE,WAkBM,G,CAhBClF,MAAA,CAAAmF,cAAc,CAACjC,MAAM,I,cAD1BtD,mBAAA,CAMM;;MAJJH,KAAK,EAAC,QAAQ;MACjBE,KAAK,EAAAwD,eAAA;QAAAC,eAAA,EAAoBpD,MAAA,CAAAmF,cAAc,CAAC9B;MAAK;QAE9CzC,mBAAA,CAAgE,QAAhEwE,WAAgE,EAAA7B,gBAAA,CAAhCvD,MAAA,CAAAmF,cAAc,CAAC3B,OAAO,iB,mCAEpD5D,mBAAA,CAKE;;MAHH6D,GAAG,EAAEzD,MAAA,CAAAmF,cAAc,CAACjC,MAAM;MACvBQ,GAAG,EAAC,QAAQ;MACZjE,KAAK,EAAC;2CAERmB,mBAAA,CAGO;MAFLnB,KAAK,EAAA+C,eAAA,EAAC,gBAAgB,cACNxC,MAAA,CAAAmF,cAAc,CAACxB,MAAM;+BAGzC/C,mBAAA,CAGM,OAHNyE,WAGM,GAFRzE,mBAAA,CAAkC,YAAA2C,gBAAA,CAA3BvD,MAAA,CAAAmF,cAAc,CAACrB,IAAI,kBAC1BlD,mBAAA,CAAiD,WAAA2C,gBAAA,CAA3CvD,MAAA,CAAAsF,aAAa,CAACtF,MAAA,CAAAmF,cAAc,CAACxB,MAAM,kB,GAEvC/C,mBAAA,CAgBM,OAhBN2E,WAgBM,GAfJzF,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACnC,MAEY,CAFZ5F,YAAA,CAEYgB,oBAAA;QAFDiB,MAAM,EAAN;MAAM;0BACf,MAA4B,CAA5BjC,YAAA,CAA4BoB,kBAAA;4BAAnB,MAAS,CAATpB,YAAA,CAAS6F,gBAAA,E;;;;;;QAGtB7F,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACnC,MAEY,CAFZ5F,YAAA,CAEYgB,oBAAA;QAFDiB,MAAM,EAAN;MAAM;0BACf,MAAkC,CAAlCjC,YAAA,CAAkCoB,kBAAA;4BAAzB,MAAe,CAAfpB,YAAA,CAAe8F,sBAAA,E;;;;;;QAG5B9F,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACnC,MAEY,CAFZ5F,YAAA,CAEYgB,oBAAA;QAFDiB,MAAM,EAAN;MAAM;0BACf,MAAiC,CAAjCjC,YAAA,CAAiCoB,kBAAA;4BAAxB,MAAc,CAAdpB,YAAA,CAAc+F,qBAAA,E;;;;;;iDAM/BxE,mBAAA,YAAe,EACkBrB,MAAA,CAAA+C,eAAe,a,cAAhDnD,mBAAA,CA6CM,OA7CNkG,WA6CM,I,kBA5CJlG,mBAAA,CA2CMsC,SAAA,QAAAC,WAAA,CA1CuBnC,MAAA,CAAA+F,QAAQ,GAA3BC,OAAO,EAAE1D,KAAK;2BADxB1C,mBAAA,CA2CM;QAzCH2C,GAAG,EAAEyD,OAAO,CAAClD,EAAE,IAAIR,KAAK;QACzB7C,KAAK,EAAA+C,eAAA,EAAC,SAAS,EACPwD,OAAO,CAACC,MAAM,CAACnD,EAAE,KAAK9C,MAAA,CAAAkG,MAAM;UAEpCtF,mBAAA,CAoCM,OApCNuF,WAoCM,GAnCOH,OAAO,CAACC,MAAM,CAACnD,EAAE,KAAK9C,MAAA,CAAAkG,MAAM,I,cAAvCtG,mBAAA,CAOM,OAPNwG,WAOM,GANJxF,mBAAA,CAKM;QAJJnB,KAAK,EAAC,cAAc;QACnBE,KAAK,EAAAwD,eAAA;UAAAC,eAAA,EAAoBpD,MAAA,CAAAqG,cAAc,CAACL,OAAO,CAACC,MAAM;QAAA;UAEvDrF,mBAAA,CAA0E,QAA1E0F,WAA0E,EAAA/C,gBAAA,CAA1CvD,MAAA,CAAAuG,gBAAgB,CAACP,OAAO,CAACC,MAAM,kB,yDAGnErF,mBAAA,CA0BM,OA1BN4F,WA0BM,GAzBJ5F,mBAAA,CAuBM;QAtBJnB,KAAK,EAAA+C,eAAA,EAAC,iBAAiB,EACfwD,OAAO,CAACC,MAAM,CAACnD,EAAE,KAAK9C,MAAA,CAAAkG,MAAM;UAExBF,OAAO,CAACS,YAAY,e,cAAhC7G,mBAAA,CAAyE,QAAA8G,WAAA,EAAAnD,gBAAA,CAAzByC,OAAO,CAACP,OAAO,oBAE/CO,OAAO,CAACS,YAAY,gB,cAApC7G,mBAAA,CAEM,OAFN+G,WAEM,GADJ/F,mBAAA,CAAuC;QAAjC6C,GAAG,EAAEuC,OAAO,CAACY,IAAI;QAAElD,GAAG,EAAC;gDAGfsC,OAAO,CAACS,YAAY,e,cAApC7G,mBAAA,CAIM;;QAJ2CH,KAAK,EAAC,cAAc;QAAEuB,OAAK,EAAAW,MAAA,IAAE3B,MAAA,CAAA6G,YAAY,CAACb,OAAO;UAChGlG,YAAA,CAA+BoB,kBAAA;0BAAtB,MAAY,CAAZpB,YAAA,CAAYgH,mBAAA,E;;UACrBlG,mBAAA,CAAoC,cAAA2C,gBAAA,CAA3ByC,OAAO,CAACe,SAAS,kBAC1BnG,mBAAA,CAAsE,QAAtEoG,WAAsE,EAAAzD,gBAAA,CAA3CvD,MAAA,CAAAiH,cAAc,CAACjB,OAAO,CAACkB,SAAS,kB,iCAG7ClB,OAAO,CAACS,YAAY,oB,cAApC7G,mBAAA,CAMM;;QANgDH,KAAK,EAAC,mBAAmB;QAAEuB,OAAK,EAAAW,MAAA,IAAE3B,MAAA,CAAAmH,aAAa,CAACnB,OAAO;UAC3GlG,YAAA,CAA8BoB,kBAAA;0BAArB,MAAW,CAAXpB,YAAA,CAAWsH,kBAAA,E;;UACpBxG,mBAAA,CAGM,OAHNyG,WAGM,GAFJzG,mBAAA,CAAuE,OAAvE0G,WAAuE,EAAA/D,gBAAA,CAAvCyC,OAAO,CAACuB,gBAAgB,CAACnH,KAAK,kBAC9DQ,mBAAA,CAA4E,OAA5E4G,WAA4E,EAAAjE,gBAAA,CAA7CyC,OAAO,CAACuB,gBAAgB,CAAC9C,WAAW,iB,uFAIzE7D,mBAAA,CAA2E,OAA3E6G,WAA2E,EAAAlE,gBAAA,CAA9CvD,MAAA,CAAA0H,iBAAiB,CAAC1B,OAAO,CAAC2B,UAAU,kB;iGAMzEtG,mBAAA,WAAc,EACgBrB,MAAA,CAAA+C,eAAe,a,cAA7CnD,mBAAA,CAuCM,OAvCNgI,WAuCM,GAtCJhH,mBAAA,CAqBM,OArBNiH,WAqBM,GApBR/H,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACnC,MAEc,CAFd5F,YAAA,CAEcgB,oBAAA;QAFHiB,MAAM,EAAN,EAAM;QAAEf,OAAK,EAAEhB,MAAA,CAAA8H;;0BACtB,MAAoC,CAApChI,YAAA,CAAoCoB,kBAAA;4BAA3B,MAAiB,CAAjBpB,YAAA,CAAiBiI,wBAAA,E;;;;;;QAGhCjI,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACnC,MAEc,CAFd5F,YAAA,CAEcgB,oBAAA;QAFHiB,MAAM,EAAN,EAAM;QAAEf,OAAK,EAAEhB,MAAA,CAAAgI;;0BACtB,MAAmC,CAAnClI,YAAA,CAAmCoB,kBAAA;4BAA1B,MAAgB,CAAhBpB,YAAA,CAAgBmI,uBAAA,E;;;;;;QAG/BnI,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,SAAS;MAACC,SAAS,EAAC;;wBACtC,MAEc,CAFd5F,YAAA,CAEcgB,oBAAA;QAFHiB,MAAM,EAAN,EAAM;QAAEf,OAAK,EAAEhB,MAAA,CAAAkI;;0BACxB,MAA8B,CAA9BpI,YAAA,CAA8BoB,kBAAA;4BAArB,MAAW,CAAXpB,YAAA,CAAWsH,kBAAA,E;;;;;;QAGxBtH,YAAA,CAIa0F,qBAAA;MAJDC,OAAO,EAAC,MAAM;MAACC,SAAS,EAAC;;wBACjC,MAEY,CAFZ5F,YAAA,CAEYgB,oBAAA;QAFDiB,MAAM,EAAN;MAAM;0BACf,MAAiC,CAAjCjC,YAAA,CAAiCoB,kBAAA;4BAAxB,MAAc,CAAdpB,YAAA,CAAcqI,qBAAA,E;;;;;;UAI3BvH,mBAAA,CASM,OATNwH,WASM,GARJtI,YAAA,CAOY2B,mBAAA;kBANDzB,MAAA,CAAAqI,YAAY;iEAAZrI,MAAA,CAAAqI,YAAY,GAAA1G,MAAA;MACrBtB,IAAI,EAAC,UAAU;MACdyE,IAAI,EAAE,CAAC;MACRlD,WAAW,EAAC,SAAS;MACrB0G,MAAM,EAAC,MAAM;MACZC,OAAK,EAAAC,SAAA,CAAAC,cAAA,CAAgBzI,MAAA,CAAA0I,WAAW;0DAGrC9H,mBAAA,CAKM,OALN+H,WAKM,GAJJ7I,YAAA,CAGYgB,oBAAA;MAHDT,IAAI,EAAC,SAAS;MAAEW,OAAK,EAAEhB,MAAA,CAAA0I;;wBAChC,MAA+B,CAA/B5I,YAAA,CAA+BoB,kBAAA;0BAAtB,MAAY,CAAZpB,YAAA,CAAY8I,mBAAA,E;;qDAAU,MAEjC,G;;6EAIJvH,mBAAA,cAAiB,EACarB,MAAA,CAAA+C,eAAe,a,cAA7CnD,mBAAA,CAMM,OANNiJ,WAMM,GALJjI,mBAAA,CAEM,OAFNkI,WAEM,GADJhJ,YAAA,CAA+CoB,kBAAA;MAArCH,IAAI,EAAE;IAAE;wBAAE,MAAiB,CAAjBjB,YAAA,CAAiBiJ,wBAAA,E;;oCAEvCnI,mBAAA,CAAoB,YAAhB,aAAW,sB,4BACnBA,mBAAA,CAAqB,WAAlB,gBAAc,qB,wCAGnBS,mBAAA,WAAc,EACHrB,MAAA,CAAA+C,eAAe,cAAc/C,MAAA,CAAAC,OAAO,IAAID,MAAA,CAAA+F,QAAQ,CAACvF,MAAM,U,cAAlEZ,mBAAA,CAOQ,OAPRoJ,WAOQ,GANNlJ,YAAA,CAKW0E,mBAAA;MALDC,WAAW,EAAC;IAAQ;MACjBC,KAAK,EAAA/D,QAAA,CACd,MAAmE,CAAnEb,YAAA,CAAmEoB,kBAAA;QAAzDH,IAAI,EAAE,EAAE;QAAEtB,KAAK,EAAC;;0BAAa,MAAkB,CAAlBK,YAAA,CAAkBmJ,yBAAA,E;;;wBAE3D,MAAmB,C,4BAAnBrI,mBAAA,CAAmB,WAAhB,cAAY,qB;;+CAInBS,mBAAA,WAAc,EACHrB,MAAA,CAAA+C,eAAe,aAAa/C,MAAA,CAAAC,OAAO,I,cAA9CL,mBAAA,CAME,OANFsJ,WAME,GALApJ,YAAA,CAAkC+E,sBAAA;MAApBC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAR;QACvBjF,YAAA,CAA2D+E,sBAAA;MAA9ClF,KAAwB,EAAxB;QAAA;MAAA,CAAwB;MAAEmF,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAR;QAChDnE,mBAAA,CAEI,OAFJuI,WAEI,GADFrJ,YAAA,CAAkC+E,sBAAA;MAApBC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAR;;;MAOnC1D,mBAAA,eAAkB,EAClBT,mBAAA,CAKE;IAJAP,IAAI,EAAC,MAAM;IACXX,GAAG,EAAC,WAAW;IACfC,KAAqB,EAArB;MAAA;IAAA,CAAqB;IACpByJ,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtJ,MAAA,CAAAuJ,gBAAA,IAAAvJ,MAAA,CAAAuJ,gBAAA,IAAAD,IAAA,CAAgB;kDAG3BjI,mBAAA,eAAkB,EAClBT,mBAAA,CAME;IALAP,IAAI,EAAC,MAAM;IACXX,GAAG,EAAC,YAAY;IAChBC,KAAqB,EAArB;MAAA;IAAA,CAAqB;IACrB6J,MAAM,EAAC,SAAS;IACfJ,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtJ,MAAA,CAAAyJ,iBAAA,IAAAzJ,MAAA,CAAAyJ,iBAAA,IAAAH,IAAA,CAAiB;kDAG5BjI,mBAAA,cAAiB,EACjBvB,YAAA,CAmCY4J,oBAAA;gBAlCD1J,MAAA,CAAA2J,sBAAsB;+DAAtB3J,MAAA,CAAA2J,sBAAsB,GAAAhI,MAAA;IAC/BvB,KAAK,EAAC,SAAS;IACfwJ,KAAK,EAAC;;IA2BKC,MAAM,EAAAlJ,QAAA,CACf,MAEO,CAFPC,mBAAA,CAEO,QAFPkJ,WAEO,GADLhK,YAAA,CAAiEgB,oBAAA;MAArDE,OAAK,EAAAqI,MAAA,QAAAA,MAAA,MAAA1H,MAAA,IAAE3B,MAAA,CAAA2J,sBAAsB;;wBAAU,MAAEN,MAAA,SAAAA,MAAA,Q,iBAAF,IAAE,E;;;sBA3BzD,MAwBW,C,+BAxBXjF,YAAA,CAwBW2F,mBAAA;MAtBRC,IAAI,EAAEhK,MAAA,CAAAiK,aAAa;MACpBtK,KAAmB,EAAnB;QAAA;MAAA,CAAmB;MAClBuK,UAAS,EAAElK,MAAA,CAAAmK;;wBAEZ,MAA2D,CAA3DrK,YAAA,CAA2DsK,0BAAA;QAA1CC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;UACpCxK,YAAA,CAIkBsK,0BAAA;QAJDC,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC;;QAC3B5J,OAAO,EAAAC,QAAA,CAAE4J,KAAK,KACvBzK,YAAA,CAA0C0K,iBAAA;4BAAlC,MAAyB,C,kCAAtBD,KAAK,CAACE,GAAG,CAACC,SAAS,iB;;;;UAGlC5K,YAAA,CAIkBsK,0BAAA;QAJDC,IAAI,EAAC,YAAY;QAACC,KAAK,EAAC;;QAC5B5J,OAAO,EAAAC,QAAA,CAAE4J,KAAK,K,kCACpBvK,MAAA,CAAA2K,UAAU,CAACJ,KAAK,CAACE,GAAG,CAAC9C,UAAU,kB;;UAGtC7H,YAAA,CAMkBsK,0BAAA;QANDE,KAAK,EAAC;MAAI;QACd5J,OAAO,EAAAC,QAAA,CAAE4J,KAAK,KACvBzK,YAAA,CAEYgB,oBAAA;UAFDT,IAAI,EAAC,SAAS;UAACU,IAAI,EAAC,OAAO;UAAEC,OAAK,EAAAyH,cAAA,CAAA9G,MAAA,IAAO3B,MAAA,CAAA4K,cAAc,CAACL,KAAK,CAACE,GAAG;;4BAAG,MAE/EpB,MAAA,SAAAA,MAAA,Q,iBAF+E,MAE/E,E;;;;;;sEApBOrJ,MAAA,CAAA6K,gBAAgB,E","ignoreList":[]}]}