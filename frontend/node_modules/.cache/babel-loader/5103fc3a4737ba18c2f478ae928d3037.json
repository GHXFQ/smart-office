{"remainingRequest":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1747046910104},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\babel.config.js","mtime":1746431728272},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202324},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","onMounted","watch","useRequest","ElMessage","useRouter","axios","name","setup","searchQuery","selectedDept","selectedContact","departments","id","icon","count","contacts","loading","currentUser","companyId","router","request","fetchCurrentUser","res","success","value","data","company","console","error","warning","message","fetchDepartments","totalContactsCount","getTotalContactsCount","allDepts","deptIcons","formattedDepts","map","dept","params","length","fetchContacts","url","search","department","log","searchTimeout","clearTimeout","setTimeout","getInitials","substring","startChat","contact","token","localStorage","getItem","currentUserResponse","get","headers","currentUserId","response","contactData","user","userId","parseInt","isNaN","chatData","participant_ids","is_group","title","chatResponse","post","sessionId","push","path","query","status","errorMessage","detail","Array","isArray","JSON","stringify"],"sources":["C:\\Users\\18083\\Desktop\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"row\">\n      <!-- 左侧部门导航 -->\n      <div class=\"col-md-2\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\">\n          <div class=\"search-box mb-3\">\n            <i class=\"bi bi-search search-icon\"></i>\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索全公司联系人...\"\n              clearable\n              class=\"search-input\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <i :class=\"dept.icon\"></i>\n              <span>{{ dept.name }}</span>\n              <span class=\"badge\">{{ dept.count }}</span>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"col-md-4\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span>{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <i class=\"bi bi-info-circle\"></i> \n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"col-md-6\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\">{{ getInitials(contacts[selectedContact].name) }}</div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <i class=\"bi bi-chat-dots\"></i> 发送消息\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-envelope\"></i> 发送邮件\n                </el-button>\n                <el-button size=\"small\">\n                  <i class=\"bi bi-telephone\"></i> 电话联系\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider></el-divider>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">联系方式</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">手机号码</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].mobile }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">工作电话</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].phone }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">电子邮箱</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].email }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">办公地点</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].office }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">个人信息</div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">员工编号</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].employee_id }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">入职日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].join_date }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">出生日期</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].birthday }}</div>\n            </div>\n            <div class=\"contact-row\">\n              <div class=\"contact-label\">直系领导</div>\n              <div class=\"contact-value\">{{ contacts[selectedContact].manager }}</div>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">技能专长</div>\n            <div class=\"skills-tags\">\n              <el-tag \n                v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                :key=\"index\"\n                class=\"mr-2 mb-2\"\n              >\n                {{ skill }}\n              </el-tag>\n            </div>\n          </div>\n\n          <div class=\"contact-section\">\n            <div class=\"section-title\">管理项目</div>\n            <el-table :data=\"contacts[selectedContact].projects || []\" style=\"width: 100%\">\n              <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n              <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n              <el-table-column prop=\"status\" label=\"状态\">\n                <template #default=\"scope\">\n                  <el-tag \n                    :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                  >\n                    {{ scope.row.status }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\nexport default {\n  name: 'Contact',\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        if (res.success) {\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          \n          if (!companyId.value) {\n            console.error('当前用户没有关联公司信息:', res.data)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n          return res.data\n        } else {\n          console.error('获取用户信息响应格式错误:', res)\n          ElMessage.error('获取用户信息失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        if (res.success) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset'\n          }\n          \n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count\n          }))\n          \n          departments.value = [...allDepts, ...formattedDepts]\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败')\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) return 0\n        \n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        return res.success ? res.data.length : 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          ElMessage.warning('未找到当前用户所属公司')\n          loading.value.contacts = false\n          return\n        }\n        \n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          params.department = departments.value[selectedDept.value].id\n        }\n        \n        const res = await request(url, { params })\n        if (res.success) {\n          contacts.value = res.data\n          // 打印第一个联系人数据以查看结构\n          if (res.data && res.data.length > 0) {\n            console.log('联系人数据结构示例:', res.data[0])\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败')\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      // 先获取当前用户信息\n      await fetchCurrentUser()\n      \n      // 再加载部门列表\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n      await fetchContacts()\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 获取联系人详细信息\n        const response = await axios.get(`/api/auth/contacts/${contact.id}/`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        console.log('获取联系人详细信息:', response.data)\n        \n        if (!response.data || !response.data.data) {\n          ElMessage.error('获取联系人信息失败')\n          return\n        }\n          \n        const contactData = response.data.data\n        console.log('联系人详细数据:', contactData)\n        \n        // 检查联系人是否有关联用户\n        if (!contactData.user) {\n          console.log('联系人没有关联用户:', contactData)\n          ElMessage.error('该联系人没有关联的用户账号，无法发起聊天')\n          return\n        }\n        \n        // 使用用户ID创建聊天会话\n        const userId = parseInt(contactData.user)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contactData.user)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        console.log('将使用用户ID:', userId)\n        console.log('userId类型:', typeof userId)\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        try {\n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: `与${contactData.name}的聊天`\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat\n    }\n  }\n}\n</script>\n\n<style scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.contacts-nav-card,\n.contacts-nav {\n  height: 700px;\n}\n\n.contacts-list-card,\n.contacts-list {\n  height: 700px;\n}\n\n.contacts-nav,\n.contacts-list {\n  overflow-y: auto;\n}\n\n.dept-item {\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  color: #495057;\n  transition: all 0.2s;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-bottom: 5px;\n}\n\n.dept-item:hover {\n  background-color: #f8f9fa;\n  color: #007bff;\n}\n\n.dept-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n}\n\n.dept-item i {\n  margin-right: 10px;\n  font-size: 18px;\n  width: 24px;\n  text-align: center;\n}\n\n.dept-item .badge {\n  margin-left: auto;\n  background-color: #6c757d;\n  color: white;\n  font-weight: 500;\n  padding: 4px 8px;\n  border-radius: 10px;\n}\n\n.contact-item {\n  padding: 15px;\n  border-bottom: 1px solid #f0f0f0;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  align-items: center;\n}\n\n.contact-item:hover {\n  background-color: #f8f9fa;\n}\n\n.contact-item.active {\n  background-color: #e9f4ff;\n  border-left: 3px solid #007bff;\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.contact-info {\n  flex-grow: 1;\n}\n\n.contact-name {\n  font-weight: 500;\n  color: #343a40;\n  margin-bottom: 3px;\n}\n\n.contact-position {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.contact-detail-card {\n  min-height: 700px;\n}\n\n.contact-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.detail-avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #e9ecef;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  font-size: 30px;\n  font-weight: 500;\n  color: #6c757d;\n}\n\n.detail-info {\n  flex-grow: 1;\n}\n\n.detail-name {\n  font-size: 24px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 5px;\n}\n\n.detail-position {\n  font-size: 16px;\n  color: #6c757d;\n  margin-bottom: 5px;\n}\n\n.detail-department {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.contact-actions {\n  display: flex;\n}\n\n.contact-actions .el-button {\n  margin-right: 10px;\n}\n\n.contact-section {\n  margin-bottom: 25px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #343a40;\n  margin-bottom: 15px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.contact-row {\n  display: flex;\n  margin-bottom: 12px;\n}\n\n.contact-label {\n  width: 100px;\n  color: #6c757d;\n  font-weight: 500;\n}\n\n.contact-value {\n  color: #343a40;\n}\n\n.search-box {\n  position: relative;\n}\n\n.search-input {\n  padding-left: 35px;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  color: #6c757d;\n  z-index: 2;\n}\n\n.skills-tags .el-tag {\n  margin-right: 8px;\n  margin-bottom: 8px;\n}\n\n.search-info {\n  padding: 8px 15px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-size: 13px;\n  color: #6c757d;\n  display: flex;\n  align-items: center;\n}\n\n.search-info i {\n  margin-right: 5px;\n  font-size: 14px;\n  color: #17a2b8;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}