{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue","mtime":1751974760550},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ref","onMounted","watch","useRequest","ElMessage","useRouter","axios","Search","InfoFilled","ChatDotRound","Iphone","User","UserFilled","Location","Calendar","Present","Ticket","Medal","SetUp","Promotion","OfficeBuilding","Briefcase","House","PieChart","Money","Headset","Connection","More","name","components","setup","searchQuery","selectedDept","selectedContact","departments","id","icon","count","contacts","loading","currentUser","companyId","router","request","getDeptIcon","iconClass","iconMap","getAvatarStyle","contact","colors","hash","i","length","charCodeAt","colorIndex","Math","abs","backgroundColor","fetchCurrentUser","res","console","log","success","data","value","company","code","error","warning","message","fetchDepartments","totalContactsCount","getTotalContactsCount","allDepts","deptIcons","formattedDepts","map","dept","noDeptCount","getContactsWithNoDept","push","params","Array","isArray","contactsWithNoDept","filter","department","department_name","fetchContacts","url","search","selectedDeptInfo","forEach","avatar","startsWith","avatar_url","process","env","VUE_APP_BASE_API","user","need_fetch_avatar","index","fetchUserAvatar","searchTimeout","clearTimeout","setTimeout","userData","getInitials","substring","startChat","token","localStorage","getItem","currentUserResponse","get","headers","currentUserId","userId","parseInt","isNaN","sessionsResponse","sessions","results","existingSession","find","session","is_group","participants","hasTargetUser","some","participant","path","query","chatData","participant_ids","title","chatResponse","post","sessionId","response","status","errorMessage","detail","JSON","stringify","undefined"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\contact\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"contact-wrapper\">\n      <!-- 左侧部门导航 -->\n      <div class=\"contact-sidebar\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\" shadow=\"hover\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索联系人...\"\n              clearable\n              prefix-icon=\"Search\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <el-icon><component :is=\"getDeptIcon(dept.icon)\" /></el-icon>\n              <span>{{ dept.name }}</span>\n              <el-badge :value=\"dept.count || 0\" type=\"info\" class=\"dept-badge\" />\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"contact-list\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span class=\"header-title\">{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n              <span class=\"contact-count\">{{ contacts.length }}人</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\" v-if=\"contact.avatar_url\" style=\"background-color: transparent;\">\n                <img :src=\"contact.avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n              </div>\n              <div class=\"contact-avatar\" v-else :style=\"getAvatarStyle(contact)\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name || '未分配部门' }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"contact-detail\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\" shadow=\"hover\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\" v-if=\"contacts[selectedContact].avatar_url\" style=\"background-color: transparent;\">\n              <img :src=\"contacts[selectedContact].avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n            </div>\n            <div class=\"detail-avatar\" v-else :style=\"getAvatarStyle(contacts[selectedContact])\">\n              {{ getInitials(contacts[selectedContact].name) }}\n            </div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name || '未分配部门' }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <el-icon><ChatDotRound /></el-icon> 发送消息\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider />\n\n          <div class=\"contact-sections\">\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><Promotion /></el-icon> 联系方式\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Iphone /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">手机号码</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].mobile || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Location /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">办公地点</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].office || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><User /></el-icon> 个人信息\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Ticket /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">员工编号</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].employee_id || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Calendar /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">入职日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].join_date || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Present /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">出生日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].birthday || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><UserFilled /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">直系领导</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].manager || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].skills && contacts[selectedContact].skills.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><Medal /></el-icon> 技能专长\n              </div>\n              <div class=\"skills-tags\">\n                <el-tag \n                  v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                  :key=\"index\"\n                  class=\"skill-tag\"\n                  effect=\"light\"\n                  round\n                >\n                  {{ skill }}\n                </el-tag>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].projects && contacts[selectedContact].projects.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><SetUp /></el-icon> 管理项目\n              </div>\n              <el-table \n                :data=\"contacts[selectedContact].projects || []\" \n                style=\"width: 100%\"\n                :border=\"false\"\n                size=\"small\"\n                stripe\n              >\n                <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n                <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n                <el-table-column prop=\"status\" label=\"状态\">\n                  <template #default=\"scope\">\n                    <el-tag \n                      :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                      size=\"small\"\n                    >\n                      {{ scope.row.status }}\n                    </el-tag>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\" :image-size=\"200\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { \n  Search, \n  InfoFilled, \n  ChatDotRound, \n  Iphone,\n  User, \n  UserFilled, \n  Location, \n  Calendar, \n  Present, \n  Ticket, \n  Medal, \n  SetUp,\n  Promotion,\n  OfficeBuilding,\n  Briefcase,\n  House,\n  PieChart,\n  Money,\n  Headset,\n  Connection,\n  More\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Contact',\n  components: {\n    Search, \n    InfoFilled, \n    ChatDotRound, \n    Iphone,\n    User, \n    UserFilled, \n    Location, \n    Calendar, \n    Present, \n    Ticket, \n    Medal, \n    SetUp,\n    Promotion,\n    OfficeBuilding,\n    Briefcase,\n    House,\n    PieChart,\n    Money,\n    Headset,\n    Connection,\n    More\n  },\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取部门图标\n    const getDeptIcon = (iconClass) => {\n      const iconMap = {\n        'bi bi-building': 'House',\n        'bi bi-people-fill': 'User',\n        'bi bi-person-workspace': 'UserFilled',\n        'bi bi-people': 'OfficeBuilding',\n        'bi bi-cash-coin': 'Money',\n        'bi bi-graph-up': 'PieChart',\n        'bi bi-code-slash': 'Connection',\n        'bi bi-box': 'Briefcase',\n        'bi bi-headset': 'Headset',\n        'bi bi-three-dots': 'More'\n      }\n      \n      return iconMap[iconClass] || 'House'\n    }\n    \n    // 生成头像样式\n    const getAvatarStyle = (contact) => {\n      if (!contact) return {}\n      \n      // 根据用户名生成一个固定的颜色\n      const colors = [\n        '#409EFF', '#67C23A', '#E6A23C', '#F56C6C', \n        '#909399', '#3B71CA', '#14A44D', '#DC4C64',\n        '#54B4D3', '#9FA6B2', '#3E4551', '#6610F2'\n      ]\n      \n      let hash = 0\n      if (contact.name) {\n        for (let i = 0; i < contact.name.length; i++) {\n          hash = contact.name.charCodeAt(i) + ((hash << 5) - hash)\n        }\n      }\n      \n      const colorIndex = Math.abs(hash) % colors.length\n      return { backgroundColor: colors[colorIndex] }\n    }\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        console.log('获取用户信息响应:', res)\n        \n        // 检查不同的响应格式\n        if (res && res.success && res.data) {\n          // 标准格式：{success: true, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从标准格式中获取到公司ID:', companyId.value)\n        } else if (res && res.code === 200 && res.data) {\n          // 另一种格式：{code: 200, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从code=200格式中获取到公司ID:', companyId.value)\n        } else if (res && typeof res === 'object') {\n          // 直接返回数据对象的格式\n          currentUser.value = res\n          companyId.value = res.company\n          console.log('从直接返回对象中获取到公司ID:', companyId.value)\n        } else {\n          console.error('无法解析用户信息响应:', res)\n          ElMessage.warning('用户信息格式异常')\n        }\n          \n          if (!companyId.value) {\n          console.error('当前用户没有关联公司信息:', currentUser.value)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n        return currentUser.value\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法加载部门列表')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        console.log('开始获取公司部门，公司ID:', companyId.value)\n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        console.log('获取公司部门响应:', res)\n        \n        if (res && res.success && res.data) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          console.log('联系人总数:', totalContactsCount)\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset',\n            '其他': 'bi bi-three-dots'  // 添加\"其他\"部门的图标\n          }\n          \n          // 确保每个部门都有count属性\n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count || 0  // 确保count属性存在，如果为null或undefined则设为0\n          }))\n          \n          // 统计没有部门的用户数量\n          const noDeptCount = await getContactsWithNoDept()\n          \n          // 添加\"其他\"部门选项 (如果有无部门用户)\n          if (noDeptCount > 0) {\n            formattedDepts.push({\n              id: 'no-dept', // 特殊ID用于标识没有部门的用户\n              name: '其他',\n              icon: deptIcons['其他'],\n              count: noDeptCount\n            })\n          }\n          \n          departments.value = [...allDepts, ...formattedDepts]\n          console.log('部门列表加载完成:', departments.value)\n        } else {\n          console.error('获取部门列表响应格式错误:', res)\n          ElMessage.error('获取部门列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人总数')\n          return 0\n        }\n        \n        console.log('开始获取联系人总数，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          return res.data.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取没有部门的用户数量\n    const getContactsWithNoDept = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人')\n          return 0\n        }\n        \n        console.log('开始获取无部门联系人，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 筛选没有部门的联系人\n          const contactsWithNoDept = res.data.filter(contact => \n            !contact.department || contact.department === null || contact.department === '' || \n            !contact.department_name || contact.department_name === null || contact.department_name === ''\n          )\n          return contactsWithNoDept.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取无部门联系人数量失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人列表')\n          ElMessage.warning('未找到当前用户所属公司，无法获取联系人')\n          loading.value.contacts = false\n          return\n        }\n        \n        console.log('开始获取联系人列表，公司ID:', companyId.value)\n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          const selectedDeptInfo = departments.value[selectedDept.value]\n          \n          if (selectedDeptInfo) {\n            if (selectedDeptInfo.id === 'no-dept') {\n              // 如果选择了\"其他\"部门，不需要添加部门参数，稍后会在结果中筛选\n              console.log('已选择\"其他\"部门，将筛选没有部门的联系人')\n            } else {\n              // 正常部门，添加部门ID参数\n              params.department = selectedDeptInfo.id\n            }\n          } else {\n            console.error('选择的部门索引无效:', selectedDept.value)\n          }\n        }\n        \n        console.log('请求联系人列表参数:', params)\n        const res = await request(url, { params })\n        console.log('获取联系人列表响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 处理返回的联系人数据，添加avatar_url\n          res.data.forEach(contact => {\n            // 检查联系人自身是否有avatar字段\n            if (contact.avatar) {\n              // 处理头像路径，将avatar转换为完整URL\n              const avatar = contact.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            } \n            // 检查联系人是否关联了用户，用户可能有头像\n            else if (contact.user && typeof contact.user === 'object' && contact.user.avatar) {\n              const avatar = contact.user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            // 如果用户ID是数字，可能需要额外获取用户信息\n            else if (contact.user && typeof contact.user === 'number') {\n              // 这里需要异步获取用户信息，但为简单起见，先设置一个标记\n              contact.need_fetch_avatar = true;\n            }\n\n            // 添加调试日志\n            console.log(`联系人 ${contact.name} 的头像信息:`, { \n              avatar: contact.avatar, \n              avatar_url: contact.avatar_url,\n              user: contact.user\n            });\n          });\n\n          // 如果选择了\"其他\"部门，筛选没有部门的联系人\n          if (selectedDept.value !== 0 && \n              departments.value[selectedDept.value] && \n              departments.value[selectedDept.value].id === 'no-dept') {\n            \n            contacts.value = res.data.filter(contact => \n              !contact.department || contact.department === null || contact.department === '' ||\n              !contact.department_name || contact.department_name === null || contact.department_name === ''\n            )\n            console.log('筛选出的无部门联系人:', contacts.value)\n          } else {\n            // 正常显示所有联系人或特定部门的联系人\n            contacts.value = res.data\n          }\n          \n          // 加载那些需要获取额外用户信息的联系人头像\n          contacts.value.forEach(async (contact, index) => {\n            if (contact.need_fetch_avatar) {\n              await fetchUserAvatar(contact, index);\n            }\n          });\n          \n          // 打印第一个联系人数据以查看结构\n          if (contacts.value && contacts.value.length > 0) {\n            console.log('联系人数据结构示例:', contacts.value[0])\n          } else {\n            console.log('未找到任何联系人')\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        } else {\n          console.error('获取联系人列表响应格式错误:', res)\n          ElMessage.error('获取联系人列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      try {\n      // 先获取当前用户信息\n        console.log('开始初始化联系人页面...')\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          console.error('未能获取到用户信息，中断初始化流程')\n          return\n        }\n        \n        if (!companyId.value) {\n          console.error('未找到用户所属公司ID，中断初始化流程')\n          return\n        }\n      \n      // 再加载部门列表\n        console.log('开始加载部门列表...')\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n        console.log('开始加载联系人列表...')\n      await fetchContacts()\n        \n        console.log('联系人页面初始化完成')\n      } catch (error) {\n        console.error('联系人页面初始化失败:', error)\n        ElMessage.error('页面加载失败：' + (error.message || '未知错误'))\n      }\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 直接使用联系人的ID创建聊天会话\n        // 因为联系人现在就是用户，所以ID直接用联系人的ID\n        const userId = parseInt(contact.id)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contact.id)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        // 首先获取现有的聊天会话列表\n        try {\n          console.log('正在检查是否已有与该联系人的聊天会话...')\n          const sessionsResponse = await axios.get('/api/chat/sessions/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n          \n          console.log('获取到的会话列表:', sessionsResponse.data)\n          \n          // 解析会话数据\n          let sessions = []\n          if (sessionsResponse.data && sessionsResponse.data.results) {\n            // 分页格式\n            sessions = sessionsResponse.data.results\n          } else if (sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n            // 直接数组格式\n            sessions = sessionsResponse.data\n          } else if (sessionsResponse.data && sessionsResponse.data.data && Array.isArray(sessionsResponse.data.data)) {\n            // 嵌套data格式\n            sessions = sessionsResponse.data.data\n          }\n          \n          // 查找是否有与当前联系人的单聊会话\n          // 单聊会话的特点是不是群组，且只有两个参与者\n          const existingSession = sessions.find(session => {\n            // 跳过群聊\n            if (session.is_group) return false\n            \n            // 确保有参与者数据且为数组\n            if (!session.participants || !Array.isArray(session.participants)) return false\n            \n            // 确保参与者数量为2（当前用户+目标联系人）\n            if (session.participants.length !== 2) return false\n            \n            // 查找是否有目标联系人在参与者中\n            const hasTargetUser = session.participants.some(participant => {\n              return participant.user && participant.user.id === userId\n            })\n            \n            return hasTargetUser\n          })\n          \n          if (existingSession) {\n            // 找到现有会话，直接跳转\n            console.log('找到现有会话:', existingSession)\n            router.push({\n              path: '/chat',\n              query: { id: existingSession.id }\n            })\n            return\n          } else {\n            console.log('未找到与该联系人的现有会话，将创建新会话')\n          }\n          \n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: contact.name ? `与${contact.name}的聊天` : '新聊天'\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n          throw error\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    // 添加获取用户头像的辅助函数\n    const fetchUserAvatar = async (contact, index) => {\n      if (!contact.user || typeof contact.user !== 'number') return;\n      \n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log(`为联系人 ${contact.name} 获取用户头像...`);\n        const response = await axios.get(`/api/auth/users/${contact.user}/`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        let userData = null;\n        if (response.data && response.data.success && response.data.data) {\n          userData = response.data.data;\n        } else if (response.data) {\n          userData = response.data;\n        }\n        \n        if (userData && userData.avatar) {\n          const avatar = userData.avatar;\n          if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n            contact.avatar_url = avatar;\n          } else if (avatar.startsWith('/')) {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n          } else {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n          }\n          console.log(`成功获取联系人 ${contact.name} 的头像:`, contact.avatar_url);\n          \n          // 这里需要通过Vue的响应式系统更新联系人数据\n          if (index !== undefined && index >= 0 && index < contacts.value.length) {\n            contacts.value[index] = { ...contact };\n          }\n        }\n      } catch (error) {\n        console.error(`获取联系人 ${contact.name} 的用户头像失败:`, error);\n      }\n    };\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat,\n      getDeptIcon,\n      getAvatarStyle\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.contact-wrapper {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 140px);\n}\n\n.contact-sidebar {\n  width: 240px;\n  flex-shrink: 0;\n}\n\n.contact-list {\n  width: 320px;\n  flex-shrink: 0;\n}\n\n.contact-detail {\n  flex: 1;\n  min-width: 0;\n}\n\n.contacts-nav-card,\n.contacts-list-card,\n.contact-detail-card {\n  height: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  transition: all 0.3s;\n  \n  &:hover {\n    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n  }\n}\n\n.search-box {\n  margin-bottom: 15px;\n}\n\n.contacts-nav {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.dept-item {\n  padding: 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  transition: all 0.3s ease;\n  \n  .el-icon {\n    font-size: 16px;\n    margin-right: 10px;\n    color: var(--el-text-color-secondary);\n  }\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n    color: var(--el-color-primary);\n    \n    .el-icon {\n      color: var(--el-color-primary);\n    }\n  }\n  \n  span {\n    flex: 1;\n    font-size: 14px;\n  }\n}\n\n.dept-badge {\n  margin-left: 5px;\n}\n\n.dept-badge :deep(.el-badge__content) {\n  background-color: #909399 !important;\n  color: white !important;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.contact-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  background-color: var(--el-fill-color-light);\n  padding: 2px 8px;\n  border-radius: 10px;\n}\n\n.search-info {\n  background-color: var(--el-fill-color-light);\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 6px;\n    color: var(--el-color-info);\n  }\n}\n\n.contacts-list {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.contact-item {\n  display: flex;\n  padding: 12px;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n  }\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-right: 12px;\n  font-size: 16px;\n}\n\n.contact-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.contact-name {\n  font-weight: 500;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-position {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-header {\n  display: flex;\n  margin-bottom: 24px;\n}\n\n.detail-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 24px;\n  margin-right: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.detail-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.detail-name {\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 6px;\n}\n\n.detail-position, .detail-department {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-actions {\n  margin-top: 12px;\n  display: flex;\n  gap: 10px;\n}\n\n.contact-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.contact-section {\n  margin-bottom: 0;\n}\n\n.section-title {\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 8px;\n    color: var(--el-color-primary);\n    font-size: 18px;\n  }\n}\n\n.contact-grid {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -10px;\n}\n\n.contact-item-box {\n  width: 50%;\n  padding: 0 10px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.contact-item-icon {\n  color: var(--el-color-info);\n  margin-right: 10px;\n  font-size: 16px;\n}\n\n.contact-item-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.contact-item-label {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-item-value {\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.skills-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.skill-tag {\n  margin: 0;\n}\n\n// 响应式布局\n@media (max-width: 1200px) {\n  .contact-wrapper {\n    flex-wrap: wrap;\n    height: auto;\n  }\n  \n  .contact-sidebar {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-nav {\n    max-height: 200px;\n  }\n  \n  .contact-list {\n    width: 40%;\n  }\n  \n  .contact-detail {\n    width: 60%;\n  }\n  \n  .contact-item-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .contact-wrapper {\n    flex-direction: column;\n  }\n  \n  .contact-list,\n  .contact-detail {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-list,\n  .contacts-nav {\n    max-height: 300px;\n  }\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n:deep(.el-tag) {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--text-color) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-tag.el-tag--info) {\n  background: var(--bg-color-tertiary) !important;\n  border-color: var(--border-color) !important;\n  color: var(--text-color) !important;\n}\n:deep(.el-tag.el-tag--success) {\n  background: var(--success-color) !important;\n  border-color: var(--success-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--primary) {\n  background: var(--primary-color) !important;\n  border-color: var(--primary-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--warning) {\n  background: var(--warning-color) !important;\n  border-color: var(--warning-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--danger) {\n  background: var(--danger-color) !important;\n  border-color: var(--danger-color) !important;\n  color: #fff !important;\n}\n:deep(.el-badge__content) {\n  background: var(--danger-color) !important;\n  color: #fff !important;\n}\n.contact-item:hover,\n.dept-item:hover,\n.search-info,\n.contact-count {\n  background-color: var(--hover-color) !important;\n}\n:deep(.el-table__row:hover > td.el-table__cell) {\n  background-color: var(--hover-color) !important;\n}\n\n.contacts-nav-card {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-card.contacts-nav-card) {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n.dept-item.active {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--primary-color) !important;\n}\n.dept-item {\n  background: transparent !important;\n}\n\n:deep(.el-badge__content.is-fixed) {\n  position: static !important;\n  transform: none !important;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}