{"remainingRequest":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue?vue&type=template&id=58ef6f92&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue","mtime":1746766931880},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\babel.config.js","mtime":1746431728272},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202324},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218792},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218359},{"path":"C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_createVNode","_component_el_card","_hoisted_4","_component_el_input","$setup","searchQuery","$event","placeholder","clearable","Search","onInput","handleSearch","_hoisted_5","_Fragment","_renderList","categories","category","index","key","id","_normalizeClass","selectedCategory","onClick","selectCategory","style","_normalizeStyle","color","_component_el_icon","size","_createBlock","_resolveDynamicComponent","icon","_hoisted_7","_toDisplayString","name","_hoisted_8","document_count","isAdmin","_component_el_button","type","_cache","showCategoryDialog","_component_Plus","_hoisted_9","_hoisted_10","_hoisted_11","_component_el_checkbox","filters","types","pdf","onChange","applyFilters","doc","xls","ppt","img","txt","_hoisted_12","_hoisted_13","_component_el_radio_group","status","_component_el_radio","value","_hoisted_14","_hoisted_15","date","_hoisted_16","_component_el_date_picker","dateRange","format","_hoisted_17","_hoisted_18","_hoisted_19","currentCategoryName","totalDocs","_component_el_tag","_hoisted_20","uploadVisible","_component_Upload","_component_FolderAdd","documents","length","_hoisted_21","getFileIcon","_hoisted_22","_hoisted_23","title","_hoisted_24","creator","_hoisted_25","tags","tag","i","_hoisted_26","circle","_withModifiers","previewDocument","_component_View","downloadDocument","_component_Download","_component_el_dropdown","trigger","teleported","dropdown","_withCtx","_component_el_dropdown_menu","_component_el_dropdown_item","shareDocument","_component_Share","editDocument","_component_Edit","_ctx","renameDocument","_component_EditPen","moveDocument","_component_FolderOpened","starDocument","_component_Star","divided","deleteDocument","_component_Delete","_component_More","_hoisted_27","_component_el_pagination","background","layout","total","currentPage","onCurrentChange","handlePageChange","_component_el_dialog","width","footer","_hoisted_28","submitUpload","loading","uploading","_component_el_form","ref","model","uploadForm","rules","uploadRules","_component_el_form_item","label","prop","description","rows","_component_el_select","filter","c","cat","idx","_component_el_option","_component_el_upload","drag","action","handleFileChange","handleRemove","limit","tip","_component_upload_filled","_hoisted_29","_hoisted_30","_hoisted_31","resetCategoryForm","categoryLoading","_hoisted_32","_component_Loading","_hoisted_33","_component_el_empty","_hoisted_34","_hoisted_35","backgroundColor","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","plain","editCategory","handleDeleteCategory","showAddCategoryForm","_hoisted_41","_hoisted_42","editingCategory","cancelCategoryForm","categoryForm","required","_hoisted_43","_component_Document","_hoisted_44","_component_Files","_hoisted_45","_component_Tickets","_hoisted_46","_component_DataAnalysis","_hoisted_47","_component_PictureFilled","_component_el_color_picker","_hoisted_48","saveCategoryForm"],"sources":["C:\\Users\\18083\\Desktop\\oo\\smart-office\\frontend\\src\\views\\knowledge\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"knowledge-container\" v-stop-propagation>\n    <div class=\"row\">\n      <!-- 左侧导航 -->\n      <div class=\"col-lg-3\">\n        <el-card class=\"category-card\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索文档...\"\n              clearable\n              :prefix-icon=\"Search\"\n              @input=\"handleSearch\"\n            ></el-input>\n          </div>\n          \n          <div class=\"category-list\">\n            <div v-for=\"(category, index) in categories\" :key=\"category.id || index\" \n                 class=\"category-item\" \n                 :class=\"{'active': selectedCategory === (category.id || index)}\"\n                 @click=\"selectCategory(category.id || index)\">\n              <div class=\"category-icon\" :style=\"{'background-color': category.color}\">\n                <el-icon :size=\"20\" color=\"white\">\n                  <component :is=\"category.icon\"></component>\n                </el-icon>\n              </div>\n              <span class=\"category-name\">{{ category.name }}</span>\n              <span class=\"category-count\">{{ category.document_count || 0 }}</span>\n            </div>\n            \n            <el-button \n              v-if=\"isAdmin\"\n              type=\"primary\" \n              size=\"small\" \n              class=\"add-category-btn\"\n              @click=\"showCategoryDialog = true\">\n              <el-icon><Plus /></el-icon> 添加分类\n            </el-button>\n          </div>\n          \n          <div class=\"filter-section\">\n            <h6>筛选条件</h6>\n            <div class=\"filter-group\">\n              <h6>文件类型</h6>\n              <div class=\"filter-options\">\n                <el-checkbox v-model=\"filters.types.pdf\" @change=\"applyFilters\">PDF文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.doc\" @change=\"applyFilters\">Word文档</el-checkbox>\n                <el-checkbox v-model=\"filters.types.xls\" @change=\"applyFilters\">Excel表格</el-checkbox>\n                <el-checkbox v-model=\"filters.types.ppt\" @change=\"applyFilters\">PPT演示文稿</el-checkbox>\n                <el-checkbox v-model=\"filters.types.img\" @change=\"applyFilters\">图片</el-checkbox>\n                <el-checkbox v-model=\"filters.types.txt\" @change=\"applyFilters\">文本文件</el-checkbox>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>文档状态</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.status\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部状态</el-radio>\n                  <el-radio :value=\"'completed'\">处理完成</el-radio>\n                  <el-radio :value=\"'processing'\">处理中</el-radio>\n                  <el-radio :value=\"'pending'\">待处理</el-radio>\n                  <el-radio :value=\"'failed'\">处理失败</el-radio>\n                </el-radio-group>\n              </div>\n            </div>\n            \n            <div class=\"filter-group mt-3\">\n              <h6>创建日期</h6>\n              <div class=\"filter-options\">\n                <el-radio-group v-model=\"filters.date\" @change=\"applyFilters\">\n                  <el-radio :value=\"'all'\">全部时间</el-radio>\n                  <el-radio :value=\"'today'\">今天</el-radio>\n                  <el-radio :value=\"'week'\">本周</el-radio>\n                  <el-radio :value=\"'month'\">本月</el-radio>\n                  <el-radio :value=\"'custom'\">自定义</el-radio>\n                </el-radio-group>\n                <div v-if=\"filters.date === 'custom'\" class=\"mt-2\">\n                  <el-date-picker\n                    v-model=\"filters.dateRange\"\n                    type=\"daterange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\"\n                    format=\"YYYY/MM/DD\"\n                    style=\"width: 100%\"\n                    @change=\"applyFilters\"\n                  ></el-date-picker>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </div>\n      \n      <!-- 右侧内容区 -->\n      <div class=\"col-lg-9\">\n        <el-card class=\"mb-3\">\n          <div class=\"card-header-flex\">\n            <div class=\"header-title\">\n              <span>{{ currentCategoryName }}</span>\n              <el-tag v-if=\"totalDocs > 0\" class=\"ml-2\">{{ totalDocs }}个文档</el-tag>\n            </div>\n            <div class=\"header-actions\">\n              <el-button type=\"primary\" @click=\"uploadVisible = true\">\n                <el-icon><Upload /></el-icon> 上传文档\n              </el-button>\n              <el-button v-if=\"isAdmin\" @click=\"showCategoryDialog = true\">\n                <el-icon><FolderAdd /></el-icon> 管理分类\n              </el-button>\n            </div>\n          </div>\n          \n          <div class=\"upload-zone\" @click=\"uploadVisible = true\" v-if=\"documents.length === 0\">\n            <el-icon class=\"upload-icon\"><Upload /></el-icon>\n            <div class=\"upload-text\">点击或拖拽文件到此处上传</div>\n            <div class=\"upload-hint\">支持单个或批量上传，最大支持10MB</div>\n          </div>\n          \n          <div v-else class=\"document-list\">\n            <div v-for=\"(doc, index) in documents\" :key=\"index\" class=\"document-card\">\n              <div class=\"document-icon\" :class=\"'icon-' + doc.type\">\n                <component :is=\"getFileIcon(doc.type)\"></component>\n              </div>\n              <div class=\"document-content\">\n                <div class=\"document-title\">{{ doc.title }}</div>\n                <div class=\"document-info\">\n                  <span>{{ doc.creator }} · {{ doc.date }}</span>\n                  <div class=\"document-tags\">\n                    <span v-for=\"(tag, i) in doc.tags\" :key=\"i\" class=\"tag\">{{ tag }}</span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"document-actions\">\n                <el-button circle size=\"small\" @click.stop=\"previewDocument(doc)\">\n                  <el-icon><View /></el-icon>\n                </el-button>\n                <el-button circle size=\"small\" @click.stop=\"downloadDocument(doc)\">\n                  <el-icon><Download /></el-icon>\n                </el-button>\n                <el-dropdown trigger=\"click\" :teleported=\"true\">\n                  <el-button circle size=\"small\">\n                    <el-icon><More /></el-icon>\n                  </el-button>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                      <el-dropdown-item @click=\"shareDocument(doc)\">\n                        <el-icon><Share /></el-icon> 分享\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"editDocument(doc)\">\n                        <el-icon><Edit /></el-icon> 编辑\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"renameDocument(doc)\">\n                        <el-icon><EditPen /></el-icon> 重命名\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"moveDocument(doc)\">\n                        <el-icon><FolderOpened /></el-icon> 移动到\n                      </el-dropdown-item>\n                      <el-dropdown-item @click=\"starDocument(doc)\">\n                        <el-icon><Star /></el-icon> 收藏\n                      </el-dropdown-item>\n                      <el-dropdown-item divided @click=\"deleteDocument(doc)\">\n                        <el-icon><Delete /></el-icon> 删除\n                      </el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              v-if=\"documents.length > 0\"\n              background\n              layout=\"prev, pager, next\"\n              :total=\"100\"\n              :page-size=\"10\"\n              :current-page=\"currentPage\"\n              @current-change=\"handlePageChange\"\n            ></el-pagination>\n          </div>\n        </el-card>\n      </div>\n    </div>\n    \n    <!-- 文件上传对话框 -->\n    <el-dialog\n      v-model=\"uploadVisible\"\n      title=\"上传文档\"\n      width=\"500px\"\n    >\n      <el-form ref=\"uploadFormRef\" :model=\"uploadForm\" :rules=\"uploadRules\">\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"uploadForm.title\" placeholder=\"请输入文档标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"文档描述\">\n          <el-input v-model=\"uploadForm.description\" type=\"textarea\" :rows=\"3\" placeholder=\"请输入文档描述\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"选择分类\">\n          <el-select v-model=\"uploadForm.category\" placeholder=\"请选择分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"(cat, idx) in categories.filter(c => c.id !== 'all')\"\n              :key=\"idx\"\n              :label=\"cat.name\"\n              :value=\"cat.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"文档文件\" prop=\"file\">\n          <el-upload\n            class=\"upload-demo\"\n            drag\n            action=\"#\"\n            :auto-upload=\"false\"\n            :on-change=\"handleFileChange\"\n            :on-remove=\"handleRemove\"\n            :limit=\"1\"\n          >\n            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n            <div class=\"el-upload__text\">\n              拖拽文件到此处或<em>点击上传</em>\n            </div>\n            <template #tip>\n              <div class=\"el-upload__tip\">\n                支持上传PDF、Word、Excel、PPT等文档，单个文件不超过10MB\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"uploadVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitUpload\" :loading=\"uploading\">上传</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"showCategoryDialog\"\n      title=\"分类管理\"\n      width=\"650px\"\n    >\n      <div class=\"category-dialog-content\">\n        <div class=\"category-list-section\">\n          <div class=\"section-header\">\n            <h5>已有分类</h5>\n            <el-button \n              type=\"primary\" \n              size=\"small\" \n              @click=\"resetCategoryForm\">\n              <el-icon><Plus /></el-icon> 新增分类\n            </el-button>\n          </div>\n          \n          <div v-if=\"categoryLoading\" class=\"text-center p-4\">\n            <el-icon class=\"is-loading\"><Loading /></el-icon> 加载中...\n          </div>\n          \n          <div v-else-if=\"categories.length <= 1\" class=\"empty-categories\">\n            <el-empty description=\"暂无分类数据\" />\n          </div>\n          \n          <div v-else class=\"category-items\">\n            <div v-for=\"(category, index) in categories.filter(c => c.id !== 'all')\" :key=\"index\" class=\"category-list-item\">\n              <div class=\"category-info\">\n                <div class=\"category-color\" :style=\"{ backgroundColor: category.color }\"></div>\n                <div class=\"category-name-section\">\n                  <span class=\"category-name\">{{ category.name }}</span>\n                  <span class=\"category-desc\">{{ category.description }}</span>\n                </div>\n                <span class=\"category-count\">{{ category.document_count || 0 }}个文档</span>\n              </div>\n              \n              <div class=\"category-actions\">\n                <el-button type=\"primary\" size=\"small\" plain @click=\"editCategory(category)\">\n                  <el-icon><Edit /></el-icon>\n                </el-button>\n                <el-button type=\"danger\" size=\"small\" plain @click=\"handleDeleteCategory(category)\">\n                  <el-icon><Delete /></el-icon>\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div v-if=\"showAddCategoryForm\" class=\"category-form-section\">\n          <div class=\"section-header\">\n            <h5>{{ editingCategory ? '编辑分类' : '新增分类' }}</h5>\n            <el-button size=\"small\" @click=\"cancelCategoryForm\">\n              取消\n            </el-button>\n          </div>\n          \n          <el-form :model=\"categoryForm\" label-width=\"80px\">\n            <el-form-item label=\"分类名称\" required>\n              <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"分类描述\">\n              <el-input type=\"textarea\" v-model=\"categoryForm.description\" :rows=\"2\" placeholder=\"请输入分类描述\"></el-input>\n            </el-form-item>\n            \n            <el-form-item label=\"图标\">\n              <el-select v-model=\"categoryForm.icon\" placeholder=\"选择图标\" style=\"width: 100%\">\n                <el-option value=\"Document\" label=\"文档\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Document /></el-icon> <span class=\"ml-2\">文档</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Files\" label=\"文件夹\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Files /></el-icon> <span class=\"ml-2\">文件夹</span>\n                  </div>\n                </el-option>\n                <el-option value=\"Tickets\" label=\"票据\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><Tickets /></el-icon> <span class=\"ml-2\">票据</span>\n                  </div>\n                </el-option>\n                <el-option value=\"DataAnalysis\" label=\"数据分析\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><DataAnalysis /></el-icon> <span class=\"ml-2\">数据分析</span>\n                  </div>\n                </el-option>\n                <el-option value=\"PictureFilled\" label=\"图片\">\n                  <div class=\"d-flex align-items-center\">\n                    <el-icon><PictureFilled /></el-icon> <span class=\"ml-2\">图片</span>\n                  </div>\n                </el-option>\n              </el-select>\n            </el-form-item>\n            \n            <el-form-item label=\"颜色\">\n              <el-color-picker v-model=\"categoryForm.color\" show-alpha></el-color-picker>\n              <span class=\"ml-2\">{{ categoryForm.color }}</span>\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"saveCategoryForm\">保存</el-button>\n              <el-button @click=\"cancelCategoryForm\">取消</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onBeforeUnmount } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport axios from 'axios'\nimport { \n  Search, Upload, FolderAdd, View, Download, More, Share, \n  Edit, EditPen, FolderOpened, Star, Delete, Document, \n  Files, Tickets, DataAnalysis, PictureFilled, UploadFilled,\n  Loading, List, Grid, Crop, SplitCells, Plus\n} from '@element-plus/icons-vue'\nimport { getCategories, getDocuments, getDocumentChunks, uploadDocument, deleteCategory, updateCategory, addCategory } from '@/api/knowledge'\n\nexport default {\n  name: 'Knowledge',\n  setup() {\n    const API_URL = '/api/knowledge'\n    \n    // 状态变量\n    const searchQuery = ref('')\n    const selectedCategory = ref('all')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const uploadVisible = ref(false)\n    const showCategoryDialog = ref(false)\n    const showAddCategoryForm = ref(false)\n    const showChunksDialog = ref(false)\n    const editingCategory = ref(null)\n    const viewMode = ref('list')\n    const sortOrder = ref('-created_at')\n    const categoryLoading = ref(false)\n    const loading = ref(false)\n    const uploading = ref(false)\n    const chunksLoading = ref(false)\n    const isAdmin = ref(true) // 实际应用中从用户会话获取\n    const selectedDocument = ref(null)\n    const documentChunks = ref([])\n    const uploadFormRef = ref(null)\n    const totalDocs = ref(0)\n    \n    // 上传表单\n    const uploadForm = reactive({\n      title: '',\n      description: '',\n      category: null,\n      tags: '',\n      file: null,\n      chunk_size: 1000,\n      chunk_overlap: 200,\n      is_public: false\n    })\n    \n    // 上传表单验证规则\n    const uploadRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 100, message: '标题长度应在2到100个字符之间', trigger: 'blur' }\n      ],\n      file: [\n        { required: true, message: '请上传文件', trigger: 'change' }\n      ]\n    }\n    \n    // 分类表单\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      icon: 'Document',\n      color: '#409EFF'\n    })\n    \n    // 筛选条件\n    const filters = reactive({\n      types: {\n        pdf: false,\n        doc: false,\n        xls: false,\n        ppt: false,\n        img: false,\n        txt: false\n      },\n      status: 'all',\n      date: 'all',\n      dateRange: []\n    })\n    \n    // 知识分类\n    const categories = ref([\n      { id: 'all', name: '全部文档', icon: 'Files', color: '#007bff', document_count: 0 }\n    ])\n    \n    // 文档列表\n    const documents = ref([])\n    \n    // 计算属性\n    const currentCategoryName = computed(() => {\n      const category = categories.value.find(cat => cat.id === selectedCategory.value)\n      return category ? category.name : '全部文档'\n    })\n    \n    const processingCount = computed(() => {\n      return documents.value.filter(doc => doc.status === 'processing').length\n    })\n    \n    // 方法\n    const fetchCategories = async () => {\n      categoryLoading.value = true\n      console.log('开始获取知识库分类...')\n      try {\n        console.log('请求URL:', `${API_URL}/categories/`)\n        const response = await getCategories()\n        console.log('获取分类响应:', response)\n        \n        // 添加\"全部\"分类\n        const allCategory = { \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }\n        \n        let categoryList = []\n        \n        // 处理不同格式的响应\n        if (response) {\n          // 检查新的API格式\n          if (response.results && Array.isArray(response.results)) {\n            categoryList = response.results\n          } \n          // 向后兼容，处理旧格式\n          else if (Array.isArray(response)) {\n            categoryList = response\n          } \n          // 其他格式处理\n          else if (typeof response === 'object') {\n            // 尝试提取可能的数据数组\n            const possibleArrayFields = ['data', 'categories', 'items'];\n            for (const field of possibleArrayFields) {\n              if (response[field] && Array.isArray(response[field])) {\n                categoryList = response[field];\n                break;\n              }\n            }\n          }\n          \n          if (categoryList && categoryList.length > 0) {\n            console.log('找到分类数据，数量:', categoryList.length);\n            allCategory.document_count = categoryList.reduce((sum, cat) => sum + (cat.document_count || 0), 0)\n            categories.value = [allCategory, ...categoryList]\n          } else {\n            console.error('未找到有效的分类数据');\n            if (response.message) {\n              ElMessage.warning(response.message);\n            } else {\n              ElMessage.warning('未找到分类数据，请先创建分类');\n            }\n            categories.value = [allCategory]; // 至少显示\"全部文档\"分类\n          }\n        } else {\n          console.error('响应为空');\n          ElMessage.warning('获取分类失败，请检查网络连接');\n          categories.value = [allCategory];\n        }\n      } catch (error) {\n        console.error('获取分类失败:', error)\n        if (error.response) {\n          console.error('错误响应状态:', error.response.status)\n          console.error('错误响应数据:', error.response.data)\n        }\n        ElMessage.error('无法加载知识库分类，请检查网络连接或联系管理员')\n        // 确保至少有\"全部\"分类可显示\n        categories.value = [{ \n          id: 'all', \n          name: '全部文档', \n          icon: 'Files', \n          color: '#007bff', \n          document_count: 0 \n        }];\n      } finally {\n        categoryLoading.value = false\n      }\n    }\n    \n    const fetchDocuments = async () => {\n      loading.value = true\n      try {\n        // 构建参数对象\n        const params = {\n          page: currentPage.value,\n          page_size: pageSize.value,\n          ordering: sortOrder.value\n        }\n        \n        // 添加筛选条件\n        if (selectedCategory.value && selectedCategory.value !== 'all') {\n          params.category = selectedCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        // 添加文件类型筛选\n        const selectedTypes = []\n        for (const [type, selected] of Object.entries(filters.types)) {\n          if (selected) selectedTypes.push(type)\n        }\n        if (selectedTypes.length > 0) {\n          params.file_type = selectedTypes.join(',')\n        }\n        \n        // 添加状态筛选\n        if (filters.status !== 'all') {\n          params.status = filters.status\n        }\n        \n        // 添加日期筛选\n        if (filters.date !== 'all') {\n          const now = new Date()\n          let startDate = new Date()\n          \n          if (filters.date === 'today') {\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'week') {\n            startDate.setDate(now.getDate() - now.getDay())\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'month') {\n            startDate.setDate(1)\n            startDate.setHours(0, 0, 0, 0)\n          } else if (filters.date === 'custom' && filters.dateRange.length === 2) {\n            startDate = filters.dateRange[0]\n            const endDate = filters.dateRange[1]\n            params.created_after = formatDateForAPI(startDate)\n            params.created_before = formatDateForAPI(endDate)\n          } else {\n            params.created_after = formatDateForAPI(startDate)\n          }\n        }\n        \n        const response = await getDocuments(params)\n        if (response) {\n          console.log('获取文档响应:', response)\n          \n          // 处理不同格式的响应\n          if (response.results && Array.isArray(response.results)) {\n            // 分页格式的响应\n            documents.value = response.results\n            totalDocs.value = response.count || response.total || documents.value.length\n          } else if (Array.isArray(response)) {\n            // 数组格式的响应\n            documents.value = response\n            totalDocs.value = response.length\n          } else if (response.data && Array.isArray(response.data)) {\n            // 另一种常见的对象包装格式\n            documents.value = response.data\n            totalDocs.value = response.total || response.count || documents.value.length\n          } else if (typeof response === 'object') {\n            // 尝试提取可能的文档列表\n            const possibleDocuments = Object.values(response).filter(item => \n              item && typeof item === 'object' && ('title' in item || 'file' in item)\n            )\n            if (possibleDocuments.length > 0) {\n              documents.value = possibleDocuments\n              totalDocs.value = possibleDocuments.length\n            } else {\n              console.error('无法从响应中提取文档列表:', response)\n              documents.value = []\n              totalDocs.value = 0\n              ElMessage.warning('获取文档列表格式异常')\n            }\n          } else {\n            console.error('文档响应格式不支持:', typeof response, response)\n            documents.value = []\n            totalDocs.value = 0\n            ElMessage.warning('获取文档列表格式不支持')\n          }\n        } else {\n          documents.value = []\n          totalDocs.value = 0\n        }\n      } catch (error) {\n        console.error('获取文档失败:', error)\n        ElMessage.error('无法加载知识库文档')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const fetchDocumentChunks = async (documentId) => {\n      chunksLoading.value = true\n      try {\n        const response = await getDocumentChunks(documentId)\n        documentChunks.value = response\n      } catch (error) {\n        console.error('获取文档分块失败:', error)\n        ElMessage.error('无法加载文档分块数据')\n      } finally {\n        chunksLoading.value = false\n      }\n    }\n    \n    const handlePageChange = (page) => {\n      currentPage.value = page\n      fetchDocuments()\n    }\n    \n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const selectCategory = (categoryId) => {\n      selectedCategory.value = categoryId\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const applyFilters = () => {\n      currentPage.value = 1\n      fetchDocuments()\n    }\n    \n    const handleFileChange = (file) => {\n      if (file && file.raw) {\n        uploadForm.file = file.raw\n        uploadForm.title = uploadForm.title || file.name.split('.')[0]\n      }\n    }\n    \n    const handleRemove = () => {\n      uploadForm.file = null\n    }\n    \n    const submitUpload = async () => {\n      if (!uploadFormRef.value) return\n      \n      uploadFormRef.value.validate(async (valid) => {\n        if (!valid) return\n        \n        if (!uploadForm.file) {\n          ElMessage.warning('请选择要上传的文件')\n          return\n        }\n        \n        uploading.value = true\n        \n        try {\n          const formData = new FormData()\n          formData.append('title', uploadForm.title)\n          formData.append('description', uploadForm.description || '')\n          formData.append('file', uploadForm.file)\n          formData.append('chunk_size', uploadForm.chunk_size)\n          formData.append('chunk_overlap', uploadForm.chunk_overlap)\n          formData.append('is_public', uploadForm.is_public)\n          \n          if (uploadForm.category) {\n            formData.append('category', uploadForm.category)\n          }\n          \n          if (uploadForm.tags) {\n            formData.append('tags', uploadForm.tags)\n          }\n          \n          await uploadDocument(formData)\n          \n          ElMessage.success('文档上传成功，后台正在处理文件内容')\n          uploadVisible.value = false\n          \n          // 重置表单和上传组件状态\n          if (uploadFormRef.value) {\n            uploadFormRef.value.resetFields()\n          }\n          uploadForm.title = ''\n          uploadForm.description = ''\n          uploadForm.file = null\n          uploadForm.tags = ''\n          uploadForm.category = null\n          \n          // 刷新文档列表\n          fetchDocuments()\n          fetchCategories() // 更新分类文档计数\n        } catch (error) {\n          console.error('上传文档失败:', error)\n          let errorMsg = '文档上传失败'\n          if (error.response) {\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMsg += ': ' + error.response.data\n              } else if (error.response.data.detail) {\n                errorMsg += ': ' + error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMsg += ': ' + error.response.data.message\n              }\n            }\n          } else if (error.message) {\n            errorMsg += ': ' + error.message\n          }\n          ElMessage.error(errorMsg)\n        } finally {\n          uploading.value = false\n        }\n      })\n    }\n    \n    const showDocumentChunks = async (doc) => {\n      selectedDocument.value = doc\n      showChunksDialog.value = true\n      await fetchDocumentChunks(doc.id)\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = category\n      categoryForm.id = category.id\n      categoryForm.name = category.name\n      categoryForm.description = category.description || ''\n      categoryForm.icon = category.icon || 'Document'\n      categoryForm.color = category.color || '#409EFF'\n      showAddCategoryForm.value = true // 显示编辑表单\n    }\n    \n    const handleDeleteCategory = async (category) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除分类 \"${category.name}\" 吗？`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteCategory(category.id)\n        ElMessage.success('分类删除成功')\n        fetchCategories()\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const saveCategoryForm = async () => {\n      if (!categoryForm.name) {\n        ElMessage.warning('请输入分类名称')\n        return\n      }\n      \n      // 处理颜色值，确保符合后端20字符长度限制\n      if (categoryForm.color && categoryForm.color.length > 20) {\n        // 如果是带alpha通道的rgba颜色，将其转为hex格式\n        if (categoryForm.color.startsWith('rgba')) {\n          // 简单处理：移除alpha透明度，转为#RRGGBB格式\n          categoryForm.color = categoryForm.color.replace(/rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),[^)]+\\)/, (match, r, g, b) => {\n            const toHex = (c) => {\n              const hex = parseInt(c).toString(16)\n              return hex.length === 1 ? '0' + hex : hex\n            }\n            return `#${toHex(r)}${toHex(g)}${toHex(b)}`\n          })\n        } else if (categoryForm.color.includes('alpha')) {\n          // 处理其他可能包含alpha的颜色格式\n          categoryForm.color = '#409EFF' // 使用默认颜色\n        }\n        \n        // 如果颜色值仍然超过20个字符，截断或使用默认颜色\n        if (categoryForm.color.length > 20) {\n          categoryForm.color = categoryForm.color.substring(0, 20)\n        }\n      }\n      \n      // 确保始终有默认值\n      categoryForm.icon = categoryForm.icon || 'Document'\n      categoryForm.color = categoryForm.color || '#409EFF'\n      \n      try {\n        if (editingCategory.value) {\n          // 更新分类，使用API函数\n          await updateCategory(categoryForm.id, categoryForm)\n          ElMessage.success('分类更新成功')\n        } else {\n          // 创建新分类，使用API函数\n          await addCategory(categoryForm)\n          ElMessage.success('分类创建成功')\n        }\n        \n        // 刷新分类列表并重置表单状态\n        await fetchCategories()\n        cancelCategoryForm()\n      } catch (error) {\n        console.error('保存分类失败:', error)\n        if (error.response && error.response.data) {\n          ElMessage.error('保存分类失败: ' + (error.response.data.detail || error.response.data.message || JSON.stringify(error.response.data)))\n        } else {\n          ElMessage.error('保存分类失败: ' + (error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const cancelCategoryForm = () => {\n      showAddCategoryForm.value = false\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = null\n      categoryForm.id = null\n      categoryForm.name = ''\n      categoryForm.description = ''\n      categoryForm.icon = 'Document'\n      categoryForm.color = '#409EFF'\n      showAddCategoryForm.value = true\n    }\n    \n    // 文件操作函数\n    const previewDocument = (doc) => {\n      if (doc.status !== 'completed') {\n        ElMessage.warning('文档正在处理中，暂时无法预览')\n        return\n      }\n      \n      // 增加查看计数\n      axios.get(`${API_URL}/documents/${doc.id}/`)\n        .catch(err => console.error('更新查看计数失败:', err))\n      \n      // 这里应该实现文档预览功能\n      window.open(doc.file_url, '_blank')\n    }\n    \n    const downloadDocument = async (doc) => {\n      try {\n        const response = await axios.get(`${API_URL}/documents/${doc.id}/download/`, {\n          responseType: 'blob'\n        })\n        \n        // 创建临时下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', doc.title)\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n        \n        ElMessage.success('文档下载成功')\n      } catch (error) {\n        console.error('下载文档失败:', error)\n        ElMessage.error('下载文档失败')\n      }\n    }\n    \n    const shareDocument = (doc) => {\n      // 实现文档分享功能\n      console.log('准备分享文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的分享功能即将上线`)\n    }\n    \n    const editDocument = (doc) => {\n      // 实现文档编辑功能\n      console.log('准备编辑文档:', doc.title)\n      ElMessage.info(`文档\"${doc.title}\"的编辑功能即将上线`)\n    }\n    \n    const deleteDocument = async (doc) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除文档 \"${doc.title}\" 吗？此操作不可撤销。`, '删除确认', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await axios.delete(`${API_URL}/documents/${doc.id}/`)\n        ElMessage.success('文档删除成功')\n        fetchDocuments()\n        fetchCategories() // 更新分类文档计数\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除文档失败:', error)\n          ElMessage.error('删除文档失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n        }\n      }\n    }\n    \n    const reprocessDocument = async (doc) => {\n      try {\n        await axios.post(`${API_URL}/documents/${doc.id}/reprocess/`)\n        ElMessage.success('文档重新处理已开始')\n        \n        // 修改本地状态显示正在处理\n        const index = documents.value.findIndex(d => d.id === doc.id)\n        if (index !== -1) {\n          documents.value[index].status = 'processing'\n        }\n      } catch (error) {\n        console.error('重新处理文档失败:', error)\n        ElMessage.error('重新处理文档失败: ' + (error.response?.data?.detail || error.message || '未知错误'))\n      }\n    }\n    \n    // 获取文件图标\n    const getFileIcon = (type) => {\n      const iconMap = {\n        pdf: Document,\n        doc: Document,\n        xls: DataAnalysis,\n        ppt: Tickets,\n        img: PictureFilled,\n        txt: Files,\n        other: Files\n      }\n      return iconMap[type] || Document\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      })\n    }\n    \n    // 格式化日期为API格式\n    const formatDateForAPI = (date) => {\n      if (!date) return ''\n      return date.toISOString().split('T')[0]\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (!sizeInKB) return '0 KB'\n      \n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取标签列表\n    const getTagsList = (tags) => {\n      if (!tags) return []\n      if (Array.isArray(tags)) return tags\n      return tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n    }\n    \n    // 轮询检查处理中的文档状态\n    let pollingInterval = null\n    \n    const startPolling = () => {\n      // 每10秒检查一次处理中的文档\n      pollingInterval = setInterval(() => {\n        if (processingCount.value > 0) {\n          fetchDocuments()\n        }\n      }, 10000)\n    }\n    \n    // 生命周期钩子\n    onMounted(() => {\n      // 添加加载状态和错误处理\n      Promise.all([\n        fetchCategories().catch(err => {\n          console.error('初始化加载分类失败:', err);\n          ElMessage.error('加载知识库分类失败，请稍后重试');\n          return [];\n        }),\n        fetchDocuments().catch(err => {\n          console.error('初始化加载文档失败:', err);\n          ElMessage.error('加载知识库文档失败，请稍后重试');\n          return [];\n        })\n      ]).finally(() => {\n        // 初始化完成后开始轮询\n        startPolling();\n      });\n    })\n    \n    onBeforeUnmount(() => {\n      if (pollingInterval) {\n        clearInterval(pollingInterval)\n      }\n    })\n    \n    return {\n      searchQuery,\n      selectedCategory,\n      categories,\n      documents,\n      filters,\n      currentPage,\n      pageSize,\n      totalDocs,\n      uploadVisible,\n      uploadForm,\n      uploadFormRef,\n      uploadRules,\n      uploading,\n      loading,\n      viewMode,\n      sortOrder,\n      showCategoryDialog,\n      showAddCategoryForm,\n      editingCategory,\n      categoryForm,\n      categoryLoading,\n      showChunksDialog,\n      selectedDocument,\n      documentChunks,\n      chunksLoading,\n      isAdmin,\n      currentCategoryName,\n      processingCount,\n      \n      // 图标\n      Search,\n      Upload,\n      FolderAdd,\n      View,\n      Download,\n      More,\n      Share,\n      Edit,\n      EditPen,\n      FolderOpened,\n      Star,\n      Delete,\n      Document,\n      Files,\n      Tickets,\n      DataAnalysis,\n      PictureFilled,\n      UploadFilled,\n      Loading,\n      List,\n      Grid,\n      Crop,\n      SplitCells,\n      Plus,\n      \n      // 方法\n      selectCategory,\n      handleSearch,\n      applyFilters,\n      getFileIcon,\n      formatDate,\n      formatFileSize,\n      getTagsList,\n      previewDocument,\n      downloadDocument,\n      shareDocument,\n      editDocument,\n      deleteDocument,\n      reprocessDocument,\n      handleFileChange,\n      handleRemove,\n      submitUpload,\n      handlePageChange,\n      handleSizeChange,\n      showDocumentChunks,\n      editCategory,\n      handleDeleteCategory,\n      saveCategoryForm,\n      cancelCategoryForm,\n      resetCategoryForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.knowledge-container {\n  padding: 20px;\n}\n\n.category-card {\n  height: calc(100vh - 150px);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.search-box {\n  margin-bottom: 20px;\n}\n\n.category-list {\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 5px;\n  margin-bottom: 15px;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.header-title {\n  font-weight: 600;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.header-title .el-tag {\n  margin-left: 10px;\n}\n\n.category-item {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  transition: all 0.2s;\n  color: #495057;\n  cursor: pointer;\n  background-color: #f8f9fa;\n}\n\n.category-item:hover {\n  background-color: #e9ecef;\n  transform: translateY(-2px);\n}\n\n.category-item.active {\n  background-color: #e9f4ff;\n  color: #007bff;\n  font-weight: 500;\n  box-shadow: 0 2px 6px rgba(0, 123, 255, 0.15);\n}\n\n.category-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 15px;\n}\n\n.category-name {\n  font-weight: 500;\n  flex: 1;\n}\n\n.category-count {\n  background-color: #e9ecef;\n  border-radius: 15px;\n  padding: 2px 10px;\n  font-size: 12px;\n  color: #6c757d;\n}\n\n.add-category-btn {\n  width: 100%;\n  margin-top: 10px;\n}\n\n.filter-section {\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid #f0f0f0;\n  overflow-y: auto;\n}\n\n.filter-section h6 {\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: #495057;\n}\n\n.filter-group {\n  margin-bottom: 15px;\n}\n\n.filter-options {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.document-list {\n  margin-top: 20px;\n}\n\n.view-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.list-view {\n  margin-bottom: 20px;\n}\n\n.grid-view {\n  margin-bottom: 20px;\n}\n\n.document-card {\n  display: flex;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #fff;\n  margin-bottom: 15px;\n  transition: all 0.2s;\n  border: 1px solid #f0f0f0;\n  align-items: center;\n}\n\n.document-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-2px);\n}\n\n.document-card.processing {\n  background-color: #fff9e6;\n  border-color: #ffd04b;\n}\n\n.document-icon {\n  width: 45px;\n  height: 45px;\n  border-radius: 5px;\n  margin-right: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 22px;\n  color: white;\n}\n\n.document-content {\n  flex: 1;\n}\n\n.document-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.document-title .el-tag {\n  margin-left: 10px;\n  font-weight: normal;\n}\n\n.document-info {\n  color: #6c757d;\n  font-size: 13px;\n}\n\n.document-meta {\n  display: flex;\n  gap: 15px;\n  margin-top: 5px;\n  color: #909399;\n}\n\n.meta-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.document-tags {\n  margin-top: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n}\n\n.document-progress {\n  margin-top: 10px;\n  padding: 8px;\n  background-color: #f8f9fa;\n  border-radius: 4px;\n}\n\n.progress-info {\n  margin-top: 5px;\n  font-size: 12px;\n  color: #606266;\n}\n\n.document-actions {\n  display: flex;\n  gap: 5px;\n}\n\n.icon-pdf {\n  background-color: #dc3545;\n}\n\n.icon-doc {\n  background-color: #007bff;\n}\n\n.icon-xls {\n  background-color: #28a745;\n}\n\n.icon-ppt {\n  background-color: #fd7e14;\n}\n\n.icon-img {\n  background-color: #6f42c1;\n}\n\n.icon-txt {\n  background-color: #17a2b8;\n}\n\n.icon-other {\n  background-color: #6c757d;\n}\n\n.grid-card {\n  height: 220px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #f0f0f0;\n  overflow: hidden;\n  transition: all 0.2s;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n}\n\n.grid-card:hover {\n  box-shadow: 0 5px 15px rgba(0,0,0,0.08);\n  transform: translateY(-5px);\n}\n\n.grid-card-icon {\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 42px;\n}\n\n.grid-card-content {\n  padding: 12px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n}\n\n.grid-card-title {\n  font-weight: 500;\n  margin-bottom: 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.grid-card-meta {\n  display: flex;\n  justify-content: space-between;\n  color: #909399;\n  font-size: 12px;\n  margin-bottom: 8px;\n}\n\n.grid-card-status {\n  margin-bottom: 8px;\n}\n\n.grid-card-actions {\n  margin-top: auto;\n  display: flex;\n  justify-content: flex-end;\n  gap: 5px;\n}\n\n.upload-zone {\n  border: 2px dashed #ced4da;\n  border-radius: 10px;\n  padding: 40px 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  margin-top: 20px;\n}\n\n.upload-zone:hover {\n  border-color: #007bff;\n  background-color: #f8f9fa;\n}\n\n.upload-icon {\n  font-size: 48px;\n  color: #6c757d;\n  margin-bottom: 15px;\n}\n\n.upload-text {\n  font-size: 18px;\n  color: #495057;\n  margin-bottom: 10px;\n}\n\n.upload-hint {\n  font-size: 14px;\n  color: #6c757d;\n  margin-bottom: 20px;\n}\n\n.upload-features {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  gap: 30px;\n}\n\n.feature-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #495057;\n}\n\n.feature-item .el-icon {\n  font-size: 32px;\n  margin-bottom: 8px;\n  color: #007bff;\n}\n\n.tag {\n  display: inline-block;\n  padding: 2px 10px;\n  background-color: #e9ecef;\n  border-radius: 15px;\n  font-size: 12px;\n  color: #495057;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.knowledge-status-bar {\n  margin-bottom: 15px;\n}\n\n.processing-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  color: #e6a23c;\n}\n\n.form-help-text {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.category-row {\n  display: flex;\n  align-items: center;\n}\n\n.category-color {\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 10px;\n}\n\n.dialog-add-section {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.chunks-container {\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n.chunk-item {\n  margin-bottom: 15px;\n  border: 1px solid #f0f0f0;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.chunk-header {\n  display: flex;\n  justify-content: space-between;\n  background-color: #f8f9fa;\n  padding: 10px 15px;\n}\n\n.chunk-index {\n  font-weight: 500;\n}\n\n.chunk-meta {\n  color: #909399;\n  font-size: 13px;\n}\n\n.chunk-content {\n  padding: 15px;\n  white-space: pre-wrap;\n  line-height: 1.6;\n}\n\n.category-dialog-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.section-header h5 {\n  margin: 0;\n  font-weight: 600;\n}\n\n.category-list-section {\n  margin-bottom: 20px;\n}\n\n.category-items {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.category-list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  border-radius: 6px;\n  margin-bottom: 10px;\n  background-color: #f8f9fa;\n  transition: all 0.2s;\n}\n\n.category-list-item:hover {\n  background-color: #f0f2f5;\n  transform: translateY(-2px);\n}\n\n.category-info {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.category-color {\n  width: 16px;\n  height: 16px;\n  border-radius: 3px;\n  margin-right: 12px;\n}\n\n.category-name-section {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.category-name {\n  font-weight: 500;\n}\n\n.category-desc {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 2px;\n}\n\n.category-count {\n  font-size: 13px;\n  color: #606266;\n  margin-left: 10px;\n}\n\n.category-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.category-form-section {\n  padding: 15px;\n  border-radius: 6px;\n  background-color: #f8f9fa;\n  margin-top: 20px;\n}\n\n.empty-categories {\n  padding: 40px 0;\n  text-align: center;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}