{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue?vue&type=template&id=3005a10c&scoped=true","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue","mtime":1749015238197},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1746431218000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","style","backgroundColor","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_toDisplayString","$setup","refreshTrigger","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_el_select","searchCategory","$event","placeholder","onChange","_cache","selectCategory","_component_el_option","label","value","_Fragment","_renderList","documentCategories","category","_createBlock","key","id","name","toString","_component_el_input","searchQuery","clearable","onInput","debouncedSearch","prefix","_withCtx","_component_el_icon","_component_Search","_component_el_button","type","onClick","createNewDocument","_component_Plus","_hoisted_6","_component_el_card","shadow","_hoisted_7","_hoisted_8","_component_Document","_hoisted_9","_hoisted_10","totalDocuments","_hoisted_11","_hoisted_12","_component_EditPen","_hoisted_13","_hoisted_14","recentEditCount","_hoisted_15","_hoisted_16","_component_Share","_hoisted_17","_hoisted_18","sharedDocuments","length","_hoisted_19","_hoisted_20","_hoisted_21","_normalizeStyle","getSelectedCategoryColor","getSelectedCategoryName","_hoisted_22","link","resetCategoryFilter","_component_Close","_hoisted_23","_hoisted_24","_hoisted_25","text","manageCategories","_hoisted_26","_normalizeClass","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","color","_component_Folder","_hoisted_32","_hoisted_33","document_count","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_ctx","fetchDocuments","_hoisted_38","documents","doc","openDocument","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_component_el_dropdown","trigger","_withModifiers","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","renameDocument","duplicateDocument","shareDocument","divided","deleteDocument","_component_More","title","_hoisted_43","innerHTML","preview","_hoisted_45","_hoisted_46","formatDate","update_time","_hoisted_47","_component_el_tooltip","content","placement","circle","size","args","_hoisted_48","hasMore","_hoisted_49","loadMoreDocuments","loading","loadingMore","plain","round","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","viewAllDocuments","_hoisted_54","recentDocuments","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_component_el_dialog","newDocumentDialogVisible","width","footer","_hoisted_66","submitNewDocument","createLoading","_component_el_tabs","documentCreateType","_component_el_tab_pane","_component_el_form","model","newDocumentForm","rules","blankFormRules","ref","_component_el_form_item","prop","aiDocumentForm","aiFormRules","requirements","rows","shareDialogVisible","_hoisted_68","confirmShare","shareLoading","selectedDocument","_hoisted_67","selectedUsers","multiple","availableUsers","user","username","deleteDialogVisible","_hoisted_70","confirmDelete","deleteLoading","_hoisted_69","categoryDialogVisible","_hoisted_71","_hoisted_72","_component_el_table","data","_component_el_table_column","default","scope","row","editCategory","deleteCategory","disabled","_component_el_divider","_hoisted_73","editingCategory","categoryFormRules","_component_el_color_picker","_hoisted_74","description","submitCategory","categoryLoading","resetCategoryForm"],"sources":["C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\src\\views\\smartdoc\\Index.vue"],"sourcesContent":["<template>\n  <div class=\"smartdoc-home-container\">\n    <!-- 添加隐藏的刷新触发元素，用于强制组件刷新 -->\n    <div style=\"display: none;\">{{ refreshTrigger }}</div>\n    \n    <!-- 页面标题和操作区 -->\n    <div class=\"page-header\">\n      <div class=\"left-section\">\n        <h2 class=\"page-title\">智能文档</h2>\n        <p class=\"page-description\">创建、编辑和管理您的智能文档</p>\n        </div>\n      <div class=\"right-section\">\n        <div class=\"search-controls\">\n          <el-select \n            v-model=\"searchCategory\" \n            placeholder=\"选择分类\" \n            @change=\"selectCategory(searchCategory)\" \n            class=\"category-select\"\n          >\n            <el-option label=\"全部分类\" value=\"all\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id.toString()\"\n            />\n          </el-select>\n          \n          <el-input\n            placeholder=\"搜索文档...\"\n            v-model=\"searchQuery\"\n          class=\"search-input\"\n            clearable\n            @input=\"debouncedSearch\"\n          >\n            <template #prefix>\n              <el-icon><Search /></el-icon>\n            </template>\n          </el-input>\n        </div>\n        \n        <el-button type=\"primary\" @click=\"createNewDocument\">\n          <el-icon><Plus /></el-icon> 新建文档\n        </el-button>\n          </div>\n        </div>\n\n    <!-- 文档概览统计卡片 -->\n    <div class=\"stats-cards\">\n      <el-card class=\"stat-card\" shadow=\"hover\" @click=\"selectCategory('all')\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon doc-icon\">\n                <el-icon><Document /></el-icon>\n              </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ totalDocuments }}</div>\n            <div class=\"stat-label\">全部文档</div>\n                </div>\n              </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon edit-icon\">\n            <el-icon><EditPen /></el-icon>\n            </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ recentEditCount }}</div>\n            <div class=\"stat-label\">近期编辑</div>\n          </div>\n        </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon share-icon\">\n            <el-icon><Share /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ sharedDocuments.length }}</div>\n            <div class=\"stat-label\">共享文档</div>\n            </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 添加筛选活动状态提示栏 -->\n    <div v-if=\"searchCategory !== 'all'\" class=\"filter-status-bar\">\n      <div class=\"filter-bar-content\">\n        <div class=\"filter-title\">\n          <span>当前筛选: </span>\n          <span class=\"filter-category\" :style=\"{ backgroundColor: getSelectedCategoryColor() }\">\n            {{ getSelectedCategoryName() }}\n          </span>\n        </div>\n        <div class=\"filter-actions\">\n          <el-button type=\"primary\" link @click=\"resetCategoryFilter\">\n            <el-icon><Close /></el-icon> 清除筛选\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 文档分类区域 - 移至文档列表上方 -->\n    <div class=\"section category-section\">\n      <div class=\"section-header\">\n        <h3>文档分类</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"manageCategories\">管理分类</el-button>\n        </div>\n      </div>\n      \n      <div class=\"category-cards\">\n        <!-- 全部分类选项 -->\n        <div \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === 'all' }\"\n          @click=\"selectCategory('all')\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: '#409EFF' }\">\n            <el-icon><Document /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>全部文档</h4>\n            <div class=\"category-count\">{{ totalDocuments }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === 'all'\" class=\"category-selected-indicator\"></div>\n        </div>\n        \n        <!-- 分类卡片 -->\n        <div \n          v-for=\"category in documentCategories\" \n          :key=\"category.id\" \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === category.id.toString() }\"\n          @click=\"selectCategory(category)\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: category.color }\">\n            <el-icon><Folder /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>{{ category.name }}</h4>\n            <div class=\"category-count\">{{ category.document_count }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === category.id.toString()\" class=\"category-selected-indicator\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加文档列表区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>我的文档</h3>\n        <div class=\"filter-controls\">\n          <el-button text @click=\"fetchDocuments\">刷新</el-button>\n        </div>\n              </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in documents\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n            <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n            </div>\n            <div class=\"doc-menu\">\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"renameDocument(doc)\">重命名</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"duplicateDocument(doc)\">复制</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n            </div>\n          </div>\n          \n          <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n          \n          <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">{{ formatDate(doc.update_time) }}</div>\n            <div class=\"doc-actions\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"openDocument(doc)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n              </div>\n            </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n                  </div>\n                    </div>\n                  </div>\n      \n      <div v-if=\"hasMore && documents.length > 0\" style=\"text-align:center;margin:16px 0;\">\n        <el-button type=\"primary\" @click=\"loadMoreDocuments\" :loading=\"loadingMore\" plain round>\n          {{ loadingMore ? '加载中...' : '查看更多' }}\n        </el-button>\n      </div>\n      <div v-if=\"!hasMore && documents.length > 0\" style=\"text-align:center;color:#909399;font-size:13px;margin-bottom:16px;\">\n        已加载全部文档\n      </div>\n    </div>\n\n    <!-- 最近编辑文档区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>最近编辑</h3>\n        <div class=\"section-actions\">\n        <el-button text @click=\"viewAllDocuments('recent')\">查看全部</el-button>\n        </div>\n                </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in recentDocuments\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n            <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n                  </div>\n            </div>\n            <div class=\"doc-menu\">\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                  <template #dropdown>\n                    <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"renameDocument(doc)\">重命名</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"duplicateDocument(doc)\">复制</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n            </div>\n          </div>\n          \n          <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n          \n          <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">{{ formatDate(doc.update_time) }}</div>\n            <div class=\"doc-actions\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"openDocument(doc)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n              </div>\n                </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"recentDocuments.length === 0\" class=\"empty-state\">\n        <!-- 移除暂无最近编辑文档的显示 -->\n    </div>\n  </div>\n\n    <!-- 创建新文档对话框 -->\n  <el-dialog\n      v-model=\"newDocumentDialogVisible\"\n      title=\"新建智能文档\"\n      width=\"35%\"\n    >\n      <el-tabs v-model=\"documentCreateType\">\n        <el-tab-pane label=\"空白文档\" name=\"blank\">\n          <el-form \n            :model=\"newDocumentForm\" \n            label-width=\"80px\" \n            class=\"mt-4\"\n            :rules=\"blankFormRules\"\n            ref=\"blankFormRef\"\n          >\n            <el-form-item label=\"文档标题\" prop=\"title\">\n              <el-input v-model=\"newDocumentForm.title\" placeholder=\"请输入文档标题\" />\n      </el-form-item>\n            <el-form-item label=\"文档类型\">\n              <el-input v-model=\"newDocumentForm.type\" placeholder=\"请输入文档类型\" />\n              <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n            </el-form-item>\n          </el-form>\n        </el-tab-pane>\n        <el-tab-pane label=\"AI生成文档\" name=\"ai\">\n          <el-form \n            :model=\"aiDocumentForm\" \n            label-width=\"80px\" \n            class=\"mt-4\"\n            :rules=\"aiFormRules\"\n            ref=\"aiFormRef\"\n          >\n            <el-form-item label=\"文档主题\" prop=\"title\">\n              <el-input v-model=\"aiDocumentForm.title\" placeholder=\"简短描述文档主题，如：项目周报\" />\n            </el-form-item>\n            <el-form-item label=\"文档要求\" prop=\"requirements\">\n        <el-input\n                v-model=\"aiDocumentForm.requirements\" \n          type=\"textarea\"\n                :rows=\"3\" \n                placeholder=\"详细描述您需要的文档内容和要求\"\n        />\n              <div class=\"form-tip\">人工智能会根据您的描述生成文档内容</div>\n      </el-form-item>\n    </el-form>\n        </el-tab-pane>\n      </el-tabs>\n    <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"newDocumentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitNewDocument\" :loading=\"createLoading\">\n            创建\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分享文档对话框 -->\n    <el-dialog\n      v-model=\"shareDialogVisible\"\n      title=\"分享文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您即将分享文档: <strong>{{ selectedDocument.title }}</strong></p>\n        <el-form label-width=\"120px\" class=\"mt-4\">\n          <el-form-item label=\"选择用户\">\n            <el-select\n              v-model=\"selectedUsers\"\n              multiple\n              placeholder=\"请选择用户\"\n              style=\"width: 100%\"\n            >\n              <el-option\n                v-for=\"user in availableUsers\"\n                :key=\"user.id\"\n                :label=\"user.username\"\n                :value=\"user.id\"\n              />\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"shareDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmShare\" :loading=\"shareLoading\">\n            分享\n          </el-button>\n        </span>\n    </template>\n  </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"删除文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您确定要删除文档 <strong>{{ selectedDocument.title }}</strong> 吗?</p>\n        <p class=\"warning-text\">此操作不可撤销!</p>\n  </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">\n            删除\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"categoryDialogVisible\"\n      title=\"管理文档分类\"\n      width=\"40%\"\n    >\n      <div class=\"category-management\">\n        <div class=\"category-list\">\n          <h4>当前类型</h4>\n          <el-table :data=\"documentCategories\" style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"类型名称\" />\n            <el-table-column label=\"颜色\" width=\"120\">\n              <template #default=\"scope\">\n                <div class=\"color-preview\" :style=\"{ backgroundColor: scope.row.color }\"></div>\n                {{ scope.row.color }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"文档数\" width=\"100\">\n              <template #default=\"scope\">\n                {{ scope.row.document_count || 0 }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"primary\" link @click=\"editCategory(scope.row)\">编辑</el-button>\n                <el-button \n                  type=\"danger\" \n                  link \n                  @click=\"deleteCategory(scope.row)\"\n                  :disabled=\"scope.row.document_count > 0\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        \n        <el-divider />\n        \n        <div class=\"category-form\">\n          <h4>{{ editingCategory.id ? '编辑分类' : '新增分类' }}</h4>\n          <el-form \n            :model=\"editingCategory\" \n            :rules=\"categoryFormRules\" \n            label-width=\"80px\"\n            ref=\"categoryFormRef\"\n          >\n            <el-form-item label=\"分类名称\" prop=\"name\">\n              <el-input v-model=\"editingCategory.name\" placeholder=\"输入分类名称\" />\n            </el-form-item>\n            <el-form-item label=\"分类颜色\" prop=\"color\">\n              <el-color-picker v-model=\"editingCategory.color\" />\n              <span class=\"color-value\">{{ editingCategory.color }}</span>\n            </el-form-item>\n            <el-form-item label=\"描述\">\n              <el-input \n                v-model=\"editingCategory.description\" \n                type=\"textarea\" \n                :rows=\"3\" \n                placeholder=\"输入分类描述（可选）\" \n              />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitCategory\" :loading=\"categoryLoading\">\n                {{ editingCategory.id ? '更新' : '创建' }}\n              </el-button>\n              <el-button @click=\"resetCategoryForm\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, getCurrentInstance, provide, onActivated, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Search, Plus, EditPen, Share, Folder, Close, More, Document } from '@element-plus/icons-vue'\nimport _ from 'lodash'\nimport { \n  getDocuments,\n  getRecentDocuments,\n  getSharedDocuments,\n  getDocumentCategories,\n  createDocument,\n  deleteDocument as apiDeleteDocument,\n  shareDocument as apiShareDocument,\n  createDocumentCategory,\n  updateDocumentCategory,\n  deleteDocumentCategory,\n  aiGenerateDocument\n} from '@/api/smartdoc'\n\nexport default {\n  name: 'SmartDocHome',\n  components: {\n    Search,\n    Plus,\n    EditPen,\n    Share,\n    Folder,\n    Close,\n    More,\n    Document\n  },\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const { proxy } = getCurrentInstance() // 获取组件实例\n    \n    // 刷新触发器，用于强制组件刷新\n    const refreshTrigger = ref(Date.now())\n    \n    // 状态数据\n    const documents = ref([])\n    const recentDocuments = ref([])\n    const sharedDocuments = ref([])\n    const documentCategories = ref([])\n    const searchQuery = ref('')\n    const searchCategory = ref('all')\n    const newDocumentDialogVisible = ref(false)\n    const shareDialogVisible = ref(false)\n    const deleteDialogVisible = ref(false)\n    const documentCreateType = ref('blank')\n    const selectedDocument = ref(null)\n    const selectedUsers = ref([])\n    const availableUsers = ref([])\n    const createLoading = ref(false)\n    const shareLoading = ref(false)\n    const deleteLoading = ref(false)\n    const loadingMore = ref(false)\n    \n    // 新增分页相关状态\n    const page = ref(1)\n    const pageSize = 10\n    const hasMore = ref(true)\n    const totalCount = ref(0)\n    \n    // 表单数据\n    const newDocumentForm = ref({\n        title: '',\n        type: ''\n    })\n    \n    const aiDocumentForm = ref({\n        title: '',\n      requirements: ''\n    })\n    \n    // 表单校验规则\n    const blankFormRules = {\n        title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ]\n    }\n    \n    const aiFormRules = {\n        title: [\n        { required: true, message: '请输入文档主题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        requirements: [\n        { required: true, message: '请输入文档要求', trigger: 'blur' },\n        { min: 10, max: 500, message: '长度在 10 到 500 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    const blankFormRef = ref(null)\n    const aiFormRef = ref(null)\n    \n    // 计算属性\n    const totalDocuments = computed(() => {\n      return totalCount.value || documents.value.length || 0;\n    });\n    \n    const recentEditCount = computed(() => {\n      return recentDocuments.value.length || 0;\n    });\n    \n    // 分类管理相关状态\n    const categoryDialogVisible = ref(false)\n    const editingCategory = ref({\n      name: '',\n      color: '#409EFF',\n      description: '',\n    })\n    const categoryFormRef = ref(null)\n    const categoryLoading = ref(false)\n    const categoryFormRules = {\n      name: [\n        { required: true, message: '请输入类型名称', trigger: 'blur' },\n        { min: 2, max: 20, message: '长度在2到20个字符', trigger: 'blur' }\n      ],\n      color: [\n        { required: true, message: '请选择颜色', trigger: 'change' }\n      ]\n    }\n    \n    // 辅助方法：强制刷新视图\n    const forceUpdate = async () => {\n      // 创建临时数据，触发深度响应式更新\n      documents.value = [...documents.value];\n      recentDocuments.value = [...recentDocuments.value]; \n      sharedDocuments.value = [...sharedDocuments.value];\n      \n      // 使用Vue实例的$forceUpdate方法\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate();\n      }\n      \n      // 等待DOM更新\n      await nextTick();\n    };\n    \n    // 方法\n    const fetchDocuments = async (forceRefresh = false, append = false) => {\n      if (forceRefresh) {\n        page.value = 1\n        hasMore.value = true\n      }\n      if (!hasMore.value && !forceRefresh) return\n      \n      if (!append) {\n        createLoading.value = true\n      } else {\n        loadingMore.value = true\n      }\n      \n      try {\n        const params = {\n          page: page.value,\n          limit: 100, // 尝试请求更多数据，尽管后端可能限制为10条\n          _t: new Date().getTime() // 添加时间戳，确保不使用缓存\n        }\n        \n        // 只有在searchCategory不为'all'且有值时才添加category参数\n        if (searchCategory.value && searchCategory.value !== 'all') {\n          params.category = searchCategory.value\n          console.log('添加分类筛选参数:', searchCategory.value);\n        } else {\n          console.log('获取全部文档，不添加分类筛选');\n        }\n        \n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        }\n        \n        console.log('正在获取文档列表，参数:', JSON.stringify(params));\n        const res = await getDocuments(params)\n        console.log('获取文档响应:', res);\n        \n        if (res && res.data) {\n          // 处理分页格式，可能是DRF标准格式或自定义格式\n          let list = [];\n          let total = 0;\n          let nextPage = false;\n          \n          // DRF标准分页格式\n          if (res.results && Array.isArray(res.results)) {\n            list = res.results;\n            total = res.count || 0;\n            nextPage = !!res.next;\n            console.log(`DRF分页格式：获取到${list.length}个文档，总数:${total}`);\n          }\n          // 如果前端request.js已经处理了分页\n          else if (Array.isArray(res.data)) {\n            list = res.data;\n            total = res.count || res.total || list.length;\n            nextPage = list.length > 0 && documents.value.length + list.length < total;\n            console.log(`数组格式：获取到${list.length}个文档，总数:${total}`);\n          }\n          // 如果是直接包装的数组或对象\n          else {\n            list = Array.isArray(res.data) ? res.data : [res.data];\n            total = res.count || res.total || list.length;\n            nextPage = list.length > 0 && documents.value.length + list.length < total;\n            console.log(`对象格式：获取到${list.length}个文档，总数:${total}`);\n          }\n\n          // 确保不添加重复的文档\n          if (append && documents.value.length > 0) {\n            const existingIds = new Set(documents.value.map(doc => doc.id));\n            list = list.filter(doc => !existingIds.has(doc.id));\n            console.log(`过滤重复项后还有${list.length}个新文档`);\n          }\n          \n          if (append) {\n            // 将新数据添加到现有数组\n            documents.value = [...documents.value, ...list]\n          } else {\n            // 覆盖现有数组\n            documents.value = [...list]\n          }\n          \n          // 设置总数\n          totalCount.value = total\n          \n          // 判断是否还有更多页面可加载\n          hasMore.value = nextPage || (documents.value.length < total && list.length > 0);\n          \n          // 调试信息\n          console.log(`已加载${documents.value.length}/${total}个文档, 是否有更多:`, hasMore.value, '(nextPage:', nextPage, ')');\n          \n          // 如果数据不足且还有更多，自动加载下一页\n          if (hasMore.value && documents.value.length < 50 && !loadingMore.value) {\n            console.log(\"数据不足，自动加载下一页\");\n            page.value++;\n            // 延迟100ms避免请求过于频繁\n            await new Promise(resolve => setTimeout(resolve, 100));\n            await fetchDocuments(false, true);\n          }\n          \n        } else {\n          console.warn('API返回的文档数据无效:', res);\n          if (!append) {\n            documents.value = []\n          }\n          hasMore.value = false\n        }\n      } catch (error) {\n        console.error('获取文档列表失败:', error);\n        ElMessage.error('获取文档列表失败，请刷新页面重试');\n        if (!append) {\n          documents.value = []\n        }\n        hasMore.value = false\n      } finally {\n        createLoading.value = false\n        loadingMore.value = false\n      }\n    }\n    \n    const fetchRecentDocuments = async (forceRefresh = false) => {\n      console.log('开始获取最近文档...');\n      try {\n        // 准备参数，如果强制刷新添加时间戳\n        const params = forceRefresh ? { _t: new Date().getTime() } : {};\n        \n        const res = await getRecentDocuments(params);\n        console.log('最近文档API响应:', res);\n        \n        if (res && res.data) {\n          // 完全替换数组而不是修改引用\n          recentDocuments.value = Array.isArray(res.data) ? [...res.data] : [];\n          console.log(`设置最近文档: ${recentDocuments.value.length}条记录`);\n        } else {\n          console.warn('API返回的最近文档数据无效:', res);\n          recentDocuments.value = [];\n        }\n      } catch (error) {\n        console.error('获取最近文档失败:', error);\n        ElMessage.error('获取最近文档失败');\n        recentDocuments.value = [];\n      }\n    }\n    \n    const fetchSharedDocuments = async () => {\n      try {\n        const response = await getSharedDocuments()\n        sharedDocuments.value = response.data\n      } catch (error) {\n        console.error('获取共享文档失败', error)\n        ElMessage.error('获取共享文档失败')\n      }\n    }\n    \n    const fetchDocumentCategories = async (retryCount = 0) => {\n      console.log('开始获取文档分类...');\n      try {\n        const res = await getDocumentCategories();\n        console.log('文档分类API响应:', res);\n        \n        if (res && res.data) {\n          documentCategories.value = res.data;\n          console.log(`设置文档分类: ${documentCategories.value.length}条记录, 数据:`, documentCategories.value);\n        } else {\n          console.warn('API返回的文档分类数据无效:', res);\n          documentCategories.value = [];\n          \n          // 如果返回空数据且未达到最大重试次数，尝试重试\n          if (documentCategories.value.length === 0 && retryCount < 2) {\n            console.log(`文档分类数据为空，${retryCount + 1}秒后重试...`);\n            setTimeout(() => fetchDocumentCategories(retryCount + 1), (retryCount + 1) * 1000);\n          }\n        }\n      } catch (error) {\n        console.error('获取文档分类失败:', error);\n        \n        // 如果是服务器错误且未达到最大重试次数，尝试重试\n        if (error.response && error.response.status >= 500 && retryCount < 2) {\n          console.log(`服务器错误，${retryCount + 1}秒后重试...`);\n          setTimeout(() => fetchDocumentCategories(retryCount + 1), (retryCount + 1) * 1000);\n        } else {\n          ElMessage.error('获取文档分类失败，请刷新页面重试');\n          // 初始化空数组\n          documentCategories.value = [];\n        }\n      }\n    }\n    \n    // 防抖搜索\n    const debouncedSearch = _.debounce(async () => {\n      page.value = 1\n      hasMore.value = true\n      await fetchDocuments(true)\n    }, 500)\n    \n    const createNewDocument = () => {\n      // 重置表单\n      newDocumentForm.value = { title: '', type: '' }\n      aiDocumentForm.value = { title: '', requirements: '' }\n      documentCreateType.value = 'blank'\n      newDocumentDialogVisible.value = true\n      \n      // 监听对话框关闭事件，清理表单\n      nextTick(() => {\n        try {\n          const dialog = document.querySelector('.el-dialog');\n          if (dialog) {\n            dialog.addEventListener('closed', () => {\n              try {\n                if (blankFormRef.value) {\n                  blankFormRef.value.clearValidate();\n                }\n                if (aiFormRef.value) {\n                  aiFormRef.value.clearValidate();\n                }\n              } catch (err) {\n                console.error('Error clearing form validation:', err);\n              }\n            }, { once: true });\n          }\n        } catch (err) {\n          console.error('Error setting up dialog event listener:', err);\n        }\n      });\n    }\n    \n    const submitNewDocument = async () => {\n      if (documentCreateType.value === 'blank') {\n        if (!blankFormRef.value) {\n          console.warn('表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await blankFormRef.value.validate()\n            .catch(err => {\n              console.error('表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              console.log('开始创建文档:', {\n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用'\n              });\n              \n              const response = await createDocument({ \n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用',\n                content: ''\n              });\n              \n              console.log('创建文档响应数据：', JSON.stringify(response));\n              \n              // 关闭对话框\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('文档创建成功');\n              \n              // 解析返回的文档ID\n              let docId = null;\n              if (response && response.data) {\n                if (response.data.id) {\n                  docId = response.data.id;\n                } else if (Array.isArray(response.data) && response.data.length > 0) {\n                  docId = response.data[0].id;\n                } else if (response.data.results && Array.isArray(response.data.results) && response.data.results.length > 0) {\n                  docId = response.data.results[0].id;\n                }\n              }\n              \n              // 等待对话框关闭完成后再执行跳转，避免DOM错误\n              setTimeout(() => {\n                if (docId) {\n                  console.log(`准备跳转到文档详情页，ID: ${docId}`);\n                  \n                  // 先刷新文档列表，确保数据是最新的\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                  \n                  // 然后再执行导航\n                  setTimeout(() => {\n                    router.push({\n                      name: 'SmartDocDetail',\n                      params: { id: docId }\n                    }).then(() => {\n                      createLoading.value = false;\n                    }).catch(err => {\n                      console.error('路由导航失败:', err);\n                      ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                      // 尝试路径跳转\n                      router.push(`/smartdoc/${docId}`).catch(navErr => {\n                        console.error('路径导航也失败:', navErr);\n                        ElMessage.error('路径跳转详情页也失败');\n                      });\n                      createLoading.value = false;\n                    });\n                  }, 300);\n                } else {\n                  console.warn('创建文档成功，但返回的数据格式不正确', response);\n                  // 刷新文档列表\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                }\n              }, 100);\n            } catch (error) {\n              console.error('创建文档失败', error);\n              ElMessage.error('创建文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      } else if (documentCreateType.value === 'ai') {\n        if (!aiFormRef.value) {\n          console.warn('AI表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await aiFormRef.value.validate()\n            .catch(err => {\n              console.error('AI表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              // 调用AI生成文档API\n              const categoryId = searchCategory.value !== 'all' ? searchCategory.value : null;\n              const response = await aiGenerateDocument({\n                title: aiDocumentForm.value.title,\n                requirement: aiDocumentForm.value.requirements,\n                category_id: categoryId,\n                doc_type: 'AI'\n              });\n              console.log('AI生成文档响应数据：', response);\n              // 检查超时\n              if (response && response.status === 504) {\n                ElMessage.error(response.data?.detail || 'AI生成超时，请简化需求或稍后重试');\n                createLoading.value = false;\n                return;\n              }\n              if (response && response.data && typeof response.data.detail === 'string' && response.data.detail.includes('超时')) {\n                ElMessage.error(response.data.detail);\n                createLoading.value = false;\n                return;\n              }\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('AI生成文档成功');\n              let docId = null;\n              if (response && response.data && response.data.id) {\n                docId = response.data.id;\n              }\n              if (docId) {\n                // 跳转前打印日志\n                console.log('准备跳转到文档详情页，路由名: SmartDocDetail, id:', docId);\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: String(docId) }\n                }).then(() => {\n                  createLoading.value = false;\n                }).catch(err => {\n                  console.error('路由导航失败:', err);\n                  ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                  // 尝试路径跳转\n                  router.push(`/smartdoc/${docId}`).catch(navErr => {\n                    console.error('路径导航也失败:', navErr);\n                    ElMessage.error('路径跳转详情页也失败');\n                  });\n                  createLoading.value = false;\n                });\n                // 异步刷新数据\n                fetchDocuments();\n                fetchRecentDocuments();\n              } else {\n                fetchDocuments();\n                fetchRecentDocuments();\n                createLoading.value = false;\n              }\n            } catch (error) {\n              console.error('AI生成文档失败', error);\n              ElMessage.error('AI生成文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交AI表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      }\n    }\n    \n    const openDocument = (doc) => {\n      router.push({ name: 'SmartDocDetail', params: { id: doc.id } })\n    }\n    \n    const renameDocument = (doc) => {\n      ElMessageBox.prompt('请输入新文档名称', '重命名文档', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: doc.title,\n        inputValidator: (value) => {\n          if (!value) {\n            return '文档名称不能为空'\n          }\n          return true\n        }\n      }).then(({ value }) => {\n        // 此处应该调用更新文档API\n        ElMessage.info(`重命名文档为: ${value}`)\n      }).catch(() => {})\n    }\n    \n    const duplicateDocument = (doc) => {\n      ElMessage.info(`复制文档: ${doc.title}`)\n    }\n    \n    const shareDocument = (doc) => {\n      selectedDocument.value = doc\n      // 在实际项目中，这里应该从API获取可用用户列表\n      availableUsers.value = [\n        { id: 1, username: '张三' },\n        { id: 2, username: '李四' },\n        { id: 3, username: '王五' }\n      ]\n      selectedUsers.value = []\n      shareDialogVisible.value = true\n    }\n    \n    const confirmShare = async () => {\n      if (!selectedDocument.value || selectedUsers.value.length === 0) {\n        ElMessage.warning('请选择至少一个用户')\n        return\n      }\n      \n      shareLoading.value = true\n      try {\n        await apiShareDocument(selectedDocument.value.id, selectedUsers.value)\n        ElMessage.success('文档分享成功')\n        shareDialogVisible.value = false\n        fetchSharedDocuments()\n      } catch (error) {\n        console.error('分享文档失败', error)\n        ElMessage.error('分享文档失败')\n      } finally {\n        shareLoading.value = false\n      }\n    }\n    \n    const deleteDocument = (doc) => {\n      selectedDocument.value = doc\n      deleteDialogVisible.value = true\n    }\n    \n    const confirmDelete = async () => {\n      if (!selectedDocument.value) return\n      \n      deleteLoading.value = true\n      try {\n        // 记录要删除的文档ID和类别\n        const deletedDocId = selectedDocument.value.id;\n        const deletedDocCategoryId = selectedDocument.value.category?.id;\n        \n        // 先关闭对话框，提高用户体验\n        deleteDialogVisible.value = false;\n        \n        // 执行删除操作\n        await apiDeleteDocument(deletedDocId)\n        ElMessage.success('文档删除成功')\n        \n        // 强制清除选中的文档\n        selectedDocument.value = null;\n        \n        // 清除可能的缓存数据\n        if (window.localStorage) {\n          try {\n            // 移除可能存在的相关缓存\n            localStorage.removeItem(`doc_cache_${deletedDocId}`);\n            localStorage.removeItem(`recent_docs_cache`);\n            localStorage.removeItem(`doc_list_cache`);\n          } catch (e) {\n            console.error('清除本地缓存失败:', e);\n          }\n        }\n        \n        // 更新刷新触发器\n        refreshTrigger.value = Date.now();\n        \n        // 使用新数组替换原数组，确保Vue能检测到变化 \n        documents.value = [...documents.value.filter(doc => doc.id !== deletedDocId)];\n        recentDocuments.value = [...recentDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        sharedDocuments.value = [...sharedDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        \n        // 强制更新视图\n        await forceUpdate();\n        \n        // 更新分类中的文档计数\n        if (deletedDocCategoryId) {\n          const category = documentCategories.value.find(c => c.id === deletedDocCategoryId);\n          if (category && category.document_count > 0) {\n            category.document_count--;\n          }\n        }\n        \n        // 等待DOM更新\n        await nextTick();\n        \n        // 重新导航到文档首页，确保状态全部刷新\n        if (router.currentRoute.value.name === 'SmartDocDetail') {\n          console.log('从详情页删除文档，重新导航到文档首页');\n          \n          // 先强制刷新数据，确保导航后数据是最新的\n          await reloadAllData();\n          \n          // 使用replace模式跳转，不留下历史记录，并添加强制刷新参数\n          router.replace({ \n            name: 'SmartDoc',\n            query: { _refresh: Date.now() } // 添加时间戳参数防止缓存\n          });\n        } else {\n          // 如果已经在文档首页，立即重载数据并强制刷新页面\n          await refreshData();\n        }\n      } catch (error) {\n        console.error('删除文档失败', error);\n        ElMessage.error('删除文档失败');\n        // 如果删除失败，关闭对话框\n        deleteDialogVisible.value = false;\n      } finally {\n        deleteLoading.value = false;\n      }\n    }\n    \n    const viewAllDocuments = (type) => {\n      if (type === 'recent') {\n        // 路由中没有SmartDocList，直接跳转到智能文档首页并滚动到文档列表\n        router.push({ name: 'SmartDoc' }).then(() => {\n          setTimeout(() => {\n            const docSection = document.querySelector('.section');\n            if (docSection) {\n              docSection.scrollIntoView({ behavior: 'smooth' });\n            }\n          }, 300);\n        });\n      }\n    }\n    \n    const selectCategory = (category) => {\n      console.log('选择分类:', category);\n      \n      // 处理不同类型的category参数\n      let categoryId;\n      if (category === 'all') {\n        categoryId = 'all';\n      } else if (typeof category === 'string') {\n        categoryId = category;\n      } else if (typeof category === 'object' && category !== null) {\n        categoryId = category.id.toString();\n      }\n      \n      console.log('处理后的分类ID:', categoryId);\n      \n      // 无论是否选中当前分类，都设置为所选分类ID（简化逻辑）\n      searchCategory.value = categoryId;\n      \n      // 添加动画效果\n      documents.value = [];\n      createLoading.value = true;\n      \n      // 重置分页\n      page.value = 1;\n      hasMore.value = true;\n      \n      // 延迟获取，实现过渡效果\n      setTimeout(async () => {\n        try {\n          // 强制刷新文档列表\n          await fetchDocuments(true);\n        } catch (error) {\n          console.error('获取文档失败:', error);\n          ElMessage.error('获取文档列表失败，请刷新页面重试');\n        } finally {\n          createLoading.value = false;\n        }\n        \n        // 触发一个简单的动画效果，突出显示已筛选的文档\n        const docCards = document.querySelectorAll('.doc-card');\n        if (docCards && docCards.length > 0) {\n          docCards.forEach((card, index) => {\n            if (card) {\n              card.style.animationDelay = `${index * 50}ms`;\n              card.classList.remove('fadeIn');\n              setTimeout(() => {\n                if (card) {\n                  card.classList.add('fadeIn');\n                }\n              }, 10);\n            }\n          });\n        }\n      }, 300);\n    };\n\n    // 获取选中分类的颜色\n    const getSelectedCategoryColor = () => {\n      if (searchCategory.value === 'all') return '#409EFF';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.color || '#67C23A';\n    };\n\n    // 获取选中分类的名称\n    const getSelectedCategoryName = () => {\n      if (searchCategory.value === 'all') return '全部文档';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.name || '未知分类';\n    };\n    \n    const manageCategories = () => {\n      categoryDialogVisible.value = true\n      resetCategoryForm()\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = { ...category }\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = {\n        id: '',\n        name: '',\n        color: '#409EFF',\n        description: ''\n      }\n      if (categoryFormRef.value) {\n        categoryFormRef.value.resetFields()\n      }\n    }\n    \n    const submitCategory = async () => {\n      if (!categoryFormRef.value) return\n      \n      await categoryFormRef.value.validate(async (valid) => {\n        if (valid) {\n          categoryLoading.value = true\n          try {\n            const categoryData = {\n              name: editingCategory.value.name,\n              color: editingCategory.value.color,\n              description: editingCategory.value.description || ''\n            }\n            \n            if (editingCategory.value.id) {\n              // 更新分类\n              await updateDocumentCategory(editingCategory.value.id, categoryData)\n              ElMessage.success('分类更新成功')\n            } else {\n              // 创建分类\n              await createDocumentCategory(categoryData)\n              ElMessage.success('分类创建成功')\n            }\n            \n            // 重新获取分类列表\n            fetchDocumentCategories()\n            resetCategoryForm()\n          } catch (error) {\n            console.error('保存分类失败:', error)\n            ElMessage.error('保存分类失败')\n          } finally {\n            categoryLoading.value = false\n          }\n        }\n      })\n    }\n    \n    const deleteCategory = (category) => {\n      if (category.document_count > 0) {\n        ElMessage.warning('该分类下有文档，无法删除')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        `确定要删除分类\"${category.name}\"吗？`,\n        '删除分类',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await deleteDocumentCategory(category.id)\n          ElMessage.success('分类删除成功')\n          fetchDocumentCategories()\n        } catch (error) {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败')\n        }\n      }).catch(() => {})\n    }\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 同一天显示时间\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天'\n      }\n      \n      // 一周内显示星期\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const diffDays = Math.round((now - date) / (1000 * 60 * 60 * 24))\n      if (diffDays < 7) {\n        return weekDays[date.getDay()]\n      }\n      \n      // 其他情况显示日期\n      return date.toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' })\n    }\n    \n    const resetCategoryFilter = () => {\n      searchCategory.value = 'all'\n      page.value = 1\n      hasMore.value = true\n      fetchDocuments(true)\n    }\n    \n    // 添加页面激活钩子，确保从其他页面返回时重新获取数据\n    onActivated(() => {\n      console.log('SmartDoc组件被激活，重新获取数据');\n      reloadAllData();\n    });\n\n    // 页面激活后重新加载所有数据的函数\n    const reloadAllData = async () => {\n      page.value = 1\n      hasMore.value = true\n      try {\n        console.log('重新加载所有文档数据...')\n        createLoading.value = true\n        \n        // 先获取分类，因为显示文档时需要分类信息\n        await fetchDocumentCategories()\n        \n        // 然后并行获取其他数据，但不需要保存返回值\n        await Promise.all([\n          fetchDocuments(true),\n          fetchRecentDocuments(true),\n          fetchSharedDocuments()\n        ])\n        \n        console.log('数据重新加载完成', {\n          分类数量: documentCategories.value.length,\n          文档数量: documents.value.length,\n          最近文档: recentDocuments.value.length,\n          共享文档: sharedDocuments.value.length,\n          总计数: totalCount.value,\n        })\n        \n        // 强制更新视图\n        await forceUpdate()\n        \n        // 如果文档列表不为空但数量小于总数，自动加载更多直到填满一页\n        if (documents.value.length > 0 && \n            documents.value.length < totalCount.value && \n            documents.value.length < pageSize) {\n          console.log('文档数量不足一页，自动加载更多...')\n          await loadMoreDocuments()\n        }\n      } catch (error) {\n        console.error('数据重新加载失败:', error)\n        ElMessage.error('加载数据失败，请刷新页面')\n      } finally {\n        createLoading.value = false\n      }\n    }\n\n    // 提供重载函数给子组件或父组件使用\n    provide('reloadDocuments', reloadAllData);\n    \n    // 监听路由变化，强制刷新数据\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal) {\n        console.log('检测到路由刷新参数:', newVal);\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 监听路由参数，处理不同情况\n    watch(() => route.path, (newPath, oldPath) => {\n      console.log('路由变化:', oldPath, '->', newPath);\n      if (newPath === '/smartdoc' && oldPath && oldPath.startsWith('/smartdoc/')) {\n        // 从文档详情页返回文档列表页，强制刷新\n        console.log('从详情页返回列表页，强制刷新数据');\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 手动强制刷新方法\n    const refreshData = async () => {\n      page.value = 1\n      hasMore.value = true\n      await reloadAllData()\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate()\n      }\n    }\n\n    // 新增查看更多方法\n    const loadMoreDocuments = async () => {\n      if (!hasMore.value) {\n        console.log('没有更多文档了');\n        return;\n      }\n      \n      console.log(`加载更多文档，当前页码: ${page.value} -> ${page.value + 1}`);\n      loadingMore.value = true;\n      try {\n        page.value += 1;\n        await fetchDocuments(false, true);\n      } finally {\n        loadingMore.value = false;\n      }\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      console.log('SmartDoc组件mounted，加载数据');\n      reloadAllData(); // 使用统一的数据加载函数\n    })\n    \n    return {\n      documents,\n      recentDocuments,\n      sharedDocuments,\n      documentCategories,\n      searchQuery,\n      searchCategory,\n      debouncedSearch,\n      totalDocuments,\n      recentEditCount,\n      newDocumentDialogVisible,\n      shareDialogVisible,\n      deleteDialogVisible,\n      documentCreateType,\n      newDocumentForm,\n      aiDocumentForm,\n      blankFormRules,\n      aiFormRules,\n      blankFormRef,\n      aiFormRef,\n      selectedDocument,\n      selectedUsers,\n      availableUsers,\n      createLoading,\n      shareLoading,\n      deleteLoading,\n      createNewDocument,\n      submitNewDocument,\n      openDocument,\n      renameDocument,\n      duplicateDocument,\n      shareDocument,\n      confirmShare,\n      deleteDocument,\n      confirmDelete,\n      viewAllDocuments,\n      formatDate,\n      categoryDialogVisible,\n      editingCategory,\n      categoryFormRef,\n      categoryLoading,\n      categoryFormRules,\n      editCategory,\n      resetCategoryForm,\n      submitCategory,\n      deleteCategory,\n      resetCategoryFilter,\n      selectCategory,\n      getSelectedCategoryColor,\n      getSelectedCategoryName,\n      manageCategories,\n      reloadAllData,\n      refreshData,\n      refreshTrigger,\n      hasMore,\n      loadingMore,\n      loadMoreDocuments\n    }\n  }\n}\n</script>\n\n<style scoped>\n.smartdoc-home-container {\n  padding: 24px;\n  max-width: 1280px;\n  margin: 0 auto;\n}\n\n/* 页面标题和操作区 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.page-description {\n  margin: 4px 0 0 0;\n  color: #606266;\n  font-size: 14px;\n}\n\n.right-section {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 240px;\n}\n\n/* 统计卡片 */\n.stats-cards {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  flex: 1;\n  min-width: 0;\n}\n\n.stat-content {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.stat-icon {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  color: white;\n}\n\n.doc-icon {\n  background-color: #409EFF;\n}\n\n.edit-icon {\n  background-color: #67C23A;\n}\n\n.share-icon {\n  background-color: #E6A23C;\n}\n\n.stat-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #909399;\n}\n\n/* 区域通用样式 */\n.section {\n  margin-bottom: 32px;\n}\n\n/* 分类区域特殊样式 */\n.category-section {\n  margin-bottom: 16px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.filter-tag {\n  background-color: #f0f2f5;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #606266;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 文档卡片 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  transition: all 0.3s;\n  position: relative;\n  overflow: hidden;\n}\n\n.doc-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.doc-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n}\n\n.doc-info {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 8px;\n}\n\n.doc-type-tag {\n  font-size: 12px;\n  color: #606266;\n  background-color: #f5f7fa;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n}\n\n.doc-category-tag {\n  font-size: 12px;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n}\n\n.doc-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin: 0 0 10px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: #303133;\n}\n\n.doc-preview {\n  flex: 1;\n  font-size: 13px;\n  color: #606266;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  line-height: 1.5;\n  margin-bottom: 10px;\n}\n\n.doc-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 8px;\n  border-top: 1px solid #ebeef5;\n  margin-top: auto;\n}\n\n.doc-time {\n  font-size: 12px;\n  color: #909399;\n}\n\n.doc-actions {\n  display: flex;\n  gap: 4px;\n}\n\n.new-doc-card {\n  border: 1px dashed #dcdfe6;\n  background-color: #f8f9fb;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n}\n\n.new-doc-card:hover {\n  border-color: #409EFF;\n  color: #409EFF;\n  background-color: #ecf5ff;\n}\n\n.new-doc-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  color: #909399;\n}\n\n.new-doc-content .el-icon {\n  font-size: 32px;\n}\n\n/* 分类卡片 */\n.category-cards {\n  display: flex;\n  gap: 16px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n}\n\n.category-card {\n  min-width: 180px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 8px;\n  padding: 12px 16px;\n  border: 2px solid transparent;\n  position: relative;\n  overflow: hidden;\n  background-color: #f5f7fa;\n}\n\n.category-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);\n  background-color: #f0f5ff;\n}\n\n.category-active {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  border-color: #409EFF;\n  background-color: #ecf5ff;\n}\n\n.category-selected-indicator {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background-color: #409EFF;\n  transition: all 0.3s;\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  color: white;\n  margin-right: 12px;\n  transition: all 0.3s;\n}\n\n.category-active .category-icon {\n  transform: scale(1.1);\n}\n\n.category-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.category-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 15px;\n  font-weight: 500;\n  color: #303133;\n  transition: all 0.3s;\n}\n\n.category-active .category-info h4 {\n  color: #409EFF;\n  font-weight: 600;\n}\n\n.category-count {\n  font-size: 12px;\n  color: #909399;\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 4px;\n}\n\n.category-management {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.category-list {\n  margin-bottom: 20px;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.color-preview {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n.color-value {\n  margin-left: 12px;\n  color: #606266;\n}\n\n.category-select {\n  width: 200px;\n}\n\n.doc-menu {\n  color: #909399;\n  cursor: pointer;\n}\n\n.filter-controls {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.empty-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.loading-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n/* 筛选状态栏样式 */\n.filter-status-bar {\n  background-color: #ecf5ff;\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  animation: slideDown 0.3s ease-in-out;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n  border-left: 4px solid #409EFF;\n  position: relative;\n  overflow: hidden;\n}\n\n.filter-status-bar::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(135deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.3) 50%, rgba(255,255,255,0) 100%);\n  animation: shimmer 2s infinite;\n}\n\n.filter-bar-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n}\n\n.filter-title {\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.filter-category {\n  padding: 4px 12px;\n  border-radius: 16px;\n  color: white;\n  font-weight: 500;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.filter-actions {\n  display: flex;\n  align-items: center;\n}\n\n/* 添加文档卡片的动画效果 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n  transition: all 0.3s;\n}\n\n.doc-card {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.fadeIn {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes shimmer {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]}]}