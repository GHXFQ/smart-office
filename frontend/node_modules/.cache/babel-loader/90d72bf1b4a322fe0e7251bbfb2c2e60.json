{"remainingRequest":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\quill\\modules\\clipboard.js","dependencies":[{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\quill\\modules\\clipboard.js","mtime":1751792162005},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\babel.config.js","mtime":1748077811200},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746431218000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1746431219000},{"path":"C:\\Users\\18083\\Desktop\\CCIT\\office\\smart-office\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1746431202000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Attributor","BlockBlot","ClassAttributor","EmbedBlot","Scope","StyleAttributor","Delta","BlockEmbed","logger","Module","Quill","AlignAttribute","AlignStyle","BackgroundStyle","CodeBlock","ColorStyle","DirectionAttribute","DirectionStyle","FontStyle","SizeStyle","deleteRange","normalizeExternalHTML","debug","CLIPBOARD_CONFIG","Node","TEXT_NODE","matchText","matchNewline","matchBreak","ELEMENT_NODE","matchBlot","matchAttributor","matchStyles","matchIndent","matchList","matchCodeBlock","matchTable","createMatchAlias","matchIgnore","ATTRIBUTE_ATTRIBUTORS","reduce","memo","attr","keyName","STYLE_ATTRIBUTORS","Clipboard","constructor","quill","options","_this$options$matcher","root","addEventListener","e","onCaptureCopy","onCapturePaste","bind","matchers","concat","forEach","_ref","selector","matcher","addMatcher","push","convert","_ref2","html","text","formats","arguments","length","undefined","blotName","insert","delta","convertHTML","deltaEndsWith","ops","attributes","table","compose","retain","delete","normalizeHTML","doc","DOMParser","parseFromString","container","body","nodeMatches","WeakMap","elementMatchers","textMatchers","prepareMatching","traverse","scroll","dangerouslyPasteHTML","index","source","sources","API","setContents","setSelection","SILENT","paste","updateContents","_e$clipboardData","_e$clipboardData2","isCut","defaultPrevented","preventDefault","range","selection","getRange","onCopy","clipboardData","setData","normalizeURIList","urlList","split","filter","url","join","_e$clipboardData3","_e$clipboardData4","_e$clipboardData6","isEnabled","getSelection","getData","_e$clipboardData5","files","Array","from","uploader","upload","_doc$body$firstElemen","childElementCount","firstElementChild","tagName","onPaste","getText","getSemanticHTML","_ref3","getFormat","pastedDelta","log","USER","scrollSelectionIntoView","pair","querySelectorAll","node","has","matches","get","set","_defineProperty","applyFormat","format","value","query","newDelta","op","endText","i","slice","isLine","Element","match","prototype","includes","toLowerCase","isBetweenInlineElements","previousElementSibling","nextElementSibling","preNodes","isPre","parentNode","nodeType","childNodes","childNode","childrenDelta","reducedDelta","_node","keys","classes","styles","name","ATTRIBUTE","attrName","Object","entries","_ref4","embed","language","indent","parent","composed","element","list","checkedAttr","getAttribute","HTMLParagraphElement","nextSibling","firstChild","_style$fontWeight","style","fontStyle","italic","textDecoration","underline","strike","fontWeight","startsWith","parseInt","bold","_ref5","parseFloat","textIndent","_node$parentElement","_node$parentElement2","parentElement","rows","row","indexOf","_node$parentElement3","data","trim","replace","previousSibling","replaceAll","default"],"sources":["../../src/modules/clipboard.ts"],"sourcesContent":["import type { ScrollBlot } from 'parchment';\nimport {\n  Attributor,\n  BlockBlot,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n} from 'parchment';\nimport Delta from 'quill-delta';\nimport { BlockEmbed } from '../blots/block.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { AlignAttribute, AlignStyle } from '../formats/align.js';\nimport { BackgroundStyle } from '../formats/background.js';\nimport CodeBlock from '../formats/code.js';\nimport { ColorStyle } from '../formats/color.js';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction.js';\nimport { FontStyle } from '../formats/font.js';\nimport { SizeStyle } from '../formats/size.js';\nimport { deleteRange } from './keyboard.js';\nimport normalizeExternalHTML from './normalizeExternalHTML/index.js';\n\nconst debug = logger('quill:clipboard');\n\ntype Selector = string | Node['TEXT_NODE'] | Node['ELEMENT_NODE'];\ntype Matcher = (node: Node, delta: Delta, scroll: ScrollBlot) => Delta;\n\nconst CLIPBOARD_CONFIG: [Selector, Matcher][] = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', createMatchAlias('bold')],\n  ['i', createMatchAlias('italic')],\n  ['strike', createMatchAlias('strike')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo: Record<string, Attributor>, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo: Record<string, Attributor>, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\ninterface ClipboardOptions {\n  matchers: [Selector, Matcher][];\n}\n\nclass Clipboard extends Module<ClipboardOptions> {\n  static DEFAULTS: ClipboardOptions = {\n    matchers: [],\n  };\n\n  matchers: [Selector, Matcher][];\n\n  constructor(quill: Quill, options: Partial<ClipboardOptions>) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', (e) =>\n      this.onCaptureCopy(e, false),\n    );\n    this.quill.root.addEventListener('cut', (e) => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers ?? []).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector: Selector, matcher: Matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert(\n    { html, text }: { html?: string; text?: string },\n    formats: Record<string, unknown> = {},\n  ) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text || '', {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '', formats);\n    }\n    const delta = this.convertHTML(html);\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  protected normalizeHTML(doc: Document) {\n    normalizeExternalHTML(doc);\n  }\n\n  protected convertHTML(html: string) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    this.normalizeHTML(doc);\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    return traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n  }\n\n  dangerouslyPasteHTML(html: string, source?: EmitterSource): void;\n  dangerouslyPasteHTML(\n    index: number,\n    html: string,\n    source?: EmitterSource,\n  ): void;\n  dangerouslyPasteHTML(\n    index: number | string,\n    html?: string,\n    source: EmitterSource = Quill.sources.API,\n  ) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      // @ts-expect-error\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e: ClipboardEvent, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData?.setData('text/plain', text);\n    e.clipboardData?.setData('text/html', html);\n    if (isCut) {\n      deleteRange({ range, quill: this.quill });\n    }\n  }\n\n  /*\n   * https://www.iana.org/assignments/media-types/text/uri-list\n   */\n  private normalizeURIList(urlList: string) {\n    return (\n      urlList\n        .split(/\\r?\\n/)\n        // Ignore all comments\n        .filter((url) => url[0] !== '#')\n        .join('\\n')\n    );\n  }\n\n  onCapturePaste(e: ClipboardEvent) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData?.getData('text/html');\n    let text = e.clipboardData?.getData('text/plain');\n    if (!html && !text) {\n      const urlList = e.clipboardData?.getData('text/uri-list');\n      if (urlList) {\n        text = this.normalizeURIList(urlList);\n      }\n    }\n    const files = Array.from(e.clipboardData?.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n      return;\n    }\n    if (html && files.length > 0) {\n      const doc = new DOMParser().parseFromString(html, 'text/html');\n      if (\n        doc.body.childElementCount === 1 &&\n        doc.body.firstElementChild?.tagName === 'IMG'\n      ) {\n        this.quill.uploader.upload(range, files);\n        return;\n      }\n    }\n    this.onPaste(range, { html, text });\n  }\n\n  onCopy(range: Range, isCut: boolean): { html: string; text: string };\n  onCopy(range: Range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range: Range, { text, html }: { text?: string; html?: string }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollSelectionIntoView();\n  }\n\n  prepareMatching(container: Element, nodeMatches: WeakMap<Node, Matcher[]>) {\n    const elementMatchers: Matcher[] = [];\n    const textMatchers: Matcher[] = [];\n    this.matchers.forEach((pair) => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach((node) => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches?.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\n\nfunction applyFormat(\n  delta: Delta,\n  format: string,\n  value: unknown,\n  scroll: ScrollBlot,\n): Delta {\n  if (!scroll.query(format)) {\n    return delta;\n  }\n\n  return delta.reduce((newDelta, op) => {\n    if (!op.insert) return newDelta;\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    const formats = value ? { [format]: value } : {};\n    return newDelta.insert(op.insert, { ...formats, ...op.attributes });\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta: Delta, text: string) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node: Node, scroll: ScrollBlot) {\n  if (!(node instanceof Element)) return false;\n  const match = scroll.query(node);\n  // @ts-expect-error\n  if (match && match.prototype instanceof EmbedBlot) return false;\n\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nfunction isBetweenInlineElements(node: HTMLElement, scroll: ScrollBlot) {\n  return (\n    node.previousElementSibling &&\n    node.nextElementSibling &&\n    !isLine(node.previousElementSibling, scroll) &&\n    !isLine(node.nextElementSibling, scroll)\n  );\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node: Node | null) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    // @ts-expect-error\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(\n  scroll: ScrollBlot,\n  node: ChildNode,\n  elementMatchers: Matcher[],\n  textMatchers: Matcher[],\n  nodeMatches: WeakMap<Node, Matcher[]>,\n): Delta {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta: Delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode as HTMLElement, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction createMatchAlias(format: string) {\n  return (_node: Element, delta: Delta, scroll: ScrollBlot) => {\n    return applyFormat(delta, format, true, scroll);\n  };\n}\n\nfunction matchAttributor(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats: Record<string, string | undefined> = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach((name) => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE) as Attributor;\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n\n  return Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n}\n\nfunction matchBlot(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  // @ts-expect-error\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    // @ts-expect-error\n    const value = match.value(node);\n    if (value != null) {\n      // @ts-expect-error\n      embed[match.blotName] = value;\n      // @ts-expect-error\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    // @ts-expect-error\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (\n      'blotName' in match &&\n      'formats' in match &&\n      typeof match.formats === 'function'\n    ) {\n      return applyFormat(\n        delta,\n        match.blotName,\n        match.formats(node, scroll),\n        scroll,\n      );\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node: Node, delta: Delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query('code-block');\n  const language =\n    match && 'formats' in match && typeof match.formats === 'function'\n      ? match.formats(node, scroll)\n      : true;\n  return applyFormat(delta, 'code-block', language, scroll);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    // @ts-expect-error\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    // @ts-expect-error\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (!op.insert) return composed;\n    if (op.attributes && typeof op.attributes.indent === 'number') {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node: Node, delta: Delta, scroll: ScrollBlot) {\n  const element = node as Element;\n  let list = element.tagName === 'OL' ? 'ordered' : 'bullet';\n\n  const checkedAttr = element.getAttribute('data-checked');\n  if (checkedAttr) {\n    list = checkedAttr === 'true' ? 'checked' : 'unchecked';\n  }\n\n  return applyFormat(delta, 'list', list, scroll);\n}\n\nfunction matchNewline(node: Node, delta: Delta, scroll: ScrollBlot) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (\n      isLine(node, scroll) &&\n      (node.childNodes.length > 0 || node instanceof HTMLParagraphElement)\n    ) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let nextSibling: Node | null = node.nextSibling;\n      while (nextSibling != null) {\n        if (isLine(nextSibling, scroll)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        // @ts-expect-error\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  const formats: Record<string, unknown> = {};\n  const style: Partial<CSSStyleDeclaration> = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.textDecoration === 'underline') {\n    formats.underline = true;\n  }\n  if (style.textDecoration === 'line-through') {\n    formats.strike = true;\n  }\n  if (\n    style.fontWeight?.startsWith('bold') ||\n    // @ts-expect-error Fix me later\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  delta = Object.entries(formats).reduce(\n    (newDelta, [name, value]) => applyFormat(newDelta, name, value, scroll),\n    delta,\n  );\n  // @ts-expect-error\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(\n  node: HTMLTableRowElement,\n  delta: Delta,\n  scroll: ScrollBlot,\n) {\n  const table =\n    node.parentElement?.tagName === 'TABLE'\n      ? node.parentElement\n      : node.parentElement?.parentElement;\n  if (table != null) {\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const row = rows.indexOf(node) + 1;\n    return applyFormat(delta, 'table', row, scroll);\n  }\n  return delta;\n}\n\nfunction matchText(node: HTMLElement, delta: Delta, scroll: ScrollBlot) {\n  // @ts-expect-error\n  let text = node.data as string;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentElement?.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (!isPre(node)) {\n    if (\n      text.trim().length === 0 &&\n      text.includes('\\n') &&\n      !isBetweenInlineElements(node, scroll)\n    ) {\n      return delta;\n    }\n    // convert all non-nbsp whitespace into regular space\n    text = text.replace(/[^\\S\\u00a0]/g, ' ');\n    // collapse consecutive spaces into one\n    text = text.replace(/ {2,}/g, ' ');\n    if (\n      (node.previousSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.previousSibling instanceof Element &&\n        isLine(node.previousSibling, scroll))\n    ) {\n      // block structure means we don't need leading space\n      text = text.replace(/^ /, '');\n    }\n    if (\n      (node.nextSibling == null &&\n        node.parentElement != null &&\n        isLine(node.parentElement, scroll)) ||\n      (node.nextSibling instanceof Element && isLine(node.nextSibling, scroll))\n    ) {\n      // block structure means we don't need trailing space\n      text = text.replace(/ $/, '');\n    }\n    // done removing whitespace and can normalize all to regular space\n    text = text.replaceAll('\\u00a0', ' ');\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n"],"mappings":"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","ignoreList":[]}]}