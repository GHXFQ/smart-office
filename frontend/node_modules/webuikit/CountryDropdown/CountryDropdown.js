"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _color = require("../tokens/color");

var _Icon = _interopRequireDefault(require("../Icon"));

var _Flag = _interopRequireDefault(require("../Flag"));

var _OnClickOutside = _interopRequireDefault(require("../HOC/OnClickOutside"));

var _misc = _interopRequireDefault(require("../tokens/misc"));

var _lodashEs = require("lodash-es");

var CountryDropdown = function CountryDropdown(props) {
  var _props$country = props.country,
      country = _props$country === void 0 ? "" : _props$country,
      _props$value = props.value,
      value = _props$value === void 0 ? "" : _props$value,
      _props$countries = props.countries,
      countries = _props$countries === void 0 ? [] : _props$countries,
      _props$onSelect = props.onSelect,
      onSelect = _props$onSelect === void 0 ? _lodashEs.noop : _props$onSelect;

  var _useState = (0, _react.useState)(country),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      countryName = _useState2[0],
      setCountryName = _useState2[1];

  var _useState3 = (0, _react.useState)(value),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      countryValue = _useState4[0],
      setCountryValue = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      visible = _useState6[0],
      setVisible = _useState6[1];

  var closeDropdown = function closeDropdown() {
    return setVisible(false);
  };

  var toggleDropdown = function toggleDropdown() {
    return setVisible(!visible);
  };

  var handleSelect = function handleSelect(name, value) {
    setCountryName(name);
    setCountryValue(value);
    onSelect(value);
  };

  return _react["default"].createElement(_OnClickOutside["default"], {
    onClickOutside: closeDropdown
  }, _react["default"].createElement(CountryDropdown.Wrapper, {
    onClick: toggleDropdown,
    tabIndex: "0",
    "aria-labelledby": "country-dropdown-label"
  }, _react["default"].createElement(CountryDropdown.label, {
    id: "country-dropdown-label"
  }, "Select Country"), _react["default"].createElement(CountryDropdown.Menu, {
    visible: visible,
    tabIndex: "-1",
    "aria-activedescendant": "country-active"
  }, _react["default"].createElement(CountryDropdown.Arrow, {
    visible: visible
  }), _react["default"].createElement(CountryDropdown.CountryContainer, null, visible && countries.map(function (country) {
    return _react["default"].createElement(Country, {
      name: country.name,
      value: country.value,
      key: country.value,
      onSelect: handleSelect,
      selected: countryValue === country.value
    });
  }))), _react["default"].createElement(CountryDropdown.Head, null, _react["default"].createElement(_Flag["default"], {
    country: countryValue,
    width: 20
  }), _react["default"].createElement(CountryDropdown.CountryName, null, countryName), _react["default"].createElement(_Icon["default"], {
    name: "chevron-down",
    size: 15
  }))));
};

var setPadding = function setPadding(props) {
  return props.visible ? "1rem 1.4rem 1.4rem 1.4rem" : 0;
};

var Country = function Country(props) {
  var _props$name = props.name,
      name = _props$name === void 0 ? "" : _props$name,
      _props$value2 = props.value,
      value = _props$value2 === void 0 ? "" : _props$value2,
      _props$onSelect2 = props.onSelect,
      onSelect = _props$onSelect2 === void 0 ? _lodashEs.noop : _props$onSelect2,
      _props$selected = props.selected,
      selected = _props$selected === void 0 ? false : _props$selected;

  var handleClick = function handleClick() {
    return onSelect(name, value);
  };

  return _react["default"].createElement(Country.Wrapper, {
    onClick: handleClick,
    isSelected: selected,
    id: selected ? "country-active" : "country-" + value
  }, _react["default"].createElement(_Flag["default"], {
    country: value,
    width: 22
  }), _react["default"].createElement(Country.CountryName, null, name));
};

CountryDropdown.label = _styledComponents["default"].label.withConfig({
  displayName: "CountryDropdown__label",
  componentId: "sc-1yxrabz-0"
})(["display:none;"]);
Country.CountryName = _styledComponents["default"].span.withConfig({
  displayName: "CountryDropdown__CountryName",
  componentId: "sc-1yxrabz-1"
})(["font-size:1.4rem;color:", ";line-height:1.6rem;margin:0 0.5rem 0 0.8rem;font-weight:400;margin-top:0.2rem;"], _color.black);
Country.propTypes = {
  name: _propTypes["default"].string,
  value: _propTypes["default"].string,
  onSelect: _propTypes["default"].func,
  selected: _propTypes["default"].bool
};
Country.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "CountryDropdown__Wrapper",
  componentId: "sc-1yxrabz-2"
})(["margin:0.4rem;padding:0.2rem 0.5rem;display:flex;align-items:center;cursor:pointer;:hover{background:", ";}", ""], _color.grey.z100, function (props) {
  return props.isSelected && (0, _styledComponents.css)(["background:", ";"], _color.blue.z100);
});
CountryDropdown.propTypes = {
  country: _propTypes["default"].string,
  countries: _propTypes["default"].array,
  onSelect: _propTypes["default"].func,
  value: _propTypes["default"].string
};
CountryDropdown.CountryContainer = _styledComponents["default"].section.withConfig({
  displayName: "CountryDropdown__CountryContainer",
  componentId: "sc-1yxrabz-3"
})(["display:grid;grid-template-areas:\"first second third fourth\";height:100%;@media (max-width:480px){grid-template-areas:\"first second\";}"]);
CountryDropdown.Arrow = _styledComponents["default"].span.withConfig({
  displayName: "CountryDropdown__Arrow",
  componentId: "sc-1yxrabz-4"
})(["display:", ";position:absolute;bottom:-1rem;left:3.1rem;width:2.1rem;height:2.3rem;transform:rotate(45deg);border-radius:2.2rem 0 0.4rem 0;background:#fff;"], function (props) {
  return props.visible ? "block" : "none";
});
CountryDropdown.Menu = _styledComponents["default"].div.withConfig({
  displayName: "CountryDropdown__Menu",
  componentId: "sc-1yxrabz-5"
})(["position:absolute;opacity:", ";bottom:4rem;width:", ";height:", ";background-color:#fff;box-shadow:0.1rem 4rem 4rem rgba(0,0,0,0.15);border-radius:", ";padding:", ";cursor:default;transform-origin:0 100%;transition-property:transform,opacity,padding;will-change:transform,opacity,padding;transition-duration:", ";@media (max-width:480px){padding:", ";}"], function (props) {
  return props.visible ? 1 : 0;
}, function (props) {
  return props.visible ? "max-content" : 0;
}, function (props) {
  return props.visible ? "auto" : 0;
}, _misc["default"].radius, function (props) {
  return props.visible ? "2rem 2.4rem 2.4rem 2.4rem" : 0;
}, _misc["default"].animationDuration, setPadding);
CountryDropdown.Head = _styledComponents["default"].div.withConfig({
  displayName: "CountryDropdown__Head",
  componentId: "sc-1yxrabz-6"
})(["display:flex;align-items:center;"]);
CountryDropdown.CountryName = _styledComponents["default"].span.withConfig({
  displayName: "CountryDropdown__CountryName",
  componentId: "sc-1yxrabz-7"
})(["font-size:1.8rem;line-height:2rem;color:", ";margin:0 0.5rem 0 0.8rem;font-weight:400;margin-top:0.2rem;"], _color.black);
CountryDropdown.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "CountryDropdown__Wrapper",
  componentId: "sc-1yxrabz-8"
})(["min-width:10rem;width:max-content;cursor:pointer;position:relative;"]);
var _default = CountryDropdown;
exports["default"] = _default;