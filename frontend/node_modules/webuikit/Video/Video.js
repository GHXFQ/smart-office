"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _misc = _interopRequireDefault(require("../tokens/misc"));

var DEFAULT_WIDTH = "100%";
var NOT_SUPPORTED_MESSAGE = "Your browser doesn't support this type of video.";
var PlayButtonUrl = "https://b.zmtcdn.com/images/video_play.png";

var Video = function Video(props) {
  var _props$width = props.width,
      width = _props$width === void 0 ? DEFAULT_WIDTH : _props$width,
      _props$sources = props.sources,
      sources = _props$sources === void 0 ? [] : _props$sources,
      _props$controls = props.controls,
      controls = _props$controls === void 0 ? false : _props$controls,
      _props$thumbnail = props.thumbnail,
      thumbnail = _props$thumbnail === void 0 ? "" : _props$thumbnail,
      _props$className = props.className,
      className = _props$className === void 0 ? "" : _props$className;
  var videoRef = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isPlaying = _useState2[0],
      setPlaying = _useState2[1];

  var handlePlay = function handlePlay() {
    isPlaying ? videoRef.current.pause() : videoRef.current.play();
    setPlaying(!isPlaying);
  };

  var handleVideoEnd = function handleVideoEnd() {
    return setPlaying(false);
  };

  return _react["default"].createElement(Video.Wrapper, {
    width: width,
    className: className
  }, _react["default"].createElement("video", {
    width: "100%",
    height: "auto",
    controls: controls,
    poster: thumbnail,
    ref: videoRef,
    onEnded: handleVideoEnd
  }, sources.map(function (source) {
    return _react["default"].createElement("source", {
      key: source.link,
      src: source.link,
      type: source.type
    });
  }), NOT_SUPPORTED_MESSAGE), _react["default"].createElement(Video.Overlay, {
    onClick: handlePlay,
    isPlaying: isPlaying
  }, _react["default"].createElement(Video.Button, null)));
};

Video.Overlay = _styledComponents["default"].div.withConfig({
  displayName: "Video__Overlay",
  componentId: "sc-1qcum3s-0"
})(["position:absolute;top:0;left:0;width:100%;height:100%;background:", ");// TODO display:flex;align-items:center;justify-content:center;:hover > span{transform:scale(1.15);}cursor:pointer;display:", ";"], function (props) {
  return props.isPlaying ? "none" : "rgba(0, 0, 0, 0.3";
}, function (props) {
  return props.isPlaying ? "none" : "flex";
});
Video.Button = _styledComponents["default"].span.withConfig({
  displayName: "Video__Button",
  componentId: "sc-1qcum3s-1"
})(["width:7rem;height:7rem;background-image:url(", ");background-repeat:no-repeat;background-size:cover;transition:transform ", " ease;"], PlayButtonUrl, _misc["default"].animationDuration);
Video.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "Video__Wrapper",
  componentId: "sc-1qcum3s-2"
})(["width:", ";position:relative;:hover > ", "{display:flex;cursor:pointer;}"], function (props) {
  return props.width;
}, Video.Overlay);
Video.propTypes = {
  width: _propTypes["default"].string,
  sources: _propTypes["default"].array,
  controls: _propTypes["default"].bool,
  thumbnail: _propTypes["default"].string,
  className: _propTypes["default"].string
};
var _default = Video;
exports["default"] = _default;