"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _lodashEs = require("lodash-es");

var _reactDateRange = require("react-date-range");

require("style-loader!react-date-range/dist/styles.css");

require("style-loader!react-date-range/dist/theme/default.css");

// libraries
// components
// styles
var getDefaultColor = function getDefaultColor(props) {
  return props.color;
};

var CalendarComponentWrapper = (0, _styledComponents["default"])(_reactDateRange.Calendar).withConfig({
  displayName: "Calendar__CalendarComponentWrapper",
  componentId: "sc-1s1zrjy-0"
})(["&&& .rdrSelected,.rdrDay,.rdrDay span{color:", " !important;padding-top:1.5px;}.rdrInRange{top:6px;bottom:6px;left:0;right:0;}.rdrMonth{width:32rem;}.rdrDayNumber span{color:#1c1c1c !important;}.rdrDayToday .rdrDayNumber span:after{background:", " !important;}.rdrSelected{right:5.5px;left:5.5px;border-radius:50%;top:4px;bottom:4px;}.rdrDay{height:2.428em;}.rdrCalendarWrapper:not(.rdrDateRangeWrapper) .rdrDayHovered .rdrDayNumber:after{border-radius:50% !important;left:5px !important;right:5px !important;}.rdrDayStartPreview{left:5px !important;border-top-left-radius:50% !important;border-bottom-left-radius:50% !important;}.rdrDayEndPreview{right:5px !important;border-top-right-radius:50% !important;border-bottom-right-radius:50% !important;}.rdrDay:not(.rdrDayPassive) .rdrSelected ~ .rdrDayNumber span{color:#fff !important;}.rdrDayPassive .rdrDayNumber span{color:#b5b5b5 !important;}"], getDefaultColor, getDefaultColor);

var Calendar = function Calendar(props) {
  var _useState = (0, _react.useState)(props.date),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      date = _useState2[0],
      setDatePreview = _useState2[1];

  var setValue = function setValue(val) {
    props.onChange(val);
    setDatePreview(val);
  };

  return _react["default"].createElement(CalendarComponentWrapper, {
    color: props.color,
    date: date,
    onChange: setValue,
    months: props.months,
    scroll: {
      enabled: false,
      monthHeight: props.monthHeight,
      longMonthHeight: props.longMonthHeight
    },
    disabledDates: props.disabledDates
  });
};

Calendar.propTypes = {
  date: _propTypes["default"].date,
  // infiniteScroll: PropTypes.bool,
  months: _propTypes["default"].number,
  color: _propTypes["default"].string,
  disabledDates: _propTypes["default"].array,
  onChange: _propTypes["default"].func,
  monthHeight: _propTypes["default"].number,
  longMonthHeight: _propTypes["default"].number
};
Calendar.defaultProps = {
  date: new Date(),
  onChange: _lodashEs.noop,
  // infiniteScroll: false,
  months: 1,
  color: "#28a745",
  disabledDates: [],
  monthHeight: 300,
  longMonthHeight: 330
};
var _default = Calendar;
exports["default"] = _default;