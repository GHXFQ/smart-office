"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _misc = _interopRequireDefault(require("../tokens/misc"));

var _lodashEs = require("lodash-es");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _color = require("../tokens/color");

var _RadioSwitch = _interopRequireDefault(require("./RadioSwitch"));

var size = 22;
var spacing = 2;
var totalWidth = 38;
var slideLength = totalWidth - (size + 2 * spacing + 1);

var Switch = function Switch(props) {
  var readOnly = props.readOnly,
      onToggle = props.onToggle,
      type = props.type,
      active = props.active;

  var _useState = (0, _react.useState)(active),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      activeState = _useState2[0],
      toggleActiveState = _useState2[1];

  if (type === "checkCircle") {
    return _react["default"].createElement(_RadioSwitch["default"], (0, _extends2["default"])({
      onToggle: onToggle,
      active: activeState
    }, props));
  } else {
    return _react["default"].createElement(Switch.Ele, {
      onClick: function onClick() {
        if (!readOnly) {
          onToggle(!activeState);
          toggleActiveState(!activeState);
        }
      }
    }, _react["default"].createElement(Toggle, {
      type: "checkbox"
    }), _react["default"].createElement(Switch.slider, (0, _extends2["default"])({}, props, {
      active: activeState
    }))) // <h1>Working</h1>
    ;
  }
};

Switch.Ele = _styledComponents["default"].span.withConfig({
  displayName: "Switch__Ele",
  componentId: "sc-109mcvu-0"
})(["position:relative;display:inline-block;width:", "rem;height:", "rem;appearance:none;outline:none;&:focus{outline:0;}"], totalWidth / 10, (size + 2 * spacing) / 10);

var Toggle = _styledComponents["default"].input.withConfig({
  displayName: "Switch__Toggle",
  componentId: "sc-109mcvu-1"
})(["opacity:0;width:0;height:0;"]);

Switch.slider = _styledComponents["default"].span.withConfig({
  displayName: "Switch__slider",
  componentId: "sc-109mcvu-2"
})(["position:absolute;cursor:pointer;top:0;left:0;right:0;appearance:none;bottom:0;display:inline-flex;vertical-align:middle;align-items:center;justify-content:center;margin-top:0;margin-left:0;background-color:", ";-webkit-transition:background-color ", ",opacity ", ";transition:background-color ", " ease,opacity ", ";border-radius:", "rem;outline:none;:before{position:absolute;content:\"\";height:", "rem;width:", "rem;left:", "rem;background-color:white;margin-top:0;margin-left:0;outline:none;border-radius:50%;transition:transform ", " ease,opacity ", ";transform:translateX( ", " );border:0.5px solid rgba(0,0,0,0.04);box-shadow:0 ", "rem 0.4rem rgba(28,28,28,0.1);&:active{outline:none;}}", ""], function (props) {
  return props.active === true ? _color.red.z_red : "#ccc";
}, _misc["default"].shortAnimDuration, _misc["default"].shortAnimDuration, _misc["default"].shortAnimDuration, _misc["default"].shortAnimDuration, (size + 2 * spacing) / 10, size / 10, size / 10, spacing / 10, _misc["default"].shortAnimDuration, _misc["default"].shortAnimDuration, function (props) {
  return props.active === true ? slideLength / 10 + "rem" : 0;
}, function (props) {
  return props.active === true ? 0.2 : 0.1;
}, function (props) {
  return props.readOnly ? (0, _styledComponents.css)(["opacity:0.4;"]) : (0, _styledComponents.css)(["&:active{outline:none;&:before{width:", "rem;left:", ";}}"], (size + 4) / 10, function (props) {
    return props.active ? "-0.2rem" : "0.4rem";
  });
});
Switch.propTypes = {
  readOnly: _propTypes["default"].bool,
  size: _propTypes["default"].number,
  spacing: _propTypes["default"].number,

  /** This gets invoked everytime switch state is changed. Final state is passed as argument */
  onToggle: _propTypes["default"].func,
  active: _propTypes["default"].bool,
  type: _propTypes["default"].oneOf(["default", "checkCircle"])
};
Switch.defaultProps = {
  readOnly: false,
  size: 22,
  spacing: 2,
  onToggle: _lodashEs.noop,
  active: false,
  type: "default"
};
var _default = Switch;
exports["default"] = _default;