"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodashEs = require("lodash-es");

var _Portal = _interopRequireDefault(require("../HOC/Portal"));

var _color = require("../tokens/color");

var _misc = _interopRequireDefault(require("../tokens/misc"));

var _ToastContainer = require("../ToastContainer");

var TOAST_TYPES = {
  top: {
    add: _ToastContainer.ADD_TOP_TOAST,
    remove: _ToastContainer.REMOVE_TOP_TOAST
  },
  bottom: {
    add: _ToastContainer.ADD_BOTTOM_TOAST,
    remove: _ToastContainer.REMOVE_BOTTOM_TOAST
  }
};

var Toast = function Toast(props) {
  var _props$text = props.text,
      text = _props$text === void 0 ? "" : _props$text,
      _props$show = props.show,
      show = _props$show === void 0 ? false : _props$show,
      _props$align = props.align,
      align = _props$align === void 0 ? "bottom" : _props$align,
      _props$type = props.type,
      type = _props$type === void 0 ? "default" : _props$type,
      _props$onClose = props.onClose,
      onClose = _props$onClose === void 0 ? _lodashEs.noop : _props$onClose,
      _props$autoHideDurati = props.autoHideDuration,
      autoHideDuration = _props$autoHideDurati === void 0 ? 3 : _props$autoHideDurati;

  var _useContext = (0, _react.useContext)(_ToastContainer.ToastContext),
      state = _useContext.state,
      dispatch = _useContext.dispatch;

  var topToasts = state.topToasts,
      bottomToasts = state.bottomToasts;
  var toasts = align == "top" ? topToasts : bottomToasts;
  var handleClose = (0, _react.useCallback)(function () {
    var fn = TOAST_TYPES[align].remove;
    dispatch(fn(node.current));
    onClose();
  });
  var node = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    if (show) {
      var fn = TOAST_TYPES[align].add;
      dispatch(fn(node.current));
    }
  }, [align, dispatch, show]);
  (0, _react.useEffect)(function () {
    if (show) {
      var timeOut = setTimeout(handleClose, autoHideDuration * 1000);
      return function () {
        return clearTimeout(timeOut);
      };
    }
  }, [autoHideDuration, handleClose, show]);
  var toastindex = toasts.indexOf(node.current);
  var length = toasts.length;
  var count = length - toastindex - 1;

  var getMargin = function getMargin() {
    return "calc(5% + (".concat(count, " * 6.5rem));");
  };

  return _react["default"].createElement(_Portal["default"], null, _react["default"].createElement(Toast.Wrapper, {
    show: show,
    position: align,
    type: type,
    margin: getMargin(),
    ref: node
  }, _react["default"].createElement(Toast.Span, null, text), _react["default"].createElement(_Icon["default"], {
    name: "cross",
    onClick: handleClose,
    showPointer: true,
    color: getColor(props)
  })));
};

Toast.propTypes = {
  text: _propTypes["default"].string,
  show: _propTypes["default"].bool.isRequired,
  align: _propTypes["default"].oneOf(["topRight", "topLeft", "top", "bottomRight", "bottomLeft", "bottom"]),
  onClose: _propTypes["default"].func.isRequired,
  autoHideDuration: _propTypes["default"].number,
  type: _propTypes["default"].oneOf(["default", "success", "successSolid", "warning", "warningSolid", "error", "errorSolid"])
};
Toast.Span = _styledComponents["default"].span.withConfig({
  displayName: "Toast__Span",
  componentId: "sc-1pz5liu-0"
})(["margin-right:2rem;margin-top:0.2rem;font-size:1.8rem;font-weight:300;"]);
Toast.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "Toast__Wrapper",
  componentId: "sc-1pz5liu-1"
})(["position:fixed;opacity:", ";display:flex;transition:all 0.5s ease;justify-content:space-between;padding:1.8rem 1.8rem;width:max-content;min-width:50rem;max-width:900px;font-weight:300;border-radius:", ";background:", ";color:", ";", " "], function (props) {
  return props.show ? "1" : "0";
}, _misc["default"].radius, function (props) {
  return getBackground(props);
}, function (props) {
  return getColor(props);
}, function (props) {
  return getPositionBasedStyles(props);
});
var backgrounds = {
  "default": _color.grey.z100,
  success: _color.green.z100,
  successSolid: _color.green.z500,
  warning: _color.yellow.z100,
  warningSolid: _color.yellow.z500,
  error: _color.red.z100,
  errorSolid: _color.red.z500
};
var colors = {
  "default": _color.black,
  success: _color.green.z600,
  successSolid: _color.white,
  warning: _color.yellow.z600,
  warningSolid: _color.white,
  error: _color.red.z500,
  errorSolid: _color.white
}; // move below to helpers

var getColor = function getColor(props) {
  return colors[props.type || "default"] || _color.black;
};

var getBackground = function getBackground(props) {
  return backgrounds[props.type || "default"] || _color.grey.z100;
};

var getPositionBasedStyles = function getPositionBasedStyles(props) {
  return positionStyles[props.position || "bottom"] || bottomStyle;
};

var topRightStyle = function topRightStyle(props) {
  return "\n  right: ".concat(props.show ? "5%" : "-100%", "; // TODO\n  top: 10%;\n");
};

var topLeftStyle = function topLeftStyle(props) {
  return (0, _styledComponents.css)(["left:", ";top:10%;"], props.show ? "5%" : "-100%");
};

var topStyle = function topStyle(props) {
  return (0, _styledComponents.css)(["top:", ";left:50%;transform:translate(-50%,0);"], props.show ? props.margin : "-5%");
};

var bottomRightStyle = function bottomRightStyle(props) {
  return (0, _styledComponents.css)(["right:", ";bottom:10%;"], props.show ? "5%" : "-100%");
};

var bottomLeftStyle = function bottomLeftStyle(props) {
  return (0, _styledComponents.css)(["left:", ";bottom:10%;"], props.show ? "5%" : "-100%");
};

var bottomStyle = function bottomStyle(props) {
  return (0, _styledComponents.css)(["bottom:", ";left:50%;transform:translate(-50%,0);"], props.show ? props.margin : "-5%");
};

var positionStyles = {
  topRight: topRightStyle,
  topLeft: topLeftStyle,
  top: topStyle,
  bottomLeft: bottomLeftStyle,
  bottomRight: bottomRightStyle,
  bottom: bottomStyle
};
var _default = Toast;
exports["default"] = _default;