"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Button = _interopRequireDefault(require("../Button"));

var _color = require("../tokens/color");

var _misc = _interopRequireDefault(require("../tokens/misc"));

var _lodashEs = require("lodash-es");

var _propTypes = _interopRequireDefault(require("prop-types"));

var Form = _styledComponents["default"].form.withConfig({
  displayName: "SingleInputForm__Form",
  componentId: "m9fk5y-0"
})(["display:flex;width:100%;margin:1rem 0;"]);

Form.wrapper = _styledComponents["default"].section.withConfig({
  displayName: "SingleInputForm__wrapper",
  componentId: "m9fk5y-1"
})(["display:flex;flex-direction:column;align-items:flex-start;"]);

var MessageBox = _styledComponents["default"].span.withConfig({
  displayName: "SingleInputForm__MessageBox",
  componentId: "m9fk5y-2"
})(["font-size:12px;line-height:18px;color:", ";opacity:", ";transition:0.25s opactity linear;"], function (props) {
  return props.error ? _color.red.z600 : _color.green.z600;
}, function (props) {
  return props.visible ? 1 : 0;
});

var Submit = (0, _styledComponents["default"])(_Button["default"]).withConfig({
  displayName: "SingleInputForm__Submit",
  componentId: "m9fk5y-3"
})(["border-bottom-left-radius:0;border-top-left-radius:0;"]);

var StyledInput = _styledComponents["default"].input.withConfig({
  displayName: "SingleInputForm__StyledInput",
  componentId: "m9fk5y-4"
})(["flex-grow:1;padding:1.3rem 1.2rem 1.3rem 1.2rem;background:", ";border:0.1rem solid;border-top-color:", ";border-left-color:", ";border-bottom-color:", ";border-right-width:0;font-size:18px;line-height:26px;outline:none;box-sizing:border-box;border-radius:", ";color:", ";width:100%;border-bottom-right-radius:0;border-top-right-radius:0;", ""], _color.white, _color.grey.z300, _color.grey.z300, _color.grey.z300, _misc["default"].radius, _color.black, function (props) {
  return props.error && (0, _styledComponents.css)(["border-top-color:", ";border-left-color:", ";border-bottom-color:", ";"], _color.red.z500, _color.red.z500, _color.red.z500);
});

var SingleInputForm = function SingleInputForm(props) {
  var inputLabel = props.inputLabel,
      inputType = props.inputType,
      btnColor = props.btnColor,
      btnLabel = props.btnLabel,
      icon = props.icon,
      loading = props.loading;
  return _react["default"].createElement(Form.wrapper, null, _react["default"].createElement(Form, (0, _extends2["default"])({}, props, {
    noValidate: true
  }), _react["default"].createElement(StyledInput, {
    placeholder: inputLabel,
    type: inputType,
    fullWidth: true,
    disabled: loading,
    error: props.error,
    required: true
  }), _react["default"].createElement(Submit, (0, _extends2["default"])({
    btnColor: btnColor,
    icon: icon,
    loading: loading
  }, props.additionalBtnProps), btnLabel)), _react["default"].createElement(MessageBox, {
    error: props.error,
    visible: (props.error || props.success) && !props.loading
  }, props.message));
};

SingleInputForm.propTypes = {
  action: _propTypes["default"].string,
  onSubmit: _propTypes["default"].func,
  loading: _propTypes["default"].bool,
  error: _propTypes["default"].bool,
  success: _propTypes["default"].bool,
  message: _propTypes["default"].string,
  inputLabel: _propTypes["default"].string.isRequired,
  inputValue: _propTypes["default"].string,
  inputType: _propTypes["default"].string.isRequired,
  icon: _propTypes["default"].string,

  /** color of button, should be one of primary colors */
  btnColor: _propTypes["default"].oneOf(["red", "green", "blue", "yellow", "purple"]),
  btnLabel: _propTypes["default"].string,
  additionalBtnProps: _propTypes["default"].shape
};
SingleInputForm.defaultProps = {
  action: "#",
  onSubmit: _lodashEs.noop,
  loading: false,
  error: false,
  success: false,
  errorMessage: "",
  inputValue: "",
  inputType: "text",
  btnColor: "red"
};
var _default = SingleInputForm;
exports["default"] = _default;