"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _color = require("../tokens/color");

var _misc = _interopRequireDefault(require("../tokens/misc"));

var _OnClickOutside = _interopRequireDefault(require("../HOC/OnClickOutside"));

var _lodashEs = require("lodash-es");

var LanguageDropdown = function LanguageDropdown(props) {
  var _props$lang = props.lang,
      lang = _props$lang === void 0 ? "" : _props$lang,
      _props$value = props.value,
      value = _props$value === void 0 ? "," : _props$value,
      _props$onSelect = props.onSelect,
      onSelect = _props$onSelect === void 0 ? _lodashEs.noop : _props$onSelect,
      _props$languages = props.languages,
      languages = _props$languages === void 0 ? [] : _props$languages;

  var _useState = (0, _react.useState)(lang),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      label = _useState2[0],
      setLabel = _useState2[1];

  var _useState3 = (0, _react.useState)(value),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      langValue = _useState4[0],
      setlangValue = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      visible = _useState6[0],
      setVisible = _useState6[1];

  var closeDropdown = function closeDropdown() {
    return setVisible(false);
  };

  var toggleDropdown = function toggleDropdown() {
    return setVisible(!visible);
  };

  var handleSelect = function handleSelect(name, value) {
    setLabel(name);
    setlangValue(value);
    onSelect(value);
  };

  return _react["default"].createElement(_OnClickOutside["default"], {
    onClickOutside: closeDropdown
  }, _react["default"].createElement(LanguageDropdown.Wrapper, {
    onClick: toggleDropdown,
    tabIndex: "0",
    "aria-labelledby": "language-dropdown-label"
  }, _react["default"].createElement(LanguageDropdown.ariaLabel, {
    id: "language-dropdown-label"
  }, "Select Language"), _react["default"].createElement(LanguageDropdown.Menu, {
    visible: visible,
    tabIndex: "-1",
    "aria-activedescendant": "lang-active"
  }, _react["default"].createElement(LanguageDropdown.Arrow, {
    visible: visible
  }), _react["default"].createElement(LanguageDropdown.LanguageContainer, null, visible && languages.map(function (language) {
    return _react["default"].createElement(Language, {
      name: language.name,
      value: language.value,
      key: language.value,
      onSelect: handleSelect,
      selected: language.value == langValue
    });
  }))), _react["default"].createElement(LanguageDropdown.Head, null, _react["default"].createElement(_Icon["default"], {
    name: "google-fill",
    size: 15
  }), _react["default"].createElement(LanguageDropdown.Label, null, label))));
};

var Language = function Language(props) {
  var name = props.name,
      value = props.value,
      onSelect = props.onSelect,
      _props$selected = props.selected,
      selected = _props$selected === void 0 ? false : _props$selected;

  var handleSelect = function handleSelect() {
    return onSelect(name, value);
  };

  return _react["default"].createElement(Language.Wrapper, {
    onClick: handleSelect,
    isSelected: selected,
    id: selected ? "lang-active" : "lang-" + value
  }, name);
};

Language.propTypes = {
  name: _propTypes["default"].string,
  value: _propTypes["default"].string,
  onSelect: _propTypes["default"].func,
  selected: _propTypes["default"].bool
};
Language.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "LanguageDropdown__Wrapper",
  componentId: "sc-1hbrfk5-0"
})(["padding:0.6rem 0.5rem;min-width:10rem;:hover{background:", ";}cursor:pointer;", ""], _color.grey.z100, function (props) {
  return props.isSelected && (0, _styledComponents.css)(["background:", ";"], _color.blue.z100);
});
LanguageDropdown.ariaLabel = _styledComponents["default"].label.withConfig({
  displayName: "LanguageDropdown__ariaLabel",
  componentId: "sc-1hbrfk5-1"
})(["display:none;"]);
LanguageDropdown.propTypes = {
  lang: _propTypes["default"].string,
  value: _propTypes["default"].string,
  onSelect: _propTypes["default"].func,
  languages: _propTypes["default"].array
};
LanguageDropdown.LanguageContainer = _styledComponents["default"].section.withConfig({
  displayName: "LanguageDropdown__LanguageContainer",
  componentId: "sc-1hbrfk5-2"
})(["display:flex;flex-direction:column;"]);
LanguageDropdown.Arrow = _styledComponents["default"].span.withConfig({
  displayName: "LanguageDropdown__Arrow",
  componentId: "sc-1hbrfk5-3"
})(["display:", ";position:absolute;bottom:-1rem;left:3.1rem;width:2.1rem;height:2.3rem;transform:rotate(45deg);border-radius:2.2rem 0 0.4rem 0;background:#fff;"], function (props) {
  return props.visible ? "block" : "none";
});
LanguageDropdown.Menu = _styledComponents["default"].div.withConfig({
  displayName: "LanguageDropdown__Menu",
  componentId: "sc-1hbrfk5-4"
})(["position:absolute;opacity:", ";bottom:4rem;width:", ";height:", ";background-color:#fff;box-shadow:0.1rem 4rem 4rem rgba(0,0,0,0.15);border-radius:", ";padding:", ";cursor:default;transform-origin:0 100%;transition-property:transform,opacity,padding;will-change:transform,opacity,padding;transition-duration:", ";"], function (props) {
  return props.visible ? 1 : 0;
}, function (props) {
  return props.visible ? "max-content" : 0;
}, function (props) {
  return props.visible ? "auto" : 0;
}, _misc["default"].radius, function (props) {
  return props.visible ? "1rem 1.4rem 1.4rem 1.4rem" : 0;
}, _misc["default"].animationDuration);
LanguageDropdown.Head = _styledComponents["default"].div.withConfig({
  displayName: "LanguageDropdown__Head",
  componentId: "sc-1hbrfk5-5"
})(["display:flex;align-items:center;"]);
LanguageDropdown.Label = _styledComponents["default"].span.withConfig({
  displayName: "LanguageDropdown__Label",
  componentId: "sc-1hbrfk5-6"
})(["font-size:1.8rem;line-height:2rem;color:", ";margin-left:0.8rem;margin-top:0.2rem;font-weight:400;"], _color.black);
LanguageDropdown.Wrapper = _styledComponents["default"].div.withConfig({
  displayName: "LanguageDropdown__Wrapper",
  componentId: "sc-1hbrfk5-7"
})(["position:relative;cursor:pointer;min-width:10rem;width:max-content;"]);
var _default = LanguageDropdown;
exports["default"] = _default;