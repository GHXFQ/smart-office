"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _lodashEs = require("lodash-es");

var _inputHelper = require("../inputHelper");

var _misc = _interopRequireDefault(require("../../tokens/misc"));

/* eslint-disable no-unused-vars */
// libraries
// helpers
var Textarea = function Textarea(props) {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      focused = _useState2[0],
      toggleFocus = _useState2[1];

  var _useState3 = (0, _react.useState)(props.value),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      value = _useState4[0],
      valueChange = _useState4[1];

  var _useState5 = (0, _react.useState)(""),
      _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
      errMsg = _useState6[0],
      setErrMsg = _useState6[1];

  var onFocusToggle = function onFocusToggle(_) {
    toggleFocus(!focused);
  };

  var state = (0, _inputHelper.getState)(props, focused, errMsg);
  var helperTxt = (0, _inputHelper.getHelperText)(props.helperText, errMsg);
  var textAreaProps = {
    resize: props.resize,
    width: props.width,
    icon: props.icon,
    disabled: props.disabled,
    fullWidth: props.fullWidth
  };
  return _react["default"].createElement(Textarea.Wrapper, {
    onFocus: onFocusToggle,
    onBlur: (0, _inputHelper.onBlurred)(props, valueChange, setErrMsg, onFocusToggle),
    onChange: (0, _inputHelper.onValueChange)(props, valueChange, setErrMsg),
    fullWidth: props.fullWidth
  }, _react["default"].createElement(Textarea.Element, (0, _extends2["default"])({}, textAreaProps, {
    value: value,
    state: state
  })), props.disabled ? _react["default"].createElement(Textarea.LabelDisabled, {
    showLbl: true,
    state: state
  }, props.label) : _react["default"].createElement(Textarea.Label, {
    showLbl: focused || !!value,
    state: state
  }, props.label), helperTxt && _react["default"].createElement(Textarea.Helper, {
    state: state
  }, helperTxt));
};

var getResize = function getResize(props) {
  return props.resize;
};

Textarea.Helper = _styledComponents["default"].div.withConfig({
  displayName: "Textarea__Helper",
  componentId: "v8d41j-0"
})(["height:13px;color:", ";font-size:11px;line-height:13px;margin-top:5px;"], (0, _inputHelper.getAttributes)("helperColor"));
Textarea.Wrapper = _styledComponents["default"].section.withConfig({
  displayName: "Textarea__Wrapper",
  componentId: "v8d41j-1"
})(["position:relative;width:", ";"], function (props) {
  return props.fullWidth ? "100%" : "auto";
});
Textarea.Label = _styledComponents["default"].label.withConfig({
  displayName: "Textarea__Label",
  componentId: "v8d41j-2"
})(["position:absolute;pointer-events:none;transition:0.2s ease all;color:", ";top:", ";left:", ";font-size:", ";background:", ";padding:", ";"], (0, _inputHelper.getAttributes)("placeholder"), (0, _inputHelper.getLabelAttr)("top"), (0, _inputHelper.getLabelAttr)("left"), (0, _inputHelper.getLabelAttr)("fontSize"), (0, _inputHelper.getLabelAttr)("background"), (0, _inputHelper.getLabelAttr)("padding"));
Textarea.LabelDisabled = _styledComponents["default"].label.withConfig({
  displayName: "Textarea__LabelDisabled",
  componentId: "v8d41j-3"
})(["position:absolute;pointer-events:none;color:", ";top:", ";left:", ";font-size:", ";background:", ";padding:", ";"], (0, _inputHelper.getAttributes)("placeholder"), (0, _inputHelper.getLabelAttr)("top"), (0, _inputHelper.getLabelAttr)("left"), (0, _inputHelper.getLabelAttr)("fontSize"), (0, _inputHelper.getLabelAttr)("labelBackground"), (0, _inputHelper.getLabelAttr)("padding"));
Textarea.Element = _styledComponents["default"].textarea.withConfig({
  displayName: "Textarea__Element",
  componentId: "v8d41j-4"
})(["padding:", ";background:", ";border:", " ", ";font-size:", ";width:", ";outline:none;&::-webkit-input-placeholder{color:#a9a9a9;}box-sizing:border-box;border-radius:", ";resize:", ";color:", ";"], (0, _inputHelper.getAttributes)("padding"), (0, _inputHelper.getAttributes)("background"), (0, _inputHelper.getAttributes)("borderWidth"), (0, _inputHelper.getAttributes)("borderColor"), (0, _inputHelper.getAttributes)("fontSize"), (0, _inputHelper.getAttributes)("width"), _misc["default"].radius, getResize, (0, _inputHelper.getAttributes)("text"));
Textarea.propTypes = {
  label: _propTypes["default"].string,
  value: _propTypes["default"].string,
  width: _propTypes["default"].string,
  onChange: _propTypes["default"].func,
  onBlur: _propTypes["default"].func,
  disabled: _propTypes["default"].bool,
  rows: _propTypes["default"].number,
  cols: _propTypes["default"].number,
  resize: _propTypes["default"].string,
  helperText: _propTypes["default"].string,
  icon: _propTypes["default"].string,
  fullWidth: _propTypes["default"].bool
};
Textarea.defaultProps = {
  color: "white",
  disabled: false,
  value: "",
  onChange: _lodashEs.noop,
  onBlur: _lodashEs.noop,
  helperText: ""
};
var _default = Textarea;
exports["default"] = _default;