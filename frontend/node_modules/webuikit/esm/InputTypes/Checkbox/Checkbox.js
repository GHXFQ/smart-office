"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodashEs = require("lodash-es");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _checkboxHelpers = require("./checkboxHelpers");

// libraries
// helpers
var Checkbox = function Checkbox(props) {
  var checkboxType = (0, _checkboxHelpers.getType)(props.disabled, props.solid);

  var _useState = (0, _react.useState)(props.defaultChecked || props.checked),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isChecked = _useState2[0],
      toggleVal = _useState2[1]; // eslint-disable-next-line no-unused-vars


  var onToggle = function onToggle(_) {
    toggleVal(!isChecked);
  };

  (0, _react.useEffect)(function () {
    props.onChange(isChecked);
  });
  return _react["default"].createElement(Checkbox.Label, null, _react["default"].createElement(Checkbox.Element, (0, _extends2["default"])({}, props, {
    cbType: checkboxType,
    type: "checkbox",
    onClick: onToggle,
    checked: isChecked
  })), props.label);
};

Checkbox.Label = _styledComponents["default"].label.withConfig({
  displayName: "Checkbox__Label",
  componentId: "zmssyl-0"
})(["font-size:14px;line-height:1.2;color:#1c1c1c;height:18px;cursor:pointer;display:flex;align-items:center;justify-content:start;height:100%;width:max-content;"]);
Checkbox.Element = _styledComponents["default"].input.withConfig({
  displayName: "Checkbox__Element",
  componentId: "zmssyl-1"
})(["appearance:none;cursor:pointer;outline:0;border-radius:4px;margin-right:8px;width:18px;height:18px;background:#fff;border:2px solid ", ";box-sizing:border-box;position:relative;&:hover{border:2px solid ", ";}transition:all 0.4s;&:checked::after{position:absolute;top:0.03rem;left:0.4rem;width:0.55rem;height:1rem;content:\"\";border-color:", ";border-style:solid;border-top:0;border-right-width:2px;border-bottom-width:2px;border-left:0;transform:rotate(48deg);}&:checked{border:2px solid ", ";background:", ";}"], (0, _checkboxHelpers.getAttributes)("borderColor"), (0, _checkboxHelpers.getAttributes)("hoverBorderColor"), (0, _checkboxHelpers.getClickedAttributes)("tickColor"), (0, _checkboxHelpers.getClickedAttributes)("borderColor"), (0, _checkboxHelpers.getClickedAttributes)("background"));
Checkbox.propTypes = {
  label: _propTypes["default"].string.isRequired,
  onChange: _propTypes["default"].func,
  checked: _propTypes["default"].bool,
  disabled: _propTypes["default"].bool,
  solid: _propTypes["default"].bool,
  defaultChecked: _propTypes["default"].bool
};
Checkbox.defaultProps = {
  disabled: false,
  onChange: _lodashEs.noop,
  checked: false,
  solid: true
};
var _default = Checkbox;
exports["default"] = _default;