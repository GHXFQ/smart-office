"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.REMOVE_BOTTOM_TOAST = exports.ADD_TOP_TOAST = exports.REMOVE_TOP_TOAST = exports.ADD_BOTTOM_TOAST = exports.ToastProvider = exports.ToastContext = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

/* eslint-disable indent */
var ADD_TOP_TOAST = function ADD_TOP_TOAST(toast) {
  return {
    type: "add-toast-top",
    toast: toast
  };
};

exports.ADD_TOP_TOAST = ADD_TOP_TOAST;

var ADD_BOTTOM_TOAST = function ADD_BOTTOM_TOAST(toast) {
  return {
    type: "add-toast-bottom",
    toast: toast
  };
};

exports.ADD_BOTTOM_TOAST = ADD_BOTTOM_TOAST;

var REMOVE_TOP_TOAST = function REMOVE_TOP_TOAST(toast) {
  return {
    type: "remove-toast-top",
    toast: toast
  };
};

exports.REMOVE_TOP_TOAST = REMOVE_TOP_TOAST;

var REMOVE_BOTTOM_TOAST = function REMOVE_BOTTOM_TOAST(toast) {
  return {
    type: "remove-toast-bottom",
    toast: toast
  };
};

exports.REMOVE_BOTTOM_TOAST = REMOVE_BOTTOM_TOAST;
var ToastContext = (0, _react.createContext)();
exports.ToastContext = ToastContext;
var initialState = {
  topToasts: [],
  bottomToasts: []
};

var reducer = function reducer(state, action) {
  switch (action.type) {
    case "add-toast-top":
      return (0, _objectSpread2["default"])({}, state, {
        topToasts: [].concat((0, _toConsumableArray2["default"])(state.topToasts), [action.toast])
      });

    case "add-toast-bottom":
      return (0, _objectSpread2["default"])({}, state, {
        bottomToasts: [].concat((0, _toConsumableArray2["default"])(state.bottomToasts), [action.toast])
      });

    case "remove-toast-top":
      return (0, _objectSpread2["default"])({}, state, {
        topToasts: state.topToasts.filter(function (t) {
          return t != action.toast;
        })
      });

    case "remove-toast-bottom":
      return (0, _objectSpread2["default"])({}, state, {
        bottomToasts: state.bottomToasts.filter(function (t) {
          return t != action.toast;
        })
      });
  }
};

var ToastProvider = function ToastProvider(_ref) {
  var children = _ref.children;

  var _useReducer = (0, _react.useReducer)(reducer, initialState),
      _useReducer2 = (0, _slicedToArray2["default"])(_useReducer, 2),
      state = _useReducer2[0],
      dispatch = _useReducer2[1];

  return _react["default"].createElement(ToastContext.Provider, {
    value: {
      state: state,
      dispatch: dispatch
    }
  }, children);
};

exports.ToastProvider = ToastProvider;
ToastProvider.propTypes = {
  children: _propTypes["default"].node
};