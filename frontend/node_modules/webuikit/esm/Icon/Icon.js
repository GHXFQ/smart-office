"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _color = require("../tokens/color");

var _svgs = _interopRequireDefault(require("./svgs"));

var _lodashEs = require("lodash-es");

var _commonHelper = require("../helpers/commonHelper");

var _propTypes = _interopRequireDefault(require("prop-types"));

var SVG = _styledComponents["default"].svg.withConfig({
  displayName: "Icon__SVG",
  componentId: "sc-1hk4n22-0"
})(["", ""], _commonHelper.svgStyle);

var Icon = function Icon(props) {
  var name = props.name,
      _props$color = props.color,
      color = _props$color === void 0 ? _color.black : _props$color,
      _props$size = props.size,
      size = _props$size === void 0 ? 20 : _props$size,
      _props$showPointer = props.showPointer,
      showPointer = _props$showPointer === void 0 ? false : _props$showPointer,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? _lodashEs.noop : _props$onClick,
      _props$className = props.className,
      className = _props$className === void 0 ? "" : _props$className;
  return _react["default"].createElement(Icon.Element, (0, _extends2["default"])({
    showPointer: showPointer,
    onClick: onClick,
    className: className
  }, props), _react["default"].createElement(SVG, {
    xmlns: "http://www.w3.org/2000/svg",
    fill: color,
    width: size,
    height: size,
    viewBox: "0 0 20 20" // don't change this

  }, (0, _svgs["default"])(name)));
};

Icon.Element = _styledComponents["default"].i.withConfig({
  displayName: "Icon__Element",
  componentId: "sc-1hk4n22-1"
})(["", ""], _commonHelper.iconStyle);
Icon.propTypes = {
  /** The color prop helps user to set a custom color of the icon. */
  color: _propTypes["default"].string,

  /** Defines the icon to be shown. One icon cannot be shown unless its name prop is set */
  name: _propTypes["default"].string.isRequired,

  /** Size prop overrides the default size of the icon. It helps user to set a custom size of the icon. */
  size: _propTypes["default"].number,

  /** Callback function to be triggered when user clicks on an icon. */
  onClick: _propTypes["default"].func,

  /**  Shows cursor as pointer on hover if set to true. By default it does not show pointer; */
  showPointer: _propTypes["default"].bool,
  className: _propTypes["default"].string
};
var _default = Icon;
exports["default"] = _default;