{"version":3,"sources":["webpack:///./src/api/calendar.js","webpack:///./src/views/calendar/Index.vue","webpack:///./src/views/calendar/Index.vue?8ad7","webpack:///./node_modules/core-js/modules/es.iterator.filter.js","webpack:///./src/views/calendar/Index.vue?5721"],"names":["getMonthlyEvents","year","month","request","url","method","params","getWeeklyEvents","date","getDailyEvents","createEvent","data","title","start","end","location","description","type","reminder","participants","updateEvent","id","deleteCalendarEvent","getCalendarEvent","class","_createElementBlock","key","$setup","internalRefreshKey","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_el_button","onClick","today","_cache","_hoisted_3","icon","ArrowLeft","plain","prev","_hoisted_4","_toDisplayString","currentDateLabel","ArrowRight","next","_hoisted_5","_component_el_radio_group","calendarView","$event","size","_component_el_radio_button","value","_hoisted_6","e","showAddEventDialog","_component_el_icon","_component_Plus","_hoisted_7","_hoisted_8","_Fragment","_renderList","weekDays","day","index","_hoisted_9","days","_normalizeClass","isToday","isCurrentMonth","events","length","selectDay","_hoisted_11","_hoisted_12","slice","event","eventIndex","onMouseenter","showEventPreview","onMouseleave","args","hideEventPreview","_withModifiers","showEventDetails","style","_normalizeStyle","background","eventTypeColor","showAllEvents","_hoisted_14","eventPreview","visible","_hoisted_15","_hoisted_16","formatEventTime","_hoisted_17","_hoisted_18","_component_el_dialog","allEventsDialog","width","onClose","allEventsForDialog","_hoisted_19","_createBlock","_component_el_timeline","idx","_component_el_timeline_item","color","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","weekDates","_hoisted_26","dayName","_hoisted_27","_hoisted_28","_hoisted_29","hour","_hoisted_30","dayIndex","_hoisted_31","allDayEvents","_hoisted_33","eventGroups","eventGroup","groupIndex","left","calcEventTop","calcEventHeight","draggable","onDragstart","dragStart","onDragend","dragEnd","_hoisted_35","_hoisted_36","onMousedown","startResize","_hoisted_38","_hoisted_39","_hoisted_40","currentDate","toLocaleDateString","weekday","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_46","dayEventGroups","_hoisted_48","_hoisted_49","_hoisted_50","addEventDialogVisible","append-to-body","destroy-on-close","close-on-click-modal","footer","_withCtx","_hoisted_52","addEvent","_component_el_form","model","newEvent","label-width","rules","ref","_component_el_form_item","label","prop","required","_component_el_input","placeholder","_component_el_date_picker","format","value-format","onChange","handleStartTimeChange","_component_el_select","_component_el_option","rows","eventDetailsDialogVisible","selectedEvent","_hoisted_59","showEditEventDialog","deleteEvent","_hoisted_53","_hoisted_54","formatEventDateTime","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","formatReminder","editEventDialogVisible","_hoisted_60","saveEditEvent","editingEvent","name","setup","route","useRoute","Date","addEventFormRef","editEventFormRef","message","trigger","computed","options","getFullYear","getMonth","Math","ceil","getDate","getFirstDayOfMonth","getDay","result","firstDay","daysInMonth","getDaysInMonth","daysInLastMonth","i","push","isSameDay","getDayEvents","remaining","setDate","dayEvents","organizeOverlappingEvents","fullDate","sortedEvents","sort","a","b","getTime","groups","forEach","placed","group","lastEvent","filter","isLoading","lastRequestTime","retryCount","maxRetries","loadEvents","async","isComponentMounted","currentTime","now","console","log","loadMonthlyEvents","loadWeeklyEvents","loadDailyEvents","err","error","setTimeout","ElMessage","response","success","eventData","parseEventsData","Error","formatDateString","map","item","creator","creator_name","participants_info","toString","padStart","setMonth","preventDefault","stopPropagation","toISOString","oneHourLater","formatDateForPicker","validate","valid","startTime","endTime","isNaN","warning","startDate","toDateString","endDate","userId","Number","localStorage","getItem","trim","info","_response$data","ElMessageBox","confirm","confirmButtonText","cancelButtonText","deleteCalendarEventApi","_response$data2","status","_error$response","_error$response$data","errorMsg","date1","date2","hours","getHours","minutes","getMinutes","duration","max","minute","dateObj","formatted","blue","orange","green","red","purple","default","evt","position","clientX","top","clientY","zIndex","draggedEvent","resizingEvent","initialMouseY","initialEventHeight","dragImage","document","createElement","textContent","className","body","appendChild","dataTransfer","setDragImage","setData","JSON","stringify","querySelectorAll","container","addEventListener","dragOver","drop","removeChild","currentTarget","containerRect","getBoundingClientRect","offsetY","quarterHours","floor","previewElement","querySelector","classList","contains","height","innerHTML","el","remove","newStartDate","setHours","timeDiff","newEndDate","removeEventListener","handleResize","endResize","deltaY","newHeight","durationMinutes","newEndTime","eventElement","target","closest","timeElement","forceRefresh","overlays","parentNode","overflow","pointerEvents","dropdowns","nextTick","interactiveElements","hasAttribute","removeAttribute","opacity","visibility","display","addButton","catch","watch","fullPath","newPath","newVal","proxy","getCurrentInstance","emitter","onMounted","observer","IntersectionObserver","entries","entry","isIntersecting","calendarEl","observe","on","onUnmounted","off","onActivated","onBeforeUnmount","Plus","__exports__","render","$","call","aCallable","anObject","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","IS_PURE","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","filterWithoutClosingOnEarlyError","TypeError","IteratorProxy","done","iterator","this","predicate","counter","proto","real","forced"],"mappings":"mIAAA,8PAQO,SAASA,EAAiBC,EAAMC,GACrC,OAAOC,eAAQ,CACbC,IAAK,gCACLC,OAAQ,MACRC,OAAQ,CAAEL,OAAMC,WASb,SAASK,EAAgBC,GAC9B,OAAOL,eAAQ,CACbC,IAAK,+BACLC,OAAQ,MACRC,OAAQ,CAAEE,UASP,SAASC,EAAeD,GAC7B,OAAOL,eAAQ,CACbC,IAAK,8BACLC,OAAQ,MACRC,OAAQ,CAAEE,UASP,SAASE,EAAYC,GAC1B,MAAM,MAAEC,EAAK,MAAEC,EAAK,IAAEC,EAAG,SAAEC,EAAQ,YAAEC,EAAW,KAAEC,EAAI,SAAEC,EAAQ,aAAEC,GAAiBR,EAEnF,OAAOR,eAAQ,CACbC,IAAK,wBACLC,OAAQ,OACRM,KAAM,CAAEC,QAAOC,QAAOC,MAAKC,WAAUC,cAAaC,OAAMC,WAAUC,kBAU/D,SAASC,EAAYC,EAAIV,GAC9B,MAAM,MAAEC,EAAK,MAAEC,EAAK,IAAEC,EAAG,SAAEC,EAAQ,YAAEC,EAAW,KAAEC,EAAI,SAAEC,EAAQ,aAAEC,GAAiBR,EAEnF,OAAOR,eAAQ,CACbC,IAAK,wBAAwBiB,KAC7BhB,OAAQ,MACRM,KAAM,CAAEC,QAAOC,QAAOC,MAAKC,WAAUC,cAAaC,OAAMC,WAAUC,kBAS/D,SAASG,EAAoBD,GAClC,OAAOlB,eAAQ,CACbC,IAAK,wBAAwBiB,KAC7BhB,OAAQ,WASL,SAASkB,EAAiBF,GAC7B,OAAOlB,eAAQ,CACXC,IAAK,wBAAwBiB,KAC7BhB,OAAQ,U,6FC1FPmB,MAAM,mB,GACJA,MAAM,iB,GAEJA,MAAM,Y,GAEHA,MAAM,gB,GAIXA,MAAM,iB,GAONA,MAAM,mB,SAQRA,MAAM,iB,GAEJA,MAAM,qB,GAKNA,MAAM,iB,iBAYFA,MAAM,c,GACNA,MAAM,mB,8CAyBRA,MAAM,uB,GACNA,MAAM,sB,SACNA,MAAM,0B,SAGNA,MAAM,sB,aAaFA,MAAM,mB,GACNA,MAAM,kB,SACNA,MAAM,sB,SAGNA,MAAM,kB,SAUdA,MAAM,iB,GACJA,MAAM,e,GAQFA,MAAM,iB,GACNA,MAAM,iB,GAIVA,MAAM,a,GACJA,MAAM,mB,GAMNA,MAAM,yB,GAOFA,MAAM,uB,gCAWDA,MAAM,uB,8CA6BPA,MAAM,oB,GACNA,MAAM,mB,2BAYlBA,MAAM,qB,GACJA,MAAM,c,GACJA,MAAM,Y,GAKRA,MAAM,Y,GACJA,MAAM,kB,GAMNA,MAAM,wB,GAEJA,MAAM,sB,gCAWDA,MAAM,uB,8CA+BPA,MAAM,mB,GACNA,MAAM,kB,SACNA,MAAM,sB,uBA0EZA,MAAM,iB,IAcRA,MAAM,iB,IACJA,MAAM,qB,UAINA,MAAM,qB,UAINA,MAAM,qB,IAEJA,MAAM,qB,IAERA,MAAM,qB,IAMNA,MAAM,iB,IAqENA,MAAM,iB,wtBArajBC,gCA2aM,OA3aDD,MAAM,qBAAsBE,IAAKC,GAAAC,oB,CAEpCC,gCAqBM,MArBNC,EAqBM,CApBJD,gCAOM,MAPNE,EAOM,CANJC,yBAAuDC,GAAA,CAA5ChB,KAAK,UAAWiB,QAAOP,GAAAQ,O,8BAAO,IAAEC,EAAA,MAAAA,EAAA,K,6BAAF,S,oBACzCP,gCAIM,MAJNQ,EAIM,CAHJL,yBAA6DC,GAAA,CAAjDK,KAAMX,GAAAY,UAAWC,MAAA,GAAON,QAAOP,GAAAc,M,2BAC3CZ,gCAAwD,OAAxDa,EAAwDC,6BAA1BhB,GAAAiB,kBAAgB,GAC9CZ,yBAA8DC,GAAA,CAAlDK,KAAMX,GAAAkB,WAAYL,MAAA,GAAON,QAAOP,GAAAmB,M,+BAGhDjB,gCAMM,MANNkB,EAMM,CALJf,yBAIiBgB,GAAA,C,WAJQrB,GAAAsB,a,qCAAAtB,GAAAsB,aAAYC,GAAEC,KAAK,S,8BAC1C,IAAkD,CAAlDnB,yBAAkDoB,GAAA,CAAjCC,MAAM,SAAO,C,6BAAC,IAACjB,EAAA,MAAAA,EAAA,K,6BAAD,Q,MAC/BJ,yBAAiDoB,GAAA,CAAhCC,MAAM,QAAM,C,6BAAC,IAACjB,EAAA,MAAAA,EAAA,K,6BAAD,Q,MAC9BJ,yBAAgDoB,GAAA,CAA/BC,MAAM,OAAK,C,6BAAC,IAACjB,EAAA,MAAAA,EAAA,K,6BAAD,Q,iCAGjCP,gCAIM,MAJNyB,EAIM,CAHJtB,yBAEYC,GAAA,CAFDhB,KAAK,UAAWiB,QAAKE,EAAA,KAAAA,EAAA,GAAEmB,GAAK5B,GAAA6B,mBAAmBD,K,8BACxD,IAA2B,CAA3BvB,yBAA2ByB,GAAA,M,6BAAlB,IAAQ,CAARzB,yBAAQ0B,M,iDAAU,a,UAMiB,UAAjB/B,GAAAsB,c,yBAAjCxB,gCA2EM,MA3ENkC,EA2EM,CAzEJ9B,gCAEM,MAFN+B,EAEM,E,2BADJnC,gCAAkFoC,cAAA,KAAAC,wBAAtCnC,GAAAoC,SAAQ,CAAvBC,EAAKC,K,yBAAlCxC,gCAAkF,OAA7ED,MAAM,UAA4CE,IAAKuC,G,6BAAUD,GAAG,K,QAI3EnC,gCAmCM,MAnCNqC,EAmCM,E,2BAlCJzC,gCAiCMoC,cAAA,KAAAC,wBAhCmBnC,GAAAwC,KAAI,CAAnBH,EAAKC,K,yBADfxC,gCAiCM,OA/BHC,IAAKuC,EACNzC,MAAK4C,4BAAA,CAAC,eAAc,C,MACYJ,EAAIK,Q,eAAsCL,EAAIM,e,aAA0CN,EAAIO,QAAUP,EAAIO,OAAOC,OAAM,KAKtJtC,QAAKgB,GAAEvB,GAAA8C,UAAUT,I,CAElBnC,gCAA4C,MAA5C6C,EAA4C/B,6BAAjBqB,EAAIxD,MAAI,GACnCqB,gCAoBM,MApBN8C,EAoBM,E,2BAnBJlD,gCAWMoC,cAAA,KAAAC,wBAV0BE,EAAIO,OAAOK,MAAM,EAAG,GAAJ,CAAtCC,EAAOC,K,yBADjBrD,gCAWM,OATHC,IAAKoD,EACNtD,MAAK4C,4BAAA,CAAC,aAAY,SACCS,EAAM5D,OACxB8D,aAAU7B,GAAEvB,GAAAqD,iBAAiBH,EAAO3B,GACpC+B,aAAU7C,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAAwD,kBAAAxD,GAAAwD,oBAAAD,IACZhD,QAAKkD,2BAAAlC,GAAOvB,GAAA0D,iBAAiBR,GAAK,W,CAEnChD,gCAAmF,QAA7EL,MAAM,cAAe8D,MAAKC,4BAAA,CAAAC,WAAe7D,GAAA8D,eAAeZ,EAAM5D,S,qCAAe,IACnF0B,6BAAGkC,EAAMjE,OAAK,I,cAGRoD,EAAIO,QAAUP,EAAIO,OAAOC,OAAS,G,yBAD1C/C,gCAMM,O,MAJJD,MAAM,wBACLU,QAAKkD,2BAAAlC,GAAOvB,GAAA+D,cAAc1B,GAAG,WAC/B,SACMrB,6BAAGqB,EAAIO,OAAOC,QAAS,QAC9B,EAAAmB,I,0DAKKhE,GAAAiE,aAAaC,S,yBAAxBpE,gCASM,O,MAT2BD,MAAM,oBAAqB8D,MAAKC,4BAAE5D,GAAAiE,aAAaN,Q,CAC9EzD,gCAAqE,MAArEiE,EAAqEnD,6BAAjChB,GAAAiE,aAAaf,MAAMjE,OAAK,GAC5DiB,gCAA+E,MAA/EkE,EAA+EpD,6BAA5ChB,GAAAqE,gBAAgBrE,GAAAiE,aAAaf,QAAK,GAC3BlD,GAAAiE,aAAaf,MAAM9D,U,yBAA7DU,gCAEM,MAFNwE,EAEM,C,cADJpE,gCAA6B,KAA1BL,MAAM,iBAAe,U,6BAAK,IAACmB,6BAAGhB,GAAAiE,aAAaf,MAAM9D,UAAQ,M,uCAExBY,GAAAiE,aAAaf,MAAM7D,a,yBAAzDS,gCAEM,MAFNyE,EAEMvD,6BADDhB,GAAAiE,aAAaf,MAAM7D,aAAW,I,mFAIrCgB,yBAmBYmE,GAAA,C,WAnBQxE,GAAAyE,gBAAgBP,Q,qCAAhBlE,GAAAyE,gBAAgBP,QAAO3C,GAAGtC,MAAOe,GAAAyE,gBAAgBxF,MAAOyF,MAAM,QAASC,QAAKlE,EAAA,KAAAA,EAAA,GAAAc,GAAEvB,GAAAyE,gBAAgB5F,KAAO,O,8BACvH,IAAsD,CAAb,IAA9BmB,GAAA4E,mBAAmB/B,Q,yBAA9B/C,gCAAsD,MAAA+E,EAAV,U,yBAC5CC,yBAgBcC,GAAA,CAAAhF,IAAA,I,6BAdV,IAA0C,E,2BAD5CD,gCAcmBoC,cAAA,KAAAC,wBAbMnC,GAAA4E,mBAAkB,CAAjC1B,EAAO8B,K,yBADjBF,yBAcmBG,GAAA,CAZhBlF,IAAKiF,EACLE,MAAOlF,GAAA8D,eAAeZ,EAAM5D,O,8BAE7B,IAAoD,CAApDY,gCAAoD,MAApDiF,EAAoDnE,6BAApBkC,EAAMjE,OAAK,GAC3CiB,gCAA8D,MAA9DkF,EAA8DpE,6BAA/BhB,GAAAqE,gBAAgBnB,IAAK,GACdA,EAAM9D,U,yBAA5CU,gCAEM,MAFNuF,EAEM,C,cADJnF,gCAA6B,KAA1BL,MAAM,iBAAe,U,6BAAK,IAACmB,6BAAGkC,EAAM9D,UAAQ,M,uCAEf8D,EAAM7D,a,yBAAxCS,gCAEM,MAFNwF,EAEMtE,6BADDkC,EAAM7D,aAAW,I,uCAEtBgB,yBAAkFC,GAAA,CAAvEkB,KAAK,OAAOlC,KAAK,OAAQiB,QAAKgB,GAAEvB,GAAA0D,iBAAiBR,I,8BAAQ,IAAEzC,EAAA,MAAAA,EAAA,K,6BAAF,S,0IAO1B,SAAjBT,GAAAsB,c,yBAAjCxB,gCA8EM,MA9ENyF,EA8EM,CA7EJrF,gCAWM,MAXNsF,EAWM,C,cAVJtF,gCAAiC,OAA5BL,MAAM,iBAAe,W,2BAC1BC,gCAQMoC,cAAA,KAAAC,wBAPmBnC,GAAAyF,UAAS,CAAxBpD,EAAKC,K,yBADfxC,gCAQM,OANHC,IAAKuC,EACNzC,MAAK4C,4BAAA,CAAC,eAAc,OACDJ,EAAIK,Y,CAEvBxC,gCAAkD,MAAlDwF,EAAkD1E,6BAApBqB,EAAIsD,SAAO,GACzCzF,gCAA+C,MAA/C0F,EAA+C5E,6BAAjBqB,EAAIxD,MAAI,I,aAI1CqB,gCA+DM,MA/DN2F,EA+DM,CA9DJ3F,gCAIM,MAJN4F,EAIM,E,yBAHJhG,gCAEMoC,cAAA,KAAAC,wBAFc,GAAR4D,GAAZ7F,gCAEM,OAFmBH,IAAKgG,EAAMlG,MAAM,a,6BACrCkG,EAAO,GAAI,OAChB,I,OAGF7F,gCAuDM,MAvDN8F,EAuDM,E,2BAtDJlG,gCAmDMoC,cAAA,KAAAC,wBAlDsBnC,GAAAyF,UAAS,CAA3BpD,EAAK4D,K,yBADfnG,gCAmDM,OAjDHC,IAAKkG,EACNpG,MAAM,mB,CAGNK,gCAaM,MAbNgG,EAaM,E,2BAZJpG,gCAWMoC,cAAA,KAAAC,wBAV0BE,EAAI8D,aAAY,CAAtCjD,EAAOC,K,yBADjBrD,gCAWM,OATHC,IAAG,WAAeoD,EACnBtD,MAAK4C,4BAAA,CAAC,qBAAoB,SACPS,EAAM5D,OACxBiB,QAAKgB,GAAEvB,GAAA0D,iBAAiBR,GACxBE,aAAU7B,GAAEvB,GAAAqD,iBAAiBH,EAAO3B,GACpC+B,aAAU7C,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAAwD,kBAAAxD,GAAAwD,oBAAAD,K,CAEbrD,gCAAmF,QAA7EL,MAAM,cAAe8D,MAAKC,4BAAA,CAAAC,WAAe7D,GAAA8D,eAAeZ,EAAM5D,S,QACpEY,gCAA0D,OAA1DkG,EAA0DpF,6BAArBkC,EAAMjE,OAAK,I,4CAKpDa,gCA4BMoC,cAAA,KAAAC,wBA3B+BE,EAAIgE,YAAW,CAA1CC,EAAYC,K,yBADtBzG,gCA4BM,OA1BHC,IAAG,SAAawG,EACjB1G,MAAM,mBACL8D,MAAKC,4BAAA,CAAA4C,KAAUD,GAAc,IAAMlE,EAAIgE,YAAYxD,QAAM,I,UAA+CR,EAAIgE,YAAYxD,OAAM,O,6BAG/H/C,gCAoBMoC,cAAA,KAAAC,wBAnB0BmE,EAAU,CAAhCpD,EAAOC,K,yBADjBrD,gCAoBM,OAlBHC,IAAKoD,EACNtD,MAAK4C,4BAAA,CAAC,aAAY,SACCS,EAAM5D,OACxBqE,MAAKC,4BAAA,C,IAA2B5D,GAAAyG,aAAavD,GAAK,K,OAAoClD,GAAA0G,gBAAgBxD,GAAK,OAI3G3C,QAAKgB,GAAEvB,GAAA0D,iBAAiBR,GACxBE,aAAU7B,GAAEvB,GAAAqD,iBAAiBH,EAAO3B,GACpC+B,aAAU7C,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAAwD,kBAAAxD,GAAAwD,oBAAAD,IACboD,UAAU,OACTC,YAASrF,GAAEvB,GAAA6G,UAAUtF,EAAQ2B,GAC7B4D,UAAOrG,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAA+G,SAAA/G,GAAA+G,WAAAxD,K,CAEVrD,gCAAmF,QAA7EL,MAAM,cAAe8D,MAAKC,4BAAA,CAAAC,WAAe7D,GAAA8D,eAAeZ,EAAM5D,S,QACpEY,gCAAqD,MAArD8G,EAAqDhG,6BAApBkC,EAAMjE,OAAK,GAC5CiB,gCAA+D,MAA/D+G,EAA+DjG,6BAA/BhB,GAAAqE,gBAAgBnB,IAAK,GACrDhD,gCAAgF,OAA3EL,MAAM,uBAAwBqH,YAAS3F,GAAEvB,GAAAmH,YAAY5F,EAAQ2B,I,8FAWxB,QAAjBlD,GAAAsB,c,yBAArCxB,gCAoEM,MApENsH,EAoEM,CAnEJlH,gCAIM,MAJNmH,EAIM,CAHJnH,gCAEM,MAFNoH,EAEMtG,6BADDhB,GAAAuH,YAAYC,mBAAmB,QAAS,CAAVlJ,KAAA,UAAAC,MAAA,OAAA8D,IAAA,UAAAoF,QAAA,eAIrCvH,gCA4DM,MA5DNwH,EA4DM,CA3DJxH,gCAIM,MAJNyH,EAIM,E,yBAHJ7H,gCAEMoC,cAAA,KAAAC,wBAFc,GAAR4D,GAAZ7F,gCAEM,OAFmBH,IAAKgG,EAAMlG,MAAM,a,6BACrCkG,EAAO,GAAI,OAChB,I,OAGF7F,gCAoDM,MApDN0H,EAoDM,CAlDJ1H,gCAaM,MAbN2H,EAaM,E,2BAZJ/H,gCAWMoC,cAAA,KAAAC,wBAV0BnC,GAAAmG,aAAY,CAAlCjD,EAAOC,K,yBADjBrD,gCAWM,OATHC,IAAG,WAAeoD,EACnBtD,MAAK4C,4BAAA,CAAC,oBAAmB,SACNS,EAAM5D,OACxBiB,QAAKgB,GAAEvB,GAAA0D,iBAAiBR,GACxBE,aAAU7B,GAAEvB,GAAAqD,iBAAiBH,EAAO3B,GACpC+B,aAAU7C,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAAwD,kBAAAxD,GAAAwD,oBAAAD,K,CAEbrD,gCAAmF,QAA7EL,MAAM,cAAe8D,MAAKC,4BAAA,CAAAC,WAAe7D,GAAA8D,eAAeZ,EAAM5D,S,QACpEY,gCAA0D,OAA1D4H,EAA0D9G,6BAArBkC,EAAMjE,OAAK,I,4CAOpDa,gCA+BMoC,cAAA,KAAAC,wBA9B+BnC,GAAA+H,eAAc,CAAzCzB,EAAYC,K,yBADtBzG,gCA+BM,OA7BHC,IAAG,SAAawG,EACjB1G,MAAM,kBACL8D,MAAKC,4BAAA,CAAA4C,KAAUD,GAAc,IAAMvG,GAAA+H,eAAelF,QAAM,I,UAA6C7C,GAAA+H,eAAelF,OAAM,O,6BAG3H/C,gCAuBMoC,cAAA,KAAAC,wBAtB0BmE,EAAU,CAAhCpD,EAAOC,K,yBADjBrD,gCAuBM,OArBHC,IAAKoD,EACNtD,MAAK4C,4BAAA,CAAC,YAAW,SACES,EAAM5D,OACxBqE,MAAKC,4BAAA,C,IAAyB5D,GAAAyG,aAAavD,GAAK,K,OAAkClD,GAAA0G,gBAAgBxD,GAAK,OAIvG3C,QAAKgB,GAAEvB,GAAA0D,iBAAiBR,GACxBE,aAAU7B,GAAEvB,GAAAqD,iBAAiBH,EAAO3B,GACpC+B,aAAU7C,EAAA,KAAAA,EAAA,OAAA8C,IAAEvD,GAAAwD,kBAAAxD,GAAAwD,oBAAAD,IACboD,UAAU,OACTC,YAASrF,GAAEvB,GAAA6G,UAAUtF,EAAQ2B,GAC7B4D,UAAOrG,EAAA,MAAAA,EAAA,QAAA8C,IAAEvD,GAAA+G,SAAA/G,GAAA+G,WAAAxD,K,CAEVrD,gCAAmF,QAA7EL,MAAM,cAAe8D,MAAKC,4BAAA,CAAAC,WAAe7D,GAAA8D,eAAeZ,EAAM5D,S,QACpEY,gCAAoD,MAApD8H,EAAoDhH,6BAApBkC,EAAMjE,OAAK,GAC3CiB,gCAA8D,MAA9D+H,EAA8DjH,6BAA/BhB,GAAAqE,gBAAgBnB,IAAK,GACdA,EAAM9D,U,yBAA5CU,gCAEM,MAFNoI,EAEM,C,cADJhI,gCAA6B,KAA1BL,MAAM,iBAAe,U,6BAAK,IAACmB,6BAAGkC,EAAM9D,UAAQ,M,uCAEjDc,gCAAgF,OAA3EL,MAAM,uBAAwBqH,YAAS3F,GAAEvB,GAAAmH,YAAY5F,EAAQ2B,I,qFAQ5E7C,yBAoEYmE,GAAA,C,WAnEDxE,GAAAmI,sB,uCAAAnI,GAAAmI,sBAAqB5G,GAC9BtC,MAAM,OACNyF,MAAM,QACN7E,MAAM,kBACLuI,kBAAgB,EAChBC,oBAAkB,EAClBC,wBAAsB,G,CAuDZC,OAAMC,qBACf,IAGM,CAHNtI,gCAGM,MAHNuI,GAGM,CAFJpI,yBAAgEC,GAAA,CAApDC,QAAKE,EAAA,MAAAA,EAAA,IAAAc,GAAEvB,GAAAmI,uBAAwB,I,8BAAO,IAAE1H,EAAA,MAAAA,EAAA,K,6BAAF,S,MAClDJ,yBAA0DC,GAAA,CAA/ChB,KAAK,UAAWiB,QAAOP,GAAA0I,U,8BAAU,IAAEjI,EAAA,MAAAA,EAAA,K,6BAAF,S,qDAxDhD,IAoDU,CApD0CT,GAAAmI,uB,yBAApDrD,yBAoDU6D,GAAA,C,MApDAC,MAAO5I,GAAA6I,SAAUC,cAAY,OAAqCC,MAAO/I,GAAA+I,MAAOC,IAAI,mB,8BAC5F,IAEe,CAFf3I,yBAEe4I,GAAA,CAFDC,MAAM,KAAKC,KAAK,QAAQC,SAAA,I,8BACpC,IAAoE,CAApE/I,yBAAoEgJ,GAAA,C,WAAjDrJ,GAAA6I,SAAS5J,M,uCAATe,GAAA6I,SAAS5J,MAAKsC,GAAE+H,YAAY,W,+BAEjDjJ,yBASe4I,GAAA,CATDC,MAAM,OAAOC,KAAK,QAAQC,SAAA,I,8BACtC,IAOkB,CAPlB/I,yBAOkBkJ,GAAA,C,WANPvJ,GAAA6I,SAAS3J,M,uCAATc,GAAA6I,SAAS3J,MAAKqC,GACvBjC,KAAK,WACLgK,YAAY,SACZE,OAAO,mBACPC,eAAa,mBACZC,SAAMjJ,EAAA,MAAAA,EAAA,IAAAc,GAAEvB,GAAA2J,sBAAsB3J,GAAA6I,Y,+BAGnCxI,yBAQe4I,GAAA,CARDC,MAAM,OAAOC,KAAK,MAAMC,SAAA,I,8BACpC,IAMkB,CANlB/I,yBAMkBkJ,GAAA,C,WALPvJ,GAAA6I,SAAS1J,I,uCAATa,GAAA6I,SAAS1J,IAAGoC,GACrBjC,KAAK,WACLgK,YAAY,SACZE,OAAO,mBACPC,eAAa,oB,+BAGjBpJ,yBAEe4I,GAAA,CAFDC,MAAM,KAAKC,KAAK,WAAWC,SAAA,I,8BACvC,IAAqE,CAArE/I,yBAAqEgJ,GAAA,C,WAAlDrJ,GAAA6I,SAASzJ,S,uCAATY,GAAA6I,SAASzJ,SAAQmC,GAAE+H,YAAY,S,+BAEpDjJ,yBAQe4I,GAAA,CARDC,MAAM,KAAKC,KAAK,OAAOC,SAAA,I,8BACnC,IAMY,CANZ/I,yBAMYuJ,GAAA,C,WANQ5J,GAAA6I,SAASvJ,K,uCAATU,GAAA6I,SAASvJ,KAAIiC,GAAE+H,YAAY,W,8BAC7C,IAA+C,CAA/CjJ,yBAA+CwJ,GAAA,CAApCX,MAAM,KAAKxH,MAAM,SAC5BrB,yBAAiDwJ,GAAA,CAAtCX,MAAM,KAAKxH,MAAM,WAC5BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,KAAKxH,MAAM,UAC5BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,OAAOxH,MAAM,QAC9BrB,yBAAiDwJ,GAAA,CAAtCX,MAAM,KAAKxH,MAAM,a,+BAGhCrB,yBAQe4I,GAAA,CARDC,MAAM,KAAKC,KAAK,WAAWC,SAAA,I,8BACvC,IAMY,CANZ/I,yBAMYuJ,GAAA,C,WANQ5J,GAAA6I,SAAStJ,S,uCAATS,GAAA6I,SAAStJ,SAAQgC,GAAE+H,YAAY,W,8BACjD,IAAgD,CAAhDjJ,yBAAgDwJ,GAAA,CAArCX,MAAM,MAAMxH,MAAM,SAC7BrB,yBAAmDwJ,GAAA,CAAxCX,MAAM,QAAQxH,MAAM,UAC/BrB,yBAAmDwJ,GAAA,CAAxCX,MAAM,QAAQxH,MAAM,UAC/BrB,yBAAkDwJ,GAAA,CAAvCX,MAAM,OAAOxH,MAAM,UAC9BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,MAAMxH,MAAM,W,+BAGjCrB,yBAOe4I,GAAA,CAPDC,MAAM,KAAKC,KAAK,cAAcC,SAAA,I,8BAC1C,IAKY,CALZ/I,yBAKYgJ,GAAA,C,WAJDrJ,GAAA6I,SAASxJ,Y,uCAATW,GAAA6I,SAASxJ,YAAWkC,GAC7BjC,KAAK,WACJwK,KAAM,EACPR,YAAY,W,4HAapBjJ,yBA+BYmE,GAAA,C,WA9BDxE,GAAA+J,0B,uCAAA/J,GAAA+J,0BAAyBxI,GACjCtC,MAAOe,GAAAgK,cAAc/K,MACtByF,MAAM,QACN7E,MAAM,mB,CAoBK0I,OAAMC,qBACf,IAIM,CAJNtI,gCAIM,MAJN+J,GAIM,CAHJ5J,yBAAoEC,GAAA,CAAxDC,QAAKE,EAAA,MAAAA,EAAA,IAAAc,GAAEvB,GAAA+J,2BAA4B,I,8BAAO,IAAEtJ,EAAA,MAAAA,EAAA,K,6BAAF,S,MACtDJ,yBAAqEC,GAAA,CAA1DhB,KAAK,UAAWiB,QAAOP,GAAAkK,qB,8BAAqB,IAAEzJ,EAAA,MAAAA,EAAA,K,6BAAF,S,oBACvDJ,yBAA4DC,GAAA,CAAjDhB,KAAK,SAAUiB,QAAOP,GAAAmK,a,8BAAa,IAAE1J,EAAA,MAAAA,EAAA,K,6BAAF,S,qDAtBlD,IAiBM,CAjBNP,gCAiBM,MAjBNkK,GAiBM,CAhBJlK,gCAGM,MAHNmK,GAGM,C,cAFJnK,gCAA2B,KAAxBL,MAAM,eAAa,UACtBK,gCAAqD,YAAAc,6BAA5ChB,GAAAsK,oBAAoBtK,GAAAgK,gBAAa,KAEPhK,GAAAgK,cAAc5K,U,yBAAnDU,gCAGM,MAHNyK,GAGM,C,cAFJrK,gCAA6B,KAA1BL,MAAM,iBAAe,UACxBK,gCAAyC,YAAAc,6BAAhChB,GAAAgK,cAAc5K,UAAQ,M,uCAEIY,GAAAgK,cAAc3K,a,yBAAnDS,gCAGM,MAHN0K,GAGM,C,cAFJtK,gCAA+B,KAA5BL,MAAM,mBAAiB,UAC1BK,gCAAoE,MAApEuK,GAAoEzJ,6BAAlChB,GAAAgK,cAAc3K,aAAW,M,uCAE7Da,gCAGM,MAHNwK,GAGM,C,cAFJxK,gCAA0B,KAAvBL,MAAM,cAAY,UACrBK,gCAAyD,YAAAc,6BAAhDhB,GAAA2K,eAAe3K,GAAAgK,cAAczK,WAAQ,S,+BAapDc,yBAiEYmE,GAAA,C,WAhEDxE,GAAA4K,uB,uCAAA5K,GAAA4K,uBAAsBrJ,GAC/BtC,MAAM,OACNyF,MAAM,QACN7E,MAAM,mB,CAuDK0I,OAAMC,qBACf,IAGM,CAHNtI,gCAGM,MAHN2K,GAGM,CAFJxK,yBAAiEC,GAAA,CAArDC,QAAKE,EAAA,MAAAA,EAAA,IAAAc,GAAEvB,GAAA4K,wBAAyB,I,8BAAO,IAAEnK,EAAA,MAAAA,EAAA,K,6BAAF,S,MACnDJ,yBAA+DC,GAAA,CAApDhB,KAAK,UAAWiB,QAAOP,GAAA8K,e,8BAAe,IAAErK,EAAA,MAAAA,EAAA,K,6BAAF,S,qDAxDrD,IAoDU,CApDVJ,yBAoDUsI,GAAA,CApDAC,MAAO5I,GAAA+K,aAAcjC,cAAY,OAAQC,MAAO/I,GAAA+I,MAAOC,IAAI,oB,8BACnE,IAEe,CAFf3I,yBAEe4I,GAAA,CAFDC,MAAM,KAAKC,KAAK,QAAQC,SAAA,I,8BACpC,IAAwE,CAAxE/I,yBAAwEgJ,GAAA,C,WAArDrJ,GAAA+K,aAAa9L,M,uCAAbe,GAAA+K,aAAa9L,MAAKsC,GAAE+H,YAAY,W,+BAErDjJ,yBASe4I,GAAA,CATDC,MAAM,OAAOC,KAAK,QAAQC,SAAA,I,8BACtC,IAOkB,CAPlB/I,yBAOkBkJ,GAAA,C,WANPvJ,GAAA+K,aAAa7L,M,uCAAbc,GAAA+K,aAAa7L,MAAKqC,GAC3BjC,KAAK,WACLgK,YAAY,SACZE,OAAO,mBACPC,eAAa,mBACZC,SAAMjJ,EAAA,MAAAA,EAAA,IAAAc,GAAEvB,GAAA2J,sBAAsB3J,GAAA+K,gB,+BAGnC1K,yBAQe4I,GAAA,CARDC,MAAM,OAAOC,KAAK,MAAMC,SAAA,I,8BACpC,IAMkB,CANlB/I,yBAMkBkJ,GAAA,C,WALPvJ,GAAA+K,aAAa5L,I,uCAAba,GAAA+K,aAAa5L,IAAGoC,GACzBjC,KAAK,WACLgK,YAAY,SACZE,OAAO,mBACPC,eAAa,oB,+BAGjBpJ,yBAEe4I,GAAA,CAFDC,MAAM,KAAKC,KAAK,WAAWC,SAAA,I,8BACvC,IAAyE,CAAzE/I,yBAAyEgJ,GAAA,C,WAAtDrJ,GAAA+K,aAAa3L,S,uCAAbY,GAAA+K,aAAa3L,SAAQmC,GAAE+H,YAAY,S,+BAExDjJ,yBAQe4I,GAAA,CARDC,MAAM,KAAKC,KAAK,OAAOC,SAAA,I,8BACnC,IAMY,CANZ/I,yBAMYuJ,GAAA,C,WANQ5J,GAAA+K,aAAazL,K,uCAAbU,GAAA+K,aAAazL,KAAIiC,GAAE+H,YAAY,W,8BACjD,IAA+C,CAA/CjJ,yBAA+CwJ,GAAA,CAApCX,MAAM,KAAKxH,MAAM,SAC5BrB,yBAAiDwJ,GAAA,CAAtCX,MAAM,KAAKxH,MAAM,WAC5BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,KAAKxH,MAAM,UAC5BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,OAAOxH,MAAM,QAC9BrB,yBAAiDwJ,GAAA,CAAtCX,MAAM,KAAKxH,MAAM,a,+BAGhCrB,yBAQe4I,GAAA,CARDC,MAAM,KAAKC,KAAK,WAAWC,SAAA,I,8BACvC,IAMY,CANZ/I,yBAMYuJ,GAAA,C,WANQ5J,GAAA+K,aAAaxL,S,uCAAbS,GAAA+K,aAAaxL,SAAQgC,GAAE+H,YAAY,W,8BACrD,IAAgD,CAAhDjJ,yBAAgDwJ,GAAA,CAArCX,MAAM,MAAMxH,MAAM,SAC7BrB,yBAAmDwJ,GAAA,CAAxCX,MAAM,QAAQxH,MAAM,UAC/BrB,yBAAmDwJ,GAAA,CAAxCX,MAAM,QAAQxH,MAAM,UAC/BrB,yBAAkDwJ,GAAA,CAAvCX,MAAM,OAAOxH,MAAM,UAC9BrB,yBAAgDwJ,GAAA,CAArCX,MAAM,MAAMxH,MAAM,W,+BAGjCrB,yBAOe4I,GAAA,CAPDC,MAAM,KAAKC,KAAK,cAAcC,SAAA,I,8BAC1C,IAKY,CALZ/I,yBAKYgJ,GAAA,C,WAJDrJ,GAAA+K,aAAa1L,Y,uCAAbW,GAAA+K,aAAa1L,YAAWkC,GACjCjC,KAAK,WACJwK,KAAM,EACPR,YAAY,W,uNAqBT,IACb0B,KAAM,WACNC,QAEE,MAAMC,EAAQC,kBAGR7J,EAAe0H,iBAAI,SAGnBzB,EAAcyB,iBAAI,IAAIoC,MAGtBxI,EAASoG,iBAAI,IAGbqC,EAAkBrC,iBAAI,MACtBsC,EAAmBtC,iBAAI,MAGvBD,EAAQ,CACZ9J,MAAO,CACL,CAAEmK,UAAU,EAAMmC,QAAS,UAAWC,QAAS,SAEjDtM,MAAO,CACL,CAAEkK,UAAU,EAAMmC,QAAS,UAAWC,QAAS,WAEjDrM,IAAK,CACH,CAAEiK,UAAU,EAAMmC,QAAS,UAAWC,QAAS,WAEjDpM,SAAU,CACR,CAAEgK,UAAU,EAAMmC,QAAS,QAASC,QAAS,SAE/ClM,KAAM,CACJ,CAAE8J,UAAU,EAAMmC,QAAS,UAAWC,QAAS,WAEjDjM,SAAU,CACR,CAAE6J,UAAU,EAAMmC,QAAS,UAAWC,QAAS,WAEjDnM,YAAa,CACX,CAAE+J,UAAU,EAAMmC,QAAS,UAAWC,QAAS,UAK7CvK,EAAmBwK,sBAAS,KAChC,MAAMC,EAAU,CAAEpN,KAAM,UAAWC,MAAO,QAC1C,MAA2B,SAAvB+C,EAAaI,MACR,GAAG6F,EAAY7F,MAAMiK,iBAAiBpE,EAAY7F,MAAMkK,WAAa,MAAMC,KAAKC,MAAMvE,EAAY7F,MAAMqK,UAAYC,EAAmBzE,EAAY7F,OAAOuK,UAAY,MAC7I,QAAvB3K,EAAaI,MACf6F,EAAY7F,MAAM8F,mBAAmB,QAAS,CAAElJ,KAAM,UAAWC,MAAO,OAAQ8D,IAAK,YAEvFkF,EAAY7F,MAAM8F,mBAAmB,QAASkE,KAIjDtJ,EAAW4G,iBAAI,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG9Cb,EAAwBa,kBAAI,GAC5Be,EAA4Bf,kBAAI,GAChC4B,EAAyB5B,kBAAI,GAG7BH,EAAWG,iBAAI,CACnB/J,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVE,KAAM,OACNC,SAAU,QACVF,YAAa,KAIT2K,EAAgBhB,iBAAI,IAGpB+B,EAAe/B,iBAAI,CACvBtJ,GAAI,GACJT,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVE,KAAM,OACNC,SAAU,QACVF,YAAa,KAITmD,EAAOiJ,sBAAS,KACpB,MAAMS,EAAS,GACT1L,EAAQ,IAAI4K,KAGZe,EAAWH,EAAmBzE,EAAY7F,OAAOuK,SAGjDG,EAAcC,EAAe9E,EAAY7F,OAGzC4K,EAAkBD,EACtB,IAAIjB,KAAK7D,EAAY7F,MAAMiK,cAAepE,EAAY7F,MAAMkK,WAAa,IAI3E,IAAK,IAAIW,EAAIJ,EAAW,EAAGI,GAAK,EAAGA,IAAK,CACtC,MAAMlK,EAAMiK,EAAkBC,EACxB1N,EAAO,IAAIuM,KAAK7D,EAAY7F,MAAMiK,cAAepE,EAAY7F,MAAMkK,WAAa,EAAGvJ,GACzF6J,EAAOM,KAAK,CACV3N,KAAMwD,EACNM,gBAAgB,EAChBD,QAAS+J,EAAU5N,EAAM2B,GACzBoC,OAAQ8J,EAAa7N,KAKzB,IAAK,IAAI0N,EAAI,EAAGA,GAAKH,EAAaG,IAAK,CACrC,MAAM1N,EAAO,IAAIuM,KAAK7D,EAAY7F,MAAMiK,cAAepE,EAAY7F,MAAMkK,WAAYW,GACrFL,EAAOM,KAAK,CACV3N,KAAM0N,EACN5J,gBAAgB,EAChBD,QAAS+J,EAAU5N,EAAM2B,GACzBoC,OAAQ8J,EAAa7N,KAKzB,MAAM8N,EAAY,GAAKT,EAAOrJ,OAC9B,IAAK,IAAI0J,EAAI,EAAGA,GAAKI,EAAWJ,IAAK,CACnC,MAAM1N,EAAO,IAAIuM,KAAK7D,EAAY7F,MAAMiK,cAAepE,EAAY7F,MAAMkK,WAAa,EAAGW,GACzFL,EAAOM,KAAK,CACV3N,KAAM0N,EACN5J,gBAAgB,EAChBD,QAAS+J,EAAU5N,EAAM2B,GACzBoC,OAAQ8J,EAAa7N,KAIzB,OAAOqN,IAIHzG,EAAYgG,sBAAS,KACzB,MAAMS,EAAS,GACTrN,EAAO,IAAIuM,KAAK7D,EAAY7F,OAC5BW,EAAMxD,EAAKoN,SAGjBpN,EAAK+N,QAAQ/N,EAAKkN,UAAY1J,GAG9B,IAAK,IAAIkK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMhF,EAAc,IAAI6D,KAAKvM,GAC7B0I,EAAYqF,QAAQ/N,EAAKkN,UAAYQ,GAErC,MAAMM,EAAYH,EAAanF,GAEzBlB,EAAcyG,EAA0BD,GAE9CX,EAAOM,KAAK,CACV3N,KAAM0I,EAAYwE,UAClBpG,QAASvD,EAASV,MAAM6K,GACxB7J,QAAS+J,EAAUlF,EAAa,IAAI6D,MACpC2B,SAAUxF,EACV3E,OAAQiK,EACR1G,aAAc,GACdE,YAAaA,IAIjB,OAAO6F,IAIHW,EAAYpB,sBAAS,IAClBiB,EAAanF,EAAY7F,QAI5ByE,EAAesF,sBAAS,IACrB,IAIH1D,EAAiB0D,sBAAS,IACvBqB,EAA0BD,EAAUnL,QAIvCoL,EAA6BlK,IACjC,IAAKA,EAAOC,OAAQ,MAAO,CAAC,IAG5B,MAAMmK,EAAe,IAAIpK,GAAQqK,KAAK,CAACC,EAAGC,IAAMD,EAAEhO,MAAMkO,UAAYD,EAAEjO,MAAMkO,WAEtEC,EAAS,GAwBf,OAtBAL,EAAaM,QAAQpK,IAEnB,IAAIqK,GAAS,EAEb,IAAK,IAAIhB,EAAI,EAAGA,EAAIc,EAAOxK,OAAQ0J,IAAK,CACtC,MAAMiB,EAAQH,EAAOd,GACfkB,EAAYD,EAAMA,EAAM3K,OAAS,GAGvC,GAAI4K,GAAavK,EAAMhE,MAAMkO,WAAaK,EAAUtO,IAAIiO,UAAW,CACjEI,EAAMhB,KAAKtJ,GACXqK,GAAS,EACT,OAKCA,GACHF,EAAOb,KAAK,CAACtJ,MAIVmK,EAAOxK,OAASwK,EAAS,CAAC,KAI7BzI,EAAqB6G,sBAAS,IAC7BhH,GAAgB/C,MAAM7C,KAGpB+D,EAAOlB,MACXgM,OAAOxK,GAASuJ,EAAU,IAAIrB,KAAKlI,EAAMhE,OAAQuF,GAAgB/C,MAAM7C,OACvEoO,KAAK,CAACC,EAAEC,IAAMD,EAAEhO,MAAQiO,EAAEjO,OAJpB,IAQLyO,EAAY3E,kBAAI,GAGhB4E,EAAkB5E,iBAAI,GACtB6E,EAAa7E,iBAAI,GACjB8E,EAAa,EAGbC,EAAaC,UACjB,IAAKC,GAAmBvM,MAAO,OAG/B,MAAMwM,EAAc9C,KAAK+C,MACzB,GAAID,EAAcN,EAAgBlM,MAAQ,IACxC0M,QAAQC,IAAI,qBADd,CAKAT,EAAgBlM,MAAQwM,EACxBP,EAAUjM,OAAQ,EAClB0M,QAAQC,IAAI,eAEZ,IAC6B,UAAvB/M,EAAaI,YACT4M,IAC0B,SAAvBhN,EAAaI,YAChB6M,IAC0B,QAAvBjN,EAAaI,aAChB8M,IAGRX,EAAWnM,MAAQ,EACnB,MAAO+M,GACPL,QAAQM,MAAM,UAAWD,GAGrBZ,EAAWnM,MAAQoM,GACrBD,EAAWnM,QACX0M,QAAQC,IAAI,aAAaR,EAAWnM,SAASoM,SAE7Ca,WAAWZ,EAAY,OAEvBa,QAAUF,MAAM,kBAChBb,EAAWnM,MAAQ,GAErB,QACAiM,EAAUjM,OAAQ,KAKhB4M,EAAoBN,UACtB,MAAM1P,EAAOiJ,EAAY7F,MAAMiK,cAC3BpN,EAAQgJ,EAAY7F,MAAMkK,WAAa,EAC7CwC,QAAQC,IAAI,OAAO/P,KAAQC,cAE3B,IACE,MAAMsQ,QAAiBxQ,gBAAiBC,EAAMC,GAE9C,GAAIsQ,IAAaA,EAASC,SAAWD,EAAS7P,MAAO,CACnD,MAAM+P,EAAYF,EAAS7P,MAAQ,GAGnC,OAFA4D,EAAOlB,MAAQsN,EAAgBD,GAC/BX,QAAQC,IAAI,OAAOzL,EAAOlB,MAAMmB,gBACzBgM,EAEP,MAAM,IAAII,MAAM,aAElB,MAAOP,GAEP,MADAN,QAAQM,MAAM,aAAcA,GACtBA,IAKJH,EAAmBP,UACrB,MAAMnP,EAAOqQ,EAAiB3H,EAAY7F,OAC5C0M,QAAQC,IAAI,OAAOxP,gBAEnB,IACE,MAAMgQ,QAAiBjQ,gBAAgBC,GAEvC,GAAIgQ,IAAaA,EAASC,SAAWD,EAAS7P,MAAO,CACnD,MAAM+P,EAAYF,EAAS7P,MAAQ,GAGnC,OAFA4D,EAAOlB,MAAQsN,EAAgBD,GAC/BX,QAAQC,IAAI,OAAOzL,EAAOlB,MAAMmB,gBACzBgM,EAEP,MAAM,IAAII,MAAM,aAElB,MAAOP,GAEP,MADAN,QAAQM,MAAM,aAAcA,GACtBA,IAKJF,EAAkBR,UACpB,MAAMnP,EAAOqQ,EAAiB3H,EAAY7F,OAC5C0M,QAAQC,IAAI,OAAOxP,aAEnB,IACE,MAAMgQ,QAAiB/P,gBAAeD,GAEtC,GAAIgQ,IAAaA,EAASC,SAAWD,EAAS7P,MAAO,CACnD,MAAM+P,EAAYF,EAAS7P,MAAQ,GAGnC,OAFA4D,EAAOlB,MAAQsN,EAAgBD,GAC/BX,QAAQC,IAAI,OAAOzL,EAAOlB,MAAMmB,gBACzBgM,EAEP,MAAM,IAAII,MAAM,aAElB,MAAOP,GAEP,MADAN,QAAQM,MAAM,aAAcA,GACtBA,IAKJM,EAAmBhQ,GAChBA,EAAKmQ,IAAIC,IAEP,CACL1P,GAAI0P,EAAK1P,GACTT,MAAOmQ,EAAKnQ,MACZC,MAAO,IAAIkM,KAAKgE,EAAKlQ,OACrBC,IAAK,IAAIiM,KAAKgE,EAAKjQ,KACnBC,SAAUgQ,EAAKhQ,SACfE,KAAM8P,EAAK9P,KACXC,SAAU6P,EAAK7P,SACfF,YAAa+P,EAAK/P,YAClBgQ,QAASD,EAAKC,QACdC,aAAcF,EAAKE,aACnB9P,aAAc4P,EAAK5P,aACnB+P,kBAAmBH,EAAKG,qBAMxBL,EAAoBrQ,IACxB,MAAMP,EAAOO,EAAK8M,cACZpN,GAASM,EAAK+M,WAAa,GAAG4D,WAAWC,SAAS,EAAG,KACrDpN,EAAMxD,EAAKkN,UAAUyD,WAAWC,SAAS,EAAG,KAClD,MAAO,GAAGnR,KAAQC,KAAS8D,KAIvBS,EAAaT,IACZA,EAAIM,iBACHN,EAAIxD,KAAO,GAEbiC,IAGAK,MAMAX,EAAQA,KACZ+G,EAAY7F,MAAQ,IAAI0J,MAIpBtK,EAAOA,KACX,MAAMjC,EAAO,IAAIuM,KAAK7D,EAAY7F,OACP,UAAvBJ,EAAaI,MACf7C,EAAK6Q,SAAS7Q,EAAK+M,WAAa,GACA,SAAvBtK,EAAaI,MACtB7C,EAAK+N,QAAQ/N,EAAKkN,UAAY,GACE,QAAvBzK,EAAaI,OACtB7C,EAAK+N,QAAQ/N,EAAKkN,UAAY,GAEhCxE,EAAY7F,MAAQ7C,GAIhBsC,EAAOA,KACX,MAAMtC,EAAO,IAAIuM,KAAK7D,EAAY7F,OACP,UAAvBJ,EAAaI,MACf7C,EAAK6Q,SAAS7Q,EAAK+M,WAAa,GACA,SAAvBtK,EAAaI,MACtB7C,EAAK+N,QAAQ/N,EAAKkN,UAAY,GACE,QAAvBzK,EAAaI,OACtB7C,EAAK+N,QAAQ/N,EAAKkN,UAAY,GAEhCxE,EAAY7F,MAAQ7C,GAIhBgD,EAAsBqB,IAEtBA,IACFA,EAAMyM,iBACNzM,EAAM0M,mBAGRxB,QAAQC,IAAI,aAAa,IAAIjD,MAAOyE,eAEpC,IAEE,MAAM1B,EAAM,IAAI/C,KACV0E,EAAe,IAAI1E,KAAK+C,EAAIf,UAAY,MAG9CjF,EAAsBzG,OAAQ,EAGhCmH,EAASnH,MAAQ,CACfzC,MAAO,GACLC,MAAO6Q,EAAoB5B,GAC3BhP,IAAK4Q,EAAoBD,GAC3B1Q,SAAU,GACVE,KAAM,OACNC,SAAU,QACVF,YAAa,IAGb+O,QAAQC,IAAI,SAAUlG,EAAsBzG,OAC5C,MAAOgN,GACPN,QAAQM,MAAM,eAAgBA,GAG9BvG,EAAsBzG,OAAQ,EAC9BiN,WAAW,KACbxG,EAAsBzG,OAAQ,EAC1B0M,QAAQC,IAAI,YACX,OAKD3F,EAAWsF,UACfI,QAAQC,IAAI,YAAaxF,EAASnH,OAG7B2J,EAAgB3J,MAKrB2J,EAAgB3J,MAAMsO,SAAShC,UAC7B,GAAKiC,EAKL,IAEE,MAAMC,EAAY,IAAI9E,KAAKvC,EAASnH,MAAMxC,OAAOkO,UAC3C+C,EAAU,IAAI/E,KAAKvC,EAASnH,MAAMvC,KAAKiO,UAC7C,GAAIgD,MAAMF,IAAcE,MAAMD,GAAU,CAEtC/B,QAAQM,MAAM,cAAe,CAC3BxP,MAAO2J,EAASnH,MAAMxC,MACtBC,IAAK0J,EAASnH,MAAMvC,MAItB,MAAMgP,EAAM,IAAI/C,KACV0E,EAAe,IAAI1E,KAAK+C,EAAIf,UAAY,MAI9C,OAHAvE,EAASnH,MAAMxC,MAAQ6Q,EAAoB5B,GAC3CtF,EAASnH,MAAMvC,IAAM4Q,EAAoBD,QACzClB,QAAUyB,QAAQ,mBAIpB,GAAIH,EAAYC,EAEd,YADAvB,QAAUyB,QAAQ,gBAKpB,MAAMC,EAAY,IAAIlF,KAAKvC,EAASnH,MAAMxC,OAAOqR,eAC3CC,EAAU,IAAIpF,KAAKvC,EAASnH,MAAMvC,KAAKoR,eAC7C,GAAID,IAAcE,EAEhB,YADA5B,QAAUyB,QAAQ,iBAKpB,MAAMI,EAASC,OAAOC,aAAaC,QAAQ,YAAc,GACzDxC,QAAQC,IAAI,UAAWoC,GAGvB,MAAM1B,EAAY,CAChB9P,MAAO4J,EAASnH,MAAMzC,MAAM4R,OAC5B3R,MAAO2J,EAASnH,MAAMxC,MACtBC,IAAK0J,EAASnH,MAAMvC,IACpBC,UAAWyJ,EAASnH,MAAMtC,UAAY,IAAIyR,OAC1CvR,KAAMuJ,EAASnH,MAAMpC,MAAQ,OAC7BC,SAAUsJ,EAASnH,MAAMnC,UAAY,QACrCF,aAAcwJ,EAASnH,MAAMrC,aAAe,IAAIwR,OAChDrR,aAAciR,EAAS,CAACA,GAAU,IAGpCrC,QAAQC,IAAI,YAAaU,GAGzB5G,EAAsBzG,OAAQ,EAC9BkN,QAAUkC,KAAK,aAEf,MAAMjC,QAAiB9P,gBAAYgQ,GACnCX,QAAQC,IAAI,SAAUQ,GAElBA,EAASC,SAAYD,EAAS7P,OAAS6P,EAAStD,SAClDqD,QAAUE,QAAQ,gBACZf,MAENa,QAAUF,MAAMG,EAAStD,SAAW,UACpC6C,QAAQM,MAAM,UAAWG,IAE3B,MAAOH,GACPN,QAAQM,MAAM,UAAWA,GACzBE,QAAUF,MAAM,WAAaA,EAAMnD,SAAW,cAvE9CqD,QAAUF,MAAM,cANlBN,QAAQM,MAAM,YAmFZhL,EAAoBR,IACxB8G,EAActI,MAAQwB,EACtB6G,EAA0BrI,OAAQ,GAI9BwI,EAAsBA,KAC1Ba,EAAarJ,MAAQ,CACnBhC,GAAIsK,EAActI,MAAMhC,GACxBT,MAAO+K,EAActI,MAAMzC,MAC3BC,MAAO6Q,EAAoB/F,EAActI,MAAMxC,OAC/CC,IAAK4Q,EAAoB/F,EAActI,MAAMvC,KAC7CC,SAAU4K,EAActI,MAAMtC,UAAY,GAC1CE,KAAM0K,EAActI,MAAMpC,KAC1BC,SAAUyK,EAActI,MAAMnC,SAC9BF,YAAa2K,EAActI,MAAMrC,aAAe,IAGlD0K,EAA0BrI,OAAQ,EAClCkJ,EAAuBlJ,OAAQ,GAI3BoJ,EAAgBkD,UAEf1C,EAAiB5J,MAKtB4J,EAAiB5J,MAAMsO,SAAShC,UAC9B,IAAKiC,EAEH,YADArB,QAAUF,MAAM,YAKlB,MAAMwB,EAAY,IAAI9E,KAAKL,EAAarJ,MAAMxC,OAAOkO,UAC/C+C,EAAU,IAAI/E,KAAKL,EAAarJ,MAAMvC,KAAKiO,UACjD,GAAI8C,EAAYC,EAEd,YADAvB,QAAUyB,QAAQ,gBAKpB,MAAMC,EAAY,IAAIlF,KAAKL,EAAarJ,MAAMxC,OAAOqR,eAC/CC,EAAU,IAAIpF,KAAKL,EAAarJ,MAAMvC,KAAKoR,eACjD,GAAID,IAAcE,EAKlB,IAEE,MAAMC,EAASC,OAAOC,aAAaC,QAAQ,YAAc,GAGnD7B,EAAY,CAChB9P,MAAO8L,EAAarJ,MAAMzC,MAC1BC,MAAO6L,EAAarJ,MAAMxC,MAC1BC,IAAK4L,EAAarJ,MAAMvC,IACxBC,SAAU2L,EAAarJ,MAAMtC,SAC7BE,KAAMyL,EAAarJ,MAAMpC,KACzBC,SAAUwL,EAAarJ,MAAMnC,SAC7BF,YAAa0L,EAAarJ,MAAMrC,YAChCG,aAAciR,EAAS,CAACA,GAAU,IAGpCrC,QAAQC,IAAI,UAAWU,GACvB,MAAMF,QAAiBpP,gBAAYsL,EAAarJ,MAAMhC,GAAIqP,GAEtDF,EAASC,SACXF,QAAUE,QAAQ,UAClBlE,EAAuBlJ,OAAQ,EAC/BqM,KAEAa,QAAUF,MAAMG,EAAStD,SAAW,UAEtC,MAAOmD,GACPN,QAAQM,MAAM,UAAWA,GACzBE,QAAUF,MAAM,eAhChBE,QAAUyB,QAAQ,mBAtBpBjC,QAAQM,MAAM,YA4DZvE,EAAc6D,UAClB,GAAKhE,EAActI,MAAMhC,KAAM0Q,MAAMpG,EAActI,MAAMhC,IAAzD,CAIA0O,QAAQC,IAAI,aAAcrE,EAActI,MAAMhC,IAC9C,IAAI,IAAAqR,QACIC,QAAaC,QAAQ,aAAc,KAAM,CAC7CC,kBAAmB,KACnBC,iBAAkB,KAClB7R,KAAM,YAER,MAAMuP,QAAiBuC,gBAAuBpH,EAActI,MAAMhC,IAO3D,IAAA2R,EAJP,GAAwB,MAApBxC,EAASyC,QAA+B,QAAlBP,EAAKlC,EAAS7P,YAAI,IAAA+R,GAAbA,EAAejC,QAC5CF,QAAUE,QAAQ,UAClB/E,EAA0BrI,OAAQ,EAClCqM,SAEAa,QAAUF,OAAmB,QAAb2C,EAAAxC,EAAS7P,YAAI,IAAAqS,OAAA,EAAbA,EAAe9F,UAAW,UAC1C6C,QAAQM,MAAM,YAAaG,EAAS7P,MAEtC,MAAO0P,GACP,GAAc,WAAVA,EAAoB,KAAA6C,EAAAC,EAEtB,MAAMC,GAAyB,QAAdF,EAAA7C,EAAMG,gBAAQ,IAAA0C,GAAM,QAANC,EAAdD,EAAgBvS,YAAI,IAAAwS,OAAN,EAAdA,EAAsBjG,UAAWmD,EAAMnD,SAAW,OACnE6C,QAAQM,MAAM,UAAWA,EAAMG,UAAYH,GAC3CE,QAAUF,MAAM,WAAa+C,UA1B/B7C,QAAUF,MAAM,gBAgCdhC,EAAgB7N,GACb+D,EAAOlB,MAAMgM,OAAOxK,GAASuJ,EAAU,IAAIrB,KAAKlI,EAAMhE,OAAQL,IAIjE4N,EAAYA,CAACiF,EAAOC,IACjBD,EAAM/F,gBAAkBgG,EAAMhG,eAC9B+F,EAAM9F,aAAe+F,EAAM/F,YAC3B8F,EAAM3F,YAAc4F,EAAM5F,UAI7BC,EAAsBnN,GACnB,IAAIuM,KAAKvM,EAAK8M,cAAe9M,EAAK+M,WAAY,GAIjDS,EAAkBxN,GACf,IAAIuM,KAAKvM,EAAK8M,cAAe9M,EAAK+M,WAAa,EAAG,GAAGG,UAIxDtF,EAAgBvD,IACpB,IAAKA,IAAUA,EAAMhE,MAAO,OAAO,EACnC,IACE,MAAM0S,EAAQ1O,EAAMhE,MAAM2S,WACpBC,EAAU5O,EAAMhE,MAAM6S,aAE5B,OAAgB,GAARH,EAAaE,GAAW,GAAK,GACrC,MAAOpD,GAEP,OADAN,QAAQM,MAAM,YAAaA,GACpB,IAKLhI,EAAmBxD,IACvB,IAAKA,IAAUA,EAAMhE,QAAUgE,EAAM/D,IAAK,OAAO,GACjD,IACE,MAAM+Q,EAAYhN,EAAMhE,MAAMkO,UACxB+C,EAAUjN,EAAM/D,IAAIiO,UACpB4E,GAAY7B,EAAUD,GAAa,IAGzC,OAAOrE,KAAKoG,IAAID,EAAW,GAAK,GAAI,IACpC,MAAOtD,GAEP,OADAN,QAAQM,MAAM,YAAaA,GACpB,KAKLrK,EAAmBnB,IACvB,MAAMhE,EAAQgE,EAAMhE,MACdC,EAAM+D,EAAM/D,IAElB,MAAO,GAAGD,EAAM2S,WAAWrC,WAAWC,SAAS,EAAG,QAAQvQ,EAAM6S,aAAavC,WAAWC,SAAS,EAAG,UAAUtQ,EAAI0S,WAAWrC,WAAWC,SAAS,EAAG,QAAQtQ,EAAI4S,aAAavC,WAAWC,SAAS,EAAG,QAIhMnF,EAAuBpH,IAC3B,IAAKA,EAAMhE,QAAUgE,EAAM/D,IAAK,MAAO,GAEvC,MAAMuM,EAAU,CACdpN,KAAM,UACNC,MAAO,OACP8D,IAAK,UACL0D,KAAM,UACNmM,OAAQ,WAGV,MAAO,GAAGhP,EAAMhE,MAAMsI,mBAAmB,QAASkE,QAAcxI,EAAM/D,IAAIqI,mBAAmB,QAASkE,MAIlGf,EAAkBpL,IACtB,OAAQA,GACN,IAAK,OACH,MAAO,MACT,IAAK,QACH,MAAO,QACT,IAAK,QACH,MAAO,QACT,IAAK,QACH,MAAO,OACT,IAAK,OACH,MAAO,MACT,QACE,MAAO,QAKPwQ,EAAuBlR,IAC3B,IAAKA,EAAM,MAAO,GAElB,IAEE,IAAIsT,EACAtT,aAAgBuM,KACdgF,MAAMvR,EAAKuO,YACbgB,QAAQM,MAAM,SAAU7P,GACxBsT,EAAU,IAAI/G,MAEd+G,EAAUtT,GAIZsT,EAAU,IAAI/G,KAAKvM,GACfuR,MAAM+B,EAAQ/E,aAChBgB,QAAQM,MAAM,UAAW7P,GACzBsT,EAAU,IAAI/G,OAKpB,MAAM9M,EAAO6T,EAAQxG,cACfpN,GAAS4T,EAAQvG,WAAa,GAAG4D,WAAWC,SAAS,EAAG,KACxDpN,EAAM8P,EAAQpG,UAAUyD,WAAWC,SAAS,EAAG,KAC/CmC,EAAQO,EAAQN,WAAWrC,WAAWC,SAAS,EAAG,KAClDqC,EAAUK,EAAQJ,aAAavC,WAAWC,SAAS,EAAG,KAEpD2C,EAAY,GAAG9T,KAAQC,KAAS8D,KAAOuP,KAASE,IAEtD,OADA1D,QAAQC,IAAI,UAAU8D,QAAcC,KAC7BA,EACP,MAAO1D,GACPN,QAAQM,MAAM,WAAYA,GAE1B,MAAMP,EAAM,IAAI/C,KAChB,MAAO,GAAG+C,EAAIxC,kBAAkBwC,EAAIvC,WAAa,GAAG4D,WAAWC,SAAS,EAAG,QAAQtB,EAAIpC,UAAUyD,WAAWC,SAAS,EAAG,QAAQtB,EAAI0D,WAAWrC,WAAWC,SAAS,EAAG,QAAQtB,EAAI4D,aAAavC,WAAWC,SAAS,EAAG,SAKpN9F,EAAyBzG,IAC7B,GAAKA,EAAMhE,MAEX,IAEE,MAAMgR,EAAY,IAAI9E,KAAKlI,EAAMhE,OAG3BiR,EAAU,IAAI/E,KAAK8E,EAAU9C,UAAY,QAI1ClK,EAAM/D,KACP,IAAIiM,KAAKlI,EAAM/D,KAAO+Q,GACtB,IAAI9E,KAAKlI,EAAM/D,KAAKoR,iBAAmBL,EAAUK,kBACnDrN,EAAM/D,IAAM4Q,EAAoBI,IAElC,MAAOzB,GACPN,QAAQM,MAAM,cAAeA,KAK3B5K,GAAkBxE,IACtB,MAAM6P,EAAM,CACVkD,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,IAAK,UACLC,OAAQ,UACRC,QAAS,WAEX,OAAOvD,EAAI7P,IAAS6P,EAAIuD,SAIpBzO,GAAe+E,iBAAI,CAAE9E,SAAS,EAAOhB,MAAO,GAAIS,MAAO,KACvDN,GAAmBA,CAACH,EAAOyP,KAC/B1O,GAAavC,MAAQ,CACnBwC,SAAS,EACThB,QACAS,MAAO,CACLiP,SAAU,QACVpM,KAAMmM,EAAIE,QAAU,GAAK,KACzBC,IAAKH,EAAII,QAAU,GAAK,KACxBC,OAAQ,QAIRxP,GAAmBA,KACvBS,GAAavC,MAAMwC,SAAU,GAIzBO,GAAkBuE,iBAAI,CAAE9E,SAAS,EAAOrF,KAAM,KAAMI,MAAO,KAC3D8E,GAAiB1B,IAErB,MAAM/D,EAAOiJ,EAAY7F,MAAMiK,cAC/B,IAAIpN,EAAQgJ,EAAY7F,MAAMkK,WACzBvJ,EAAIM,iBACPpE,EAAQ8D,EAAIxD,KAAO,GAAKN,EAAQ,EAAIA,EAAQ,GAE9C,MAAMwO,EAAW,IAAI3B,KAAK9M,EAAMC,EAAO8D,EAAIxD,MAE3C4F,GAAgB/C,MAAQ,CACtBwC,SAAS,EACTrF,KAAMkO,EACN9N,MAAO,GAAG8N,EAASpB,iBAAiBoB,EAASnB,WAAa,KAAKvJ,EAAIxD,cAKjEoU,GAAejK,iBAAI,MACnBkK,GAAgBlK,iBAAI,MACpBmK,GAAgBnK,iBAAI,GACpBoK,GAAqBpK,iBAAI,GAGzBnC,GAAYA,CAACjF,EAAGsB,KACpB+P,GAAavR,MAAQwB,EAErB,MAAMmQ,EAAYC,SAASC,cAAc,OACzCF,EAAUG,YAActQ,EAAMjE,MAC9BoU,EAAUI,UAAY,aACtBH,SAASI,KAAKC,YAAYN,GAC1BzR,EAAEgS,aAAaC,aAAaR,EAAW,EAAG,GAG1CzR,EAAEgS,aAAaE,QAAQ,aAAcC,KAAKC,UAAU,CAClDtU,GAAIwD,EAAMxD,GACVwQ,UAAWhN,EAAMhE,MAAMkO,UACvB+C,QAASjN,EAAM/D,IAAIiO,aAIrBuB,WAAW,KACT2E,SAASW,iBAAiB,2CAA2C3G,QAAQ4G,IAC3EA,EAAUC,iBAAiB,WAAYC,IACvCF,EAAUC,iBAAiB,OAAQE,MAErCf,SAASI,KAAKY,YAAYjB,IACzB,IAICe,GAAYxS,IAEhB,GADAA,EAAE+N,kBACGsD,GAAavR,MAAO,OAGzB,MAAMwS,EAAYtS,EAAE2S,cACdC,EAAgBN,EAAUO,wBAC1BC,EAAU9S,EAAEmR,QAAUyB,EAAc1B,IAGpC6B,EAAe9I,KAAK+I,MAAMF,EAAU,IACpC9C,EAAQ/F,KAAK+I,MAAMD,EAAe,GAClC7C,EAAW6C,EAAe,EAAK,GAG/BE,EAAiBvB,SAASwB,cAAc,kBAAoBxB,SAASC,cAAc,OACpFsB,EAAeE,UAAUC,SAAS,kBACrCH,EAAepB,UAAY,eAC3BS,EAAUP,YAAYkB,IAIxBA,EAAelR,MAAMmP,IAAsB,GAAf6B,EAAqB,KACjDE,EAAelR,MAAMsR,OAASvO,EAAgBuM,GAAavR,OAAS,KACpEmT,EAAeK,UAAY,GAAGtD,KAASE,EAAQtC,WAAWC,SAAS,EAAG,QAIlE4E,GAAOrG,UAEX,GADApM,EAAE+N,kBACGsD,GAAavR,MAAO,OAGzB4R,SAASW,iBAAiB,iBAAiB3G,QAAQ6H,GAAMA,EAAGC,UAG5D,MAAMlB,EAAYtS,EAAE2S,cACdC,EAAgBN,EAAUO,wBAC1BC,EAAU9S,EAAEmR,QAAUyB,EAAc1B,IAGpC6B,EAAe9I,KAAK+I,MAAMF,EAAU,IACpC9C,EAAQ/F,KAAK+I,MAAMD,EAAe,GAClC7C,EAAW6C,EAAe,EAAK,GAG/BU,EAAe,IAAIjK,KAAK6H,GAAavR,MAAMxC,OACjDmW,EAAaC,SAAS1D,EAAOE,EAAS,EAAG,GAGzC,MAAMyD,EAAWF,EAAajI,UAAY6F,GAAavR,MAAMxC,MAAMkO,UAG7DoI,EAAa,IAAIpK,KAAK6H,GAAavR,MAAMvC,IAAIiO,UAAYmI,GAG/D,IACE,MAAMxG,EAAY,CAChB9P,MAAOgU,GAAavR,MAAMzC,MAC1BC,MAAO6Q,EAAoBsF,GAC3BlW,IAAK4Q,EAAoByF,GACzBpW,SAAU6T,GAAavR,MAAMtC,SAC7BE,KAAM2T,GAAavR,MAAMpC,KACzBC,SAAU0T,GAAavR,MAAMnC,SAC7BF,YAAa4T,GAAavR,MAAMrC,YAChCG,aAAcyT,GAAavR,MAAMlC,cAAgB,IAG7CqP,QAAiBpP,gBAAYwT,GAAavR,MAAMhC,GAAIqP,GAEtDF,EAASC,SACXF,QAAUE,QAAQ,WAClBf,KAEAa,QAAUF,MAAMG,EAAStD,SAAW,YAEtC,MAAOmD,GACPN,QAAQM,MAAM,UAAWA,GACzBE,QAAUF,MAAM,cAKd3H,GAAUA,KACdkM,GAAavR,MAAQ,KACrB4R,SAASW,iBAAiB,2CAA2C3G,QAAQ4G,IAC3EA,EAAUuB,oBAAoB,WAAYrB,IAC1CF,EAAUuB,oBAAoB,OAAQpB,MAExCf,SAASW,iBAAiB,iBAAiB3G,QAAQ6H,GAAMA,EAAGC,WAIxDjO,GAAcA,CAACvF,EAAGsB,KACtBtB,EAAEgO,kBACFsD,GAAcxR,MAAQwB,EACtBiQ,GAAczR,MAAQE,EAAEmR,QACxBK,GAAmB1R,MAAQgF,EAAgBxD,GAE3CoQ,SAASa,iBAAiB,YAAauB,IACvCpC,SAASa,iBAAiB,UAAWwB,KAIjCD,GAAgB9T,IACpB,IAAKsR,GAAcxR,MAAO,OAE1B,MAAMkU,EAAShU,EAAEmR,QAAUI,GAAczR,MACnCmU,EAAYhK,KAAKoG,IAAI,GAAImB,GAAmB1R,MAAQkU,GAGpDE,EAA+C,GAA7BjK,KAAK+I,MAAMiB,EAAY,IAGzCE,EAAa,IAAI3K,KAAK8H,GAAcxR,MAAMxC,MAAMkO,UAA8B,GAAlB0I,EAAuB,KAGnFE,EAAepU,EAAEqU,OAAOC,QAAQ,2BACtC,GAAIF,EAAc,CAChBA,EAAarS,MAAMsR,OAASY,EAAY,KAGxC,MAAMM,EAAcH,EAAalB,cAAc,qCAC/C,GAAIqB,EAAa,CACf,MAAMjG,EAAY,GAAGgD,GAAcxR,MAAMxC,MAAM2S,WAAWrC,WAAWC,SAAS,EAAG,QAAQyD,GAAcxR,MAAMxC,MAAM6S,aAAavC,WAAWC,SAAS,EAAG,OACjJU,EAAU,GAAG4F,EAAWlE,WAAWrC,WAAWC,SAAS,EAAG,QAAQsG,EAAWhE,aAAavC,WAAWC,SAAS,EAAG,OACvH0G,EAAY3C,YAAc,GAAGtD,OAAeC,OAM5CwF,GAAY3H,UAChB,IAAKkF,GAAcxR,MAAO,OAE1B4R,SAASmC,oBAAoB,YAAaC,IAC1CpC,SAASmC,oBAAoB,UAAWE,IAExC,MAAMC,EAAShU,EAAEmR,QAAUI,GAAczR,MACnCmU,EAAYhK,KAAKoG,IAAI,GAAImB,GAAmB1R,MAAQkU,GAGpDE,EAA+C,GAA7BjK,KAAK+I,MAAMiB,EAAY,IAGzCE,EAAa,IAAI3K,KAAK8H,GAAcxR,MAAMxC,MAAMkO,UAA8B,GAAlB0I,EAAuB,KAGzF,IACE,MAAM/G,EAAY,CAChB9P,MAAOiU,GAAcxR,MAAMzC,MAC3BC,MAAO6Q,EAAoBmD,GAAcxR,MAAMxC,OAC/CC,IAAK4Q,EAAoBgG,GACzB3W,SAAU8T,GAAcxR,MAAMtC,SAC9BE,KAAM4T,GAAcxR,MAAMpC,KAC1BC,SAAU2T,GAAcxR,MAAMnC,SAC9BF,YAAa6T,GAAcxR,MAAMrC,YACjCG,aAAc0T,GAAcxR,MAAMlC,cAAgB,IAG9CqP,QAAiBpP,gBAAYyT,GAAcxR,MAAMhC,GAAIqP,GAEvDF,EAASC,SACXF,QAAUE,QAAQ,WAClBf,KAEAa,QAAUF,MAAMG,EAAStD,SAAW,YAEtC,MAAOmD,GACPN,QAAQM,MAAM,UAAWA,GACzBE,QAAUF,MAAM,YAGlBwE,GAAcxR,MAAQ,MAIlBuM,GAAqBjF,kBAAI,GAGzB/I,GAAqB+I,iBAAIoC,KAAK+C,OAG9BiI,GAAepI,UACnBI,QAAQC,IAAI,YAGZpO,GAAmByB,MAAQ0J,KAAK+C,MAGhC,IAEE,MAAMkI,EAAW/C,SAASW,iBAAiB,sFAC3CoC,EAAS/I,QAAQ6H,IACf,GAAIA,GAAMA,EAAGmB,WACX,IACEnB,EAAGmB,WAAWhC,YAAYa,GAC1B,MAAOvT,GACPwM,QAAQM,MAAM,YAAa9M,MAM7B0R,UAAYA,SAASI,OACvBJ,SAASI,KAAK/P,MAAM4S,SAAW,GAC/BjD,SAASI,KAAKqB,UAAUK,OAAO,2BAC/B9B,SAASI,KAAK/P,MAAM6S,cAAgB,QAItC,MAAMC,EAAYnD,SAASW,iBAAiB,0CAC5CwC,EAAUnJ,QAAQ6H,IAChB,GAAIA,GAAMA,EAAGmB,WACX,IACEnB,EAAGmB,WAAWhC,YAAYa,GAC1B,MAAOvT,GACPwM,QAAQM,MAAM,YAAa9M,MAIjC,MAAO8M,GACPN,QAAQM,MAAM,aAAcA,SAIxBgI,wBACN,IAEE,MAAMC,EAAsBrD,SAASW,iBACnC,0HASF0C,EAAoBrJ,QAAQ6H,IAC1B,GAAIA,EAAI,CAENA,EAAGxR,MAAM6S,cAAgB,OACrBrB,EAAGyB,aAAa,cAAgBzB,EAAGJ,UAAUC,SAAS,gBACxDG,EAAG0B,gBAAgB,YAIrB,IACE1B,EAAGxR,MAAMmT,QAAU,IACnB3B,EAAGxR,MAAMoT,WAAa,UACtB5B,EAAGxR,MAAMqT,QAAU,GACnB,MAAOpV,GACPwM,QAAQM,MAAM,YAAa9M,OAMjC,MAAMqV,EAAY3D,SAASwB,cAAc,+BACrCmC,IACF7I,QAAQC,IAAI,cACZ4I,EAAU9C,iBAAiB,QAAUvS,IACnCA,EAAEgO,kBACF/N,EAAmBD,MAGvB,MAAO8M,GACPN,QAAQM,MAAM,YAAaA,GAI7B,IACEN,QAAQC,IAAI,qBAGNN,IAAamJ,MAAMzI,IACvBL,QAAQM,MAAM,cAAeD,GACtB,KAGTL,QAAQC,IAAI,YACZ,MAAOK,GACPN,QAAQM,MAAM,YAAaA,KAK/ByI,mBAAM,IAAMjM,EAAMkM,SAAWC,IACX,cAAZA,IACFjJ,QAAQC,IAAI,qBAEZM,WAAW,KACTyH,MACC,QAKPe,mBAAM,IAAM7V,EAAaI,MAAQ4V,IAC/BlJ,QAAQC,IAAI,WAAYiJ,GACxBZ,sBAAS,IAAM3I,OAIjBoJ,mBAAM,IAAM5P,EAAY7F,MAAQ4V,IAC9BlJ,QAAQC,IAAI,WAAYiJ,EAAO9P,sBAC/BkP,sBAAS,IAAM3I,OAGjB,MAAM,MAAEwJ,IAAUC,kCACZC,GAAUF,GAAME,QAgEtB,OA9DAC,uBAAU,KACRtJ,QAAQC,IAAI,gBACZJ,GAAmBvM,OAAQ,EAG3BiN,WAAW,KACTZ,IACAK,QAAQC,IAAI,YACX,IAGH,MAAMsJ,EAAW,IAAIC,qBAAsBC,IACzCA,EAAQvK,QAAQwK,IACVA,EAAMC,iBACR3J,QAAQC,IAAI,4BAEgB,IAAxBzL,EAAOlB,MAAMmB,SACfuL,QAAQC,IAAI,iBACZN,UAOFiK,EAAa1E,SAASwB,cAAc,uBACtCkD,GACFL,EAASM,QAAQD,GAInB,MAAMf,EAAY3D,SAASwB,cAAc,+BACrCmC,IACF7I,QAAQC,IAAI,iBACZ4I,EAAU9C,iBAAiB,QAAUvS,IACnCA,EAAEgO,kBACF/N,EAAmBD,MAKvBwM,QAAQC,IAAI,oBACZoJ,GAAQS,GAAG,kBAAmBnK,KAGhCoK,yBAAY,KAEV/J,QAAQC,IAAI,qBACZoJ,GAAQW,IAAI,kBAAmBrK,KAIjCsK,yBAAY,KACVjK,QAAQC,IAAI,iBAEZ+H,OAGFkC,6BAAgB,QAIT,CACLhX,eACAiG,cACAtG,mBACAmB,WACAI,OACAiD,YACAoH,YACA1E,wBACA4B,4BACAa,yBACA/B,WACAmB,gBACAe,eACAM,kBACAC,mBACAvC,QACAvI,QACAM,OACAK,OACA2B,YACAjB,qBACA6G,WACAhF,mBACAwG,sBACAY,gBACAX,cACA1D,eACAC,kBACArC,kBACAiG,sBACAK,iBAEA/J,0BACAM,4BACAqX,gBACA5O,wBACA7F,kBACAG,gBACAZ,oBACAG,oBACAiB,mBACAV,iBACAoC,eACA4B,iBACA+E,4BACAjG,aACAE,WACAI,eACAvC,qBACA3E,sBACAmW,mB,oCC5uDN,MAAMoC,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAASC,IAAQ,CAAC,YAAY,qBAE1E,iB,oCCRf,IAAIC,EAAI,EAAQ,QACZC,EAAO,EAAQ,QACfC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAoB,EAAQ,QAC5BC,EAAsB,EAAQ,QAC9BC,EAA+B,EAAQ,QACvCC,EAAU,EAAQ,QAClBC,EAAgB,EAAQ,QACxBC,EAA2C,EAAQ,QAEnDC,GAAoCH,GAAWE,EAAyC,SAAUE,WAElGC,EAAgBP,GAAoB,WACtC,IAGI7M,EAAQqN,EAAM7X,EAHd8X,EAAWC,KAAKD,SAChBE,EAAYD,KAAKC,UACjBvY,EAAOsY,KAAKtY,KAEhB,MAAO,EAAM,CAGX,GAFA+K,EAAS2M,EAASF,EAAKxX,EAAMqY,IAC7BD,EAAOE,KAAKF,OAASrN,EAAOqN,KACxBA,EAAM,OAEV,GADA7X,EAAQwK,EAAOxK,MACXsX,EAA6BQ,EAAUE,EAAW,CAAChY,EAAO+X,KAAKE,YAAY,GAAO,OAAOjY,MAMjGgX,EAAE,CAAEzC,OAAQ,WAAY2D,OAAO,EAAMC,MAAM,EAAMC,OAAQb,GAAWG,GAAoC,CACtG1L,OAAQ,SAAgBgM,GACtBb,EAASY,MACT,IACEb,EAAUc,GACV,MAAOhL,GACPwK,EAAcO,KAAM,QAAS/K,GAG/B,OAAI0K,EAAyCT,EAAKS,EAAkCK,KAAMC,GAEnF,IAAIJ,EAAcR,EAAkBW,MAAO,CAChDC,UAAWA,Q,kCC1CjB","file":"js/chunk-78895312.a2e879e4.js","sourcesContent":["import request from '@/utils/request'\n\n/**\n * 获取月度日历事件\n * @param {Number} year - 年份\n * @param {Number} month - 月份(1-12)\n * @returns {Promise} - 返回月度事件列表\n */\nexport function getMonthlyEvents(year, month) {\n  return request({\n    url: '/api/calendar/events/monthly/',\n    method: 'get',\n    params: { year, month }\n  })\n}\n\n/**\n * 获取周视图日历事件\n * @param {String} date - 日期字符串，格式为YYYY-MM-DD\n * @returns {Promise} - 返回周视图事件列表\n */\nexport function getWeeklyEvents(date) {\n  return request({\n    url: '/api/calendar/events/weekly/',\n    method: 'get',\n    params: { date }\n  })\n}\n\n/**\n * 获取日视图日历事件\n * @param {String} date - 日期字符串，格式为YYYY-MM-DD\n * @returns {Promise} - 返回日视图事件列表\n */\nexport function getDailyEvents(date) {\n  return request({\n    url: '/api/calendar/events/daily/',\n    method: 'get',\n    params: { date }\n  })\n}\n\n/**\n * 创建日历事件\n * @param {Object} data - 事件数据\n * @returns {Promise} - 返回创建的事件\n */\nexport function createEvent(data) {\n  const { title, start, end, location, description, type, reminder, participants } = data\n  \n  return request({\n    url: '/api/calendar/events/',\n    method: 'post',\n    data: { title, start, end, location, description, type, reminder, participants }\n  })\n}\n\n/**\n * 更新日历事件\n * @param {Number} id - 事件ID\n * @param {Object} data - 事件数据\n * @returns {Promise} - 返回更新后的事件\n */\nexport function updateEvent(id, data) {\n  const { title, start, end, location, description, type, reminder, participants } = data\n  \n  return request({\n    url: `/api/calendar/events/${id}/`,\n    method: 'put',\n    data: { title, start, end, location, description, type, reminder, participants }\n  })\n}\n\n/**\n * 删除日历事件\n * @param {number} id - 事件ID\n * @returns {Promise}\n */\nexport function deleteCalendarEvent(id) {\n  return request({\n    url: `/api/calendar/events/${id}/`,\n    method: 'delete'\n  })\n}\n\n/**\n * 获取日历事件详情\n * @param {number} id - 事件ID\n * @returns {Promise}\n */\nexport function getCalendarEvent(id) {\n    return request({\n        url: `/api/calendar/events/${id}/`,\n        method: 'get'\n    })\n} ","<template>\n  <div class=\"calendar-container\" :key=\"internalRefreshKey\">\n    <!-- 顶部操作栏 -->\n    <div class=\"calendar-header\">\n      <div class=\"date-controls\">\n        <el-button type=\"primary\" @click=\"today\">今天</el-button>\n        <div class=\"date-nav\">\n          <el-button :icon=\"ArrowLeft\" plain @click=\"prev\"></el-button>\n          <span class=\"current-date\">{{ currentDateLabel }}</span>\n          <el-button :icon=\"ArrowRight\" plain @click=\"next\"></el-button>\n        </div>\n      </div>\n      <div class=\"view-controls\">\n        <el-radio-group v-model=\"calendarView\" size=\"small\">\n          <el-radio-button value=\"month\">月</el-radio-button>\n          <el-radio-button value=\"week\">周</el-radio-button>\n          <el-radio-button value=\"day\">日</el-radio-button>\n        </el-radio-group>\n      </div>\n      <div class=\"action-controls\">\n        <el-button type=\"primary\" @click=\"e => showAddEventDialog(e)\">\n          <el-icon><Plus /></el-icon> 新建日程\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 日历主体 -->\n    <div class=\"calendar-main\" v-if=\"calendarView === 'month'\">\n      <!-- 星期头部 -->\n      <div class=\"calendar-weekdays\">\n        <div class=\"weekday\" v-for=\"(day, index) in weekDays\" :key=\"index\">{{ day }}</div>\n      </div>\n      \n      <!-- 日历网格 -->\n      <div class=\"calendar-days\">\n        <div \n          v-for=\"(day, index) in days\" \n          :key=\"index\" \n          class=\"calendar-day\" \n          :class=\"{ \n            'today': day.isToday, \n            'other-month': !day.isCurrentMonth,\n            'has-events': day.events && day.events.length > 0\n          }\"\n          @click=\"selectDay(day)\"\n        >\n          <div class=\"day-number\">{{ day.date }}</div>\n          <div class=\"event-container\">\n            <div \n              v-for=\"(event, eventIndex) in day.events.slice(0, 3)\" \n              :key=\"eventIndex\" \n              class=\"event-item\"\n              :class=\"'event-' + event.type\"\n              @mouseenter=\"showEventPreview(event, $event)\"\n              @mouseleave=\"hideEventPreview\"\n              @click.stop=\"showEventDetails(event)\"\n            >\n              <span class=\"event-color\" :style=\"{background: eventTypeColor(event.type)}\"></span>\n              {{ event.title }}\n            </div>\n            <div \n              v-if=\"day.events && day.events.length > 3\" \n              class=\"more-events-indicator\" \n              @click.stop=\"showAllEvents(day)\"\n            >\n              查看全部 {{ day.events.length }} 个日程\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 日程预览浮层 -->\n      <div v-if=\"eventPreview.visible\" class=\"event-preview-pop\" :style=\"eventPreview.style\">\n        <div class=\"event-preview-title\">{{ eventPreview.event.title }}</div>\n        <div class=\"event-preview-time\">{{ formatEventTime(eventPreview.event) }}</div>\n        <div class=\"event-preview-location\" v-if=\"eventPreview.event.location\">\n          <i class=\"bi bi-geo-alt\"></i> {{ eventPreview.event.location }}\n        </div>\n        <div class=\"event-preview-desc\" v-if=\"eventPreview.event.description\">\n          {{ eventPreview.event.description }}\n        </div>\n      </div>\n      <!-- 全部日程弹窗 -->\n      <el-dialog v-model=\"allEventsDialog.visible\" :title=\"allEventsDialog.title\" width=\"400px\" @close=\"allEventsDialog.date = null\">\n        <div v-if=\"allEventsForDialog.length === 0\">暂无日程</div>\n        <el-timeline v-else>\n          <el-timeline-item\n            v-for=\"(event, idx) in allEventsForDialog\"\n            :key=\"idx\"\n            :color=\"eventTypeColor(event.type)\"\n          >\n            <div class=\"all-event-title\">{{ event.title }}</div>\n            <div class=\"all-event-time\">{{ formatEventTime(event) }}</div>\n            <div class=\"all-event-location\" v-if=\"event.location\">\n              <i class=\"bi bi-geo-alt\"></i> {{ event.location }}\n            </div>\n            <div class=\"all-event-desc\" v-if=\"event.description\">\n              {{ event.description }}\n            </div>\n            <el-button size=\"mini\" type=\"link\" @click=\"showEventDetails(event)\">详情</el-button>\n          </el-timeline-item>\n        </el-timeline>\n      </el-dialog>\n    </div>\n\n    <!-- 周视图 -->\n    <div class=\"calendar-week\" v-if=\"calendarView === 'week'\">\n      <div class=\"week-header\">\n        <div class=\"week-time-col\"></div>\n        <div \n          v-for=\"(day, index) in weekDates\" \n          :key=\"index\" \n          class=\"week-day-col\"\n          :class=\"{ 'today': day.isToday }\"\n        >\n          <div class=\"week-day-name\">{{ day.dayName }}</div>\n          <div class=\"week-day-date\">{{ day.date }}</div>\n        </div>\n      </div>\n      \n      <div class=\"week-body\">\n        <div class=\"week-time-scale\">\n          <div v-for=\"hour in 24\" :key=\"hour\" class=\"time-slot\">\n            {{ hour - 1 }}:00\n          </div>\n        </div>\n        \n        <div class=\"week-events-container\">\n          <div \n            v-for=\"(day, dayIndex) in weekDates\" \n            :key=\"dayIndex\" \n            class=\"week-day-events\"\n          >\n            <!-- 全天事件 -->\n            <div class=\"week-all-day-events\">\n              <div\n                v-for=\"(event, eventIndex) in day.allDayEvents\"\n                :key=\"'all-day-' + eventIndex\"\n                class=\"week-all-day-event\"\n                :class=\"'event-' + event.type\"\n                @click=\"showEventDetails(event)\"\n                @mouseenter=\"showEventPreview(event, $event)\"\n                @mouseleave=\"hideEventPreview\"\n              >\n                <span class=\"event-color\" :style=\"{background: eventTypeColor(event.type)}\"></span>\n                <span class=\"all-day-event-title\">{{ event.title }}</span>\n              </div>\n            </div>\n\n            <!-- 普通事件 -->\n            <div \n              v-for=\"(eventGroup, groupIndex) in day.eventGroups\"\n              :key=\"'group-' + groupIndex\"\n              class=\"week-event-group\"\n              :style=\"{left: (groupIndex * (100 / day.eventGroups.length)) + '%', \n                      width: (100 / day.eventGroups.length) + '%'}\"\n            >\n              <div \n                v-for=\"(event, eventIndex) in eventGroup\"\n                :key=\"eventIndex\"\n                class=\"week-event\"\n                :class=\"'event-' + event.type\"\n                :style=\"{\n                  top: calcEventTop(event) + 'px',\n                  height: calcEventHeight(event) + 'px',\n                }\"\n                @click=\"showEventDetails(event)\"\n                @mouseenter=\"showEventPreview(event, $event)\"\n                @mouseleave=\"hideEventPreview\"\n                draggable=\"true\"\n                @dragstart=\"dragStart($event, event)\"\n                @dragend=\"dragEnd\"\n              >\n                <span class=\"event-color\" :style=\"{background: eventTypeColor(event.type)}\"></span>\n                <div class=\"week-event-title\">{{ event.title }}</div>\n                <div class=\"week-event-time\">{{ formatEventTime(event) }}</div>\n                <div class=\"resize-handle bottom\" @mousedown=\"startResize($event, event)\"></div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- 移除当前时间线 -->\n        </div>\n      </div>\n    </div>\n    \n    <!-- 日视图 -->\n    <div class=\"calendar-day-view\" v-if=\"calendarView === 'day'\">\n      <div class=\"day-header\">\n        <div class=\"day-date\">\n          {{ currentDate.toLocaleDateString('zh-CN', { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long' }) }}\n        </div>\n      </div>\n      \n      <div class=\"day-body\">\n        <div class=\"day-time-scale\">\n          <div v-for=\"hour in 24\" :key=\"hour\" class=\"time-slot\">\n            {{ hour - 1 }}:00\n          </div>\n        </div>\n        \n        <div class=\"day-events-container\">\n          <!-- 全天事件 -->\n          <div class=\"day-all-day-events\">\n            <div\n              v-for=\"(event, eventIndex) in allDayEvents\"\n              :key=\"'all-day-' + eventIndex\"\n              class=\"day-all-day-event\"\n              :class=\"'event-' + event.type\"\n              @click=\"showEventDetails(event)\"\n              @mouseenter=\"showEventPreview(event, $event)\"\n              @mouseleave=\"hideEventPreview\"\n            >\n              <span class=\"event-color\" :style=\"{background: eventTypeColor(event.type)}\"></span>\n              <span class=\"all-day-event-title\">{{ event.title }}</span>\n            </div>\n          </div>\n          \n          <!-- 移除日视图的当前时间线 -->\n          \n          <!-- 普通事件 -->\n          <div \n            v-for=\"(eventGroup, groupIndex) in dayEventGroups\" \n            :key=\"'group-' + groupIndex\"\n            class=\"day-event-group\"\n            :style=\"{left: (groupIndex * (100 / dayEventGroups.length)) + '%', \n                    width: (100 / dayEventGroups.length) + '%'}\"\n          >\n            <div \n              v-for=\"(event, eventIndex) in eventGroup\" \n              :key=\"eventIndex\" \n              class=\"day-event\"\n              :class=\"'event-' + event.type\"\n              :style=\"{\n                top: calcEventTop(event) + 'px',\n                height: calcEventHeight(event) + 'px'\n              }\"\n              @click=\"showEventDetails(event)\"\n              @mouseenter=\"showEventPreview(event, $event)\"\n              @mouseleave=\"hideEventPreview\"\n              draggable=\"true\"\n              @dragstart=\"dragStart($event, event)\"\n              @dragend=\"dragEnd\"\n            >\n              <span class=\"event-color\" :style=\"{background: eventTypeColor(event.type)}\"></span>\n              <div class=\"day-event-title\">{{ event.title }}</div>\n              <div class=\"day-event-time\">{{ formatEventTime(event) }}</div>\n              <div class=\"day-event-location\" v-if=\"event.location\">\n                <i class=\"bi bi-geo-alt\"></i> {{ event.location }}\n              </div>\n              <div class=\"resize-handle bottom\" @mousedown=\"startResize($event, event)\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加日程对话框 -->\n    <el-dialog\n      v-model=\"addEventDialogVisible\"\n      title=\"新建日程\"\n      width=\"500px\"\n      class=\"calendar-dialog\"\n      :append-to-body=\"true\"\n      :destroy-on-close=\"false\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form :model=\"newEvent\" label-width=\"80px\" v-if=\"addEventDialogVisible\" :rules=\"rules\" ref=\"addEventFormRef\">\n        <el-form-item label=\"标题\" prop=\"title\" required>\n          <el-input v-model=\"newEvent.title\" placeholder=\"请输入日程标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始时间\" prop=\"start\" required>\n          <el-date-picker\n            v-model=\"newEvent.start\"\n            type=\"datetime\"\n            placeholder=\"选择开始时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm\"\n            @change=\"handleStartTimeChange(newEvent)\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束时间\" prop=\"end\" required>\n          <el-date-picker\n            v-model=\"newEvent.end\"\n            type=\"datetime\"\n            placeholder=\"选择结束时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"地点\" prop=\"location\" required>\n          <el-input v-model=\"newEvent.location\" placeholder=\"请输入地点\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\" required>\n          <el-select v-model=\"newEvent.type\" placeholder=\"请选择日程类型\">\n            <el-option label=\"会议\" value=\"blue\"></el-option>\n            <el-option label=\"出差\" value=\"orange\"></el-option>\n            <el-option label=\"假期\" value=\"green\"></el-option>\n            <el-option label=\"截止日期\" value=\"red\"></el-option>\n            <el-option label=\"其他\" value=\"purple\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提醒\" prop=\"reminder\" required>\n          <el-select v-model=\"newEvent.reminder\" placeholder=\"请选择提醒时间\">\n            <el-option label=\"不提醒\" value=\"none\"></el-option>\n            <el-option label=\"10分钟前\" value=\"10min\"></el-option>\n            <el-option label=\"30分钟前\" value=\"30min\"></el-option>\n            <el-option label=\"1小时前\" value=\"1hour\"></el-option>\n            <el-option label=\"1天前\" value=\"1day\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"description\" required>\n          <el-input \n            v-model=\"newEvent.description\" \n            type=\"textarea\" \n            :rows=\"3\"\n            placeholder=\"请输入备注信息\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"addEventDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"addEvent\">确定</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 日程详情对话框 -->\n    <el-dialog\n      v-model=\"eventDetailsDialogVisible\"\n      :title=\"selectedEvent.title\"\n      width=\"500px\"\n      class=\"calendar-dialog\"\n    >\n      <div class=\"event-details\">\n        <div class=\"event-detail-item\">\n          <i class=\"bi bi-clock\"></i>\n          <span>{{ formatEventDateTime(selectedEvent) }}</span>\n        </div>\n        <div class=\"event-detail-item\" v-if=\"selectedEvent.location\">\n          <i class=\"bi bi-geo-alt\"></i>\n          <span>{{ selectedEvent.location }}</span>\n        </div>\n        <div class=\"event-detail-item\" v-if=\"selectedEvent.description\">\n          <i class=\"bi bi-card-text\"></i>\n          <div class=\"event-description\">{{ selectedEvent.description }}</div>\n        </div>\n        <div class=\"event-detail-item\">\n          <i class=\"bi bi-bell\"></i>\n          <span>{{ formatReminder(selectedEvent.reminder) }}</span>\n        </div>\n      </div>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"eventDetailsDialogVisible = false\">关闭</el-button>\n          <el-button type=\"primary\" @click=\"showEditEventDialog\">编辑</el-button>\n          <el-button type=\"danger\" @click=\"deleteEvent\">删除</el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 编辑日程对话框 -->\n    <el-dialog\n      v-model=\"editEventDialogVisible\"\n      title=\"编辑日程\"\n      width=\"500px\"\n      class=\"calendar-dialog\"\n    >\n      <el-form :model=\"editingEvent\" label-width=\"80px\" :rules=\"rules\" ref=\"editEventFormRef\">\n        <el-form-item label=\"标题\" prop=\"title\" required>\n          <el-input v-model=\"editingEvent.title\" placeholder=\"请输入日程标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始时间\" prop=\"start\" required>\n          <el-date-picker\n            v-model=\"editingEvent.start\"\n            type=\"datetime\"\n            placeholder=\"选择开始时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm\"\n            @change=\"handleStartTimeChange(editingEvent)\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束时间\" prop=\"end\" required>\n          <el-date-picker\n            v-model=\"editingEvent.end\"\n            type=\"datetime\"\n            placeholder=\"选择结束时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"地点\" prop=\"location\" required>\n          <el-input v-model=\"editingEvent.location\" placeholder=\"请输入地点\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\" required>\n          <el-select v-model=\"editingEvent.type\" placeholder=\"请选择日程类型\">\n            <el-option label=\"会议\" value=\"blue\"></el-option>\n            <el-option label=\"出差\" value=\"orange\"></el-option>\n            <el-option label=\"假期\" value=\"green\"></el-option>\n            <el-option label=\"截止日期\" value=\"red\"></el-option>\n            <el-option label=\"其他\" value=\"purple\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提醒\" prop=\"reminder\" required>\n          <el-select v-model=\"editingEvent.reminder\" placeholder=\"请选择提醒时间\">\n            <el-option label=\"不提醒\" value=\"none\"></el-option>\n            <el-option label=\"10分钟前\" value=\"10min\"></el-option>\n            <el-option label=\"30分钟前\" value=\"30min\"></el-option>\n            <el-option label=\"1小时前\" value=\"1hour\"></el-option>\n            <el-option label=\"1天前\" value=\"1day\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"description\" required>\n          <el-input \n            v-model=\"editingEvent.description\" \n            type=\"textarea\" \n            :rows=\"3\"\n            placeholder=\"请输入备注信息\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"editEventDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveEditEvent\">保存</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch, nextTick, onActivated, onBeforeUnmount, onUnmounted, getCurrentInstance } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { ArrowLeft, ArrowRight, Plus } from '@element-plus/icons-vue'\nimport { getMonthlyEvents, getWeeklyEvents, getDailyEvents, createEvent, updateEvent, deleteCalendarEvent as deleteCalendarEventApi } from '@/api/calendar'\n\nexport default {\n  name: 'Calendar',\n  setup() {\n    // 路由相关\n    const route = useRoute();\n    \n    // 日历视图类型：月/周/日\n    const calendarView = ref('month')\n    \n    // 当前日期\n    const currentDate = ref(new Date())\n    \n    // 事件数据\n    const events = ref([])\n    \n    // 表单引用\n    const addEventFormRef = ref(null)\n    const editEventFormRef = ref(null)\n    \n    // 表单验证规则\n    const rules = {\n      title: [\n        { required: true, message: '请输入日程标题', trigger: 'blur' }\n      ],\n      start: [\n        { required: true, message: '请选择开始时间', trigger: 'change' }\n      ],\n      end: [\n        { required: true, message: '请选择结束时间', trigger: 'change' }\n      ],\n      location: [\n        { required: true, message: '请输入地点', trigger: 'blur' }\n      ],\n      type: [\n        { required: true, message: '请选择日程类型', trigger: 'change' }\n      ],\n      reminder: [\n        { required: true, message: '请选择提醒时间', trigger: 'change' }\n      ],\n      description: [\n        { required: true, message: '请输入备注信息', trigger: 'blur' }\n      ]\n    }\n    \n    // 格式化当前日期标签\n    const currentDateLabel = computed(() => {\n      const options = { year: 'numeric', month: 'long' }\n      if (calendarView.value === 'week') {\n        return `${currentDate.value.getFullYear()}年${currentDate.value.getMonth() + 1}月第${Math.ceil((currentDate.value.getDate() + getFirstDayOfMonth(currentDate.value).getDay()) / 7)}周`\n      } else if (calendarView.value === 'day') {\n        return currentDate.value.toLocaleDateString('zh-CN', { year: 'numeric', month: 'long', day: 'numeric' })\n      }\n      return currentDate.value.toLocaleDateString('zh-CN', options)\n    })\n    \n    // 星期数组\n    const weekDays = ref(['日', '一', '二', '三', '四', '五', '六'])\n    \n    // 对话框状态\n    const addEventDialogVisible = ref(false)\n    const eventDetailsDialogVisible = ref(false)\n    const editEventDialogVisible = ref(false)\n    \n    // 新建日程\n    const newEvent = ref({\n      title: '',\n      start: '',\n      end: '',\n      location: '',\n      type: 'blue',\n      reminder: '30min',\n      description: ''\n    })\n    \n    // 选中的日程\n    const selectedEvent = ref({})\n    \n    // 正在编辑的日程\n    const editingEvent = ref({\n      id: '',\n      title: '',\n      start: '',\n      end: '',\n      location: '',\n      type: 'blue',\n      reminder: '30min',\n      description: ''\n    })\n    \n    // 生成月视图的日期数据\n    const days = computed(() => {\n      const result = []\n      const today = new Date()\n      \n      // 获取当月第一天是星期几\n      const firstDay = getFirstDayOfMonth(currentDate.value).getDay()\n      \n      // 获取当月天数\n      const daysInMonth = getDaysInMonth(currentDate.value)\n      \n      // 获取上个月天数\n      const daysInLastMonth = getDaysInMonth(\n        new Date(currentDate.value.getFullYear(), currentDate.value.getMonth() - 1)\n      )\n      \n      // 添加上个月的日期\n      for (let i = firstDay - 1; i >= 0; i--) {\n        const day = daysInLastMonth - i\n        const date = new Date(currentDate.value.getFullYear(), currentDate.value.getMonth() - 1, day)\n        result.push({\n          date: day,\n          isCurrentMonth: false,\n          isToday: isSameDay(date, today),\n          events: getDayEvents(date)\n        })\n      }\n      \n      // 添加当月的日期\n      for (let i = 1; i <= daysInMonth; i++) {\n        const date = new Date(currentDate.value.getFullYear(), currentDate.value.getMonth(), i)\n        result.push({\n          date: i,\n          isCurrentMonth: true,\n          isToday: isSameDay(date, today),\n          events: getDayEvents(date)\n        })\n      }\n      \n      // 添加下个月的日期，补满42个格子（6行7列）\n      const remaining = 42 - result.length\n      for (let i = 1; i <= remaining; i++) {\n        const date = new Date(currentDate.value.getFullYear(), currentDate.value.getMonth() + 1, i)\n        result.push({\n          date: i,\n          isCurrentMonth: false,\n          isToday: isSameDay(date, today),\n          events: getDayEvents(date)\n        })\n      }\n      \n      return result\n    })\n    \n    // 周视图数据\n    const weekDates = computed(() => {\n      const result = []\n      const date = new Date(currentDate.value)\n      const day = date.getDay()\n      \n      // 设置到本周的周日\n      date.setDate(date.getDate() - day)\n      \n      // 生成一周的日期\n      for (let i = 0; i < 7; i++) {\n        const currentDate = new Date(date)\n        currentDate.setDate(date.getDate() + i)\n        \n        const dayEvents = getDayEvents(currentDate)\n        // 所有事件作为普通事件处理\n        const eventGroups = organizeOverlappingEvents(dayEvents)\n        \n        result.push({\n          date: currentDate.getDate(),\n          dayName: weekDays.value[i],\n          isToday: isSameDay(currentDate, new Date()),\n          fullDate: currentDate,\n          events: dayEvents,\n          allDayEvents: [], // 保留空数组以兼容现有代码\n          eventGroups: eventGroups\n        })\n      }\n      \n      return result\n    })\n    \n    // 日视图事件\n    const dayEvents = computed(() => {\n      return getDayEvents(currentDate.value)\n    })\n    \n    // 日视图全天事件 - 保留空数组以兼容现有代码\n    const allDayEvents = computed(() => {\n      return []\n    })\n    \n    // 日视图普通事件分组 - 所有事件作为普通事件处理\n    const dayEventGroups = computed(() => {\n      return organizeOverlappingEvents(dayEvents.value)\n    })\n    \n    // 组织重叠事件为不同分组\n    const organizeOverlappingEvents = (events) => {\n      if (!events.length) return [[]]\n      \n      // 按开始时间排序\n      const sortedEvents = [...events].sort((a, b) => a.start.getTime() - b.start.getTime())\n      \n      const groups = []\n      \n      sortedEvents.forEach(event => {\n        // 查找可以放置的组\n        let placed = false\n        \n        for (let i = 0; i < groups.length; i++) {\n          const group = groups[i]\n          const lastEvent = group[group.length - 1]\n          \n          // 检查当前事件是否与组中最后一个事件不重叠\n          if (lastEvent && event.start.getTime() >= lastEvent.end.getTime()) {\n            group.push(event)\n            placed = true\n            break\n          }\n        }\n        \n        // 如果没有找到合适的组，创建新组\n        if (!placed) {\n          groups.push([event])\n        }\n      })\n      \n      return groups.length ? groups : [[]]\n    }\n    \n    // 为\"查看更多\"弹窗创建一个响应式的事件列表\n    const allEventsForDialog = computed(() => {\n      if (!allEventsDialog.value.date) {\n        return [];\n      }\n      return events.value\n        .filter(event => isSameDay(new Date(event.start), allEventsDialog.value.date))\n        .sort((a,b) => a.start - b.start);\n    });\n    \n    // 加载状态\n    const isLoading = ref(false)\n    \n    // 记录最后一次请求状态\n    const lastRequestTime = ref(0)\n    const retryCount = ref(0)\n    const maxRetries = 3\n    \n    // 根据视图类型加载事件，增强版带错误处理和重试\n    const loadEvents = async () => {\n      if (!isComponentMounted.value) return\n      \n      // 防止短时间内多次调用\n      const currentTime = Date.now()\n      if (currentTime - lastRequestTime.value < 300) {\n        console.log('请求频率过高，跳过此次加载')\n        return\n      }\n      \n      lastRequestTime.value = currentTime\n      isLoading.value = true\n      console.log('正在加载日程数据...')\n      \n      try {\n        if (calendarView.value === 'month') {\n          await loadMonthlyEvents()\n        } else if (calendarView.value === 'week') {\n          await loadWeeklyEvents()\n        } else if (calendarView.value === 'day') {\n          await loadDailyEvents()\n        }\n        // 成功后重置重试计数\n        retryCount.value = 0\n      } catch (err) {\n        console.error('加载日程失败:', err)\n        \n        // 如果失败且没有超过最大重试次数，尝试重试\n        if (retryCount.value < maxRetries) {\n          retryCount.value++\n          console.log(`正在重试加载日程 (${retryCount.value}/${maxRetries})...`)\n          // 稍微延迟后重试\n          setTimeout(loadEvents, 500)\n        } else {\n          ElMessage.error('加载日程失败，请刷新页面重试')\n          retryCount.value = 0\n        }\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // 加载月视图数据\n    const loadMonthlyEvents = async () => {\n        const year = currentDate.value.getFullYear()\n      const month = currentDate.value.getMonth() + 1\n      console.log(`正在加载${year}年${month}月的日程数据...`)\n        \n      try {\n        const response = await getMonthlyEvents(year, month)\n        \n        if (response && (response.success || response.data)) {\n          const eventData = response.data || []\n          events.value = parseEventsData(eventData)\n          console.log(`成功加载${events.value.length}个月视图日程`)\n          return response\n        } else {\n          throw new Error('返回数据格式不正确')\n        }\n      } catch (error) {\n        console.error('加载月视图日程失败:', error)\n        throw error // 继续抛出错误以便外部捕获\n      }\n    }\n    \n    // 加载周视图数据\n    const loadWeeklyEvents = async () => {\n        const date = formatDateString(currentDate.value)\n      console.log(`正在加载${date}所在周的日程数据...`)\n      \n      try {\n        const response = await getWeeklyEvents(date)\n        \n        if (response && (response.success || response.data)) {\n          const eventData = response.data || []\n          events.value = parseEventsData(eventData)\n          console.log(`成功加载${events.value.length}个周视图日程`)\n          return response\n        } else {\n          throw new Error('返回数据格式不正确')\n        }\n      } catch (error) {\n        console.error('加载周视图日程失败:', error)\n        throw error // 继续抛出错误以便外部捕获\n      }\n    }\n    \n    // 加载日视图数据\n    const loadDailyEvents = async () => {\n        const date = formatDateString(currentDate.value)\n      console.log(`正在加载${date}的日程数据...`)\n      \n      try {\n        const response = await getDailyEvents(date)\n        \n        if (response && (response.success || response.data)) {\n          const eventData = response.data || []\n          events.value = parseEventsData(eventData)\n          console.log(`成功加载${events.value.length}个日视图日程`)\n          return response\n        } else {\n          throw new Error('返回数据格式不正确')\n        }\n      } catch (error) {\n        console.error('加载日视图日程失败:', error)\n        throw error // 继续抛出错误以便外部捕获\n      }\n    }\n    \n    // 解析事件数据\n    const parseEventsData = (data) => {\n      return data.map(item => {\n        // 直接使用原始时间字符串，避免时区转换\n        return {\n          id: item.id,\n          title: item.title,\n          start: new Date(item.start),\n          end: new Date(item.end),\n          location: item.location,\n          type: item.type,\n          reminder: item.reminder,\n          description: item.description,\n          creator: item.creator,\n          creator_name: item.creator_name,\n          participants: item.participants,\n          participants_info: item.participants_info\n        };\n      });\n    }\n    \n    // 格式化日期为字符串\n    const formatDateString = (date) => {\n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      return `${year}-${month}-${day}`\n    }\n    \n    // 日期选择\n    const selectDay = (day) => {\n      if (!day.isCurrentMonth) {\n        if (day.date > 15) {\n          // 前一个月\n          prev()\n        } else {\n          // 后一个月\n          next()\n        }\n      }\n    }\n    \n    // 返回今天\n    const today = () => {\n      currentDate.value = new Date()\n    }\n    \n    // 上一个时间单位\n    const prev = () => {\n      const date = new Date(currentDate.value)\n      if (calendarView.value === 'month') {\n        date.setMonth(date.getMonth() - 1)\n      } else if (calendarView.value === 'week') {\n        date.setDate(date.getDate() - 7)\n      } else if (calendarView.value === 'day') {\n        date.setDate(date.getDate() - 1)\n      }\n      currentDate.value = date\n    }\n    \n    // 下一个时间单位\n    const next = () => {\n      const date = new Date(currentDate.value)\n      if (calendarView.value === 'month') {\n        date.setMonth(date.getMonth() + 1)\n      } else if (calendarView.value === 'week') {\n        date.setDate(date.getDate() + 7)\n      } else if (calendarView.value === 'day') {\n        date.setDate(date.getDate() + 1)\n      }\n      currentDate.value = date\n    }\n    \n    // 显示添加日程对话框\n    const showAddEventDialog = (event) => {\n      // 阻止事件冒泡\n      if (event) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      \n      console.log('打开新建日程对话框', new Date().toISOString())\n      \n      try {\n        // 直接重置表单数据，无需等待nextTick\n        const now = new Date()\n        const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000)\n        \n        // 先设置对话框为true\n        addEventDialogVisible.value = true\n        \n        // 创建新的事件对象\n      newEvent.value = {\n        title: '',\n          start: formatDateForPicker(now),\n          end: formatDateForPicker(oneHourLater),\n        location: '',\n        type: 'blue',\n        reminder: '30min',\n        description: ''\n      }\n        \n        console.log('已打开对话框', addEventDialogVisible.value)\n      } catch (error) {\n        console.error('打开新建日程对话框失败:', error)\n        \n        // 当出现错误时，强制关闭再打开对话框\n        addEventDialogVisible.value = false\n        setTimeout(() => {\n      addEventDialogVisible.value = true\n          console.log('对话框重试打开')\n        }, 100)\n      }\n    }\n    \n    // 添加日程\n    const addEvent = async () => {\n      console.log('提交日程表单数据:', newEvent.value)\n      \n      // 使用表单验证\n      if (!addEventFormRef.value) {\n        console.error('表单引用不存在')\n        return\n      }\n      \n      addEventFormRef.value.validate(async (valid) => {\n        if (!valid) {\n          ElMessage.error('请填写所有必填项')\n          return\n        }\n        \n        try {\n          // 验证开始时间不晚于结束时间\n          const startTime = new Date(newEvent.value.start).getTime()\n          const endTime = new Date(newEvent.value.end).getTime()\n          if (isNaN(startTime) || isNaN(endTime)) {\n            // 如果日期转换失败，尝试修复\n            console.error('日期转换失败，尝试修复', { \n              start: newEvent.value.start, \n              end: newEvent.value.end \n            })\n            \n            // 使用当前时间和一小时后作为默认值\n            const now = new Date()\n            const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000)\n            newEvent.value.start = formatDateForPicker(now)\n            newEvent.value.end = formatDateForPicker(oneHourLater)\n            ElMessage.warning('日期格式有误，已重置为当前时间')\n            return\n          }\n          \n          if (startTime > endTime) {\n            ElMessage.warning('结束时间不能早于开始时间')\n            return\n          }\n          \n          // 验证开始和结束日期是同一天\n          const startDate = new Date(newEvent.value.start).toDateString()\n          const endDate = new Date(newEvent.value.end).toDateString()\n          if (startDate !== endDate) {\n            ElMessage.warning('开始和结束时间必须在同一天')\n            return\n          }\n          \n          // 获取当前用户ID\n          const userId = Number(localStorage.getItem('user_id') || 0)\n          console.log('当前用户ID:', userId)\n          \n          // 创建要提交的日程数据\n          const eventData = {\n            title: newEvent.value.title.trim(),\n            start: newEvent.value.start,\n            end: newEvent.value.end,\n            location: (newEvent.value.location || '').trim(),\n            type: newEvent.value.type || 'blue',\n            reminder: newEvent.value.reminder || '30min',\n            description: (newEvent.value.description || '').trim(),\n            participants: userId ? [userId] : [] // 确保把当前用户加入参与者\n          }\n          \n          console.log('正在提交日程数据:', eventData)\n          \n          // 先关闭对话框，避免用户重复提交\n          addEventDialogVisible.value = false\n          ElMessage.info('正在创建日程...')\n          \n          const response = await createEvent(eventData)\n          console.log('服务器响应:', response)\n          \n          if (response.success || (response.data && !response.message)) {\n            ElMessage.success('日程添加成功')\n            await loadEvents() // 重新加载事件\n          } else {\n            ElMessage.error(response.message || '日程添加失败')\n            console.error('添加失败详情:', response)\n          }\n        } catch (error) {\n          console.error('添加日程失败:', error)\n          ElMessage.error('日程添加失败：' + (error.message || '未知错误'))\n        }\n      })\n    }\n    \n    // 显示日程详情\n    const showEventDetails = (event) => {\n      selectedEvent.value = event\n      eventDetailsDialogVisible.value = true\n    }\n    \n    // 显示编辑日程对话框\n    const showEditEventDialog = () => {\n      editingEvent.value = {\n        id: selectedEvent.value.id,\n        title: selectedEvent.value.title,\n        start: formatDateForPicker(selectedEvent.value.start),\n        end: formatDateForPicker(selectedEvent.value.end),\n        location: selectedEvent.value.location || '',\n        type: selectedEvent.value.type,\n        reminder: selectedEvent.value.reminder,\n        description: selectedEvent.value.description || ''\n      }\n      \n      eventDetailsDialogVisible.value = false\n      editEventDialogVisible.value = true\n    }\n    \n    // 保存编辑的日程\n    const saveEditEvent = async () => {\n      // 使用表单验证\n      if (!editEventFormRef.value) {\n        console.error('表单引用不存在')\n        return\n      }\n      \n      editEventFormRef.value.validate(async (valid) => {\n        if (!valid) {\n          ElMessage.error('请填写所有必填项')\n          return\n        }\n        \n        // 验证开始时间不晚于结束时间\n        const startTime = new Date(editingEvent.value.start).getTime()\n        const endTime = new Date(editingEvent.value.end).getTime()\n        if (startTime > endTime) {\n          ElMessage.warning('结束时间不能早于开始时间')\n          return\n        }\n        \n        // 验证开始和结束日期是同一天\n        const startDate = new Date(editingEvent.value.start).toDateString()\n        const endDate = new Date(editingEvent.value.end).toDateString()\n        if (startDate !== endDate) {\n          ElMessage.warning('开始和结束时间必须在同一天')\n          return\n        }\n        \n        try {\n          // 获取当前用户ID\n          const userId = Number(localStorage.getItem('user_id') || 0)\n          \n          // 直接使用表单填写的时间，不进行时区转换\n          const eventData = {\n            title: editingEvent.value.title,\n            start: editingEvent.value.start,\n            end: editingEvent.value.end,\n            location: editingEvent.value.location,\n            type: editingEvent.value.type,\n            reminder: editingEvent.value.reminder,\n            description: editingEvent.value.description,\n            participants: userId ? [userId] : [] // 确保把当前用户加入参与者\n          }\n          \n          console.log('更新日程数据:', eventData)\n          const response = await updateEvent(editingEvent.value.id, eventData)\n          \n          if (response.success) {\n            ElMessage.success('日程更新成功')\n            editEventDialogVisible.value = false\n            loadEvents() // 重新加载事件\n          } else {\n            ElMessage.error(response.message || '日程更新失败')\n          }\n        } catch (error) {\n          console.error('更新日程失败:', error)\n          ElMessage.error('日程更新失败')\n        }\n      })\n    }\n    \n    // 删除日程\n    const deleteEvent = async () => {\n      if (!selectedEvent.value.id || isNaN(selectedEvent.value.id)) {\n        ElMessage.error('日程ID无效，无法删除');\n        return;\n      }\n      console.log('尝试删除日程，id=', selectedEvent.value.id);\n      try {\n        await ElMessageBox.confirm('确定要删除该日程吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        const response = await deleteCalendarEventApi(selectedEvent.value.id)\n        \n        // 检查HTTP状态码是否为204，或者响应数据是否表示成功\n        if (response.status === 204 || response.data?.success) {\n          ElMessage.success('日程删除成功')\n          eventDetailsDialogVisible.value = false\n          loadEvents() // 重新加载事件\n        } else {\n          ElMessage.error(response.data?.message || '日程删除失败')\n          console.error('删除失败详细信息:', response.data)\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          // Axios错误对象通常在error.response中包含响应信息\n          const errorMsg = error.response?.data?.message || error.message || '未知错误';\n          console.error('删除日程失败:', error.response || error)\n          ElMessage.error('日程删除失败: ' + errorMsg);\n        }\n      }\n    }\n    \n    // 获取指定日期的事件\n    const getDayEvents = (date) => {\n      return events.value.filter(event => isSameDay(new Date(event.start), date))\n    }\n    \n    // 判断两个日期是否是同一天\n    const isSameDay = (date1, date2) => {\n      return date1.getFullYear() === date2.getFullYear() &&\n             date1.getMonth() === date2.getMonth() &&\n             date1.getDate() === date2.getDate()\n    }\n    \n    // 获取月份的第一天\n    const getFirstDayOfMonth = (date) => {\n      return new Date(date.getFullYear(), date.getMonth(), 1)\n    }\n    \n    // 获取月份的天数\n    const getDaysInMonth = (date) => {\n      return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\n    }\n    \n    // 计算事件在时间轴上的位置\n    const calcEventTop = (event) => {\n      if (!event || !event.start) return 0\n      try {\n        const hours = event.start.getHours()\n        const minutes = event.start.getMinutes()\n        // 每小时60px高度，每15分钟15px\n        return (hours * 60 + minutes) / 15 * 15\n      } catch (error) {\n        console.error('计算事件位置错误:', error)\n        return 0\n      }\n    }\n    \n    // 计算事件的高度\n    const calcEventHeight = (event) => {\n      if (!event || !event.start || !event.end) return 60 // 默认高度1小时\n      try {\n        const startTime = event.start.getTime()\n        const endTime = event.end.getTime()\n        const duration = (endTime - startTime) / (1000 * 60) // 分钟数\n        \n        // 最小高度30px (30分钟)\n        return Math.max(duration / 15 * 15, 30)\n      } catch (error) {\n        console.error('计算事件高度错误:', error)\n        return 60\n      }\n    }\n    \n    // 格式化事件时间\n    const formatEventTime = (event) => {\n      const start = event.start\n      const end = event.end\n      \n      return `${start.getHours().toString().padStart(2, '0')}:${start.getMinutes().toString().padStart(2, '0')} - ${end.getHours().toString().padStart(2, '0')}:${end.getMinutes().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化事件日期时间\n    const formatEventDateTime = (event) => {\n      if (!event.start || !event.end) return ''\n      \n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }\n      \n      return `${event.start.toLocaleDateString('zh-CN', options)} - ${event.end.toLocaleDateString('zh-CN', options)}`\n    }\n    \n    // 格式化提醒时间\n    const formatReminder = (reminder) => {\n      switch (reminder) {\n        case 'none':\n          return '不提醒'\n        case '10min':\n          return '10分钟前'\n        case '30min':\n          return '30分钟前'\n        case '1hour':\n          return '1小时前'\n        case '1day':\n          return '1天前'\n        default:\n          return '未设置'\n      }\n    }\n    \n    // 为日期选择器格式化日期\n    const formatDateForPicker = (date) => {\n      if (!date) return '';\n      \n      try {\n        // 确保使用有效的Date对象\n        let dateObj;\n        if (date instanceof Date) {\n          if (isNaN(date.getTime())) {\n            console.error('无效日期对象', date);\n            dateObj = new Date(); // 使用当前时间作为回退\n          } else {\n            dateObj = date;\n          }\n        } else {\n          // 尝试解析字符串日期\n          dateObj = new Date(date);\n          if (isNaN(dateObj.getTime())) {\n            console.error('无效日期字符串', date);\n            dateObj = new Date(); // 使用当前时间作为回退\n          }\n        }\n      \n      // 使用直接获取年月日时分的方式，不涉及时区转换\n      const year = dateObj.getFullYear();\n      const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\n      const day = dateObj.getDate().toString().padStart(2, '0');\n      const hours = dateObj.getHours().toString().padStart(2, '0');\n      const minutes = dateObj.getMinutes().toString().padStart(2, '0');\n      \n        const formatted = `${year}-${month}-${day} ${hours}:${minutes}`;\n        console.log(`格式化日期: ${dateObj} => ${formatted}`);\n        return formatted;\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        // 返回当前时间作为回退选项\n        const now = new Date();\n        return `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n      }\n    }\n    \n    // 处理开始时间变化，自动设置结束时间为1小时后\n    const handleStartTimeChange = (event) => {\n      if (!event.start) return\n      \n      try {\n        // 解析开始时间\n        const startTime = new Date(event.start)\n        \n        // 计算开始时间1小时后的时间\n        const endTime = new Date(startTime.getTime() + 60 * 60 * 1000)\n        \n        // 如果结束时间未设置，或结束时间早于开始时间，或结束时间不在同一天\n        // 则自动设置结束时间\n        if (!event.end || \n            new Date(event.end) < startTime || \n            new Date(event.end).toDateString() !== startTime.toDateString()) {\n          event.end = formatDateForPicker(endTime)\n        }\n      } catch (error) {\n        console.error('处理开始时间变化错误:', error)\n      }\n    }\n    \n    // 日程类型颜色\n    const eventTypeColor = (type) => {\n      const map = {\n        blue: '#409EFF',\n        orange: '#E6A23C',\n        green: '#67C23A',\n        red: '#F56C6C',\n        purple: '#909399',\n        default: '#606266'\n      }\n      return map[type] || map.default\n    }\n    \n    // 日程预览浮层\n    const eventPreview = ref({ visible: false, event: {}, style: {} })\n    const showEventPreview = (event, evt) => {\n      eventPreview.value = {\n        visible: true,\n        event,\n        style: {\n          position: 'fixed',\n          left: evt.clientX + 10 + 'px',\n          top: evt.clientY + 10 + 'px',\n          zIndex: 9999\n        }\n      }\n    }\n    const hideEventPreview = () => {\n      eventPreview.value.visible = false\n    }\n    \n    // 全部日程弹窗\n    const allEventsDialog = ref({ visible: false, date: null, title: '' })\n    const showAllEvents = (day) => {\n      // 构造当天的完整日期对象\n      const year = currentDate.value.getFullYear();\n      let month = currentDate.value.getMonth();\n      if (!day.isCurrentMonth) {\n        month = day.date > 15 ? month - 1 : month + 1;\n      }\n      const fullDate = new Date(year, month, day.date);\n\n      allEventsDialog.value = {\n        visible: true,\n        date: fullDate,\n        title: `${fullDate.getFullYear()}年${fullDate.getMonth() + 1}月${day.date}日全部日程`\n      }\n    }\n    \n    // 拖拽相关状态\n    const draggedEvent = ref(null)\n    const resizingEvent = ref(null)\n    const initialMouseY = ref(0)\n    const initialEventHeight = ref(0)\n    \n    // 开始拖拽\n    const dragStart = (e, event) => {\n      draggedEvent.value = event\n      // 在拖拽图像上显示事件标题\n      const dragImage = document.createElement('div')\n      dragImage.textContent = event.title\n      dragImage.className = 'drag-image'\n      document.body.appendChild(dragImage)\n      e.dataTransfer.setDragImage(dragImage, 0, 0)\n      \n      // 记录拖拽数据\n      e.dataTransfer.setData('text/plain', JSON.stringify({\n        id: event.id,\n        startTime: event.start.getTime(),\n        endTime: event.end.getTime()\n      }))\n      \n      // 添加拖拽效果\n      setTimeout(() => {\n        document.querySelectorAll('.week-day-events, .day-events-container').forEach(container => {\n          container.addEventListener('dragover', dragOver)\n          container.addEventListener('drop', drop)\n        })\n        document.body.removeChild(dragImage)\n      }, 0)\n    }\n    \n    // 拖拽经过\n    const dragOver = (e) => {\n      e.preventDefault()\n      if (!draggedEvent.value) return\n      \n      // 显示放置位置预览\n      const container = e.currentTarget\n      const containerRect = container.getBoundingClientRect()\n      const offsetY = e.clientY - containerRect.top\n      \n      // 计算新时间（按15分钟对齐）\n      const quarterHours = Math.floor(offsetY / 15)\n      const hours = Math.floor(quarterHours / 4)\n      const minutes = (quarterHours % 4) * 15\n      \n      // 更新预览位置\n      const previewElement = document.querySelector('.drag-preview') || document.createElement('div')\n      if (!previewElement.classList.contains('drag-preview')) {\n        previewElement.className = 'drag-preview'\n        container.appendChild(previewElement)\n      }\n      \n      // 设置预览元素样式\n      previewElement.style.top = (quarterHours * 15) + 'px'\n      previewElement.style.height = calcEventHeight(draggedEvent.value) + 'px'\n      previewElement.innerHTML = `${hours}:${minutes.toString().padStart(2, '0')}`\n    }\n    \n    // 放置拖拽\n    const drop = async (e) => {\n      e.preventDefault()\n      if (!draggedEvent.value) return\n      \n      // 移除预览元素\n      document.querySelectorAll('.drag-preview').forEach(el => el.remove())\n      \n      // 计算新的开始时间\n      const container = e.currentTarget\n      const containerRect = container.getBoundingClientRect()\n      const offsetY = e.clientY - containerRect.top\n      \n      // 计算新时间（按15分钟对齐）\n      const quarterHours = Math.floor(offsetY / 15)\n      const hours = Math.floor(quarterHours / 4)\n      const minutes = (quarterHours % 4) * 15\n      \n      // 创建新的开始时间\n      const newStartDate = new Date(draggedEvent.value.start)\n      newStartDate.setHours(hours, minutes, 0, 0)\n      \n      // 计算时间差\n      const timeDiff = newStartDate.getTime() - draggedEvent.value.start.getTime()\n      \n      // 创建新的结束时间（保持持续时间不变）\n      const newEndDate = new Date(draggedEvent.value.end.getTime() + timeDiff)\n      \n      // 更新事件\n      try {\n        const eventData = {\n          title: draggedEvent.value.title,\n          start: formatDateForPicker(newStartDate),\n          end: formatDateForPicker(newEndDate),\n          location: draggedEvent.value.location,\n          type: draggedEvent.value.type,\n          reminder: draggedEvent.value.reminder,\n          description: draggedEvent.value.description,\n          participants: draggedEvent.value.participants || []\n        }\n        \n        const response = await updateEvent(draggedEvent.value.id, eventData)\n        \n        if (response.success) {\n          ElMessage.success('日程时间已更新')\n          loadEvents() // 重新加载事件\n        } else {\n          ElMessage.error(response.message || '更新日程时间失败')\n        }\n      } catch (error) {\n        console.error('更新日程失败:', error)\n        ElMessage.error('更新日程时间失败')\n      }\n    }\n    \n    // 结束拖拽\n    const dragEnd = () => {\n      draggedEvent.value = null\n      document.querySelectorAll('.week-day-events, .day-events-container').forEach(container => {\n        container.removeEventListener('dragover', dragOver)\n        container.removeEventListener('drop', drop)\n      })\n      document.querySelectorAll('.drag-preview').forEach(el => el.remove())\n    }\n    \n    // 开始调整大小\n    const startResize = (e, event) => {\n      e.stopPropagation()\n      resizingEvent.value = event\n      initialMouseY.value = e.clientY\n      initialEventHeight.value = calcEventHeight(event)\n      \n      document.addEventListener('mousemove', handleResize)\n      document.addEventListener('mouseup', endResize)\n    }\n    \n    // 处理调整大小\n    const handleResize = (e) => {\n      if (!resizingEvent.value) return\n      \n      const deltaY = e.clientY - initialMouseY.value\n      const newHeight = Math.max(30, initialEventHeight.value + deltaY)\n      \n      // 计算新的持续时间（分钟）\n      const durationMinutes = Math.floor(newHeight / 15) * 15\n      \n      // 计算新的结束时间\n      const newEndTime = new Date(resizingEvent.value.start.getTime() + durationMinutes * 60 * 1000)\n      \n      // 更新预览\n      const eventElement = e.target.closest('.week-event, .day-event')\n      if (eventElement) {\n        eventElement.style.height = newHeight + 'px'\n        \n        // 更新时间显示\n        const timeElement = eventElement.querySelector('.week-event-time, .day-event-time')\n        if (timeElement) {\n          const startTime = `${resizingEvent.value.start.getHours().toString().padStart(2, '0')}:${resizingEvent.value.start.getMinutes().toString().padStart(2, '0')}`\n          const endTime = `${newEndTime.getHours().toString().padStart(2, '0')}:${newEndTime.getMinutes().toString().padStart(2, '0')}`\n          timeElement.textContent = `${startTime} - ${endTime}`\n        }\n      }\n    }\n    \n    // 结束调整大小\n    const endResize = async (e) => {\n      if (!resizingEvent.value) return\n      \n      document.removeEventListener('mousemove', handleResize)\n      document.removeEventListener('mouseup', endResize)\n      \n      const deltaY = e.clientY - initialMouseY.value\n      const newHeight = Math.max(30, initialEventHeight.value + deltaY)\n      \n      // 计算新的持续时间（分钟）\n      const durationMinutes = Math.floor(newHeight / 15) * 15\n      \n      // 计算新的结束时间\n      const newEndTime = new Date(resizingEvent.value.start.getTime() + durationMinutes * 60 * 1000)\n      \n      // 更新事件\n      try {\n        const eventData = {\n          title: resizingEvent.value.title,\n          start: formatDateForPicker(resizingEvent.value.start),\n          end: formatDateForPicker(newEndTime),\n          location: resizingEvent.value.location,\n          type: resizingEvent.value.type,\n          reminder: resizingEvent.value.reminder,\n          description: resizingEvent.value.description,\n          participants: resizingEvent.value.participants || []\n        }\n        \n        const response = await updateEvent(resizingEvent.value.id, eventData)\n        \n        if (response.success) {\n          ElMessage.success('日程时长已更新')\n          loadEvents() // 重新加载事件\n        } else {\n          ElMessage.error(response.message || '更新日程时长失败')\n        }\n      } catch (error) {\n        console.error('更新日程失败:', error)\n        ElMessage.error('更新日程时长失败')\n      }\n      \n      resizingEvent.value = null\n    }\n    \n    // 组件是否已挂载标志\n    const isComponentMounted = ref(false)\n    \n    // 内部刷新标识\n    const internalRefreshKey = ref(Date.now());\n    \n    // 添加一个强制刷新函数\n    const forceRefresh = async () => {\n      console.log('强制刷新日历组件');\n      \n      // 更新内部刷新标识，触发视图更新\n      internalRefreshKey.value = Date.now();\n      \n      // 第一步：清除所有可能的DOM副作用\n      try {\n        // 清除所有浮层和遮罩\n        const overlays = document.querySelectorAll('.el-overlay, .el-overlay-dialog, .el-overlay-message-box, .el-popup-parent--hidden');\n        overlays.forEach(el => {\n          if (el && el.parentNode) {\n            try {\n              el.parentNode.removeChild(el);\n            } catch (e) {\n              console.error('清理浮层元素失败:', e);\n            }\n          }\n        });\n        \n        // 恢复body样式\n        if (document && document.body) {\n          document.body.style.overflow = '';\n          document.body.classList.remove('el-popup-parent--hidden');\n          document.body.style.pointerEvents = 'auto';\n        }\n        \n        // 处理所有可能的下拉菜单\n        const dropdowns = document.querySelectorAll('.el-dropdown-menu, .el-select-dropdown');\n        dropdowns.forEach(el => {\n          if (el && el.parentNode) {\n            try {\n              el.parentNode.removeChild(el);\n            } catch (e) {\n              console.error('清理下拉菜单失败:', e);\n            }\n          }\n        });\n      } catch (error) {\n        console.error('清理DOM元素失败:', error);\n      }\n      \n      // 第二步：重新绑定所有事件\n      await nextTick();\n      try {\n        // 确保所有按钮和交互元素可点击\n        const interactiveElements = document.querySelectorAll(\n          '.calendar-container button, ' +\n          '.el-dropdown-menu__item, ' +\n          '.event-item, ' +\n          '.calendar-day, ' +\n          '.el-dropdown, ' +\n          '.week-event, ' +\n          '.day-event'\n        );\n        \n        interactiveElements.forEach(el => {\n          if (el) {\n            // 恢复所有交互元素的点击能力\n            el.style.pointerEvents = 'auto';\n            if (el.hasAttribute('disabled') && !el.classList.contains('is-disabled')) {\n              el.removeAttribute('disabled');\n            }\n            \n            // 重置样式\n            try {\n              el.style.opacity = '1';\n              el.style.visibility = 'visible';\n              el.style.display = '';\n            } catch (e) {\n              console.error('重置元素样式失败:', e);\n            }\n          }\n        });\n        \n        // 特别处理添加日程按钮\n        const addButton = document.querySelector('.action-controls .el-button');\n        if (addButton) {\n          console.log('重新绑定添加按钮事件');\n          addButton.addEventListener('click', (e) => {\n            e.stopPropagation();\n            showAddEventDialog(e);\n          });\n        }\n      } catch (error) {\n        console.error('重置交互元素失败:', error);\n      }\n      \n      // 第三步：强制重新获取数据\n      try {\n        console.log('重新加载日历数据...');\n        \n        // 调用事件加载函数\n        await loadEvents().catch(err => {\n          console.error('强制刷新日历数据失败:', err);\n          return [];\n        });\n        \n        console.log('日历数据刷新完成');\n      } catch (error) {\n        console.error('强制刷新数据失败:', error);\n      }\n    };\n    \n    // 监听路由变化，确保每次进入页面都刷新\n    watch(() => route.fullPath, (newPath) => {\n      if (newPath === '/calendar') {\n        console.log('检测到路由变化到日历页面，强制刷新');\n        // 延迟执行，确保DOM已经渲染\n        setTimeout(() => {\n          forceRefresh();\n        }, 100);\n      }\n    });\n    \n    // 路由变化时重新加载数据\n    watch(() => calendarView.value, (newVal) => {\n      console.log('日历视图变更为:', newVal)\n      nextTick(() => loadEvents())\n    })\n    \n    // 日期变化时重新加载数据\n    watch(() => currentDate.value, (newVal) => {\n      console.log('当前日期变更为:', newVal.toLocaleDateString())\n      nextTick(() => loadEvents())\n    })\n    \n    const { proxy } = getCurrentInstance();\n    const emitter = proxy.emitter;\n    \n    onMounted(() => {\n      console.log('Calendar组件挂载');\n      isComponentMounted.value = true\n      \n      // 延迟一点时间再初始化，确保DOM已完全准备好\n      setTimeout(() => {\n        loadEvents()\n        console.log('延迟初始化完成')\n      }, 50)\n    \n      // 监听元素可见性变化\n      const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            console.log('Calendar组件进入可视区域，检查初始化状态')\n            // 如果变成可见，重新检查初始化状态\n            if (events.value.length === 0) {\n              console.log('日程数据为空，尝试重新加载')\n              loadEvents()\n            }\n          }\n        })\n    })\n    \n      // 监控组件元素\n      const calendarEl = document.querySelector('.calendar-container')\n      if (calendarEl) {\n        observer.observe(calendarEl)\n      }\n      \n      // 临时解决方案：确保添加按钮事件正确绑定\n      const addButton = document.querySelector('.action-controls .el-button')\n      if (addButton) {\n        console.log('找到添加按钮，增强点击处理')\n        addButton.addEventListener('click', (e) => {\n          e.stopPropagation()\n          showAddEventDialog(e)\n        })\n      }\n\n      // 添加事件监听器\n      console.log('日历组件已挂载，开始监听刷新事件');\n      emitter.on('refreshCalendar', loadEvents);\n    })\n\n    onUnmounted(() => {\n      // 移除事件监听器\n      console.log('日历组件将卸载，移除刷新事件监听器');\n      emitter.off('refreshCalendar', loadEvents);\n    });\n    \n    // 添加keep-alive激活事件处理\n    onActivated(() => {\n      console.log('Calendar组件被激活');\n      // 组件激活时强制刷新\n      forceRefresh();\n    });\n    \n    onBeforeUnmount(() => {\n      // 清理工作\n    })\n    \n    return {\n      calendarView,\n      currentDate,\n      currentDateLabel,\n      weekDays,\n      days,\n      weekDates,\n      dayEvents,\n      addEventDialogVisible,\n      eventDetailsDialogVisible,\n      editEventDialogVisible,\n      newEvent,\n      selectedEvent,\n      editingEvent,\n      addEventFormRef,\n      editEventFormRef,\n      rules,\n      today,\n      prev,\n      next,\n      selectDay,\n      showAddEventDialog,\n      addEvent,\n      showEventDetails,\n      showEditEventDialog,\n      saveEditEvent,\n      deleteEvent,\n      calcEventTop,\n      calcEventHeight,\n      formatEventTime,\n      formatEventDateTime,\n      formatReminder,\n      // Element Plus 图标\n      ArrowLeft,\n      ArrowRight,\n      Plus,\n      handleStartTimeChange,\n      eventTypeColor,\n      eventPreview,\n      showEventPreview,\n      hideEventPreview,\n      allEventsDialog,\n      showAllEvents,\n      allDayEvents,\n      dayEventGroups,\n      organizeOverlappingEvents,\n      dragStart,\n      dragEnd,\n      startResize,\n      allEventsForDialog,\n      internalRefreshKey,\n      forceRefresh,\n    }\n  }\n}\n</script>\n\n<style scoped>\n.calendar-container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.date-controls {\n  display: flex;\n  align-items: center;\n}\n\n.date-nav {\n  display: flex;\n  align-items: center;\n  margin-left: 15px;\n}\n\n.current-date {\n  margin: 0 15px;\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.calendar-main {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.calendar-weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  background-color: var(--bg-color-secondary);\n  padding: 10px 0;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.weekday {\n  text-align: center;\n  font-weight: 500;\n  color: var(--text-color-secondary);\n}\n\n.calendar-days {\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n}\n\n.calendar-day {\n  border-right: 1px solid var(--border-color);\n  border-bottom: 1px solid var(--border-color);\n  padding: 5px;\n  overflow: hidden;\n  background-color: var(--bg-color);\n}\n\n.calendar-day:nth-child(7n) {\n  border-right: none;\n}\n\n.calendar-day.today {\n  background-color: var(--bg-color-tertiary);\n}\n\n.calendar-day.other-month {\n  opacity: 0.5;\n}\n\n.day-number {\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 5px;\n}\n\n.calendar-day.today .day-number {\n  color: var(--primary-color);\n}\n\n.event-container {\n  font-size: 12px;\n}\n\n.event-item {\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 4px;\n  margin-bottom: 3px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: background-color 0.3s;\n}\n\n.more-events-indicator {\n  font-size: 12px;\n  text-align: center;\n  margin-top: 4px;\n  color: var(--el-color-primary);\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 2px 0;\n  transition: all 0.2s ease-in-out;\n}\n.more-events-indicator:hover {\n  background-color: var(--el-color-primary-light-9);\n  color: var(--el-color-primary-dark-2);\n  font-weight: 500;\n}\n\n.event-color {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  margin-right: 4px;\n  display: inline-block;\n}\n\n/* 日程事件颜色 */\n.event-blue {\n  background-color: rgba(59, 130, 246, 0.15);\n  color: var(--primary-color);\n  border-left: 3px solid var(--primary-color);\n}\n\n.event-orange {\n  background-color: rgba(250, 140, 22, 0.15);\n  color: #fa8c16;\n  border-left: 3px solid #fa8c16;\n}\n\n.event-green {\n  background-color: rgba(82, 196, 26, 0.15);\n  color: var(--success-color);\n  border-left: 3px solid var(--success-color);\n}\n\n.event-red {\n  background-color: rgba(245, 34, 45, 0.15);\n  color: var(--error-color);\n  border-left: 3px solid var(--error-color);\n}\n\n.event-purple {\n  background-color: rgba(114, 46, 209, 0.15);\n  color: #722ed1;\n  border-left: 3px solid #722ed1;\n}\n\n/* 周视图样式 */\n.calendar-week {\n  display: flex;\n  flex-direction: column;\n  height: 700px;\n  border: 1px solid var(--border-color);\n}\n\n.week-header {\n  display: flex;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.week-time-col {\n  width: 60px;\n  border-right: 1px solid var(--border-color);\n}\n\n.week-day-col {\n  flex: 1;\n  text-align: center;\n  padding: 10px;\n  border-right: 1px solid var(--border-color);\n  background-color: var(--bg-color);\n}\n\n.week-day-col:last-child {\n  border-right: none;\n}\n\n.week-day-col.today {\n  background-color: var(--bg-color-tertiary);\n}\n\n.week-day-name {\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 5px;\n}\n\n.week-day-date {\n  color: var(--text-color-secondary);\n}\n\n.week-body {\n  display: flex;\n  flex: 1;\n  overflow-y: auto;\n  background-color: var(--bg-color);\n}\n\n.week-time-scale {\n  width: 60px;\n  border-right: 1px solid var(--border-color);\n  flex-shrink: 0;\n}\n\n.time-slot {\n  height: 60px;\n  padding: 2px 5px;\n  font-size: 12px;\n  text-align: right;\n  color: var(--text-color-tertiary);\n  border-bottom: 1px solid var(--border-color);\n}\n\n.week-events-container {\n  display: flex;\n  flex: 1;\n}\n\n.week-day-events {\n  flex: 1;\n  position: relative;\n  border-right: 1px solid var(--border-color);\n  background-color: var(--bg-color);\n}\n\n.week-day-events:last-child {\n  border-right: none;\n}\n\n.week-all-day-events {\n  display: none;\n}\n\n.week-event-group {\n  position: absolute;\n  height: 100%;\n  top: 0;\n}\n\n.week-event {\n  position: absolute;\n  width: 94%;\n  left: 3%;\n  border-radius: 4px;\n  padding: 5px;\n  font-size: 12px;\n  overflow: hidden;\n  cursor: pointer;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n}\n\n.week-event:hover {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  transform: translateY(-1px);\n}\n\n.week-event-title {\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 12px;\n  margin-top: -12px;\n}\n\n.week-event-time {\n  font-size: 11px;\n  margin-top: 2px;\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.all-day-event-title {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 4px;\n}\n\n/* 日视图样式 */\n.calendar-day-view {\n  display: flex;\n  flex-direction: column;\n  height: 700px;\n  border: 1px solid var(--border-color);\n}\n\n.day-header {\n  padding: 10px;\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-color-tertiary);\n}\n\n.day-date {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.day-body {\n  display: flex;\n  flex: 1;\n  overflow-y: auto;\n  background-color: var(--bg-color);\n}\n\n.day-time-scale {\n  width: 60px;\n  border-right: 1px solid var(--border-color);\n  flex-shrink: 0;\n}\n\n.day-events-container {\n  flex: 1;\n  position: relative;\n}\n\n.day-all-day-events {\n  display: none;\n}\n\n.day-event-group {\n  position: absolute;\n  height: 100%;\n  top: 0;\n}\n\n.day-event {\n  position: absolute;\n  width: 94%;\n  left: 3%;\n  border-radius: 4px;\n  padding: 8px;\n  font-size: 13px;\n  overflow: hidden;\n  cursor: pointer;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: all 0.2s ease;\n}\n\n.day-event:hover {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  transform: translateY(-1px);\n}\n\n.day-event-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n  margin-left: 12px;\n  margin-top: -12px;\n}\n\n.day-event-time {\n  font-size: 12px;\n  margin-bottom: 5px;\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.day-event-location {\n  font-size: 12px;\n  color: #409EFF;\n}\n\n/* 日程详情样式 */\n.event-details {\n  margin-top: 10px;\n}\n\n.event-detail-item {\n  display: flex;\n  margin-bottom: 15px;\n  align-items: flex-start;\n}\n\n.event-detail-item i {\n  margin-right: 10px;\n  font-size: 16px;\n  color: var(--text-color-tertiary);\n}\n\n.event-description {\n  white-space: pre-line;\n}\n\n/* 添加全局样式确保对话框在深色模式下正确显示 */\n:deep(.calendar-dialog) {\n  .el-dialog {\n    background-color: var(--bg-color);\n    \n    .el-dialog__header {\n      color: var(--text-color);\n      background-color: var(--bg-color);\n      border-bottom: 1px solid var(--border-color);\n    }\n    \n    .el-dialog__body {\n      color: var(--text-color);\n      background-color: var(--bg-color);\n    }\n    \n    .el-dialog__footer {\n      background-color: var(--bg-color);\n      border-top: 1px solid var(--border-color);\n    }\n  }\n  \n  .el-form-item__label {\n    color: var(--text-color);\n  }\n  \n  .el-input__wrapper {\n    background-color: var(--bg-color-tertiary) !important;\n    box-shadow: 0 0 0 1px var(--border-color) inset !important;\n  }\n  \n  .el-input__inner {\n    background-color: transparent !important;\n    color: var(--text-color) !important;\n  }\n  \n  .el-textarea__wrapper {\n    background-color: var(--bg-color-tertiary) !important;\n    box-shadow: 0 0 0 1px var(--border-color) inset !important;\n  }\n  \n  .el-textarea__inner {\n    background-color: transparent !important;\n    color: var(--text-color) !important;\n  }\n  \n  .el-select-dropdown {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-select-dropdown__item {\n      color: var(--text-color) !important;\n      \n      &.hover, &:hover {\n        background-color: var(--hover-color) !important;\n      }\n      \n      &.selected {\n        color: var(--primary-color) !important;\n        background-color: var(--hover-color) !important;\n      }\n    }\n  }\n  \n  /* 日期选择器深色模式样式修复 */\n  .el-date-picker, .el-date-range-picker {\n    background-color: var(--bg-color) !important;\n    color: var(--text-color) !important;\n    \n    .el-picker-panel__content, .el-date-table {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n    }\n    \n    .el-date-range-picker__time-header,\n    .el-date-range-picker__header,\n    .el-date-picker__header,\n    .el-picker-panel__footer {\n      background-color: var(--bg-color-secondary) !important;\n      color: var(--text-color) !important;\n      border-color: var(--border-color) !important;\n    }\n    \n    .el-date-table th {\n      color: var(--text-color-secondary) !important;\n      border-bottom-color: var(--border-color) !important;\n    }\n    \n    .el-date-table td {\n      color: var(--text-color) !important;\n    }\n    \n    .el-date-table td.available:hover {\n      color: var(--primary-color) !important;\n    }\n    \n    .el-date-table td.current:not(.disabled) {\n      color: #fff !important;\n      background-color: var(--primary-color) !important;\n    }\n    \n    .el-date-table td.today {\n      color: var(--primary-color) !important;\n    }\n    \n    .el-date-table td.prev-month,\n    .el-date-table td.next-month {\n      color: var(--text-color-tertiary) !important;\n    }\n    \n    .el-time-panel {\n      background-color: var(--bg-color) !important;\n      border-color: var(--border-color) !important;\n      \n      .el-time-panel__content::before,\n      .el-time-panel__content::after {\n        background-color: var(--border-color) !important;\n      }\n      \n      .el-time-panel__footer {\n        border-top-color: var(--border-color) !important;\n      }\n      \n      .el-time-spinner__item {\n        color: var(--text-color) !important;\n      }\n      \n      .el-time-spinner__item.active:not(.disabled) {\n        color: var(--primary-color) !important;\n        font-weight: bold;\n      }\n    }\n    \n    .el-picker-panel__icon-btn {\n      color: var(--text-color) !important;\n    }\n    \n    .el-date-picker__header-label {\n      color: var(--text-color) !important;\n    }\n  }\n}\n\n/* 全局选择器修复，确保下拉菜单在深色模式下显示正确 */\n:deep(.el-select-dropdown) {\n  background-color: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n  \n  .el-select-dropdown__item {\n    color: var(--text-color) !important;\n    \n    &.hover, &:hover {\n      background-color: var(--hover-color) !important;\n    }\n    \n    &.selected {\n      color: var(--primary-color) !important;\n      background-color: var(--hover-color) !important;\n    }\n  }\n}\n\n:deep(.el-popper) {\n  background-color: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n  \n  .el-popper__arrow::before {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n  }\n  \n  .el-select-dropdown__item {\n    color: var(--text-color) !important;\n    \n    &.hover, &:hover {\n      background-color: var(--hover-color) !important;\n    }\n    \n    &.selected {\n      color: var(--primary-color) !important;\n      background-color: var(--hover-color) !important;\n    }\n  }\n}\n\n/* 覆盖Element Plus的全局弹出层样式 */\nbody.is-dark {\n  --el-select-dropdown-bg-color: var(--bg-color-secondary) !important;\n  --el-bg-color: var(--bg-color-secondary) !important;\n  --el-bg-color-overlay: var(--bg-color-secondary) !important;\n  --el-text-color-primary: var(--text-color) !important;\n  --el-border-color: var(--border-color) !important;\n  --el-border-color-lighter: var(--border-color) !important;\n  \n  .el-popper {\n    background-color: var(--bg-color-secondary) !important;\n    border-color: var(--border-color) !important;\n    \n    .el-popper__arrow::before {\n      background-color: var(--bg-color-secondary) !important;\n      border-color: var(--border-color) !important;\n    }\n  }\n  \n  .el-select-dropdown {\n    background-color: var(--bg-color-secondary) !important;\n    \n    .el-select-dropdown__item {\n      color: var(--text-color) !important;\n      \n      &.hover, &:hover {\n        background-color: var(--hover-color) !important;\n      }\n      \n      &.selected {\n        color: var(--primary-color) !important;\n        background-color: var(--hover-color) !important;\n      }\n    }\n  }\n}\n\n.event-preview-pop {\n  min-width: 180px;\n  background: #fff;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\n  border-radius: 4px;\n  padding: 8px 12px;\n  position: fixed;\n  pointer-events: none;\n  font-size: 13px;\n  color: #333;\n}\n\n.event-preview-title {\n  font-weight: bold;\n  margin-bottom: 4px;\n}\n\n.event-preview-time {\n  color: #888;\n  font-size: 12px;\n  margin-bottom: 2px;\n}\n\n.event-preview-location {\n  color: #409EFF;\n  font-size: 12px;\n  margin-bottom: 2px;\n}\n\n.event-preview-desc {\n  color: #666;\n  font-size: 12px;\n}\n\n.all-event-title {\n  font-weight: bold;\n  margin-bottom: 2px;\n}\n\n.all-event-time {\n  color: #888;\n  font-size: 12px;\n}\n\n.all-event-location {\n  color: #409EFF;\n  font-size: 12px;\n}\n\n.all-event-desc {\n  color: #666;\n  font-size: 12px;\n}\n\n/* 拖拽预览元素 */\n.drag-preview {\n  position: absolute;\n  background-color: rgba(64, 158, 255, 0.3);\n  border: 2px dashed #409EFF;\n  border-radius: 4px;\n  left: 10%;\n  width: 80%;\n  z-index: 100;\n  color: #409EFF;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n}\n\n.drag-image {\n  position: absolute;\n  top: -1000px;\n  left: -1000px;\n  width: 100px;\n  height: 30px;\n  background: #409EFF;\n  color: white;\n  padding: 5px;\n  border-radius: 3px;\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.resize-handle {\n  position: absolute;\n  width: 100%;\n  height: 6px;\n  bottom: 0;\n  left: 0;\n  cursor: ns-resize;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  transition: opacity 0.2s;\n}\n\n.week-event:hover .resize-handle,\n.day-event:hover .resize-handle {\n  opacity: 1;\n}\n\n.week-event.resizing,\n.day-event.resizing {\n  opacity: 0.7;\n  z-index: 100;\n}\n\n/* 拖拽目标样式 */\n.week-day-events.drag-over,\n.day-events-container.drag-over {\n  background-color: rgba(64, 158, 255, 0.05);\n}\n\n/* 移除当前时间线样式 */\n.current-time-line,\n.current-time-dot,\n.current-time-line-inner,\n.current-time-label {\n  display: none !important;\n}\n</style> ","import { render } from \"./Index.vue?vue&type=template&id=44868fbc&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=44868fbc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\18083\\\\Desktop\\\\CCIT\\\\office\\\\smart-office\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-44868fbc\"]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar IS_PURE = require('../internals/is-pure');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar filterWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('filter', TypeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var predicate = this.predicate;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, predicate, [value, this.counter++], true)) return value;\n  }\n});\n\n// `Iterator.prototype.filter` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.filter\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || filterWithoutClosingOnEarlyError }, {\n  filter: function filter(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (filterWithoutClosingOnEarlyError) return call(filterWithoutClosingOnEarlyError, this, predicate);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      predicate: predicate\n    });\n  }\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=0&id=44868fbc&scoped=true&lang=css\""],"sourceRoot":""}