{"version":3,"sources":["webpack:///./src/views/contact/Index.vue","webpack:///./src/hooks/useRequest.js","webpack:///./src/views/contact/Index.vue?ec7b","webpack:///./src/views/contact/Index.vue?2241","webpack:///./node_modules/core-js/modules/es.iterator.filter.js","webpack:///./node_modules/core-js/modules/es.iterator.find.js"],"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createBlock","_component_el_card","shadow","_hoisted_4","_createVNode","_component_el_input","$setup","searchQuery","$event","placeholder","clearable","prefix-icon","_hoisted_5","_Fragment","_renderList","departments","dept","index","key","id","_normalizeClass","selectedDept","onClick","_component_el_icon","_resolveDynamicComponent","getDeptIcon","icon","_toDisplayString","name","_component_el_badge","value","count","type","loading","_hoisted_7","header","_withCtx","_$setup$departments$$","_hoisted_8","_hoisted_9","_hoisted_10","contacts","length","_hoisted_11","_hoisted_12","_component_InfoFilled","_hoisted_13","contact","selectedContact","avatar_url","_hoisted_15","src","alt","_normalizeStyle","getAvatarStyle","getInitials","_hoisted_17","_hoisted_18","_hoisted_19","position","department_name","_component_el_empty","description","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_el_button","size","_cache","startChat","_component_ChatDotRound","_component_el_divider","_hoisted_29","_hoisted_30","_hoisted_31","_component_Promotion","_hoisted_32","_hoisted_33","_hoisted_34","_component_Iphone","_hoisted_35","_hoisted_36","mobile","_hoisted_37","_hoisted_38","_component_Location","_hoisted_39","_hoisted_40","office","_hoisted_41","_hoisted_42","_component_User","_hoisted_43","_hoisted_44","_hoisted_45","_component_Ticket","_hoisted_46","_hoisted_47","employee_id","_hoisted_48","_hoisted_49","_component_Calendar","_hoisted_50","_hoisted_51","join_date","_hoisted_52","_hoisted_53","_component_Present","_hoisted_54","_hoisted_55","birthday","_hoisted_56","_hoisted_57","_component_UserFilled","_hoisted_58","_hoisted_59","manager","skills","_hoisted_60","_hoisted_61","_component_Medal","_hoisted_62","skill","_component_el_tag","effect","round","projects","_hoisted_63","_hoisted_64","_component_SetUp","_component_el_table","data","border","stripe","_component_el_table_column","prop","label","default","scope","row","status","image-size","useRequest","ref","instance","axios","create","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","console","Promise","reject","response","code","ElMessage","message","removeItem","window","location","href","_error$response$data","async","url","options","method","params","rest","components","Search","InfoFilled","ChatDotRound","Iphone","User","UserFilled","Location","Calendar","Present","Ticket","Medal","SetUp","Promotion","OfficeBuilding","Briefcase","House","PieChart","Money","Headset","Connection","More","setup","currentUser","companyId","router","useRouter","iconClass","iconMap","colors","hash","i","charCodeAt","colorIndex","Math","abs","backgroundColor","fetchCurrentUser","res","log","success","company","warning","fetchDepartments","totalContactsCount","getTotalContactsCount","allDepts","deptIcons","formattedDepts","map","noDeptCount","getContactsWithNoDept","push","Array","isArray","contactsWithNoDept","filter","department","fetchContacts","search","selectedDeptInfo","forEach","avatar","startsWith","process","VUE_APP_BASE_API","user","need_fetch_avatar","fetchUserAvatar","watch","searchTimeout","clearTimeout","setTimeout","onMounted","userData","substring","currentUserResponse","get","currentUserId","userId","parseInt","isNaN","sessionsResponse","sessions","results","existingSession","find","session","is_group","participants","hasTargetUser","some","participant","path","query","chatData","participant_ids","title","chatResponse","post","sessionId","errorMessage","detail","JSON","stringify","undefined","__exports__","render","$","call","aCallable","anObject","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","IS_PURE","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","filterWithoutClosingOnEarlyError","TypeError","IteratorProxy","result","done","iterator","this","predicate","next","counter","target","proto","real","forced","iterate","findWithoutClosingOnEarlyError","record","stop","IS_RECORD","INTERRUPTED"],"mappings":"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","file":"js/chunk-e72ec65a.56032a2d.js","sourcesContent":["<template>\n  <div class=\"contact-container\">\n    <div class=\"contact-wrapper\">\n      <!-- 左侧部门导航 -->\n      <div class=\"contact-sidebar\">\n        <el-card class=\"contacts-nav-card\" v-loading=\"loading.departments\" shadow=\"hover\">\n          <div class=\"search-box\">\n            <el-input \n              v-model=\"searchQuery\" \n              placeholder=\"搜索联系人...\"\n              clearable\n              prefix-icon=\"Search\"\n            ></el-input>\n          </div>\n          <div class=\"contacts-nav\">\n            <div \n              v-for=\"(dept, index) in departments\" \n              :key=\"dept.id\" \n              class=\"dept-item\" \n              :class=\"{'active': selectedDept === index}\"\n              @click=\"selectedDept = index\"\n            >\n              <el-icon><component :is=\"getDeptIcon(dept.icon)\" /></el-icon>\n              <span>{{ dept.name }}</span>\n              <el-badge :value=\"dept.count || 0\" type=\"info\" class=\"dept-badge\" />\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 中间联系人列表 -->\n      <div class=\"contact-list\">\n        <el-card class=\"contacts-list-card\" v-loading=\"loading.contacts\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header-flex\">\n              <span class=\"header-title\">{{ searchQuery ? '搜索结果' : departments[selectedDept]?.name }}</span>\n              <span class=\"contact-count\">{{ contacts.length }}人</span>\n            </div>\n          </template>\n          <div class=\"contacts-list\">\n            <div v-if=\"searchQuery\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>搜索范围：全公司联系人</span>\n            </div>\n            <div v-else-if=\"selectedDept === 0\" class=\"search-info\">\n              <el-icon><InfoFilled /></el-icon>\n              <span>显示全部公司联系人</span>\n            </div>\n            <div \n              v-for=\"(contact, index) in contacts\" \n              :key=\"contact.id\" \n              class=\"contact-item\" \n              :class=\"{'active': selectedContact === index}\"\n              @click=\"selectedContact = index\"\n            >\n              <div class=\"contact-avatar\" v-if=\"contact.avatar_url\" style=\"background-color: transparent;\">\n                <img :src=\"contact.avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n              </div>\n              <div class=\"contact-avatar\" v-else :style=\"getAvatarStyle(contact)\">{{ getInitials(contact.name) }}</div>\n              <div class=\"contact-info\">\n                <div class=\"contact-name\">{{ contact.name }}</div>\n                <div class=\"contact-position\">{{ contact.position }} · {{ contact.department_name || '未分配部门' }}</div>\n              </div>\n            </div>\n            <el-empty v-if=\"contacts.length === 0\" description=\"暂无联系人数据\"></el-empty>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- 右侧联系人详情 -->\n      <div class=\"contact-detail\">\n        <el-card v-if=\"selectedContact !== null && contacts[selectedContact]\" class=\"contact-detail-card\" shadow=\"hover\">\n          <div class=\"contact-header\">\n            <div class=\"detail-avatar\" v-if=\"contacts[selectedContact].avatar_url\" style=\"background-color: transparent;\">\n              <img :src=\"contacts[selectedContact].avatar_url\" alt=\"头像\" class=\"avatar-img\" />\n            </div>\n            <div class=\"detail-avatar\" v-else :style=\"getAvatarStyle(contacts[selectedContact])\">\n              {{ getInitials(contacts[selectedContact].name) }}\n            </div>\n            <div class=\"detail-info\">\n              <div class=\"detail-name\">{{ contacts[selectedContact].name }}</div>\n              <div class=\"detail-position\">{{ contacts[selectedContact].position }}</div>\n              <div class=\"detail-department\">{{ contacts[selectedContact].department_name || '未分配部门' }}</div>\n              <div class=\"contact-actions\">\n                <el-button type=\"primary\" size=\"small\" @click=\"startChat(contacts[selectedContact])\">\n                  <el-icon><ChatDotRound /></el-icon> 发送消息\n                </el-button>\n              </div>\n            </div>\n          </div>\n\n          <el-divider />\n\n          <div class=\"contact-sections\">\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><Promotion /></el-icon> 联系方式\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Iphone /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">手机号码</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].mobile || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Location /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">办公地点</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].office || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\">\n              <div class=\"section-title\">\n                <el-icon><User /></el-icon> 个人信息\n              </div>\n              <div class=\"contact-grid\">\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Ticket /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">员工编号</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].employee_id || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Calendar /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">入职日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].join_date || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><Present /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">出生日期</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].birthday || '暂无' }}</div>\n                  </div>\n                </div>\n                <div class=\"contact-item-box\">\n                  <div class=\"contact-item-icon\"><el-icon><UserFilled /></el-icon></div>\n                  <div class=\"contact-item-content\">\n                    <div class=\"contact-item-label\">直系领导</div>\n                    <div class=\"contact-item-value\">{{ contacts[selectedContact].manager || '暂无' }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].skills && contacts[selectedContact].skills.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><Medal /></el-icon> 技能专长\n              </div>\n              <div class=\"skills-tags\">\n                <el-tag \n                  v-for=\"(skill, index) in contacts[selectedContact].skills\" \n                  :key=\"index\"\n                  class=\"skill-tag\"\n                  effect=\"light\"\n                  round\n                >\n                  {{ skill }}\n                </el-tag>\n              </div>\n            </div>\n\n            <div class=\"contact-section\" v-if=\"contacts[selectedContact].projects && contacts[selectedContact].projects.length > 0\">\n              <div class=\"section-title\">\n                <el-icon><SetUp /></el-icon> 管理项目\n              </div>\n              <el-table \n                :data=\"contacts[selectedContact].projects || []\" \n                style=\"width: 100%\"\n                :border=\"false\"\n                size=\"small\"\n                stripe\n              >\n                <el-table-column prop=\"name\" label=\"项目名称\"></el-table-column>\n                <el-table-column prop=\"role\" label=\"担任角色\"></el-table-column>\n                <el-table-column prop=\"status\" label=\"状态\">\n                  <template #default=\"scope\">\n                    <el-tag \n                      :type=\"scope.row.status === '进行中' ? 'primary' : scope.row.status === '已完成' ? 'success' : 'info'\"\n                      size=\"small\"\n                    >\n                      {{ scope.row.status }}\n                    </el-tag>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n        </el-card>\n        \n        <el-empty v-else description=\"请选择一个联系人\" :image-size=\"200\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch } from 'vue'\nimport { useRequest } from '@/hooks/useRequest'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\nimport { \n  Search, \n  InfoFilled, \n  ChatDotRound, \n  Iphone,\n  User, \n  UserFilled, \n  Location, \n  Calendar, \n  Present, \n  Ticket, \n  Medal, \n  SetUp,\n  Promotion,\n  OfficeBuilding,\n  Briefcase,\n  House,\n  PieChart,\n  Money,\n  Headset,\n  Connection,\n  More\n} from '@element-plus/icons-vue'\n\nexport default {\n  name: 'Contact',\n  components: {\n    Search, \n    InfoFilled, \n    ChatDotRound, \n    Iphone,\n    User, \n    UserFilled, \n    Location, \n    Calendar, \n    Present, \n    Ticket, \n    Medal, \n    SetUp,\n    Promotion,\n    OfficeBuilding,\n    Briefcase,\n    House,\n    PieChart,\n    Money,\n    Headset,\n    Connection,\n    More\n  },\n  setup() {\n    // 状态定义\n    const searchQuery = ref('')\n    const selectedDept = ref(0)\n    const selectedContact = ref(0)\n    const departments = ref([\n      { id: 0, name: '全部部门', icon: 'bi bi-building', count: 0 }\n    ])\n    const contacts = ref([])\n    const loading = ref({\n      departments: false,\n      contacts: false\n    })\n    const currentUser = ref(null)\n    const companyId = ref(null)\n    \n    // 路由\n    const router = useRouter()\n\n    // API请求\n    const { request } = useRequest()\n\n    // 获取部门图标\n    const getDeptIcon = (iconClass) => {\n      const iconMap = {\n        'bi bi-building': 'House',\n        'bi bi-people-fill': 'User',\n        'bi bi-person-workspace': 'UserFilled',\n        'bi bi-people': 'OfficeBuilding',\n        'bi bi-cash-coin': 'Money',\n        'bi bi-graph-up': 'PieChart',\n        'bi bi-code-slash': 'Connection',\n        'bi bi-box': 'Briefcase',\n        'bi bi-headset': 'Headset',\n        'bi bi-three-dots': 'More'\n      }\n      \n      return iconMap[iconClass] || 'House'\n    }\n    \n    // 生成头像样式\n    const getAvatarStyle = (contact) => {\n      if (!contact) return {}\n      \n      // 根据用户名生成一个固定的颜色\n      const colors = [\n        '#409EFF', '#67C23A', '#E6A23C', '#F56C6C', \n        '#909399', '#3B71CA', '#14A44D', '#DC4C64',\n        '#54B4D3', '#9FA6B2', '#3E4551', '#6610F2'\n      ]\n      \n      let hash = 0\n      if (contact.name) {\n        for (let i = 0; i < contact.name.length; i++) {\n          hash = contact.name.charCodeAt(i) + ((hash << 5) - hash)\n        }\n      }\n      \n      const colorIndex = Math.abs(hash) % colors.length\n      return { backgroundColor: colors[colorIndex] }\n    }\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await request('/api/auth/users/me/')\n        console.log('获取用户信息响应:', res)\n        \n        // 检查不同的响应格式\n        if (res && res.success && res.data) {\n          // 标准格式：{success: true, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从标准格式中获取到公司ID:', companyId.value)\n        } else if (res && res.code === 200 && res.data) {\n          // 另一种格式：{code: 200, data: {...}}\n          currentUser.value = res.data\n          companyId.value = res.data.company\n          console.log('从code=200格式中获取到公司ID:', companyId.value)\n        } else if (res && typeof res === 'object') {\n          // 直接返回数据对象的格式\n          currentUser.value = res\n          companyId.value = res.company\n          console.log('从直接返回对象中获取到公司ID:', companyId.value)\n        } else {\n          console.error('无法解析用户信息响应:', res)\n          ElMessage.warning('用户信息格式异常')\n        }\n          \n          if (!companyId.value) {\n          console.error('当前用户没有关联公司信息:', currentUser.value)\n            ElMessage.warning('您的账号未关联任何公司，请联系管理员')\n          }\n          \n        return currentUser.value\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        ElMessage.error('获取用户信息失败：' + (error.message || '未知错误'))\n      }\n      return null\n    }\n\n    // 获取部门列表\n    const fetchDepartments = async () => {\n      loading.value.departments = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法加载部门列表')\n          ElMessage.warning('无法加载部门列表：未找到您所属的公司')\n          loading.value.departments = false\n          return\n        }\n        \n        console.log('开始获取公司部门，公司ID:', companyId.value)\n        const res = await request(`/api/auth/companies/${companyId.value}/company_details/`)\n        console.log('获取公司部门响应:', res)\n        \n        if (res && res.success && res.data) {\n          // 计算所有联系人总数\n          const totalContactsCount = await getTotalContactsCount()\n          console.log('联系人总数:', totalContactsCount)\n          \n          // 添加全部部门选项\n          const allDepts = [\n            { \n              id: 0, \n              name: '全部联系人', \n              icon: 'bi bi-people-fill', \n              count: totalContactsCount\n            }\n          ]\n          \n          // 为每个部门添加图标\n          const deptIcons = {\n            '管理层': 'bi bi-person-workspace',\n            '人事部': 'bi bi-people',\n            '财务部': 'bi bi-cash-coin',\n            '市场部': 'bi bi-graph-up',\n            '技术部': 'bi bi-code-slash',\n            '产品部': 'bi bi-box',\n            '客服部': 'bi bi-headset',\n            '其他': 'bi bi-three-dots'  // 添加\"其他\"部门的图标\n          }\n          \n          // 确保每个部门都有count属性\n          const formattedDepts = res.data.departments.map(dept => ({\n            id: dept.id,\n            name: dept.name,\n            icon: deptIcons[dept.name] || 'bi bi-building',\n            count: dept.count || 0  // 确保count属性存在，如果为null或undefined则设为0\n          }))\n          \n          // 统计没有部门的用户数量\n          const noDeptCount = await getContactsWithNoDept()\n          \n          // 添加\"其他\"部门选项 (如果有无部门用户)\n          if (noDeptCount > 0) {\n            formattedDepts.push({\n              id: 'no-dept', // 特殊ID用于标识没有部门的用户\n              name: '其他',\n              icon: deptIcons['其他'],\n              count: noDeptCount\n            })\n          }\n          \n          departments.value = [...allDepts, ...formattedDepts]\n          console.log('部门列表加载完成:', departments.value)\n        } else {\n          console.error('获取部门列表响应格式错误:', res)\n          ElMessage.error('获取部门列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n        ElMessage.error('获取部门列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.departments = false\n      }\n    }\n\n    // 获取公司所有联系人总数\n    const getTotalContactsCount = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人总数')\n          return 0\n        }\n        \n        console.log('开始获取联系人总数，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          return res.data.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取联系人总数失败:', error)\n        return 0\n      }\n    }\n\n    // 获取没有部门的用户数量\n    const getContactsWithNoDept = async () => {\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人')\n          return 0\n        }\n        \n        console.log('开始获取无部门联系人，公司ID:', companyId.value)\n        const res = await request('/api/auth/contacts/', { params: { company: companyId.value } })\n        console.log('获取联系人总数响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 筛选没有部门的联系人\n          const contactsWithNoDept = res.data.filter(contact => \n            !contact.department || contact.department === null || contact.department === '' || \n            !contact.department_name || contact.department_name === null || contact.department_name === ''\n          )\n          return contactsWithNoDept.length\n        }\n        return 0\n      } catch (error) {\n        console.error('获取无部门联系人数量失败:', error)\n        return 0\n      }\n    }\n\n    // 获取联系人列表\n    const fetchContacts = async () => {\n      loading.value.contacts = true\n      try {\n        if (!companyId.value) {\n          console.error('未找到当前用户所属公司ID，无法获取联系人列表')\n          ElMessage.warning('未找到当前用户所属公司，无法获取联系人')\n          loading.value.contacts = false\n          return\n        }\n        \n        console.log('开始获取联系人列表，公司ID:', companyId.value)\n        let url = '/api/auth/contacts/'\n        const params = {\n          company: companyId.value // 始终添加当前用户公司ID筛选\n        }\n        \n        // 如果有搜索关键词，添加搜索参数\n        if (searchQuery.value) {\n          params.search = searchQuery.value\n        } else if (selectedDept.value !== 0) {\n          // 只有在没有搜索关键词且选择了特定部门时，才添加部门过滤\n          const selectedDeptInfo = departments.value[selectedDept.value]\n          \n          if (selectedDeptInfo) {\n            if (selectedDeptInfo.id === 'no-dept') {\n              // 如果选择了\"其他\"部门，不需要添加部门参数，稍后会在结果中筛选\n              console.log('已选择\"其他\"部门，将筛选没有部门的联系人')\n            } else {\n              // 正常部门，添加部门ID参数\n              params.department = selectedDeptInfo.id\n            }\n          } else {\n            console.error('选择的部门索引无效:', selectedDept.value)\n          }\n        }\n        \n        console.log('请求联系人列表参数:', params)\n        const res = await request(url, { params })\n        console.log('获取联系人列表响应:', res)\n        \n        if (res && res.success && Array.isArray(res.data)) {\n          // 处理返回的联系人数据，添加avatar_url\n          res.data.forEach(contact => {\n            // 检查联系人自身是否有avatar字段\n            if (contact.avatar) {\n              // 处理头像路径，将avatar转换为完整URL\n              const avatar = contact.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            } \n            // 检查联系人是否关联了用户，用户可能有头像\n            else if (contact.user && typeof contact.user === 'object' && contact.user.avatar) {\n              const avatar = contact.user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                contact.avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            // 如果用户ID是数字，可能需要额外获取用户信息\n            else if (contact.user && typeof contact.user === 'number') {\n              // 这里需要异步获取用户信息，但为简单起见，先设置一个标记\n              contact.need_fetch_avatar = true;\n            }\n\n            // 添加调试日志\n            console.log(`联系人 ${contact.name} 的头像信息:`, { \n              avatar: contact.avatar, \n              avatar_url: contact.avatar_url,\n              user: contact.user\n            });\n          });\n\n          // 如果选择了\"其他\"部门，筛选没有部门的联系人\n          if (selectedDept.value !== 0 && \n              departments.value[selectedDept.value] && \n              departments.value[selectedDept.value].id === 'no-dept') {\n            \n            contacts.value = res.data.filter(contact => \n              !contact.department || contact.department === null || contact.department === '' ||\n              !contact.department_name || contact.department_name === null || contact.department_name === ''\n            )\n            console.log('筛选出的无部门联系人:', contacts.value)\n          } else {\n            // 正常显示所有联系人或特定部门的联系人\n            contacts.value = res.data\n          }\n          \n          // 加载那些需要获取额外用户信息的联系人头像\n          contacts.value.forEach(async (contact, index) => {\n            if (contact.need_fetch_avatar) {\n              await fetchUserAvatar(contact, index);\n            }\n          });\n          \n          // 打印第一个联系人数据以查看结构\n          if (contacts.value && contacts.value.length > 0) {\n            console.log('联系人数据结构示例:', contacts.value[0])\n          } else {\n            console.log('未找到任何联系人')\n          }\n          // 默认选中第一个联系人\n          selectedContact.value = contacts.value.length > 0 ? 0 : null\n        } else {\n          console.error('获取联系人列表响应格式错误:', res)\n          ElMessage.error('获取联系人列表失败：响应格式错误')\n        }\n      } catch (error) {\n        console.error('获取联系人列表失败:', error)\n        ElMessage.error('获取联系人列表失败：' + (error.message || '未知错误'))\n      } finally {\n        loading.value.contacts = false\n      }\n    }\n\n    // 监听部门选择变化\n    watch(selectedDept, () => {\n      fetchContacts()\n    })\n\n    // 监听搜索关键词变化，使用防抖\n    let searchTimeout = null\n    watch(searchQuery, () => {\n      if (searchTimeout) {\n        clearTimeout(searchTimeout)\n      }\n      searchTimeout = setTimeout(() => {\n        fetchContacts()\n      }, 300)\n    })\n\n    // 初始化数据\n    onMounted(async () => {\n      try {\n      // 先获取当前用户信息\n        console.log('开始初始化联系人页面...')\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          console.error('未能获取到用户信息，中断初始化流程')\n          return\n        }\n        \n        if (!companyId.value) {\n          console.error('未找到用户所属公司ID，中断初始化流程')\n          return\n        }\n      \n      // 再加载部门列表\n        console.log('开始加载部门列表...')\n      await fetchDepartments()\n      \n      // 最后加载联系人列表\n        console.log('开始加载联系人列表...')\n      await fetchContacts()\n        \n        console.log('联系人页面初始化完成')\n      } catch (error) {\n        console.error('联系人页面初始化失败:', error)\n        ElMessage.error('页面加载失败：' + (error.message || '未知错误'))\n      }\n    })\n\n    // 工具方法\n    const getInitials = (name) => {\n      if (!name) return ''\n      return name.substring(0, 1)\n    }\n\n    // 跳转到聊天页面\n    const startChat = async (contact) => {\n      try {\n        console.log('联系人信息:', contact)\n        \n        // 获取认证token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          ElMessage.error('未登录或登录已过期')\n          return\n        }\n        \n        // 先获取当前用户信息\n        const currentUserResponse = await axios.get('/api/auth/users/me/', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        })\n        \n        if (!currentUserResponse.data || !currentUserResponse.data.data) {\n          ElMessage.error('获取当前用户信息失败')\n          return\n        }\n        \n        const currentUserId = currentUserResponse.data.data.id\n        console.log('当前用户ID:', currentUserId)\n        \n        // 直接使用联系人的ID创建聊天会话\n        // 因为联系人现在就是用户，所以ID直接用联系人的ID\n        const userId = parseInt(contact.id)\n        if (isNaN(userId) || userId <= 0) {\n          console.log('无效的用户ID:', contact.id)\n          ElMessage.error('无效的联系人用户ID')\n          return\n        }\n        \n        // 检查联系人用户ID是否与当前用户ID相同\n        if (userId === currentUserId) {\n          console.log('无法与自己聊天')\n          ElMessage.error('无法与自己聊天')\n          return\n        }\n        \n        // 首先获取现有的聊天会话列表\n        try {\n          console.log('正在检查是否已有与该联系人的聊天会话...')\n          const sessionsResponse = await axios.get('/api/chat/sessions/', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          })\n          \n          console.log('获取到的会话列表:', sessionsResponse.data)\n          \n          // 解析会话数据\n          let sessions = []\n          if (sessionsResponse.data && sessionsResponse.data.results) {\n            // 分页格式\n            sessions = sessionsResponse.data.results\n          } else if (sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n            // 直接数组格式\n            sessions = sessionsResponse.data\n          } else if (sessionsResponse.data && sessionsResponse.data.data && Array.isArray(sessionsResponse.data.data)) {\n            // 嵌套data格式\n            sessions = sessionsResponse.data.data\n          }\n          \n          // 查找是否有与当前联系人的单聊会话\n          // 单聊会话的特点是不是群组，且只有两个参与者\n          const existingSession = sessions.find(session => {\n            // 跳过群聊\n            if (session.is_group) return false\n            \n            // 确保有参与者数据且为数组\n            if (!session.participants || !Array.isArray(session.participants)) return false\n            \n            // 确保参与者数量为2（当前用户+目标联系人）\n            if (session.participants.length !== 2) return false\n            \n            // 查找是否有目标联系人在参与者中\n            const hasTargetUser = session.participants.some(participant => {\n              return participant.user && participant.user.id === userId\n            })\n            \n            return hasTargetUser\n          })\n          \n          if (existingSession) {\n            // 找到现有会话，直接跳转\n            console.log('找到现有会话:', existingSession)\n            router.push({\n              path: '/chat',\n              query: { id: existingSession.id }\n            })\n            return\n          } else {\n            console.log('未找到与该联系人的现有会话，将创建新会话')\n          }\n          \n          // 创建聊天会话\n          const chatData = {\n            participant_ids: [userId], // 使用整数类型\n            is_group: false,\n            title: contact.name ? `与${contact.name}的聊天` : '新聊天'\n          }\n          \n          console.log('发送创建聊天会话请求:', chatData)\n          console.log('participant_ids值:', chatData.participant_ids)\n          console.log('participant_ids[0]类型:', typeof chatData.participant_ids[0])\n          \n          // 使用API函数替代直接axios调用\n          const chatResponse = await axios.post('/api/chat/sessions/', chatData, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          \n          console.log('聊天会话创建响应:', chatResponse.data)\n          \n          // 处理响应数据\n          let sessionId = null\n          if (chatResponse.data && chatResponse.data.id) {\n            // 直接从响应获取ID\n            sessionId = chatResponse.data.id\n          } else if (chatResponse.data && chatResponse.data.data && chatResponse.data.data.id) {\n            // 从data字段获取ID\n            sessionId = chatResponse.data.data.id\n          }\n          \n          if (sessionId) {\n            console.log('获取到的会话ID:', sessionId)\n            \n            // 跳转到聊天页面，使用chat作为key\n            router.push({\n              path: '/chat',\n              query: { id: sessionId }\n            })\n          } else {\n            console.error('无法获取会话ID:', chatResponse.data)\n            ElMessage.error('创建聊天会话成功，但无法获取会话ID')\n          }\n        } catch (error) {\n          console.error('创建聊天会话失败:', error)\n          if (error.response) {\n            console.error('错误详情:', error.response.data)\n            console.error('错误状态码:', error.response.status)\n            \n            // 显示具体的错误信息\n            let errorMessage = '创建聊天会话失败'\n            if (error.response.data) {\n              if (typeof error.response.data === 'string') {\n                errorMessage = error.response.data\n              } else if (error.response.data.detail) {\n                errorMessage = error.response.data.detail\n              } else if (error.response.data.message) {\n                errorMessage = error.response.data.message\n              } else if (\n                error.response.data.participant_ids && \n                Array.isArray(error.response.data.participant_ids) && \n                error.response.data.participant_ids.length > 0\n              ) {\n                errorMessage = error.response.data.participant_ids[0]\n              } else {\n                errorMessage = '创建聊天会话失败: ' + JSON.stringify(error.response.data)\n              }\n            }\n            ElMessage.error(errorMessage)\n          } else {\n            ElMessage.error('创建聊天会话失败：网络错误')\n          }\n          throw error\n        }\n      } catch (error) {\n        console.error('操作失败:', error)\n        ElMessage.error('操作失败：' + (error.message || '未知错误'))\n      }\n    }\n\n    // 添加获取用户头像的辅助函数\n    const fetchUserAvatar = async (contact, index) => {\n      if (!contact.user || typeof contact.user !== 'number') return;\n      \n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log(`为联系人 ${contact.name} 获取用户头像...`);\n        const response = await axios.get(`/api/auth/users/${contact.user}/`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        \n        let userData = null;\n        if (response.data && response.data.success && response.data.data) {\n          userData = response.data.data;\n        } else if (response.data) {\n          userData = response.data;\n        }\n        \n        if (userData && userData.avatar) {\n          const avatar = userData.avatar;\n          if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n            contact.avatar_url = avatar;\n          } else if (avatar.startsWith('/')) {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n          } else {\n            contact.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n          }\n          console.log(`成功获取联系人 ${contact.name} 的头像:`, contact.avatar_url);\n          \n          // 这里需要通过Vue的响应式系统更新联系人数据\n          if (index !== undefined && index >= 0 && index < contacts.value.length) {\n            contacts.value[index] = { ...contact };\n          }\n        }\n      } catch (error) {\n        console.error(`获取联系人 ${contact.name} 的用户头像失败:`, error);\n      }\n    };\n\n    return {\n      searchQuery,\n      selectedDept,\n      selectedContact,\n      departments,\n      contacts,\n      loading,\n      getInitials,\n      startChat,\n      getDeptIcon,\n      getAvatarStyle\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.contact-container {\n  padding: 20px;\n}\n\n.contact-wrapper {\n  display: flex;\n  gap: 20px;\n  height: calc(100vh - 140px);\n}\n\n.contact-sidebar {\n  width: 240px;\n  flex-shrink: 0;\n}\n\n.contact-list {\n  width: 320px;\n  flex-shrink: 0;\n}\n\n.contact-detail {\n  flex: 1;\n  min-width: 0;\n}\n\n.contacts-nav-card,\n.contacts-list-card,\n.contact-detail-card {\n  height: 100%;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  transition: all 0.3s;\n  \n  &:hover {\n    box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n  }\n}\n\n.search-box {\n  margin-bottom: 15px;\n}\n\n.contacts-nav {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.dept-item {\n  padding: 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  transition: all 0.3s ease;\n  \n  .el-icon {\n    font-size: 16px;\n    margin-right: 10px;\n    color: var(--el-text-color-secondary);\n  }\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n    color: var(--el-color-primary);\n    \n    .el-icon {\n      color: var(--el-color-primary);\n    }\n  }\n  \n  span {\n    flex: 1;\n    font-size: 14px;\n  }\n}\n\n.dept-badge {\n  margin-left: 5px;\n}\n\n.dept-badge :deep(.el-badge__content) {\n  background-color: #909399 !important;\n  color: white !important;\n}\n\n.card-header-flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-title {\n  font-size: 16px;\n  font-weight: 500;\n}\n\n.contact-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  background-color: var(--el-fill-color-light);\n  padding: 2px 8px;\n  border-radius: 10px;\n}\n\n.search-info {\n  background-color: var(--el-fill-color-light);\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 6px;\n    color: var(--el-color-info);\n  }\n}\n\n.contacts-list {\n  max-height: calc(100vh - 240px);\n  overflow-y: auto;\n  padding-right: 5px;\n  \n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(144, 147, 153, 0.3);\n    border-radius: 2px;\n  }\n}\n\n.contact-item {\n  display: flex;\n  padding: 12px;\n  border-radius: 6px;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background-color: var(--el-fill-color-light);\n  }\n  \n  &.active {\n    background-color: var(--el-color-primary-light-9);\n  }\n}\n\n.contact-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-right: 12px;\n  font-size: 16px;\n}\n\n.contact-info {\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.contact-name {\n  font-weight: 500;\n  margin-bottom: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-position {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.contact-header {\n  display: flex;\n  margin-bottom: 24px;\n}\n\n.detail-avatar {\n  width: 64px;\n  height: 64px;\n  border-radius: 50%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 24px;\n  margin-right: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.detail-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.detail-name {\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 6px;\n}\n\n.detail-position, .detail-department {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-actions {\n  margin-top: 12px;\n  display: flex;\n  gap: 10px;\n}\n\n.contact-sections {\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n\n.contact-section {\n  margin-bottom: 0;\n}\n\n.section-title {\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: center;\n  \n  .el-icon {\n    margin-right: 8px;\n    color: var(--el-color-primary);\n    font-size: 18px;\n  }\n}\n\n.contact-grid {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -10px;\n}\n\n.contact-item-box {\n  width: 50%;\n  padding: 0 10px;\n  margin-bottom: 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.contact-item-icon {\n  color: var(--el-color-info);\n  margin-right: 10px;\n  font-size: 16px;\n}\n\n.contact-item-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.contact-item-label {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  margin-bottom: 4px;\n}\n\n.contact-item-value {\n  font-size: 14px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.skills-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.skill-tag {\n  margin: 0;\n}\n\n// 响应式布局\n@media (max-width: 1200px) {\n  .contact-wrapper {\n    flex-wrap: wrap;\n    height: auto;\n  }\n  \n  .contact-sidebar {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-nav {\n    max-height: 200px;\n  }\n  \n  .contact-list {\n    width: 40%;\n  }\n  \n  .contact-detail {\n    width: 60%;\n  }\n  \n  .contact-item-box {\n    width: 100%;\n  }\n}\n\n@media (max-width: 768px) {\n  .contact-wrapper {\n    flex-direction: column;\n  }\n  \n  .contact-list,\n  .contact-detail {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n  \n  .contacts-list,\n  .contacts-nav {\n    max-height: 300px;\n  }\n}\n\n.avatar-img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n:deep(.el-tag) {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--text-color) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-tag.el-tag--info) {\n  background: var(--bg-color-tertiary) !important;\n  border-color: var(--border-color) !important;\n  color: var(--text-color) !important;\n}\n:deep(.el-tag.el-tag--success) {\n  background: var(--success-color) !important;\n  border-color: var(--success-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--primary) {\n  background: var(--primary-color) !important;\n  border-color: var(--primary-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--warning) {\n  background: var(--warning-color) !important;\n  border-color: var(--warning-color) !important;\n  color: #fff !important;\n}\n:deep(.el-tag.el-tag--danger) {\n  background: var(--danger-color) !important;\n  border-color: var(--danger-color) !important;\n  color: #fff !important;\n}\n:deep(.el-badge__content) {\n  background: var(--danger-color) !important;\n  color: #fff !important;\n}\n.contact-item:hover,\n.dept-item:hover,\n.search-info,\n.contact-count {\n  background-color: var(--hover-color) !important;\n}\n:deep(.el-table__row:hover > td.el-table__cell) {\n  background-color: var(--hover-color) !important;\n}\n\n.contacts-nav-card {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n:deep(.el-card.contacts-nav-card) {\n  background: var(--bg-color-secondary) !important;\n  border-color: var(--border-color) !important;\n}\n.dept-item.active {\n  background: var(--bg-color-tertiary) !important;\n  color: var(--primary-color) !important;\n}\n.dept-item {\n  background: transparent !important;\n}\n\n:deep(.el-badge__content.is-fixed) {\n  position: static !important;\n  transform: none !important;\n}\n</style> ","import axios from 'axios'\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\n\n/**\n * 封装API请求钩子函数\n * @returns {Object} 包含request方法和loading状态的对象\n */\nexport function useRequest() {\n  const loading = ref(false)\n  \n  // 创建axios实例\n  const instance = axios.create({\n    timeout: 10000, // 请求超时时间\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  \n  // 请求拦截器\n  instance.interceptors.request.use(\n    config => {\n      // 从localStorage获取token\n      const token = localStorage.getItem('token')\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`\n      }\n      return config\n    },\n    error => {\n      console.error('请求错误:', error)\n      return Promise.reject(error)\n    }\n  )\n  \n  // 响应拦截器\n  instance.interceptors.response.use(\n    response => {\n      // 如果响应成功但业务状态码表示失败\n      if (response.data && response.data.code >= 400) {\n        ElMessage.error(response.data.message || '请求失败')\n        return Promise.reject(response.data)\n      }\n      return response.data\n    },\n    error => {\n      // 处理响应错误\n      if (error.response) {\n        const status = error.response.status\n        \n        if (status === 401) {\n          // 未授权，可能是token过期\n          ElMessage.error('登录已过期，请重新登录')\n          localStorage.removeItem('token')\n          // 跳转到登录页\n          window.location.href = '/login'\n        } else if (status === 403) {\n          ElMessage.error('没有权限执行此操作')\n        } else if (status === 404) {\n          ElMessage.error('请求的资源不存在')\n        } else if (status === 500) {\n          ElMessage.error('服务器内部错误')\n        } else {\n          ElMessage.error(error.response.data?.message || '请求失败')\n        }\n      } else if (error.request) {\n        // 请求已发送但没有收到响应\n        ElMessage.error('服务器无响应，请稍后重试')\n      } else {\n        // 请求配置出错\n        ElMessage.error('请求配置错误')\n      }\n      \n      return Promise.reject(error)\n    }\n  )\n  \n  /**\n   * 通用请求方法\n   * @param {string} url - 请求地址\n   * @param {Object} options - 请求配置\n   * @returns {Promise} 请求结果\n   */\n  const request = async (url, options = {}) => {\n    loading.value = true\n    \n    try {\n      const { method = 'GET', params, data, ...rest } = options\n      \n      const config = {\n        url,\n        method,\n        params,\n        data,\n        ...rest\n      }\n      \n      const response = await instance(config)\n      return response\n    } catch (error) {\n      console.error('请求出错:', error)\n      throw error\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  return {\n    loading,\n    request\n  }\n} ","import { render } from \"./Index.vue?vue&type=template&id=d0b5a8e4&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=d0b5a8e4&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\18083\\\\Desktop\\\\CCIT\\\\office\\\\smart-office\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d0b5a8e4\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=0&id=d0b5a8e4&lang=scss&scoped=true\"","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar IS_PURE = require('../internals/is-pure');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar filterWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('filter', TypeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var predicate = this.predicate;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, predicate, [value, this.counter++], true)) return value;\n  }\n});\n\n// `Iterator.prototype.filter` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.filter\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || filterWithoutClosingOnEarlyError }, {\n  filter: function filter(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (filterWithoutClosingOnEarlyError) return call(filterWithoutClosingOnEarlyError, this, predicate);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      predicate: predicate\n    });\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n"],"sourceRoot":""}