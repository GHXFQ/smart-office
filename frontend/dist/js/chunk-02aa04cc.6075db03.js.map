{"version":3,"sources":["webpack:///./src/views/chat/Index.vue","webpack:///./src/views/chat/Index.vue?d5a2","webpack:///./src/views/chat/Index.vue?522d","webpack:///./node_modules/core-js/modules/web.url-search-params.has.js","webpack:///./src/api/ai.js","webpack:///./node_modules/core-js/modules/web.url-search-params.size.js","webpack:///./node_modules/core-js/modules/web.url-search-params.delete.js","webpack:///./node_modules/core-js/modules/es.iterator.filter.js","webpack:///./src/utils/date.js","webpack:///./node_modules/core-js/internals/validate-arguments-length.js","webpack:///./src/api/chat.js","webpack:///./src/api/knowledge.js","webpack:///./node_modules/core-js/modules/es.iterator.find.js"],"names":["class","ref","style","element-loading-text","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","body-style","backgroundColor","padding","$setup","sessionsLoading","_hoisted_2","_component_el_alert","title","type","closable","show-icon","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_component_el_input","searchQuery","$event","placeholder","clearable","prefix-icon","Search","_component_el_button","circle","size","onClick","refreshChatSessions","_component_el_icon","_component_Refresh","_hoisted_7","_Fragment","_renderList","tabs","tab","index","key","_normalizeClass","activeTab","_hoisted_8","_hoisted_9","Object","keys","groupedUsersByDepartment","length","_hoisted_10","departmentUsers","deptName","_hoisted_11","_toDisplayString","contact","id","selectedContact","selectContact","_hoisted_13","avatar","avatar_url","src","alt","_normalizeStyle","color","_hoisted_14","initial","status","_hoisted_16","_hoisted_17","name","_hoisted_18","lastTime","_hoisted_19","lastMessage","unread","_createBlock","_component_el_badge","value","_hoisted_20","_component_el_skeleton","rows","animated","filteredContacts","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_component_el_empty","description","image-size","image","_withCtx","_component_UserFilled","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","currentContact","_hoisted_34","_hoisted_36","getStatusText","_hoisted_37","_component_el_tooltip","content","placement","openSummaryDialog","_cache","xmlns","width","height","fill","viewBox","d","_hoisted_38","messages","message","sender","userId","_hoisted_39","_hoisted_40","getSenderColor","_hoisted_41","getSenderInitial","onContextmenu","_withModifiers","openContextMenu","message_type","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","toggleImageExpand","file","downloadFile","_hoisted_51","_hoisted_52","_component_Document","_hoisted_53","_hoisted_54","_hoisted_55","getFileName","file_name","_hoisted_56","getFileExtension","_hoisted_57","_hoisted_58","formatFileSize","file_size","viewKnowledge","_hoisted_60","_hoisted_61","_component_Reading","_hoisted_62","_hoisted_63","knowledge_detail","_hoisted_64","_hoisted_65","_hoisted_66","file_type","_hoisted_67","formatMessageTime","created_at","messagesLoading","_hoisted_69","_hoisted_70","_hoisted_68","_component_ChatLineSquare","_hoisted_71","_hoisted_72","openImageUpload","loading","imageUploading","_component_PictureFilled","openFileUpload","fileUploading","_component_FolderOpened","_hoisted_73","messageInput","resize","onKeyup","_withKeys","sendMessage","_hoisted_74","_component_Position","_hoisted_75","_hoisted_76","_component_ChatDotSquare","onChange","args","handleFileUpload","accept","handleImageUpload","_component_el_dialog","knowledgeDialogVisible","footer","_hoisted_77","_component_el_table","data","knowledgeList","onRowClick","selectKnowledge","_component_el_table_column","prop","label","default","scope","_component_el_tag","row","formatDate","shareKnowledge","knowledgeLoading","summaryDialogVisible","onClose","handleCloseSummaryDialog","top","_hoisted_82","handleSummarize","disabled","summaryLoading","_hoisted_78","_component_el_form","label-position","_component_el_form_item","_component_el_date_picker","summaryDateRange","range-separator","start-placeholder","end-placeholder","picker-options","pickerOptions","summaryContent","_hoisted_79","_hoisted_80","_hoisted_81","expandedImage","contextMenuStyle","addToCalendarFromMessage","_component_Calendar","copyMessageContent","_component_DocumentCopy","contextMenuVisible","calendarDialogVisible","_hoisted_85","submitCalendarEvent","isSubmitting","_hoisted_84","model","calendarEvent","rules","calendarRules","label-width","start","format","value-format","end","location","_component_el_select","_component_el_option","reminder","isAnalyzing","components","Calendar","DocumentCopy","setup","store","useStore","currentUser","computed","getters","user","userInfo","messageContainer","fileInput","imageInput","chatSessions","currentChatId","selectedKnowledge","contacts","allColleagues","departments","find","c","_userInfo$value","filter","toLowerCase","includes","getActiveContacts","isGroup","usersMap","Map","forEach","set","colleague","has","username","trim","getRandomColor","department","departmentMap","map","dept","groupedUsers","Array","from","values","departmentName","get","push","route","useRoute","refreshInterval","onBeforeUnmount","clearInterval","onMounted","async","userData","fetchCurrentUser","ElMessage","error","console","log","loadAllUsers","loadDepartments","loadChatSessions","sessionId","query","session","foundContact","parseInt","loadChatMessages","setInterval","nextTick","scrollToBottom","token","localStorage","getItem","warn","warning","response","request","url","method","Error","setItem","JSON","stringify","isBackgroundRefresh","getChatSessions","success","isArray","results","otherParticipant","participants","p","is_group","last_message","updated_at","unread_count","startsWith","process","VUE_APP_BASE_API","first_name","last_name","sort","a","b","chatId","getChatSession","messageData","sessionData","possibleMessageFields","field","some","tempContact","unshift","res","params","chat","selectedDocumentIds","doc","e","errorMessage","scrollTop","scrollHeight","contactId","replace","existingChat","participant_ids","newSession","Date","watch","tempMessage","now","toISOString","is_temp","messageCopy","aiMsg","aiChatWithDocuments","chat_id","document_ids","aiContent","tempIndex","findIndex","m","splice","sendTextMessage","savedMessage","click","event","target","files","sendFileMessage","formData","FormData","append","headers","docRes","maxSize","sendImageMessage","openKnowledgeDialog","loadKnowledgeList","getKnowledgeList","sendKnowledgeMessage","knowledge","downloadMessageFile","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","removeChild","ElMessageBox","alert","dangerouslyUseHTMLString","confirmButtonText","colors","timestamp","date","diff","hours","getHours","toString","padStart","minutes","getMinutes","days","getDay","getMonth","getDate","getFullYear","sizeInKB","toFixed","statusMap","forceRefresh","info","company","companyId","users","u","depts","setDate","shortcuts","text","picker","setTime","getTime","$emit","startDate","endDate","summarizeChat","summary","imageUrl","fullName","lastDot","lastIndexOf","substring","left","selectedMessage","preventDefault","clientY","clientX","addEventListener","closeContextMenu","once","navigator","clipboard","writeText","then","catch","err","calendarFormRef","reactive","required","trigger","validateEndTime","rule","callback","toDateString","newValue","validateField","validator","_response$data","messageContent","analyzeForCalendar","eventData","is_all_day","_selectedMessage$valu","validate","valid","createCalendarEvent","_error$response","_error$response$data","menuEl","querySelector","contains","Document","PictureFilled","FolderOpened","Microphone","Position","ChatDotSquare","Reading","UserFilled","ChatLineSquare","Refresh","__exports__","render","defineBuiltIn","uncurryThis","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","prototype","getAll","$has","undefined","arguments","$value","this","enumerable","unsafe","getScheduleReminders","markScheduleReminderAsRead","responseType","aiChatWithDocumentsStream","onChunk","onComplete","onError","controller","AbortController","signal","fetch","ok","errorData","json","reader","getReader","decoder","TextDecoder","buffer","lastChatId","processStream","done","read","decode","stream","lines","split","pop","line","jsonStr","parsed","parse","getAIChatSessions","getAIChatSession","deleteAIChatSession","DESCRIPTORS","defineBuiltInAccessor","count","configurable","$delete","entries","v","k","entry","dindex","found","entriesLength","$","call","aCallable","anObject","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","IS_PURE","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","filterWithoutClosingOnEarlyError","TypeError","IteratorProxy","result","iterator","predicate","next","counter","proto","real","forced","formatRelativeTime","isNaN","seconds","Math","floor","months","years","$TypeError","module","exports","passed","createChatSession","messageId","findOrCreateChat","user_id","findOrCreateChatWithUsers","userIds","start_date","end_date","baseURL","getCategories","addCategory","updateCategory","deleteCategory","getDocuments","uploadDocument","Promise","reject","lastModified","timeout","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","code","updateDocument","deleteDocument","requestConfig","downloadDocumentFile","getDocumentChunks","documentId","buildKnowledgeBase","getKnowledgeBaseStatus","iterate","findWithoutClosingOnEarlyError","record","stop","IS_RECORD","INTERRUPTED"],"mappings":"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","file":"js/chunk-02aa04cc.6075db03.js","sourcesContent":["<template>\n  <div class=\"chat-container\">\n        <el-card class=\"chat-card\" :body-style=\"{backgroundColor: 'transparent', padding: 0}\">\n          <div class=\"chat-header-actions\" v-if=\"sessionsLoading\">\n            <el-alert\n              title=\"正在加载数据...\"\n              type=\"info\"\n              :closable=\"false\"\n              show-icon\n            />\n          </div>\n          <div class=\"chat-layout\">\n            <!-- 左侧联系人列表 -->\n            <div class=\"chat-sidebar\">\n              <!-- 搜索框 -->\n              <div class=\"search-box\">\n                <div class=\"search-header\">\n                  <el-input \n                    v-model=\"searchQuery\" \n                    placeholder=\"搜索联系人...\"\n                    clearable\n                    :prefix-icon=\"Search\"\n                  ></el-input>\n                  <el-button circle size=\"small\" @click=\"refreshChatSessions\" title=\"刷新列表\">\n                    <el-icon><Refresh /></el-icon>\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 聊天标签页 -->\n              <div class=\"chat-tabs\">\n                <div \n                  v-for=\"(tab, index) in tabs\" \n                  :key=\"index\"\n                  class=\"chat-tab\"\n                  :class=\"{'active': activeTab === index}\"\n                  @click=\"activeTab = index\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              \n              <!-- 联系人列表 -->\n              <div class=\"contacts-list\">\n                <!-- 部门分组显示 (仅在同事标签页显示) -->\n                <template v-if=\"activeTab === 1\">\n                  <div v-if=\"!sessionsLoading && Object.keys(groupedUsersByDepartment).length > 0\">\n                    <div v-for=\"(departmentUsers, deptName) in groupedUsersByDepartment\" :key=\"deptName\" class=\"department-group\">\n                      <div class=\"department-header\">{{ deptName }}</div>\n                      <div \n                        v-for=\"contact in departmentUsers\" \n                        :key=\"contact.id\"\n                        class=\"contact-item\"\n                        :class=\"{'active': selectedContact === contact.id}\"\n                        @click=\"selectContact(contact)\"\n                      >\n                        <div class=\"contact-avatar\">\n                          <div \n                            v-if=\"!contact.avatar && !contact.avatar_url\" \n                            class=\"avatar\" \n                            :style=\"{backgroundColor: contact.color}\"\n                          >\n                            <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                          </div>\n                          <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                          <div \n                            class=\"contact-status\" \n                            :class=\"'status-' + contact.status\"\n                          ></div>\n                        </div>\n                        <div class=\"contact-info\">\n                          <div class=\"contact-name\">\n                            <span>{{ contact.name }}</span>\n                            <span class=\"time\">{{ contact.lastTime }}</span>\n                          </div>\n                          <div class=\"contact-message\">\n                            <span>{{ contact.lastMessage }}</span>\n                            <el-badge \n                              v-if=\"contact.unread\" \n                              :value=\"contact.unread\" \n                              class=\"message-badge\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div v-else-if=\"!sessionsLoading\" class=\"loading-container\">\n                    <el-skeleton :rows=\"5\" animated />\n                  </div>\n                </template>\n                \n                <!-- 最近聊天标签页 -->\n                <template v-else>\n                  <div \n                    v-for=\"contact in filteredContacts\" \n                    :key=\"contact.id\"\n                    class=\"contact-item\"\n                    :class=\"{'active': selectedContact === contact.id}\"\n                    @click=\"selectContact(contact)\"\n                  >\n                    <div class=\"contact-avatar\">\n                      <div \n                        v-if=\"!contact.avatar && !contact.avatar_url\" \n                        class=\"avatar\" \n                        :style=\"{backgroundColor: contact.color}\"\n                      >\n                        <span class=\"avatar-initial\">{{ contact.initial }}</span>\n                      </div>\n                      <img v-else :src=\"contact.avatar_url || contact.avatar\" alt=\"avatar\" class=\"avatar\" />\n                      <div \n                        class=\"contact-status\" \n                        :class=\"'status-' + contact.status\"\n                      ></div>\n                    </div>\n                    <div class=\"contact-info\">\n                      <div class=\"contact-name\">\n                        <span>{{ contact.name }}</span>\n                        <span class=\"time\">{{ contact.lastTime }}</span>\n                      </div>\n                      <div class=\"contact-message\">\n                        <span>{{ contact.lastMessage }}</span>\n                        <el-badge \n                          v-if=\"contact.unread\" \n                          :value=\"contact.unread\" \n                          class=\"message-badge\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- 在最近聊天标签页，如果没有聊天记录，显示提示 -->\n                  <div v-if=\"!sessionsLoading && filteredContacts.length === 0\" class=\"empty-contacts\">\n                    <el-empty \n                      description=\"暂无联系人\" \n                      :image-size=\"100\"\n                    >\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><UserFilled /></el-icon>\n                      </template>\n                    </el-empty>\n                  </div>\n                </template>\n\n                <!-- 无联系人提示 -->\n                <div v-if=\"sessionsLoading\" class=\"loading-container\">\n                  <el-skeleton :rows=\"5\" animated />\n                </div>\n              </div>\n            </div>\n            \n            <!-- 右侧聊天内容 -->\n            <div class=\"chat-content\">\n              <!-- 聊天头部 -->\n              <div class=\"chat-header\" v-if=\"selectedContact !== null\">\n                <div class=\"contact-avatar\">\n                  <div \n                    v-if=\"!currentContact.avatar && !currentContact.avatar_url\" \n                    class=\"avatar\" \n                    :style=\"{backgroundColor: currentContact.color}\"\n                  >\n                    <span class=\"avatar-initial\">{{ currentContact.initial || '?' }}</span>\n                  </div>\n                  <img \n                    v-else \n                    :src=\"currentContact.avatar_url || currentContact.avatar\" \n                    alt=\"avatar\" \n                    class=\"avatar\" \n                  />\n                  <div \n                    class=\"contact-status\" \n                    :class=\"'status-' + (currentContact.status || 'online')\"\n                  ></div>\n                </div>\n                <div class=\"contact-info\">\n              <h6>{{ currentContact.name || '未命名联系人' }}</h6>\n              <p>{{ getStatusText(currentContact.status || 'online') }}</p>\n                </div>\n                <div class=\"chat-actions\">\n                  <el-tooltip content=\"AI总结\" placement=\"bottom\">\n                    <el-button @click=\"openSummaryDialog\" circle>\n                      <el-icon><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-robot\" viewBox=\"0 0 16 16\">\n                        <path d=\"M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5M3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.6 26.6 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.93.93 0 0 1-.765.935c-.845.147-2.34.346-4.235.346s-3.39-.2-4.235-.346A.93.93 0 0 1 3 9.22z\"/>\n                        <path d=\"M4 1.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5M12 1a2 2 0 0 1 2 2v10.5a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zM4 0a1 1 0 0 0-1 1v10.5a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1z\"/>\n                      </svg></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                </div>\n              </div>\n              \n              <!-- 聊天消息区域 -->\n              <div class=\"chat-messages\" v-if=\"selectedContact !== null\" ref=\"messageContainer\">\n                <!-- 有消息时显示消息列表 -->\n                <template v-if=\"messages.length > 0\">\n                  <div \n                    v-for=\"(message, index) in messages\" \n                    :key=\"message.id || index\"\n                    class=\"message\"\n                    :class=\"message.sender.id === userId ? 'message-sent' : 'message-received'\"\n                  >\n                    <div class=\"message-container\">\n                      <div v-if=\"message.sender.id !== userId\" class=\"message-avatar\">\n                        <div \n                          v-if=\"!message.sender.avatar && !message.sender.avatar_url\" \n                          class=\"avatar small\" \n                          :style=\"{backgroundColor: getSenderColor(message.sender)}\"\n                        >\n                          <span class=\"avatar-initial\">{{ getSenderInitial(message.sender) }}</span>\n                        </div>\n                        <img \n                          v-else \n                          :src=\"message.sender.avatar_url || message.sender.avatar\" \n                          alt=\"avatar\" \n                          class=\"avatar small\" \n                        />\n                      </div>\n                      <div class=\"message-content-wrapper\" @contextmenu.prevent=\"openContextMenu($event, message)\">\n                        <div \n                          class=\"message-content\"\n                          :class=\"message.sender.id === userId ? 'sent' : 'received'\"\n                        >\n                          <div v-if=\"message.message_type === 'text'\" class=\"text-card\">\n                            <div class=\"text-card-inner\">\n                              {{ message.content }}\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'image'\" class=\"image-card\">\n                            <div class=\"image-card-inner\">\n                              <div class=\"image-preview\" @click=\"toggleImageExpand(message.file)\">\n                                <img :src=\"message.file\" alt=\"image\" />\n                              </div>\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'file'\" class=\"file-card\" @click=\"downloadFile(message)\">\n                            <div class=\"file-card-inner\">\n                              <div class=\"file-icon\">\n                                <el-icon><Document /></el-icon>\n                              </div>\n                              <div class=\"file-info\">\n                                <div class=\"file-name\">\n                                  <span class=\"file-name-main\">{{ getFileName(message.file_name) }}</span><!--\n                                --><span class=\"file-name-ext\">{{ getFileExtension(message.file_name) }}</span>\n                                </div>\n                                <div class=\"file-meta\">\n                                  <span class=\"file-size\">{{ formatFileSize(message.file_size) }}</span>\n                                  <span class=\"file-download-hint\">点击下载</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      \n                          <div v-else-if=\"message.message_type === 'knowledge'\" class=\"knowledge-card\" @click=\"viewKnowledge(message)\">\n                            <div class=\"knowledge-card-inner\">\n                              <div class=\"knowledge-icon\">\n                                <el-icon><Reading /></el-icon>\n                              </div>\n                              <div class=\"knowledge-content\">\n                                <div class=\"knowledge-title\">{{ message.knowledge_detail.title }}</div>\n                                <div class=\"knowledge-desc\">{{ message.knowledge_detail.description }}</div>\n                                <div class=\"knowledge-footer\">\n                                  <span class=\"knowledge-type\">{{ message.knowledge_detail.file_type }}</span>\n                                  <span class=\"knowledge-view\">查看详情</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"message-time\">{{ formatMessageTime(message.created_at) }}</div>\n                      </div>\n                    </div>\n                  </div>\n                </template>\n                \n                <!-- 没有消息时显示空提示 -->\n                <template v-else-if=\"!messagesLoading\">\n                  <div class=\"empty-messages\">\n                    <el-empty description=\"暂无消息记录\">\n                      <template #image>\n                        <el-icon :size=\"64\" class=\"empty-icon\"><ChatLineSquare /></el-icon>\n                      </template>\n                      <p>发送第一条消息开始对话吧</p>\n                    </el-empty>\n                  </div>\n                </template>\n                \n                <!-- 加载中显示骨架屏 -->\n                <template v-else>\n                  <div class=\"loading-messages\">\n                    <el-skeleton :rows=\"3\" animated />\n                    <el-skeleton style=\"margin-top: 20px\" :rows=\"2\" animated />\n                    <div style=\"text-align: right; margin-top: 20px\">\n                      <el-skeleton :rows=\"2\" animated />\n                    </div>\n                  </div>\n                </template>\n              </div>\n              \n              <!-- 聊天输入框 -->\n              <div class=\"chat-input\" v-if=\"selectedContact !== null\">\n                <div class=\"chat-tools\">\n                  <el-tooltip content=\"发送图片\" placement=\"top\">\n                    <el-button circle @click=\"openImageUpload\" :loading=\"imageUploading\">\n                      <el-icon><PictureFilled /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"发送文件\" placement=\"top\">\n                    <el-button circle @click=\"openFileUpload\" :loading=\"fileUploading\">\n                      <el-icon><FolderOpened /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <!-- <el-tooltip content=\"分享知识库文件\" placement=\"top\">\n                    <el-button circle @click=\"openKnowledgeDialog\">\n                      <el-icon><Reading /></el-icon>\n                    </el-button>\n                  </el-tooltip>\n                  <el-tooltip content=\"语音消息\" placement=\"top\">\n                    <el-button circle>\n                      <el-icon><Microphone /></el-icon>\n                    </el-button>\n                  </el-tooltip> -->\n                </div>\n                <div class=\"input-area\">\n                  <el-input\n                    v-model=\"messageInput\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    placeholder=\"输入消息...\"\n                    resize=\"none\"\n                    @keyup.enter.prevent=\"sendMessage\"\n                  ></el-input>\n                </div>\n                <div class=\"send-button\">\n                  <el-button type=\"primary\" @click=\"sendMessage\">\n                    <el-icon><Position /></el-icon>\n                    发送\n                  </el-button>\n                </div>\n              </div>\n              \n              <!-- 无选中联系人提示 -->\n              <div class=\"empty-chat\" v-if=\"selectedContact === null\">\n                <div class=\"empty-illustration\">\n                  <el-icon :size=\"64\"><ChatDotSquare /></el-icon>\n                </div>\n                <h4>选择一个联系人开始聊天</h4>\n                <p>从左侧列表选择联系人开始对话</p>\n              </div>\n            </div>\n          </div>\n        </el-card>\n  \n  <!-- 隐藏的文件上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"fileInput\" \n    style=\"display: none\" \n    @change=\"handleFileUpload\" \n  />\n  \n  <!-- 隐藏的图片上传输入 -->\n  <input \n    type=\"file\" \n    ref=\"imageInput\" \n    style=\"display: none\" \n    accept=\"image/*\" \n    @change=\"handleImageUpload\" \n  />\n  \n  <!-- 知识库选择对话框 -->\n  <el-dialog\n    v-model=\"knowledgeDialogVisible\"\n    title=\"选择知识库文件\"\n    width=\"50%\"\n  >\n    <el-table\n      v-loading=\"knowledgeLoading\"\n      :data=\"knowledgeList\"\n      style=\"width: 100%\"\n      @row-click=\"selectKnowledge\"\n    >\n      <el-table-column prop=\"title\" label=\"标题\"></el-table-column>\n      <el-table-column prop=\"file_type\" label=\"类型\">\n        <template #default=\"scope\">\n          <el-tag>{{ scope.row.file_type }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"created_at\" label=\"创建时间\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.created_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click.stop=\"shareKnowledge(scope.row)\">\n            分享\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"knowledgeDialogVisible = false\">取消</el-button>\n      </span>\n    </template>\n  </el-dialog>\n\n  <!-- AI总结对话框 -->\n  <el-dialog\n    v-model=\"summaryDialogVisible\"\n    title=\"AI 聊天总结\"\n    width=\"50%\"\n    @close=\"handleCloseSummaryDialog\"\n    top=\"5vh\"\n  >\n    <div v-loading=\"summaryLoading\" element-loading-text=\"正在生成摘要，请稍候...\">\n      <el-form label-position=\"top\" style=\"margin-bottom: 20px;\">\n        <el-form-item label=\"选择要总结的消息时间范围\">\n          <el-date-picker\n            v-model=\"summaryDateRange\"\n            type=\"datetimerange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            :picker-options=\"pickerOptions\"\n            style=\"width: 100%;\"\n          />\n        </el-form-item>\n      </el-form>\n      <div v-if=\"summaryContent\" class=\"summary-content-wrapper\">\n        <el-alert title=\"AI 总结要点\" type=\"info\" :closable=\"false\" show-icon class=\"summary-title\"></el-alert>\n        <div class=\"summary-content\">\n          <p style=\"white-space: pre-wrap;\">{{ summaryContent }}</p>\n        </div>\n      </div>\n       <el-empty v-if=\"!summaryContent && !summaryLoading\" description=\"暂无摘要，请选择时间范围后点击\" />\n    </div>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"handleCloseSummaryDialog\">关闭</el-button>\n        <el-button type=\"primary\" @click=\"handleSummarize\" :disabled=\"summaryLoading\">\n          {{ summaryLoading ? '生成中...' : '生成摘要' }}\n        </el-button>\n      </span>\n    </template>\n  </el-dialog>\n\n  <!-- 替换图片预览对话框为内联展示 -->\n  <div class=\"fullscreen-image-preview\" v-if=\"expandedImage\" @click=\"expandedImage = null\">\n    <img :src=\"expandedImage\" alt=\"预览图片\" class=\"fullscreen-preview-image\" />\n  </div>\n  \n  <!-- 移除原有的图片预览对话框 -->\n  <!-- <el-dialog\n    v-model=\"imagePreviewVisible\"\n    :title=\"false\"\n    width=\"80%\"\n    center\n    append-to-body\n    :show-close=\"true\"\n    class=\"image-preview-dialog\"\n  >\n    <img :src=\"previewImageUrl\" alt=\"预览图片\" class=\"preview-image\" />\n  </el-dialog> -->\n\n  <!-- 聊天右键菜单 -->\n  <div class=\"chat-context-menu\" v-show=\"contextMenuVisible\" :style=\"contextMenuStyle\">\n    <div class=\"context-menu-item\" @click=\"addToCalendarFromMessage\">\n      <el-icon><Calendar /></el-icon>\n      <span>添加到日程</span>\n    </div>\n    <div class=\"context-menu-item\" @click=\"copyMessageContent\">\n      <el-icon><DocumentCopy /></el-icon>\n      <span>复制内容</span>\n    </div>\n  </div>\n\n  <!-- 添加日程对话框 -->\n  <el-dialog\n    v-model=\"calendarDialogVisible\"\n    title=\"添加日程\"\n    width=\"500px\"\n  >\n    <div v-loading=\"isAnalyzing\" element-loading-text=\"AI分析中...\">\n      <el-form :model=\"calendarEvent\" :rules=\"calendarRules\" ref=\"calendarFormRef\" label-width=\"80px\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"calendarEvent.title\" placeholder=\"请输入日程标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"开始时间\" prop=\"start\">\n          <el-date-picker\n            v-model=\"calendarEvent.start\"\n            type=\"datetime\"\n            placeholder=\"选择开始时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"结束时间\" prop=\"end\">\n          <el-date-picker\n            v-model=\"calendarEvent.end\"\n            type=\"datetime\"\n            placeholder=\"选择结束时间\"\n            format=\"YYYY-MM-DD HH:mm\"\n            value-format=\"YYYY-MM-DD HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"地点\" prop=\"location\">\n          <el-input v-model=\"calendarEvent.location\" placeholder=\"请输入地点\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"type\">\n          <el-select v-model=\"calendarEvent.type\" placeholder=\"请选择日程类型\">\n            <el-option label=\"会议\" value=\"blue\"></el-option>\n            <el-option label=\"出差\" value=\"orange\"></el-option>\n            <el-option label=\"假期\" value=\"green\"></el-option>\n            <el-option label=\"截止日期\" value=\"red\"></el-option>\n            <el-option label=\"其他\" value=\"purple\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"提醒\" prop=\"reminder\">\n          <el-select v-model=\"calendarEvent.reminder\" placeholder=\"请选择提醒时间\">\n            <el-option label=\"不提醒\" value=\"none\"></el-option>\n            <el-option label=\"10分钟前\" value=\"10min\"></el-option>\n            <el-option label=\"30分钟前\" value=\"30min\"></el-option>\n            <el-option label=\"1小时前\" value=\"1hour\"></el-option>\n            <el-option label=\"1天前\" value=\"1day\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input \n            v-model=\"calendarEvent.description\" \n            type=\"textarea\" \n            :rows=\"3\"\n            placeholder=\"请输入描述信息\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n    </div>\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"calendarDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitCalendarEvent\" :loading=\"isSubmitting\">确认添加</el-button>\n      </div>\n    </template>\n  </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, nextTick, onMounted, onBeforeUnmount, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { \n  Search, \n  Refresh, \n  ChatDotSquare, \n  UserFilled, \n  ChatLineSquare,\n  PictureFilled,\n  FolderOpened,\n  Reading,\n  Microphone,\n  Position,\n  Document,\n  Calendar,\n  DocumentCopy\n} from '@element-plus/icons-vue'\nimport { \n  getChatSessions, \n  getChatSession, \n  sendTextMessage, \n  sendImageMessage,\n  sendKnowledgeMessage,\n  downloadMessageFile,\n  sendFileMessage,\n  summarizeChat,\n  analyzeForCalendar,\n  createCalendarEvent\n} from '@/api/chat'\nimport { getKnowledgeList } from '@/api/knowledge'\n// eslint-disable-next-line no-unused-vars\nimport { formatDate } from '@/utils/date'\nimport request from '@/utils/request'\nimport { aiChatWithDocuments } from '@/api/ai'\n\nexport default {\n  name: 'Chat',\n  components: {\n    Calendar,\n    DocumentCopy\n  },\n  \n  setup() {\n    const store = useStore()\n    const currentUser = computed(() => store.getters.user)\n    \n    // 添加本地用户数据存储\n    const userInfo = ref(null)\n    \n    const searchQuery = ref('')\n    const activeTab = ref(0)\n    const selectedContact = ref(null)\n    const messageInput = ref('')\n    const messageContainer = ref(null)\n    const fileInput = ref(null)\n    const imageInput = ref(null)\n    const messages = ref([])\n    const sessionsLoading = ref(false)\n    const messagesLoading = ref(false)\n    const chatSessions = ref([])\n    const currentChatId = ref(null)\n    \n    // 知识库相关\n    const knowledgeDialogVisible = ref(false)\n    const knowledgeLoading = ref(false)\n    const knowledgeList = ref([])\n    const selectedKnowledge = ref(null)\n    \n    // 标签页\n    const tabs = ref(['最近聊天', '同事'])\n    \n    // 联系人列表\n    const contacts = ref([])\n    // 所有同事用户列表\n    const allColleagues = ref([])\n    \n    // 部门列表\n    const departments = ref([])\n    \n    // 当前选中的联系人\n    const currentContact = computed(() => {\n      if (selectedContact.value === null) return {}\n      return contacts.value.find(c => c.id === selectedContact.value) || {}\n    })\n    \n    // 安全地获取用户ID，避免模板中的null错误\n    const userId = computed(() => {\n      return userInfo.value?.id || null\n    })\n    \n    // 根据搜索过滤联系人\n    const filteredContacts = computed(() => {\n      if (!searchQuery.value) return contacts.value\n      return contacts.value.filter(contact =>\n        contact.name.toLowerCase().includes(searchQuery.value.toLowerCase())\n      )\n    })\n    \n    // 根据当前激活的标签页获取要显示的联系人\n    const getActiveContacts = computed(() => {\n      if (activeTab.value === 0) {\n        return filteredContacts.value\n      } else if (activeTab.value === 1) {\n        return filteredContacts.value.filter(contact => !contact.isGroup)\n      }\n      return filteredContacts.value\n    })\n    \n    \n    // 按部门分组的用户\n    const groupedUsersByDepartment = computed(() => {\n      // 合并聊天联系人和所有同事\n      const usersMap = new Map();\n      \n      // 先添加聊天联系人（非群组）\n      filteredContacts.value\n        .filter(contact => !contact.isGroup)\n        .forEach(contact => {\n          // 跳过自己\n          if (userInfo.value && contact.userId === userInfo.value.id) {\n            return;\n          }\n          // 使用ID作为唯一键\n          usersMap.set(contact.userId || contact.id, contact);\n        });\n      \n      // 再添加所有同事，但避免重复\n      allColleagues.value.forEach(colleague => {\n        // 跳过自己\n        if (userInfo.value && colleague.id === userInfo.value.id) {\n          return;\n        }\n        \n        // 只有在不存在时才添加（避免覆盖现有联系人）\n        if (!usersMap.has(colleague.id)) {\n          // 构造兼容格式的用户对象\n          const contact = {\n            id: 'user_' + colleague.id, // 添加前缀以避免与现有会话ID冲突\n            userId: colleague.id,\n            name: (colleague.name || colleague.username || '未命名联系人').trim(),\n            initial: ((colleague.name || colleague.username || '未命名联系人')[0]),\n            avatar: colleague.avatar || '',\n            color: getRandomColor(colleague.id),\n            status: 'online',\n            lastMessage: '',\n            lastTime: '',\n            unread: 0,\n            isGroup: false,\n            department: colleague.department || '其它'\n          };\n          usersMap.set(colleague.id, contact);\n        }\n      });\n      \n      // 创建一个部门ID到名称的映射\n      const departmentMap = new Map(departments.value.map(dept => [dept.id, dept.name]))\n      \n      // 按部门分组\n      const groupedUsers = {};\n      \n      // 将Map转为Array后分组\n      Array.from(usersMap.values()).forEach(user => {\n        const departmentName = departmentMap.get(user.department) || '其他';\n        if (!groupedUsers[departmentName]) {\n          groupedUsers[departmentName] = [];\n        }\n        groupedUsers[departmentName].push(user);\n      });\n      \n      return groupedUsers;\n    })\n    \n    // 路由\n    const route = useRoute()\n    \n    // 定义一个refreshInterval的引用，以便在组件卸载时清除\n    let refreshInterval = null\n    \n    // 组件卸载时清除定时器\n    onBeforeUnmount(() => {\n      if (refreshInterval) {\n        clearInterval(refreshInterval)\n      }\n    })\n    \n    // 路由相关操作\n    onMounted(async () => {\n      try {\n        // 先加载用户数据\n        const userData = await fetchCurrentUser()\n        \n        // 如果获取用户信息失败，显示错误并返回\n        if (!userData) {\n          ElMessage.error('无法加载用户信息，请刷新页面重试')\n          return\n        }\n        \n        console.log('组件挂载时获取的用户信息:', userData)\n        \n        // 确保用户数据已经更新\n        if (!userInfo.value || !userInfo.value.id) {\n          console.error('用户数据未正确加载:', userInfo.value)\n          ElMessage.error('用户数据加载异常，请刷新页面重试')\n          return\n        } else {\n          console.log('当前用户数据已正确加载:', userInfo.value)\n        }\n        \n        // 加载所有用户列表\n        await loadAllUsers()\n        \n        // 加载部门列表\n        await loadDepartments()\n        \n        // 再加载聊天会话列表\n        await loadChatSessions()\n        \n        // 检查URL参数中是否有会话ID\n        const sessionId = route.query.session || route.query.id\n        if (sessionId) {\n          // 查找对应的联系人\n          const foundContact = contacts.value.find(c => c.id === parseInt(sessionId))\n          if (foundContact) {\n            // 选中该联系人\n            selectedContact.value = foundContact.id\n            // 加载聊天记录\n            await loadChatMessages(sessionId)\n          } else {\n            // 如果未找到对应联系人，尝试直接加载会话\n            console.log('通过ID直接加载聊天会话:', sessionId)\n            await loadChatMessages(sessionId)\n          }\n        }\n      \n        // 设置定时刷新\n        refreshInterval = setInterval(async () => {\n          if (selectedContact.value) {\n            await loadChatMessages(selectedContact.value, true)\n          }\n          await loadChatSessions(true)\n        }, 30000)\n        \n        // 初始滚动到底部\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('初始化聊天组件失败:', error)\n        ElMessage.error('初始化聊天组件失败: ' + error.message)\n      }\n    })\n    \n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        console.log('开始获取当前用户信息...')\n        \n        // 检查localStorage中是否有token\n        const token = localStorage.getItem('token')\n        if (!token) {\n          console.warn('本地存储中没有找到认证token')\n          ElMessage.warning('未登录或登录已过期，请重新登录')\n          return null\n        }\n        \n        const response = await request({\n          url: '/api/auth/users/me/',\n          method: 'get'\n        })\n        \n        console.log('获取用户信息响应:', response)\n        \n        // 检查响应格式并获取用户数据\n        let userData = null\n        if (response.data && response.data.id) {\n          // 直接从data字段获取用户数据\n          userData = response.data\n          console.log('从data字段获取用户数据:', userData)\n        } else if (response.data && response.data.data && response.data.data.id) {\n          // 从嵌套data字段获取用户数据\n          userData = response.data.data\n          console.log('从嵌套data字段获取用户数据:', userData)\n        } else if (response.id) {\n          // 直接响应就是用户数据\n          userData = response\n          console.log('直接获取用户数据:', userData)\n        } else {\n          console.error('获取用户信息响应格式异常:', response)\n          throw new Error('用户信息格式异常')\n        }\n        \n        if (!userData || !userData.id) {\n          console.error('获取的用户数据无效:', userData)\n          throw new Error('无效的用户数据')\n        }\n        \n        // 不使用未定义的mutation，而是直接更新本地状态\n        userInfo.value = userData\n        \n        // 保存到localStorage以便持久化\n        localStorage.setItem('user', JSON.stringify(userData))\n        \n        console.log('用户数据已更新:', userInfo.value)\n        return userData\n      } catch (error) {\n        console.error('获取当前用户信息失败:', error)\n        ElMessage.error('获取用户信息失败: ' + (error.message || '未知错误'))\n        return null\n      }\n    }\n    \n    // 加载聊天会话列表\n    const loadChatSessions = async (isBackgroundRefresh = false) => {\n      try {\n        if (!isBackgroundRefresh) {\n          sessionsLoading.value = true\n        }\n        console.log('正在加载聊天会话列表...')\n        \n        const response = await getChatSessions()\n        console.log('获取聊天会话响应:', response)\n        \n        // 确保我们有响应数据\n        if (!response) {\n          console.error('获取聊天会话返回空响应')\n          contacts.value = []\n          return\n        }\n        \n        let data\n        if (response.success && response.data) {\n          data = response.data\n          console.log('使用包装格式的聊天数据:', data)\n        } else {\n          data = response\n          console.log('使用直接返回的聊天数据:', data)\n        }\n        \n        // 转换数据格式\n        chatSessions.value = data\n        \n        // 构建联系人列表\n        if (data && Array.isArray(data.results)) {\n          console.log('处理分页数据结构, 共有会话数:', data.results.length)\n          // 处理分页数据结构\n          contacts.value = data.results.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                userId: user.id, // 添加用户ID，用于检查是否是自己\n                name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n                initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false,\n                department: user.department || '其他' // 确保有默认部门\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group,\n              department: '其他'\n            }\n          })\n        } else if (data && Array.isArray(data)) {\n          console.log('处理非分页数据结构, 共有会话数:', data.length)\n          // 处理非分页数据结构\n          contacts.value = data.map(session => {\n            // 找到对方用户（非当前用户）\n            let otherParticipant = null\n            if (session.participants && Array.isArray(session.participants)) {\n              if (userInfo.value && userInfo.value.id) {\n                otherParticipant = session.participants.find(\n                  p => p.user && p.user.id !== userInfo.value.id\n                )\n              } else {\n                // 如果没有当前用户信息，使用第一个参与者\n                otherParticipant = session.participants[0]\n              }\n            }\n            \n            // 如果是群聊，使用群聊信息\n            if (session.is_group) {\n              return {\n                id: session.id,\n                name: session.title || '群聊',\n                initial: (session.title || '群聊')[0],\n                avatar: '',\n                avatar_url: '',\n                color: getRandomColor(session.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: true\n              }\n            }\n            \n            // 单聊，使用对方信息\n            if (otherParticipant) {\n              const user = otherParticipant.user\n              // 处理头像路径\n              let avatar_url = '';\n              if (user.avatar) {\n                const avatar = user.avatar;\n                if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                  avatar_url = avatar;\n                } else if (avatar.startsWith('/')) {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n                } else {\n                  avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n                }\n              }\n              \n              return {\n                id: session.id,\n                name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n                initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n                avatar: user.avatar || '',\n                avatar_url: avatar_url,\n                color: getRandomColor(user.id),\n                status: 'online',\n                lastMessage: session.last_message ? session.last_message.content : '',\n                lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n                unread: session.unread_count,\n                isGroup: false,\n                department: user.department || '其他'\n              }\n            }\n            \n            // 如果没有其他参与者（理论上不应该发生）\n            return {\n              id: session.id,\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(session.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: session.last_message ? formatMessageTime(session.last_message.created_at) : formatMessageTime(session.updated_at),\n              unread: session.unread_count,\n              isGroup: session.is_group,\n              department: '其他'\n            }\n          })\n        } else {\n          // 如果没有有效数据\n          console.error('获取聊天会话格式异常或为空:', data)\n          contacts.value = []\n        }\n        \n        console.log('处理后的联系人列表:', contacts.value)\n        \n        // 如果有未读消息，按未读数量排序\n        if (contacts.value.length > 0) {\n          contacts.value.sort((a, b) => b.unread - a.unread)\n        }\n      } catch (error) {\n        console.error('加载聊天会话失败:', error)\n        ElMessage.error('加载聊天会话失败: ' + (error.message || '未知错误'))\n        contacts.value = []\n      } finally {\n        if (!isBackgroundRefresh) {\n          sessionsLoading.value = false\n        }\n      }\n    }\n    \n    // 加载聊天消息\n    const loadChatMessages = async (chatId, isBackgroundRefresh = false) => {\n      if (!chatId) {\n        console.error('无法加载消息: chatId为空')\n        return\n      }\n      \n      try {\n        if (!isBackgroundRefresh) {\n          messagesLoading.value = true\n        }\n        console.log(`正在加载聊天会话 ${chatId} 的消息...`)\n        \n        const response = await getChatSession(chatId)\n        console.log('聊天会话详情响应:', response)\n        \n        if (!response) {\n          console.error('获取聊天会话详情返回空响应')\n          messages.value = []\n          return\n        }\n        \n        // 处理不同的响应格式\n        let messageData = []\n        let sessionData = null\n        \n        if (response.data && response.data.messages) {\n          // 标准格式：响应直接包含messages字段\n          messageData = response.data.messages\n          sessionData = response.data\n          console.log('标准格式消息数据，消息数量:', messageData.length)\n        } else if (response.data && response.data.data && response.data.data.messages) {\n          // 包装格式：{success: true, data: {messages: [...]}}\n          messageData = response.data.data.messages\n          sessionData = response.data.data\n          console.log('包装格式消息数据，消息数量:', messageData.length)\n        } else if (response.messages) {\n          // 直接返回格式: {messages: [...]}\n          messageData = response.messages\n          sessionData = response\n          console.log('直接返回格式消息数据，消息数量:', messageData.length)\n        } else {\n          console.warn('无法识别的消息数据格式:', response)\n          console.log('尝试检查是否有其他可能的消息字段...')\n          \n          // 尝试查找其他可能的消息字段\n          const possibleMessageFields = ['message', 'chat_messages', 'chats', 'content']\n          for (const field of possibleMessageFields) {\n            if (response[field] && Array.isArray(response[field])) {\n              console.log(`找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response[field]\n              sessionData = response\n              break\n            } else if (response.data && response.data[field] && Array.isArray(response.data[field])) {\n              console.log(`在data字段中找到可能的消息字段 ${field}，使用此字段数据`)\n              messageData = response.data[field]\n              sessionData = response.data\n              break\n            }\n          }\n          \n          if (messageData.length === 0) {\n            console.warn('未找到任何消息数据，使用空数组')\n          }\n        }\n        \n        // 处理消息发送者的头像\n        messageData.forEach(message => {\n          if (message.sender && message.sender.avatar) {\n            const avatar = message.sender.avatar;\n            if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n              message.sender.avatar_url = avatar;\n            } else if (avatar.startsWith('/')) {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n            } else {\n              message.sender.avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n            }\n          }\n        });\n        \n        // 记录会话和消息数据\n        console.log('处理后的会话数据:', sessionData)\n        console.log('处理后的消息数据:', messageData)\n        \n        // 如果会话不在联系人列表中，添加它\n        if (sessionData && !contacts.value.some(c => c.id === parseInt(chatId))) {\n          console.log('会话不在联系人列表中，添加它:', sessionData)\n          \n          // 创建临时联系人对象\n          const session = sessionData\n          // 找到对方用户（非当前用户）\n          let otherParticipant = null\n          \n          // 确保 session.participants 存在且是数组\n          if (session.participants && Array.isArray(session.participants) && session.participants.length > 0 && userInfo.value) {\n            otherParticipant = session.participants.find(p => p.user && p.user.id !== userInfo.value.id)\n          }\n          \n          let tempContact = null\n          \n          // 如果是群聊，使用群聊信息\n          if (session.is_group) {\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '群聊',\n              initial: (session.title || '群聊')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: true\n            }\n          // 单聊，使用对方信息\n          } else if (otherParticipant && otherParticipant.user) {\n            const user = otherParticipant.user\n            // 处理头像路径\n            let avatar_url = '';\n            if (user.avatar) {\n              const avatar = user.avatar;\n              if (avatar.startsWith('http://') || avatar.startsWith('https://')) {\n                avatar_url = avatar;\n              } else if (avatar.startsWith('/')) {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}${avatar}`;\n              } else {\n                avatar_url = `${process.env.VUE_APP_BASE_API || 'http://localhost:8000'}/${avatar}`;\n              }\n            }\n            \n            tempContact = {\n              id: parseInt(chatId),\n              name: (user.name || (((user.first_name || '') + ' ' + (user.last_name || '')).trim() || user.username) || '未命名联系人').trim(),\n              initial: ((user.name || user.first_name || user.username || '未命名联系人')[0]),\n              avatar: user.avatar || '',\n              avatar_url: avatar_url,\n              color: getRandomColor(user.id),\n              status: 'online',\n              lastMessage: session.last_message ? session.last_message.content : '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: false\n            }\n          } else {\n            // 如果无法找到对方信息，使用默认值\n            tempContact = {\n              id: parseInt(chatId),\n              name: session.title || '聊天',\n              initial: (session.title || '聊天')[0],\n              avatar: '',\n              avatar_url: '',\n              color: getRandomColor(parseInt(chatId)),\n              status: 'online',\n              lastMessage: '',\n              lastTime: formatMessageTime(session.updated_at),\n              unread: 0,\n              isGroup: session.is_group\n            }\n          }\n          \n          // 添加临时联系人到列表\n          if (tempContact) {\n            contacts.value.unshift(tempContact)\n            console.log('添加临时联系人:', tempContact)\n          }\n        }\n        \n        // 更新组件数据\n        messages.value = messageData || []\n        currentChatId.value = parseInt(chatId)\n        selectedContact.value = parseInt(chatId)\n        \n        // 加载当前会话已上传的文档ID\n        try {\n          const res = await request({\n            url: '/api/ai/documents/',\n            method: 'get',\n            params: { chat: chatId }\n          })\n          if (res && res.data && Array.isArray(res.data.results)) {\n            selectedDocumentIds.value = res.data.results.map(doc => doc.id)\n            console.log('当前会话文档ID:', selectedDocumentIds.value)\n          }\n        } catch (e) {\n          selectedDocumentIds.value = []\n        }\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载会话详情失败:', error)\n        \n        let errorMessage = '加载聊天消息失败'\n        if (error.response) {\n          const status = error.response.status\n          if (status === 404) {\n            errorMessage = '聊天会话不存在或已被删除'\n          } else if (status === 403) {\n            errorMessage = '无权访问此聊天会话'\n          } else if (error.response.data && error.response.data.message) {\n            errorMessage = error.response.data.message\n          }\n        } else if (error.message) {\n          errorMessage = error.message\n        }\n        \n        ElMessage.error(errorMessage)\n        messages.value = []\n      } finally {\n        if (!isBackgroundRefresh) {\n          messagesLoading.value = false\n        }\n      }\n    }\n    \n    // 刷新聊天会话列表\n    const refreshChatSessions = async () => {\n      // 更新用户列表\n      await loadAllUsers()\n      \n      // 更新部门列表\n      await loadDepartments()\n      \n      // 更新聊天会话\n      await loadChatSessions()\n      \n      // 如果有当前聊天ID，确保选中正确的联系人\n      if (currentChatId.value) {\n        const contact = contacts.value.find(c => c.id === currentChatId.value)\n        if (contact) {\n          selectedContact.value = contact.id\n        }\n      }\n    }\n    \n    // 确保消息容器滚动到底部\n    const scrollToBottom = () => {\n      if (messageContainer.value) {\n        messageContainer.value.scrollTop = messageContainer.value.scrollHeight\n      }\n    }\n    \n    // 在选择联系人后，滚动到底部\n    const selectContact = async (contact) => {\n      // 检查是否尝试与自己聊天\n      if (!contact.isGroup && userInfo.value && contact.userId === userInfo.value.id) {\n        ElMessage.warning('不能与自己聊天')\n        return\n      }\n      \n      console.log('选择联系人:', contact)\n      \n      // 处理两种类型的ID：现有对话ID和用户ID前缀的情况\n      let contactId = contact.id\n      \n      // 检查是否已有该联系人的对话\n      if (typeof contactId === 'string' && contactId.startsWith('user_')) {\n        // 这是直接选择了用户，而不是现有的聊天会话\n        let userId = contact.userId || contact.id.replace('user_', '')\n        console.log('尝试查找与用户的现有对话:', userId)\n        \n        // 尝试在现有会话中查找与该用户的对话\n        const existingChat = contacts.value.find(c => \n          !c.isGroup && \n          ((c.userId && c.userId == userId) || \n          (c.user && c.user.id == userId))\n        )\n        \n        if (existingChat) {\n          console.log('找到与用户的现有对话:', existingChat)\n          contactId = existingChat.id\n        } else {\n          console.log('未找到与用户的现有对话，创建新对话')\n          \n          // 创建新的聊天会话\n          try {\n            const response = await request({\n              url: '/api/chat/sessions/',\n              method: 'post',\n              data: {\n                participant_ids: [userId],\n                is_group: false\n              }\n            })\n            \n            console.log('创建会话响应:', response)\n            \n            // 处理API响应\n            let newSession = null\n            \n            if (response && response.data) {\n              newSession = response.data\n            } else if (response && response.id) {\n              newSession = response\n            }\n            \n            if (newSession && newSession.id) {\n              // 创建临时联系人对象\n              const tempContact = {\n                id: newSession.id,\n                userId: userId,\n                name: contact.name,\n                initial: contact.initial,\n                avatar: contact.avatar,\n                avatar_url: contact.avatar_url || '',\n                color: contact.color || getRandomColor(userId),\n                status: 'online',\n                lastMessage: '',\n                lastTime: formatMessageTime(new Date()),\n                unread: 0,\n                isGroup: false,\n                department: contact.department\n              }\n              \n              // 添加到联系人列表\n              contacts.value.unshift(tempContact)\n              \n              // 更新选中的联系人\n              contactId = newSession.id\n              ElMessage.success('已创建新的对话')\n            } else {\n              throw new Error('创建会话返回无效数据')\n            }\n          } catch (error) {\n            console.error('创建新会话失败:', error)\n            ElMessage.error('无法创建新对话: ' + (error.message || '未知错误'))\n            return\n          }\n        }\n      }\n      \n      // 加载选中的联系人\n      selectedContact.value = contactId\n      messageInput.value = ''\n      messages.value = []\n      \n      // 加载消息\n      try {\n        await loadChatMessages(contactId)\n        \n        // 滚动到底部\n        nextTick(() => {\n          scrollToBottom()\n        })\n      } catch (error) {\n        console.error('加载聊天消息失败:', error)\n        ElMessage.error('无法加载对话内容：' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 在消息列表更新后，滚动到底部\n    watch(messages, () => {\n      nextTick(() => {\n        scrollToBottom()\n      })\n    })\n    \n    // 发送消息\n    const sendMessage = async () => {\n      if (!messageInput.value.trim() || !currentChatId.value) return\n\n      try {\n        console.log('发送消息时文档IDs:', selectedDocumentIds.value)\n        if (!userInfo.value || !userInfo.value.id) {\n          const userData = await fetchCurrentUser()\n          if (!userData || !userData.id) {\n            throw new Error('无法获取当前用户信息，请刷新页面重试')\n          }\n        }\n\n        const tempMessage = {\n          id: 'temp-' + Date.now(),\n          content: messageInput.value.trim(),\n          sender: {\n            id: userInfo.value.id,\n            username: userInfo.value.username || '用户',\n            first_name: userInfo.value.first_name || '',\n            last_name: userInfo.value.last_name || ''\n          },\n          message_type: 'text',\n          created_at: new Date().toISOString(),\n          is_temp: true\n        }\n\n        messages.value.push(tempMessage)\n        const messageCopy = messageInput.value\n        messageInput.value = ''\n        await nextTick()\n        scrollToBottom()\n\n        let response, aiMsg\n        if (selectedDocumentIds.value && selectedDocumentIds.value.length > 0) {\n          // 文档增强AI对话\n          response = await aiChatWithDocuments({\n            message: messageCopy,\n            chat_id: currentChatId.value,\n            document_ids: selectedDocumentIds.value\n          })\n          // 兼容流式文本响应\n          let aiContent = ''\n          if (response && typeof response.data === 'string') {\n            aiContent = response.data\n          } else if (response && response.data && response.data.message) {\n            aiContent = response.data.message\n          }\n          if (aiContent) {\n            aiMsg = {\n              id: 'ai-' + Date.now(),\n              content: aiContent,\n              sender: { id: 0, username: 'AI助手' },\n              message_type: 'text',\n              created_at: new Date().toISOString()\n            }\n            // 用AI回复替换临时消息\n            const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n            if (tempIndex !== -1) {\n              messages.value.splice(tempIndex, 1, aiMsg)\n            } else {\n              messages.value.push(aiMsg)\n            }\n          }\n        } else {\n          // 原有普通消息\n          response = await sendTextMessage({\n            chat: currentChatId.value,\n            content: messageCopy\n          })\n          let messageData = null\n          if (response && response.success && response.data) {\n            messageData = response.data\n          } else if (response && response.id) {\n            messageData = response\n          } else if (response && response.chat) {\n            messageData = {\n              id: response.id || 'msg-' + Date.now(),\n              content: response.content,\n              message_type: response.message_type,\n              file: response.file,\n              created_at: response.created_at || new Date().toISOString(),\n              sender: {\n                id: userInfo.value.id,\n                username: userInfo.value.username || '用户',\n                first_name: userInfo.value.first_name || '',\n                last_name: userInfo.value.last_name || ''\n              }\n            }\n          }\n          const tempIndex = messages.value.findIndex(m => m.id === tempMessage.id)\n          if (tempIndex !== -1 && messageData) {\n            messages.value.splice(tempIndex, 1, messageData)\n          } else if (messageData) {\n            messages.value.push(messageData)\n          }\n        }\n        await nextTick()\n        scrollToBottom()\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        messages.value = messages.value.filter(m => !m.is_temp)\n        messageInput.value = error.savedMessage || messageInput.value\n        ElMessage.error('发送消息失败，请重试')\n      }\n    }\n    \n    // 打开文件上传\n    const openFileUpload = () => {\n      fileInput.value.click()\n    }\n    \n    // 打开图片上传\n    const openImageUpload = () => {\n      imageInput.value.click()\n    }\n    \n    // 添加文件和图片上传加载状态\n    const fileUploading = ref(false)\n    const imageUploading = ref(false)\n    \n    // 处理文件上传\n    const handleFileUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      try {\n        // 显示加载动画\n        fileUploading.value = true\n        \n        // 直接使用sendFileMessage发送文件消息\n        await sendFileMessage(\n          currentChatId.value,\n          `发送文件: ${file.name}`,\n          file\n        )\n        \n        // 同时上传到AI文档系统（如果需要）\n        const formData = new FormData()\n        formData.append('file', file)\n        formData.append('chat', currentChatId.value)\n        await request({\n          url: '/api/ai/documents/upload/',\n          method: 'post',\n          data: formData,\n          headers: { 'Content-Type': 'multipart/form-data' }\n        })\n        \n        // 上传后强制刷新文档ID列表\n        const docRes = await request({\n          url: '/api/ai/documents/',\n          method: 'get',\n          params: { chat: currentChatId.value }\n        })\n        if (docRes && docRes.data && Array.isArray(docRes.data.results)) {\n          selectedDocumentIds.value = docRes.data.results.map(doc => doc.id)\n          console.log('上传后刷新文档IDs:', selectedDocumentIds.value)\n        }\n        \n        ElMessage.success('文件发送成功')\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送文件失败:', error)\n        ElMessage.error('发送文件失败')\n      } finally {\n        // 无论成功失败，都关闭加载动画\n        fileUploading.value = false\n      }\n    }\n    \n    // 处理图片上传\n    const handleImageUpload = async (event) => {\n      const file = event.target.files[0]\n      if (!file || !currentChatId.value) return\n      \n      try {\n        // 检查文件类型\n        if (!file.type.startsWith('image/')) {\n          ElMessage.error('只能上传图片文件')\n          event.target.value = ''\n          return\n        }\n        \n        // 检查文件大小（最大10MB）\n        const maxSize = 10 * 1024 * 1024 // 10MB\n        if (file.size > maxSize) {\n          ElMessage.error('图片大小不能超过10MB')\n          event.target.value = ''\n          return\n        }\n        \n        // 显示加载动画\n        imageUploading.value = true\n        \n        console.log('准备发送图片，聊天ID:', currentChatId.value, '文件:', file.name, '大小:', file.size)\n        \n        // 使用修改后的API参数\n        await sendImageMessage(\n          currentChatId.value, \n          `发送图片`, \n          file\n        )\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n        \n        // 清空文件输入\n        event.target.value = ''\n      } catch (error) {\n        console.error('发送图片失败:', error)\n        \n        // 更详细的错误信息\n        let errorMessage = '发送图片失败'\n        if (error.response) {\n          console.error('错误状态码:', error.response.status)\n          console.error('错误详情:', error.response.data)\n          \n          if (error.response.data && error.response.data.error) {\n            errorMessage = error.response.data.error\n          } else if (error.response.data && typeof error.response.data === 'string') {\n            errorMessage = error.response.data\n          } else if (error.response.status === 413) {\n            errorMessage = '图片太大，服务器拒绝接收'\n          }\n        }\n        \n        ElMessage.error(errorMessage)\n        event.target.value = ''\n      } finally {\n        // 无论成功失败，都关闭加载动画\n        imageUploading.value = false\n      }\n    }\n    \n    // 打开知识库对话框\n    const openKnowledgeDialog = async () => {\n      knowledgeDialogVisible.value = true\n      await loadKnowledgeList()\n    }\n    \n    // 加载知识库列表\n    const loadKnowledgeList = async () => {\n      try {\n        knowledgeLoading.value = true\n        const { data } = await getKnowledgeList()\n        knowledgeList.value = data\n      } catch (error) {\n        console.error('加载知识库列表失败:', error)\n        ElMessage.error('加载知识库列表失败')\n      } finally {\n        knowledgeLoading.value = false\n      }\n    }\n    \n    // 选择知识库文件\n    const selectKnowledge = (row) => {\n      selectedKnowledge.value = row\n    }\n    \n    // 分享知识库文件\n    const shareKnowledge = async (knowledge) => {\n      if (!currentChatId.value) return\n      \n      try {\n        await sendKnowledgeMessage(\n          currentChatId.value,\n          `分享知识库文件: ${knowledge.title}`,\n          knowledge.id\n        )\n        \n        // 关闭对话框\n        knowledgeDialogVisible.value = false\n        \n        // 重新加载消息\n        loadChatMessages(currentChatId.value, true)\n      } catch (error) {\n        console.error('分享知识库文件失败:', error)\n        ElMessage.error('分享知识库文件失败')\n      }\n    }\n    \n    // 下载文件\n    const downloadFile = async (message) => {\n      try {\n        const response = await downloadMessageFile(message.id)\n        \n        // 创建下载链接\n        const url = window.URL.createObjectURL(new Blob([response.data]))\n        const link = document.createElement('a')\n        link.href = url\n        link.setAttribute('download', message.file_name || 'download')\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      } catch (error) {\n        console.error('下载文件失败:', error)\n        ElMessage.error('下载文件失败')\n      }\n    }\n    \n    // 查看知识库文件\n    const viewKnowledge = (message) => {\n      if (message.knowledge_detail) {\n        // 可以跳转到知识库详情页面\n        ElMessageBox.alert(\n          `标题: ${message.knowledge_detail.title}<br>描述: ${message.knowledge_detail.description || '无'}`, \n          '知识库文件', \n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '确定'\n          }\n        )\n      }\n    }\n    \n    // 获取发送者颜色\n    const getSenderColor = (sender) => {\n      return getRandomColor(sender.id)\n    }\n    \n    // 获取发送者首字母\n    const getSenderInitial = (sender) => {\n      return (sender.first_name || sender.username)[0]\n    }\n    \n    // 根据ID生成随机颜色\n    const getRandomColor = (id) => {\n      const colors = [\n        '#007bff', '#28a745', '#dc3545', '#fd7e14', \n        '#6f42c1', '#20c997', '#17a2b8', '#6c757d'\n      ]\n      \n      // 使用ID作为索引，确保同一用户颜色一致\n      const index = typeof id === 'number' ? id % colors.length : 0\n      return colors[index]\n    }\n    \n    // 格式化消息时间\n    const formatMessageTime = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      const now = new Date()\n      const diff = now - date\n      \n      // 今天内的消息显示时间\n      if (diff < 24 * 60 * 60 * 1000) {\n      const hours = date.getHours().toString().padStart(2, '0')\n      const minutes = date.getMinutes().toString().padStart(2, '0')\n      return `${hours}:${minutes}`\n      }\n      \n      // 一周内的消息显示星期几\n      if (diff < 7 * 24 * 60 * 60 * 1000) {\n        const days = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n        return days[date.getDay()]\n      }\n      \n      // 更早的消息显示日期\n      return `${date.getMonth() + 1}月${date.getDate()}日`\n    }\n    \n    // 格式化日期\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      \n      const date = new Date(timestamp)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n    }\n    \n    // 格式化文件大小\n    const formatFileSize = (sizeInKB) => {\n      if (sizeInKB < 1024) {\n        return `${sizeInKB} KB`\n      } else {\n        return `${(sizeInKB / 1024).toFixed(2)} MB`\n      }\n    }\n    \n    // 获取状态文字\n    const getStatusText = (status) => {\n      const statusMap = {\n        'online': '在线',\n        'offline': '离线',\n        'busy': '忙碌',\n        'away': '离开'\n      }\n      return statusMap[status] || status\n    }\n    \n    // 添加强制刷新方法\n    const forceRefresh = async () => {\n      try {\n        ElMessage.info('正在强制刷新数据...')\n        \n        // 重新获取用户信息\n        const userData = await fetchCurrentUser()\n        \n        if (!userData) {\n          ElMessage.error('无法获取用户信息，请尝试重新登录')\n          return\n        }\n        \n        // 重新加载聊天会话\n        await loadChatSessions()\n        \n        if (contacts.value.length === 0) {\n          ElMessage.warning('未找到任何聊天会话，您可能还没有开始任何对话')\n        } else {\n          ElMessage.success('刷新成功！找到 ' + contacts.value.length + ' 个聊天会话')\n        }\n      } catch (error) {\n        console.error('强制刷新失败:', error)\n        ElMessage.error('刷新失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 加载所有用户\n    const loadAllUsers = async () => {\n      try {\n        console.log('正在加载所有用户列表...')\n        \n        // 确保已获取当前用户信息及其公司ID\n        if (!userInfo.value || !userInfo.value.company) {\n          console.error('无法加载同事列表：缺少用户或公司信息。')\n          // 尝试重新获取用户信息\n          const userData = await fetchCurrentUser();\n          if (!userData || !userData.company) {\n            ElMessage.error('无法获取您的公司信息，无法加载同事列表。');\n            allColleagues.value = []; // 清空列表\n            return;\n          }\n        }\n        \n        const companyId = userInfo.value.company;\n        console.log('开始获取公司同事列表，公司ID:', companyId);\n\n        // 使用/api/auth/contacts/并传入公司ID来获取同事列表\n        const response = await request({\n          url: '/api/auth/contacts/',\n          method: 'get',\n          params: { company: companyId }\n        });\n\n        console.log('公司同事列表API响应:', response);\n\n        let users = [];\n        // 根据通讯录页面的经验，响应可能在 response.data 中\n        if (response && response.success && Array.isArray(response.data)) {\n          users = response.data;\n        } else if (response && Array.isArray(response.data)) {\n           users = response.data;\n        } else if (response && Array.isArray(response)) {\n           users = response;\n        } else {\n          console.warn('获取同事列表的响应格式未知或数据为空:', response);\n        }\n\n        if (users.length > 0) {\n          console.log(`成功获取到 ${users.length} 个同事`);\n          // 后端返回的contacts可能需要格式化以匹配allColleagues的期望结构\n          allColleagues.value = users.map(u => ({\n            id: u.id,\n            username: u.username,\n            name: u.name, // 直接使用通讯录接口提供的name字段\n            department: u.department,\n            avatar: u.avatar_url || u.avatar\n          }));\n        } else {\n          allColleagues.value = []; // 如果没有用户，则清空\n        }\n\n      } catch (error) {\n        console.error('加载公司同事列表过程中出错:', error);\n        ElMessage.error('加载同事列表失败，请稍后重试。');\n        allColleagues.value = []; // 出错时清空列表\n      }\n    }\n    \n    // 获取部门列表\n    const loadDepartments = async () => {\n      try {\n        console.log('正在加载部门列表...')\n        const response = await request({\n          url: '/api/auth/departments/',\n          method: 'get'\n        })\n        \n        console.log('获取部门响应:', response)\n        \n        // 处理响应数据\n        let depts = []\n        if (response && response.results) {\n          depts = response.results\n        } else if (Array.isArray(response)) {\n          depts = response\n        } else if (response && response.data) {\n          if (Array.isArray(response.data)) {\n            depts = response.data\n          } else if (response.data.results) {\n            depts = response.data.results\n          }\n        }\n        \n        if (depts && depts.length > 0) {\n          console.log(`成功获取到${depts.length}个部门`)\n          departments.value = depts\n        }\n      } catch (error) {\n        console.error('获取部门列表失败:', error)\n      }\n    }\n    \n    const selectedDocumentIds = ref([]) // 当前会话关联文档ID\n    \n    // AI总结相关\n    const summaryDialogVisible = ref(false)\n    const summaryDateRange = ref([new Date(new Date().setDate(new Date().getDate() - 7)), new Date()])\n    const summaryContent = ref('')\n    const summaryLoading = ref(false)\n    const pickerOptions = ref({\n      shortcuts: [{\n        text: '最近一周',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n          picker.$emit('pick', [start, end]);\n        }\n      }, {\n        text: '最近一个月',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n          picker.$emit('pick', [start, end]);\n        }\n      }, {\n        text: '最近三个月',\n        onClick(picker) {\n          const end = new Date();\n          const start = new Date();\n          start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n          picker.$emit('pick', [start, end]);\n        }\n      }]\n    })\n    \n    const openSummaryDialog = () => {\n      // 重置内容，但保留日期范围\n      summaryContent.value = ''\n      summaryDialogVisible.value = true\n    }\n    \n    const handleCloseSummaryDialog = () => {\n      summaryDialogVisible.value = false\n    }\n    \n    const handleSummarize = async () => {\n      if (!selectedContact.value) {\n        ElMessage.warning('请先选择一个聊天');\n        return;\n      }\n      if (!summaryDateRange.value || summaryDateRange.value.length !== 2) {\n        ElMessage.warning('请选择一个有效的时间范围');\n        return;\n      }\n\n      summaryLoading.value = true;\n      summaryContent.value = ''; // Reset before fetching\n\n      const [startDate, endDate] = summaryDateRange.value;\n\n      try {\n        // 'summarizeChat' returns the full axios response\n        const response = await summarizeChat(selectedContact.value, startDate.toISOString(), endDate.toISOString());\n        \n        // The actual data from the backend is in response.data\n        const summary = response.data.summary;\n\n        if (summary) {\n          // If we have a summary, display it\n          summaryContent.value = summary;\n        } else {\n          // If the summary is empty or not present, display a clear message\n          summaryContent.value = '在选定时间范围内没有可总结的消息，或AI未能生成摘要。';\n        }\n      } catch (error) {\n        console.error('Summarization error:', error);\n        summaryContent.value = '生成摘要时遇到错误，请检查后台日志或稍后再试。';\n        ElMessage.error('生成摘要失败，请稍后再试');\n      } finally {\n        summaryLoading.value = false;\n      }\n    };\n    \n    // 替换图片预览方法\n    const expandedImage = ref(null)\n\n    // 切换图片放大显示\n    const toggleImageExpand = (imageUrl) => {\n      expandedImage.value = imageUrl\n    }\n    \n    const getFileName = (fullName) => {\n      if (!fullName) return '';\n      const lastDot = fullName.lastIndexOf('.');\n      if (lastDot === -1 || lastDot === 0) {\n        return fullName;\n      }\n      return fullName.substring(0, lastDot);\n    };\n\n    const getFileExtension = (fullName) => {\n      if (!fullName) return '';\n      const lastDot = fullName.lastIndexOf('.');\n      if (lastDot === -1 || lastDot === 0 || lastDot >= fullName.length - 1) {\n        return '';\n      }\n      return fullName.substring(lastDot); // includes the dot\n    };\n    \n    // 右键菜单相关\n    const contextMenuVisible = ref(false)\n    const contextMenuStyle = ref({\n      top: '0px',\n      left: '0px'\n    })\n    const selectedMessage = ref(null)\n    \n    // 处理右键菜单打开\n    const openContextMenu = (event, message) => {\n      event.preventDefault()\n      // 保存点击位置\n      contextMenuStyle.value = {\n        top: `${event.clientY}px`,\n        left: `${event.clientX}px`\n      }\n      // 保存选中的消息\n      selectedMessage.value = message\n      // 显示菜单\n      contextMenuVisible.value = true\n      \n      // 添加全局点击事件监听器关闭菜单\n      document.addEventListener('click', closeContextMenu, { once: true })\n    }\n    \n    // 关闭右键菜单\n    const closeContextMenu = () => {\n      contextMenuVisible.value = false\n    }\n    \n    // 复制消息内容\n    const copyMessageContent = () => {\n      if (!selectedMessage.value) return\n      \n      const content = selectedMessage.value.content || ''\n      navigator.clipboard.writeText(content)\n        .then(() => {\n          ElMessage.success('内容已复制到剪贴板')\n          closeContextMenu()\n        })\n        .catch(err => {\n          ElMessage.error('复制失败: ' + err)\n        })\n    }\n    \n    // 日程对话框相关\n    const calendarDialogVisible = ref(false);\n    const isAnalyzing = ref(false);\n    const isSubmitting = ref(false);\n    const calendarFormRef = ref(null); // Ref for the form\n    const calendarEvent = reactive({\n      title: '',\n      start: '',\n      end: '',\n      location: '',\n      type: 'blue',\n      reminder: '30min',\n      description: '',\n    });\n    \n    // Validation rules for the calendar form\n    const calendarRules = reactive({\n      title: [{ required: true, message: '请输入日程标题', trigger: 'blur' }],\n      start: [{ required: true, message: '请选择开始时间', trigger: 'change' }],\n      end: [{ required: true, message: '请选择结束时间', trigger: 'change' }],\n      location: [{ required: true, message: '请输入地点', trigger: 'blur' }],\n      type: [{ required: true, message: '请选择日程类型', trigger: 'change' }],\n      reminder: [{ required: true, message: '请选择提醒时间', trigger: 'change' }],\n      description: [{ required: true, message: '请输入描述信息', trigger: 'blur' }],\n    });\n    \n    // 自定义验证规则\n    const validateEndTime = (rule, value, callback) => {\n      if (!value) {\n        // 'required' rule will handle this\n        callback();\n      } else if (calendarEvent.start) {\n        const startDate = new Date(calendarEvent.start);\n        const endDate = new Date(value);\n        if (endDate <= startDate) {\n          callback(new Error('结束时间必须晚于开始时间'));\n        } else if (startDate.toDateString() !== endDate.toDateString()) {\n          callback(new Error('开始和结束时间必须是同一天'));\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    };\n\n    // 监听开始时间变化，以触发结束时间的验证\n    watch(() => calendarEvent.start, (newValue) => {\n      if (newValue && calendarFormRef.value) {\n        calendarFormRef.value.validateField('end');\n      }\n    });\n\n    // 更新验证规则\n    calendarRules.end = [\n      { required: true, message: '请选择结束时间', trigger: 'change' },\n      { validator: validateEndTime, trigger: 'change' }\n    ];\n    \n    // 从消息添加到日程\n    const addToCalendarFromMessage = async () => {\n      if (!selectedMessage.value) {\n        ElMessage.warning('无法识别消息');\n        return;\n      }\n      \n      isAnalyzing.value = true;\n      calendarDialogVisible.value = true;\n      \n      try {\n        const messageContent = selectedMessage.value.content;\n        const response = await analyzeForCalendar(messageContent);\n        \n        console.log('AI日程分析响应:', response);\n        \n        // 修复数据结构处理方式\n        const eventData = response?.data?.data || response?.data;\n        \n        if (!eventData || typeof eventData !== 'object') {\n            console.error(\"AI分析未能返回有效的日程数据。\", response);\n            ElMessage.warning('AI未能自动识别日程，请手动填写。');\n            // Populate with default values for manual entry\n            calendarEvent.title = '';\n            calendarEvent.start = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.end = formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.location = '';\n            calendarEvent.type = 'blue';\n            calendarEvent.reminder = '30min';\n            calendarEvent.description = messageContent || '';\n            calendarEvent.is_all_day = false;\n        } else {\n            console.log('AI成功识别日程数据:', eventData);\n            // Populate with data from AI\n            calendarEvent.title = eventData.title || '';\n            calendarEvent.start = eventData.start || formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.end = eventData.end || formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n            calendarEvent.location = eventData.location || '';\n            calendarEvent.type = eventData.type || 'blue';\n            calendarEvent.reminder = eventData.reminder || '30min';\n            calendarEvent.description = eventData.description || messageContent || '';\n            calendarEvent.is_all_day = eventData.is_all_day || false;\n            \n            // 添加参与者处理\n            if (eventData.participants && Array.isArray(eventData.participants)) {\n                calendarEvent.participants = eventData.participants;\n            } else {\n                calendarEvent.participants = userId.value ? [userId.value] : [];\n            }\n        }\n      } catch (error) {\n        console.error('获取日程信息失败:', error);\n        ElMessage.error('AI分析失败，请手动填写日程。');\n        // Populate with default values on API error\n        calendarEvent.title = '';\n        calendarEvent.start = formatDate(new Date(), 'YYYY-MM-DD HH:mm:ss');\n        calendarEvent.end = formatDate(new Date(Date.now() + 60*60*1000), 'YYYY-MM-DD HH:mm:ss');\n        calendarEvent.location = '';\n        calendarEvent.type = 'blue';\n        calendarEvent.reminder = '30min';\n        calendarEvent.description = selectedMessage.value?.content || '';\n        calendarEvent.is_all_day = false;\n      } finally {\n        isAnalyzing.value = false;\n        closeContextMenu();\n      }\n    };\n    \n    // 添加日程\n    const submitCalendarEvent = async () => {\n      if (!calendarFormRef.value) return;\n      await calendarFormRef.value.validate(async (valid) => {\n        if (valid) {\n          isSubmitting.value = true;\n          try {\n            const eventData = { ...calendarEvent };\n            if (!eventData.participants) {\n                eventData.participants = [];\n            }\n            if (userId.value && !eventData.participants.includes(userId.value)) {\n                eventData.participants.push(userId.value);\n            }\n\n            await createCalendarEvent(eventData);\n            \n            ElMessage.success('日程添加成功');\n            calendarDialogVisible.value = false;\n          } catch (error) {\n            ElMessage.error('添加日程失败: ' + (error.response?.data?.error || error.message));\n          } finally {\n            isSubmitting.value = false;\n          }\n        } else {\n          ElMessage.error('请填写所有必填项');\n          return false;\n        }\n      });\n    };\n    \n    // 全局点击事件监听 - 用于处理组件外部点击关闭右键菜单\n    onMounted(() => {\n      document.addEventListener('click', (event) => {\n        // 如果点击位置不在右键菜单内，关闭菜单\n        if (contextMenuVisible.value) {\n          const menuEl = document.querySelector('.chat-context-menu')\n          if (menuEl && !menuEl.contains(event.target)) {\n            contextMenuVisible.value = false\n          }\n        }\n      })\n    })\n    \n    return {\n      searchQuery,\n      activeTab,\n      selectedContact,\n      tabs,\n      contacts,\n      currentContact,\n      filteredContacts,\n      messages,\n      messageInput,\n      messageContainer,\n      fileInput,\n      imageInput,\n      currentUser,\n      userInfo,\n      userId,\n      knowledgeDialogVisible,\n      knowledgeLoading,\n      knowledgeList,\n      sessionsLoading,\n      messagesLoading,\n      // 图标\n      Search,\n      Document,\n      PictureFilled,\n      FolderOpened,\n      Microphone,\n      Position,\n      ChatDotSquare,\n      Reading,\n      UserFilled,\n      ChatLineSquare,\n      Refresh,\n      // 方法\n      sendMessage,\n      getStatusText,\n      selectContact,\n      openFileUpload,\n      openImageUpload,\n      handleFileUpload,\n      handleImageUpload,\n      openKnowledgeDialog,\n      selectKnowledge,\n      shareKnowledge,\n      downloadFile,\n      viewKnowledge,\n      getSenderColor,\n      getSenderInitial,\n      formatMessageTime,\n      formatDate,\n      formatFileSize,\n      refreshChatSessions,\n      forceRefresh,\n      groupedUsersByDepartment,\n      getActiveContacts,\n      loadAllUsers,\n      loadDepartments,\n      selectedDocumentIds,\n      fileUploading,\n      imageUploading,\n      summaryDialogVisible,\n      summaryDateRange,\n      summaryContent,\n      summaryLoading,\n      pickerOptions,\n      openSummaryDialog,\n      handleCloseSummaryDialog,\n      handleSummarize,\n      expandedImage,\n      toggleImageExpand,\n      getFileName,\n      getFileExtension,\n      contextMenuVisible,\n      contextMenuStyle,\n      openContextMenu,\n      copyMessageContent,\n      addToCalendarFromMessage,\n      calendarDialogVisible,\n      calendarEvent,\n      isAnalyzing,\n      isSubmitting,\n      submitCalendarEvent,\n      calendarFormRef,\n      calendarRules\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  height: calc(100vh - 64px); /* 减去顶部导航栏的高度 */\n  width: 100%;\n  padding: 20px;\n  overflow: hidden;\n  box-sizing: border-box;\n  background-color: transparent;\n}\n\n.chat-card {\n  height: 100%;\n  width: 100%;\n  border-radius: 8px;\n  margin: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 12px var(--shadow-color) !important;\n  background-color: transparent;\n}\n\n.chat-card :deep(.el-card__body) {\n  height: 100%;\n  padding: 0;\n  background-color: transparent;\n}\n\n.chat-layout {\n  display: flex;\n  height: 100%;\n  width: 100%;\n  background-color: transparent;\n}\n\n/* 侧边栏样式 */\n.chat-sidebar {\n  width: 280px;\n  border-right: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-color);\n  height: 100%;\n  overflow: hidden;\n}\n\n.search-box {\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tabs {\n  display: flex;\n  border-bottom: 1px solid var(--border-color);\n}\n\n.chat-tab {\n  flex: 1;\n  text-align: center;\n  padding: 12px;\n  cursor: pointer;\n  font-weight: 500;\n  color: var(--text-color-secondary);\n  transition: all 0.3s ease;\n}\n\n.chat-tab.active {\n  color: var(--el-color-primary);\n  border-bottom: 2px solid var(--el-color-primary);\n}\n\n.contacts-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0;\n}\n\n.contact-item {\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color-light);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border-color: var(--border-color);\n}\n\n.contact-item:hover {\n  background-color: var(--hover-color);\n}\n\n.contact-item.active {\n  background-color: var(--primary-color-light, #f0f7ff);\n}\n\n.contact-avatar {\n  position: relative;\n  margin-right: 12px;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n}\n\n.avatar.small {\n  width: 32px;\n  height: 32px;\n  font-size: 12px;\n}\n\n.avatar-initial {\n  font-size: 16px;\n}\n\n.contact-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid var(--bg-color);\n}\n\n.status-online {\n  background-color: #28a745;\n}\n\n.status-offline {\n  background-color: #6c757d;\n}\n\n.status-busy {\n  background-color: #dc3545;\n}\n\n.status-away {\n  background-color: #fd7e14;\n}\n\n.contact-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.contact-name {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n}\n\n.contact-name span {\n  font-weight: 500;\n}\n\n.time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.contact-message {\n  display: flex;\n  justify-content: space-between;\n  color: var(--text-color-secondary);\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  position: relative;\n  padding-right: 30px; \n}\n\n.message-badge {\n  position: absolute;\n  right: 5px;\n  top: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.message-badge :deep(.el-badge__content) {\n  position: static !important;\n  transform: none !important;\n}\n\n/* 聊天内容样式 */\n.chat-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  background-color: transparent;\n}\n\n.chat-header {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-color);\n}\n\n.chat-header .contact-info {\n  margin-right: auto;\n}\n\n.chat-header h6 {\n  margin: 0;\n  font-size: 16px;\n  color: var(--text-color);\n}\n\n.chat-header p {\n  margin: 0;\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n}\n\n.chat-actions {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin-left: auto;\n  padding-right: 15px;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  max-height: calc(100% - 150px); \n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n}\n\n.message {\n  margin-bottom: 15px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n}\n\n.message-container {\n  width: 100%;\n  display: flex;\n  background-color: transparent;\n}\n\n.message-sent .message-container {\n  flex-direction: row-reverse;\n}\n\n.message-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.message-sent .message-avatar {\n  margin-right: 0;\n  margin-left: 10px;\n}\n\n.message-content-wrapper {\n  max-width: 100%;\n  width: auto;\n}\n\n.message-content {\n  padding: 0;\n  border-radius: 0;\n  background-color: transparent;\n  max-width: 280px;\n  width: 100%;\n}\n\n.message-content.received {\n  background-color: transparent;\n  border: none;\n}\n\n.message-content.sent {\n  background-color: transparent;\n  border: none;\n}\n\n.message-time {\n  font-size: 12px;\n  color: var(--text-color-tertiary);\n  margin-top: 5px;\n  text-align: right;\n}\n\n.message-sent .message-time {\n  text-align: right;\n}\n\n.message-received .message-time {\n  text-align: left;\n}\n\n.image-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: transparent;\n  border-radius: 8px;\n  margin: 5px 0;\n  overflow: hidden;\n}\n\n.message-sent .image-card {\n  margin-left: auto;\n}\n\n.image-card-inner {\n  display: flex;\n  flex-direction: column;\n}\n\n.image-preview {\n  width: 100%;\n  height: 180px;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.image-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n}\n\n.image-preview img:hover {\n  transform: scale(1.03);\n}\n\n.file-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin: 5px 0;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: none;\n}\n\n.message-sent .file-card {\n  margin-left: auto;\n}\n\n.file-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.file-card-inner {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n}\n\n.file-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background-color: var(--el-color-primary-light-9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n}\n\n.file-icon .el-icon {\n  font-size: 24px;\n  color: var(--el-color-primary);\n}\n\n.file-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.file-name {\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: 4px;\n  display: flex;\n  align-items: baseline;\n  overflow: hidden;\n}\n\n.file-name-main {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-shrink: 1;\n}\n\n.file-name-ext {\n  white-space: nowrap;\n  flex-shrink: 0;\n}\n\n.file-meta {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n}\n\n.file-size {\n  color: var(--text-color-secondary);\n}\n\n.file-download-hint {\n  color: var(--el-color-primary);\n}\n\n.knowledge-card {\n  width: 100%;\n  max-width: 280px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin: 5px 0;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: none;\n}\n\n.message-sent .knowledge-card {\n  margin-left: auto;\n}\n\n.knowledge-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.knowledge-card-inner {\n  display: flex;\n  padding: 15px;\n}\n\n.knowledge-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background-color: var(--el-color-success-light-9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.knowledge-icon .el-icon {\n  font-size: 24px;\n  color: var(--el-color-success);\n}\n\n.knowledge-content {\n  flex: 1;\n  overflow: hidden;\n}\n\n.knowledge-title {\n  font-weight: 500;\n  color: var(--text-color);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n}\n\n.knowledge-desc {\n  color: var(--text-color-secondary);\n  font-size: 12px;\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.knowledge-footer {\n  display: flex;\n  justify-content: space-between;\n  font-size: 12px;\n}\n\n.knowledge-type {\n  color: var(--text-color-tertiary);\n  background-color: var(--bg-color-tertiary);\n  padding: 2px 8px;\n  border-radius: 4px;\n}\n\n.knowledge-view {\n  color: var(--el-color-primary);\n}\n\n.chat-input {\n  padding: 15px;\n  background-color: var(--bg-color);\n  border-top: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  min-height: 150px; /* 确保输入框有足够高度 */\n}\n\n.chat-tools {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n}\n\n.input-area {\n  margin-bottom: 10px;\n  flex: 1;\n}\n\n.send-button {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.empty-chat {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-illustration {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-chat h4 {\n  margin: 0 0 10px;\n}\n\n.empty-chat p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.empty-contacts {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #999;\n}\n\n.empty-icon {\n  margin-bottom: 20px;\n  color: #ddd;\n}\n\n.empty-contacts h4 {\n  margin: 0 0 10px;\n}\n\n.empty-contacts p {\n  margin: 0;\n  font-size: 14px;\n}\n\n.loading-container {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.empty-messages {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.loading-messages {\n  flex: 1;\n  padding: 20px;\n}\n\n.mt-3 {\n  margin-top: 15px;\n}\n\n.search-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.search-header .el-input {\n  flex: 1;\n}\n\n.chat-header-actions {\n  margin-bottom: 10px;\n}\n\n.refresh-action {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 5px;\n}\n\n.department-group {\n  margin-bottom: 10px;\n  border-color: var(--border-color);\n}\n\n.department-header {\n  padding: 5px 15px;\n  font-size: 13px;\n  color: var(--text-color-secondary);\n  background-color: var(--bg-color-tertiary);\n  border-radius: 4px;\n  margin-bottom: 5px;\n  font-weight: 500;\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n.group-actions {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: 5px;\n}\n\n.group-action-btn {\n  padding: 6px;\n  color: #909399;\n}\n\n.group-action-btn:hover {\n  color: #409EFF;\n}\n\n/* 添加对话框全局样式以适配深色模式 */\n:deep(.el-dialog) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-dialog__body) {\n  color: var(--text-color);\n}\n\n/* 表格样式适配深色模式 */\n:deep(.el-table) {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n:deep(.el-table th.el-table__cell) {\n  background-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-table tr) {\n  background-color: var(--bg-color);\n}\n\n:deep(.el-table td.el-table__cell) {\n  background-color: var(--bg-color);\n  border-bottom: 1px solid var(--border-color);\n}\n\n/* 修复输入框和下拉菜单 */\n:deep(.el-select .el-input__wrapper) {\n  background-color: var(--bg-color-secondary);\n}\n\n:deep(.el-select-dropdown) {\n  background-color: var(--bg-color-secondary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-select-dropdown__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-select-dropdown__item.hover),\n:deep(.el-select-dropdown__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-input__wrapper) {\n  background-color: var(--bg-color-secondary) !important;\n  box-shadow: 0 0 0 1px var(--border-color) inset;\n}\n\n:deep(.el-input__inner) {\n  color: var(--text-color);\n}\n\n:deep(.el-select__input) {\n  color: var(--text-color) !important;\n}\n\n:deep(.el-textarea__inner) {\n  background-color: var(--bg-color-secondary);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复空白提示和图标颜色 */\n.empty-icon {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-icon) {\n  color: inherit;\n}\n\n:deep(.el-button--primary) {\n  color: white;\n}\n\n.chat-header h6 {\n  color: var(--text-color);\n}\n\n/* 修复badge和标签 */\n:deep(.el-badge__content) {\n  background-color: var(--error-color, #ef4444);\n}\n\n:deep(.el-tag) {\n  background-color: var(--primary-color-light);\n  border-color: var(--primary-color-light);\n  color: var(--primary-color);\n}\n\n/* 修复下拉菜单的样式 */\n:deep(.el-popper.is-light) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-popper__arrow::before) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n/* 修复搜索框内图标颜色 */\n.search-box :deep(.el-input__prefix-inner) {\n  color: var(--text-color-tertiary);\n}\n\n/* 修复表单组件 */\n:deep(.el-input),\n:deep(.el-select) {\n  --el-fill-color-blank: var(--bg-color-tertiary);\n  --el-text-color-regular: var(--text-color);\n  --el-border-color: var(--border-color);\n  --el-border-color-hover: var(--primary-color);\n  --el-fill-color-light: var(--bg-color-tertiary);\n}\n\n/* 修复部门组标题 */\n.department-header {\n  background-color: var(--bg-color-tertiary) !important;\n}\n\n/* 修复El-Card组件样式 */\n:deep(.el-card) {\n  --el-card-bg-color: var(--bg-color);\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  border-color: var(--border-color);\n}\n\n/* 修复El-Alert样式 */\n:deep(.el-alert) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n  color: var(--text-color);\n}\n\n:deep(.el-alert--info) {\n  --el-alert-bg-color: var(--bg-color-tertiary);\n}\n\n:deep(.el-empty__image svg) {\n  fill: var(--text-color-tertiary);\n}\n\n/* 修复下拉菜单 */\n:deep(.el-dropdown-menu) {\n  background-color: var(--bg-color-tertiary);\n  border-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item) {\n  color: var(--text-color);\n}\n\n:deep(.el-dropdown-menu__item:hover) {\n  background-color: var(--hover-color);\n}\n\n:deep(.el-dropdown-menu__item--divided:before) {\n  background-color: var(--border-color);\n}\n\n:deep(.el-dropdown-menu__item.is-disabled) {\n  color: var(--text-color-tertiary);\n}\n\n:deep(.el-divider) {\n  background-color: var(--border-color);\n}\n\n/* 修复消息框 */\n:deep(.el-message-box) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message-box__title) {\n  color: var(--text-color);\n}\n\n:deep(.el-message-box__message) {\n  color: var(--text-color);\n}\n\n:deep(.el-message) {\n  background-color: var(--bg-color);\n  border-color: var(--border-color);\n}\n\n:deep(.el-message__content) {\n  color: var(--text-color);\n}\n\n/* 修复输入区域的阴影 */\n.el-textarea__wrapper {\n  box-shadow: 0 0 0 1px var(--border-color) inset !important;\n}\n\n.summary-content-wrapper {\n  margin-top: 10px;\n  border: 1px solid #e4e7ed;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.summary-title {\n  border-radius: 0;\n  border-bottom: 1px solid #e4e7ed;\n}\n\n.summary-content {\n  padding: 15px;\n  background-color: #fafafa;\n  min-height: 150px;\n  max-height: 40vh;\n  overflow-y: auto;\n}\n\n/* 全屏图片预览样式 */\n.fullscreen-image-preview {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 20003; /* 确保在导航栏之上 */\n  overflow: auto;\n  text-align: center;\n  padding: 0;\n  font-size: 0; /* 消除因行高导致的垂直间隙 */\n  cursor: pointer;\n}\n\n.fullscreen-preview-image {\n  margin: 0; /* 确保图片没有外边距 */\n  /* 图片将使用其自然尺寸 */\n}\n\n/* 文本卡片样式 */\n.text-card {\n  max-width: 280px;\n  margin: 5px 0;\n  overflow: hidden;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.message-sent .text-card {\n  margin-left: auto;\n}\n\n.text-card-inner {\n  padding: 12px 15px;\n  word-break: break-word;\n}\n\n.received .text-card {\n  background-color: #fff;\n}\n\n.sent .text-card {\n  background-color: var(--el-color-primary);\n  color: white;\n}\n\n/* 消息内容样式 */\n.message-content {\n  padding: 0;\n  border-radius: 0;\n  background-color: transparent;\n  max-width: 280px;\n  width: 100%;\n}\n\n.message-content-wrapper {\n  max-width: 100%;\n  width: auto;\n}\n\n/* 统一所有卡片样式 */\n.image-card, .file-card, .knowledge-card, .text-card {\n  width: 100%;\n  max-width: 280px;\n  margin: 5px 0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n\n.message-sent .image-card,\n.message-sent .file-card,\n.message-sent .knowledge-card,\n.message-sent .text-card {\n  margin-left: auto;\n}\n\n/* 移除旧的文本消息样式 */\n.message-content span {\n  padding: 0;\n  border-radius: 0;\n  display: inline;\n  background-color: transparent;\n  color: inherit;\n}\n\n.file-name-ext {\n  white-space: nowrap;\n  flex-shrink: 0;\n}\n\n.file-card,\n.knowledge-card {\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n}\n\n.file-card-inner,\n.knowledge-card-inner {\n  width: 100%;\n}\n\n.file-card {\n  width: 100%;\n  max-width: 280px;\n}\n\n/* 右键菜单样式 */\n.chat-context-menu {\n  position: fixed;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  min-width: 150px;\n  z-index: 9999;\n  padding: 5px 0;\n}\n\n.context-menu-item {\n  padding: 8px 15px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n}\n\n.context-menu-item:hover {\n  background-color: #f5f7fa;\n}\n\n.context-menu-item .el-icon {\n  margin-right: 8px;\n  font-size: 16px;\n}\n</style> ","import { render } from \"./Index.vue?vue&type=template&id=67a25b4b&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=67a25b4b&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\18083\\\\Desktop\\\\CCIT\\\\office\\\\smart-office\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67a25b4b\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=0&id=67a25b4b&scoped=true&lang=css\"","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","import request from '@/utils/request'\n\n/**\n * 获取AI日程提醒\n * @returns {Promise} 返回AI日程提醒列表\n */\nexport function getScheduleReminders() {\n  return request({\n    url: '/api/ai/schedule-reminder/',\n    method: 'get'\n  })\n}\n\n/**\n * 调用AI聊天\n * @param {Object} data - 聊天数据\n * @returns {Promise} 返回AI回复\n */\nexport function aiChat(data) {\n  return request({\n    url: '/api/ai/chat/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 生成AI内容\n * @param {Object} data - 生成请求数据\n * @returns {Promise} 返回生成的内容\n */\nexport function generateContent(data) {\n  return request({\n    url: '/api/ai/generate/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 标记AI日程提醒为已读\n * @param {number} id - 提醒ID\n * @returns {Promise}\n */\nexport function markScheduleReminderAsRead(id) {\n  return request({\n    url: `/api/ai/recommendations/${id}/mark_as_read/`,\n    method: 'post'\n  })\n}\n\n/**\n * 文档增强AI对话\n * @param {Object} data - { message, chat_id, document_ids }\n * @returns {Promise}\n */\nexport function aiChatWithDocuments(data) {\n  return request({\n    url: '/api/ai/chat-with-documents/',\n    method: 'post',\n    data,\n    responseType: 'text'\n  })\n}\n\n/**\n * 流式文档增强AI对话\n * @param {Object} data - { message, chat_id, document_ids }\n * @param {Function} onChunk - 处理每个数据块的回调函数\n * @param {Function} onComplete - 处理完成时的回调函数\n * @param {Function} onError - 处理错误的回调函数\n * @returns {AbortController} 返回可用于取消请求的控制器\n */\nexport function aiChatWithDocumentsStream(data, onChunk, onComplete, onError) {\n  // 创建AbortController，用于在需要时取消请求\n  const controller = new AbortController();\n  const signal = controller.signal;\n  \n  // 获取Token\n  const token = localStorage.getItem('token');\n  \n  // 构建请求头\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n  \n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  // 使用fetch API发起请求\n  fetch('http://localhost:8000/api/ai/chat-with-documents/', {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n    signal: signal\n  })\n  .then(async response => {\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ message: '服务返回了错误状态，且响应体不是有效的JSON。' }));\n      throw new Error(errorData.message || `HTTP error! Status: ${response.status}`);\n    }\n\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder(\"utf-8\");\n    let buffer = \"\";\n    let lastChatId = null;\n\n    const processStream = async () => {\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          if (buffer) {\n            console.error(\"Stream finished but buffer is not empty:\", buffer);\n          }\n          onComplete && onComplete(lastChatId);\n          break;\n        }\n\n        buffer += decoder.decode(value, { stream: true });\n        const lines = buffer.split('\\n');\n        buffer = lines.pop(); // Keep the last partial line in buffer\n\n        for (const line of lines) {\n          if (line.startsWith(\"data:\")) {\n            const jsonStr = line.substring(5).trim();\n            if (jsonStr === \"[DONE]\") {\n              onComplete && onComplete(lastChatId);\n              return;\n            }\n            try {\n              const parsed = JSON.parse(jsonStr);\n              onChunk && onChunk(parsed, parsed.chat_id);\n\n              // 处理session_id类型的消息，提取chat_id\n              if (parsed.type === 'session_id') {\n                lastChatId = parsed.chat_id;\n              } else if (parsed.chat_id) {\n                lastChatId = parsed.chat_id;\n              }\n            } catch (error) {\n              console.error(\"无法解析JSON流: \", jsonStr, error);\n              onError && onError(new Error(\"无法解析服务器发送的数据\"));\n            }\n          }\n        }\n      }\n    };\n\n    processStream().catch(err => {\n      console.error(\"An error occurred while processing the stream:\", err);\n      onError && onError(err);\n    });\n  })\n  .catch(error => {\n    if (error.name !== 'AbortError') {\n      console.error('Fetch request failed:', error);\n      onError && onError(error);\n    }\n  });\n  \n  // 返回控制器，以便调用者可以取消请求\n  return controller;\n}\n\n/**\n * 获取AI聊天会话列表\n */\nexport function getAIChatSessions() {\n  return request({\n    url: '/api/ai/chats/',\n    method: 'get'\n  })\n}\n\n/**\n * 获取AI聊天会话详情\n * @param {Number} id - 聊天会话ID\n */\nexport function getAIChatSession(id) {\n  return request({\n    url: `/api/ai/chats/${id}/`,\n    method: 'get'\n  })\n}\n\n/**\n * 删除AI聊天会话\n * @param {Number} id - 聊天会话ID\n */\nexport function deleteAIChatSession(id) {\n  return request({\n    url: `/api/ai/chats/${id}/`,\n    method: 'delete'\n  })\n}\n\nexport function getChatHistory(chat_id) {\n  return request({\n    url: `/api/ai/chats/${chat_id}/messages/`,\n    method: 'get'\n  });\n}\n\n/**\n * 与文档进行非流式对话\n * @param {Object} data - { message, chat_id, document_ids, chatMode, search_method }\n */\nexport function chatWithDocuments(data) {\n  return request({\n    url: '/api/ai/chat-with-documents/',\n    method: 'post',\n    data,\n  });\n} ","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar IS_PURE = require('../internals/is-pure');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar filterWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('filter', TypeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var predicate = this.predicate;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, predicate, [value, this.counter++], true)) return value;\n  }\n});\n\n// `Iterator.prototype.filter` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.filter\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || filterWithoutClosingOnEarlyError }, {\n  filter: function filter(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (filterWithoutClosingOnEarlyError) return call(filterWithoutClosingOnEarlyError, this, predicate);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      predicate: predicate\n    });\n  }\n});\n","/**\r\n * 日期格式化工具函数\r\n */\r\n\r\n/**\r\n * 格式化日期\r\n * @param {Date|String|Number} date - 日期对象或可转为日期的字符串/时间戳\r\n * @param {String} format - 格式化模板，如 'YYYY-MM-DD HH:mm:ss'\r\n * @returns {String} 格式化后的日期字符串\r\n */\r\nexport function formatDate(date, format = 'YYYY-MM-DD') {\r\n  if (!date) return '';\r\n  \r\n  // 确保date是Date对象\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n    if (isNaN(date.getTime())) return '无效日期';\r\n  }\r\n  \r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = date.getHours();\r\n  const minute = date.getMinutes();\r\n  const second = date.getSeconds();\r\n  \r\n  // 填充函数，确保数字为两位\r\n  const pad = num => (num < 10 ? '0' + num : num);\r\n  \r\n  return format\r\n    .replace(/YYYY/g, year)\r\n    .replace(/YY/g, String(year).slice(2))\r\n    .replace(/MM/g, pad(month))\r\n    .replace(/M/g, month)\r\n    .replace(/DD/g, pad(day))\r\n    .replace(/D/g, day)\r\n    .replace(/HH/g, pad(hour))\r\n    .replace(/H/g, hour)\r\n    .replace(/hh/g, pad(hour % 12 || 12))\r\n    .replace(/h/g, hour % 12 || 12)\r\n    .replace(/mm/g, pad(minute))\r\n    .replace(/m/g, minute)\r\n    .replace(/ss/g, pad(second))\r\n    .replace(/s/g, second);\r\n}\r\n\r\n/**\r\n * 格式化相对时间，如\"几分钟前\"、\"几小时前\"等\r\n * @param {Date|String|Number} date - 日期对象或可转为日期的字符串/时间戳\r\n * @returns {String} 相对时间字符串\r\n */\r\nexport function formatRelativeTime(date) {\r\n  if (!date) return '';\r\n  \r\n  // 确保date是Date对象\r\n  if (!(date instanceof Date)) {\r\n    date = new Date(date);\r\n    if (isNaN(date.getTime())) return '无效日期';\r\n  }\r\n  \r\n  const now = new Date();\r\n  const diff = now.getTime() - date.getTime();\r\n  const seconds = Math.floor(diff / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n  const months = Math.floor(days / 30);\r\n  const years = Math.floor(months / 12);\r\n  \r\n  if (seconds < 60) {\r\n    return '刚刚';\r\n  } else if (minutes < 60) {\r\n    return `${minutes}分钟前`;\r\n  } else if (hours < 24) {\r\n    return `${hours}小时前`;\r\n  } else if (days < 30) {\r\n    return `${days}天前`;\r\n  } else if (months < 12) {\r\n    return `${months}个月前`;\r\n  } else {\r\n    return `${years}年前`;\r\n  }\r\n}\r\n\r\n/**\r\n * 格式化时间范围\r\n * @param {Date|String|Number} startDate - 开始日期\r\n * @param {Date|String|Number} endDate - 结束日期\r\n * @param {String} format - 日期格式\r\n * @returns {String} 格式化后的时间范围\r\n */\r\nexport function formatDateRange(startDate, endDate, format = 'YYYY-MM-DD') {\r\n  if (!startDate) return '';\r\n  \r\n  // 格式化开始日期\r\n  const start = formatDate(startDate, format);\r\n  \r\n  // 如果没有结束日期，只返回开始日期\r\n  if (!endDate) return start;\r\n  \r\n  // 格式化结束日期\r\n  const end = formatDate(endDate, format);\r\n  \r\n  // 返回日期范围\r\n  return `${start} 至 ${end}`;\r\n} ","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","import request from '@/utils/request'\n\n/**\n * 获取聊天会话列表\n */\nexport function getChatSessions() {\n  return request({\n    url: '/api/chat/sessions/',\n    method: 'get'\n  })\n}\n\n/**\n * 获取聊天会话详情\n * @param {Number} id - 聊天会话ID\n */\nexport function getChatSession(id) {\n  return request({\n    url: `/api/chat/sessions/${id}/`,\n    method: 'get'\n  })\n}\n\n/**\n * 创建新的聊天会话\n * @param {Object} data - 聊天会话数据\n */\nexport function createChatSession(data) {\n  return request({\n    url: '/api/chat/sessions/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 发送文本消息\n * @param {Object} data - 消息数据\n */\nexport function sendTextMessage(data) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: {\n      ...data,\n      message_type: 'text'\n    }\n  })\n}\n\n/**\n * 发送文件消息\n * @param {Number} chatId - 聊天ID\n * @param {String} content - 消息内容\n * @param {File} file - 文件对象\n */\nexport function sendFileMessage(chatId, content, file) {\n  const formData = new FormData();\n  formData.append('chat', chatId);\n  formData.append('message_type', 'file');\n  formData.append('content', content);\n  formData.append('file', file);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData\n  })\n}\n\n/**\n * 发送图片消息\n * @param {Number} chatId - 聊天ID\n * @param {String} content - 消息内容\n * @param {File} image - 图片文件\n */\nexport function sendImageMessage(chatId, content, image) {\n  const formData = new FormData();\n  formData.append('chat', chatId);\n  formData.append('message_type', 'image');\n  formData.append('content', content);\n  formData.append('file', image);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData\n  })\n}\n\n/**\n * 发送知识库消息\n * @param {Object} data - 消息数据，包含chat和knowledge_id\n */\nexport function sendKnowledgeMessage(data) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: {\n      ...data,\n      message_type: 'knowledge',\n      content: '分享了一个知识库文件'\n    }\n  })\n}\n\n/**\n * 下载消息中的文件\n * @param {Number} messageId - 消息ID\n */\nexport function downloadMessageFile(messageId) {\n  return request({\n    url: `/api/chat/messages/${messageId}/download/`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\n/**\n * 发送文档消息 - 分享智能文档到聊天\n * @param {Object} data - 包含chat(聊天ID)、document_id(文档ID)、format(文档格式，如pdf/word)、title(文档标题)的对象\n */\nexport function sendDocumentMessage(data) {\n  // 创建FormData对象\n  const formData = new FormData();\n  \n  // 添加必要的字段\n  formData.append('chat', data.chat);\n  formData.append('message_type', 'file');\n  formData.append('document_id', data.document_id);\n  formData.append('format', data.format);\n  formData.append('title', data.title);\n  formData.append('content', `分享了一个${data.format === 'pdf' ? 'PDF' : 'Word'}文档`);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\n/**\n * 向聊天添加参与者\n * @param {Number} chatId - 聊天会话ID\n * @param {Number} userId - 用户ID\n */\nexport function addChatParticipant(chatId, userId) {\n  return request({\n    url: `/api/chat/sessions/${chatId}/add_participant/`,\n    method: 'post',\n    data: {\n      user_id: userId\n    }\n  })\n}\n\n/**\n * 从聊天中移除参与者\n * @param {Number} chatId - 聊天会话ID\n * @param {Number} userId - 用户ID\n */\nexport function removeChatParticipant(chatId, userId) {\n  return request({\n    url: `/api/chat/sessions/${chatId}/remove_participant/`,\n    method: 'post',\n    data: {\n      user_id: userId\n    }\n  })\n}\n\n/**\n * 从聊天消息添加日历事件\n * @param {Number} messageId - 消息ID\n * @param {Object} data - 可选的更新日程数据\n * @param {Boolean} preview - 是否仅预览不创建事件\n */\nexport function addCalendarEvent(messageId, data, preview = false) {\n  let url = `/api/chat/messages/${messageId}/add_calendar_event/`\n  if (preview) {\n    url += '?preview=true'\n  }\n  \n  return request({\n    url: url,\n    method: 'post',\n    data\n  })\n}\n\n// 获取知识库列表\nexport function getKnowledgeList(params) {\n  return request({\n    url: '/api/knowledge/files/',\n    method: 'get',\n    params\n  })\n}\n\n// 查看文件内容 \nexport function deleteMessage(id) {\n  return request({\n    url: `/chat/messages/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 新增：查找或创建一对一聊天\nexport function findOrCreateChat(userId) {\n  return request({\n    url: '/api/chat/find-or-create/',\n    method: 'post',\n    data: { user_id: userId }\n  })\n}\n\n/**\n * 根据用户ID列表查找或创建聊天会话\n * @param {Array<Number>} userIds - 用户ID数组\n * @returns {Promise}\n */\nexport async function findOrCreateChatWithUsers(userIds) {\n  if (!userIds || userIds.length === 0) {\n    throw new Error('No user IDs provided');\n  }\n\n  if (userIds.length === 1) {\n    // 处理单人聊天\n    return findOrCreateChat(userIds[0]);\n  } else {\n    // 处理多人聊天\n    return createChatSession({ participants: userIds });\n  }\n}\n\n/**\n * 清空所有聊天会话\n * @returns {Promise}\n */\nexport function clearAllChatSessions() {\n  return request({\n    url: '/api/chat/sessions/clear_all/',\n    method: 'post'\n  });\n}\n\n/**\n * 上传文件到会话中\n * @param {FormData} formData 包含文件和会话ID的表单数据\n * @returns {Promise}\n */\nexport function uploadFile(formData) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\nexport function getChatMessages(chatId, page = 1, pageSize = 20) {\n  return request({\n    url: `/api/chat/messages/`,\n    method: 'get',\n    params: {\n      chat: chatId,\n      page,\n      page_size: pageSize\n    }\n  });\n}\n\n// Summarize chat messages\nexport function summarizeChat(sessionId, startDate, endDate) {\n  return request({\n    url: `/api/chat/sessions/${sessionId}/summarize/`,\n    method: 'post',\n    data: {\n      start_date: startDate,\n      end_date: endDate\n    }\n  });\n}\n\nexport function createChatMessage(data) {\n  const formData = new FormData();\n  for (const key in data) {\n    if (data[key] !== null && data[key] !== undefined) {\n      if (key === 'file' && data[key] instanceof File) {\n        formData.append(key, data[key], data[key].name);\n      } else {\n        formData.append(key, data[key]);\n      }\n    }\n  }\n\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\n/**\n * Analyzes text content to extract calendar event information.\n * @param {String} content - The text content to analyze.\n */\nexport function analyzeForCalendar(content) {\n  return request({\n    url: '/api/chat/analyze-for-calendar/',\n    method: 'post',\n    data: { content }\n  });\n}\n\n/**\n * Creates a new calendar event.\n * @param {Object} eventData - The event data to create.\n */\nexport function createCalendarEvent(eventData) {\n  return request({\n    url: '/api/calendar/events/',\n    method: 'post',\n    data: eventData\n  });\n} ","/**\n * 知识库API服务\n */\nimport request from '@/utils/request'\n\nconst baseURL = '/api/knowledge'  // 确保这个路径与后端实际部署的路径一致\n\n// 分类相关API\nexport function getCategories() {\n  console.log('调用getCategories API函数')\n  return request({\n    url: `${baseURL}/categories/`,\n    method: 'get'\n  }).then(response => {\n    console.log('getCategories API响应成功:', response)\n    \n    // 确保返回有效的数据，即使后端返回空或格式不一致\n    if (!response) {\n      console.warn('getCategories响应为空，返回空数组')\n      return []\n    }\n    \n    // 根据不同的数据格式返回正确的结果\n    if (Array.isArray(response)) {\n      return response\n    } else if (response.results && Array.isArray(response.results)) {\n      return response.results\n    } else if (response.data && Array.isArray(response.data)) {\n      return response.data\n    } else if (typeof response === 'object') {\n      // 尝试查找可能的数组字段\n      for (const key of ['items', 'categories', 'list']) {\n        if (response[key] && Array.isArray(response[key])) {\n          return response[key]\n        }\n      }\n    }\n    \n    // 所有尝试都失败时，返回空数组而不是错误\n    console.warn('无法从响应中提取分类数据，返回空数组:', response)\n    return []\n  }).catch(error => {\n    console.error('getCategories API请求失败:', error)\n    if (error.response) {\n      console.error('错误状态码:', error.response.status)\n      console.error('错误数据:', error.response.data)\n    }\n    // 返回空数组而不是抛出错误，使调用代码更健壮\n    return []\n  })\n}\n\nexport function addCategory(data) {\n  return request({\n    url: `${baseURL}/categories/`,\n    method: 'post',\n    data\n  })\n}\n\nexport function updateCategory(id, data) {\n  return request({\n    url: `${baseURL}/categories/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\nexport function deleteCategory(id) {\n  return request({\n    url: `${baseURL}/categories/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 知识库文档相关API\nexport function getDocuments(params) {\n  console.log('调用getDocuments API:', `${baseURL}/documents/`, '参数:', params)\n  return request({\n    url: `${baseURL}/documents/`,\n    method: 'get',\n    params\n  }).then(response => {\n    console.log('getDocuments API响应成功:', response)\n    return response\n  }).catch(error => {\n    console.error('getDocuments API请求失败:', error)\n    if (error.response) {\n      console.error('错误状态码:', error.response.status)\n      console.error('错误数据:', error.response.data)\n    }\n    throw error\n  })\n}\n\nexport function getDocument(id) {\n  return request({\n    url: `${baseURL}/documents/${id}/`,\n    method: 'get'\n  })\n}\n\nexport function uploadDocument(data) {\n  console.log('开始上传文件...', data);\n  \n  // 检查FormData中是否包含文件及其大小\n  if (data instanceof FormData) {\n    const file = data.get('file');\n    if (file) {\n      console.log('FormData中的文件信息:', {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      });\n      \n      // 验证文件有效性\n      if (!file.size || file.size === 0) {\n        return Promise.reject(new Error('文件大小为0，无法上传'));\n      }\n    } else {\n      console.warn('FormData中未找到文件!');\n      return Promise.reject(new Error('未找到有效文件'));\n    }\n  }\n  \n  return request({\n    url: `${baseURL}/documents/`,\n    method: 'post',\n    data,\n    timeout: 120000, // 增加超时时间到120秒，大文件上传需要更长时间\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    onUploadProgress: progressEvent => {\n      const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n      console.log(`上传进度: ${percentCompleted}%`);\n    }\n  }).then(response => {\n    console.log('文件上传成功响应:', response);\n    return response;\n  }).catch(error => {\n    console.error('文件上传失败:', error);\n    \n    // 处理不同的错误情况\n    if (error.response) {\n      console.error('上传错误状态码:', error.response.status);\n      console.error('上传错误数据:', error.response.data);\n      \n      // 处理特定的错误代码\n      if (error.response.status === 413) {\n        error.message = '文件太大，超出服务器允许的上传限制';\n      } else if (error.response.status === 400) {\n        error.message = `上传参数错误: ${JSON.stringify(error.response.data)}`;\n      } else if (error.response.status === 401) {\n        error.message = '未授权，请重新登录后再尝试上传';\n      } else if (error.response.status === 500) {\n        error.message = '服务器处理上传时发生错误';\n      }\n    } else if (error.request) {\n      // 请求已发送但没有收到响应\n      console.error('没有收到上传响应:', error.request);\n      if (error.code === 'ECONNABORTED') {\n        error.message = '上传超时，请检查网络或尝试上传较小的文件';\n      } else {\n        error.message = '网络错误，未收到服务器响应';\n      }\n    }\n    \n    throw error;\n  });\n}\n\nexport function updateDocument(id, data) {\n  return request({\n    url: `${baseURL}/documents/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\nexport function deleteDocument(id) {\n  console.log('>>> deleteDocument function entered for ID:', id);\n  const requestConfig = {\n    url: `${baseURL}/documents/${id}/`,\n    method: 'delete'\n  };\n  console.log('>>> deleteDocument - Request config prepared:', requestConfig);\n  return request(requestConfig).then(response => {\n    console.log('deleteDocument API响应成功:', response);\n    return response;\n  }).catch(error => {\n    console.error('deleteDocument API请求失败:', error);\n    if (error.response) {\n      console.error('错误状态码:', error.response.status);\n      console.error('错误数据:', error.response.data);\n    }\n    throw error;\n  });\n}\n\nexport function downloadDocumentFile(id) {\n  return request({\n    url: `${baseURL}/documents/${id}/`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\nexport function reprocessDocument(id) {\n  return request({\n    url: `${baseURL}/documents/${id}/reprocess/`,\n    method: 'post'\n  })\n}\n\n// 文档块相关API\nexport function getDocumentChunks(documentId) {\n  return request({\n    url: `${baseURL}/documents/${documentId}/chunks/`,\n    method: 'get'\n  })\n}\n\nexport function searchKnowledge(query) {\n  return request({\n    url: `${baseURL}/search/`,\n    method: 'get',\n    params: { query }\n  })\n}\n\nexport function getDocumentStatistics() {\n  return request({\n    url: `${baseURL}/statistics/`,\n    method: 'get'\n  })\n}\n\n// 知识库构建相关API\nexport function buildKnowledgeBase() {\n  console.log('调用buildKnowledgeBase API')\n  return request({\n    url: `${baseURL}/build/`,\n    method: 'post'\n  }).then(response => {\n    console.log('buildKnowledgeBase API响应成功:', response)\n    return response\n  }).catch(error => {\n    console.error('buildKnowledgeBase API请求失败:', error)\n    if (error.response) {\n      console.error('错误状态码:', error.response.status)\n      console.error('错误数据:', error.response.data)\n    }\n    throw error\n  })\n}\n\nexport function getKnowledgeBaseStatus() {\n  return request({\n    url: `${baseURL}/build/status/`,\n    method: 'get'\n  })\n} \n\n// 知识库列表API\nexport function getKnowledgeList() {\n  return request({\n    url: `${baseURL}/list/`,\n    method: 'get'\n  })\n} ","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n"],"sourceRoot":""}