{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.symmetric-difference.v2.js","webpack:///./node_modules/core-js/modules/es.set.difference.v2.js","webpack:///./node_modules/core-js/internals/set-iterate.js","webpack:///./node_modules/core-js/internals/set-is-superset-of.js","webpack:///./src/views/smartdoc/Index.vue?7b30","webpack:///./node_modules/core-js/internals/iterate-simple.js","webpack:///./node_modules/core-js/internals/set-is-subset-of.js","webpack:///./node_modules/core-js/modules/es.set.union.v2.js","webpack:///./src/views/smartdoc/Index.vue","webpack:///./src/views/smartdoc/Index.vue?ac70","webpack:///./node_modules/core-js/modules/es.set.intersection.v2.js","webpack:///./node_modules/core-js/internals/get-set-record.js","webpack:///./node_modules/core-js/internals/set-clone.js","webpack:///./node_modules/core-js/modules/es.set.is-subset-of.v2.js","webpack:///./node_modules/core-js/internals/set-size.js","webpack:///./node_modules/core-js/modules/es.iterator.filter.js","webpack:///./node_modules/core-js/internals/set-intersection.js","webpack:///./node_modules/core-js/internals/set-symmetric-difference.js","webpack:///./node_modules/core-js/modules/es.set.is-superset-of.v2.js","webpack:///./node_modules/core-js/internals/set-difference.js","webpack:///./node_modules/core-js/internals/set-is-disjoint-from.js","webpack:///./node_modules/core-js/modules/es.set.is-disjoint-from.v2.js","webpack:///./src/views/smartdoc/Index.vue?d913","webpack:///./node_modules/core-js/internals/set-helpers.js","webpack:///./src/api/chat.js","webpack:///./node_modules/core-js/internals/set-method-accept-set-like.js","webpack:///./node_modules/core-js/internals/a-set.js","webpack:///./node_modules/core-js/internals/set-union.js","webpack:///./src/api/smartdoc.js","webpack:///./node_modules/core-js/modules/es.iterator.find.js"],"names":["$","symmetricDifference","setMethodAcceptSetLike","target","proto","real","forced","difference","INCORRECT","result","size","uncurryThis","iterateSimple","SetHelpers","Set","SetPrototype","forEach","keys","next","module","exports","set","fn","interruptible","iterator","aSet","has","getSetRecord","iteratorClose","other","O","this","otherRec","getIterator","e","call","record","ITERATOR_INSTEAD_OF_RECORD","step","done","value","undefined","iterate","includes","union","class","style","backgroundColor","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","refreshTrigger","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_el_select","searchCategory","$event","placeholder","onChange","_cache","selectCategory","_component_el_option","label","_Fragment","_renderList","documentCategories","category","_createBlock","key","id","name","toString","_component_el_input","searchQuery","clearable","prefix","_withCtx","_component_el_icon","_component_Search","_component_el_button","type","onClick","handleImportWord","_component_Upload","createNewDocument","_component_Plus","_hoisted_6","_component_el_card","shadow","_hoisted_7","_hoisted_8","_component_Document","_hoisted_9","_hoisted_10","totalDocuments","_hoisted_11","_hoisted_12","_component_EditPen","_hoisted_13","_hoisted_14","recentEditCount","_hoisted_15","_hoisted_16","_component_Share","_hoisted_17","_hoisted_18","sharedDocuments","length","_hoisted_19","_hoisted_20","_hoisted_21","_normalizeStyle","getSelectedCategoryColor","getSelectedCategoryName","_hoisted_22","link","resetCategoryFilter","_component_Close","_hoisted_23","_hoisted_24","_hoisted_25","text","manageCategories","_hoisted_26","_normalizeClass","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","color","_component_Folder","_hoisted_32","_hoisted_33","document_count","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","fetchDocuments","_hoisted_38","documents","doc","openDocument","_hoisted_39","_hoisted_40","_hoisted_41","is_shared","_hoisted_42","_component_User","_withModifiers","_component_el_dropdown","trigger","dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","editDocument","exportDocument","shareDocument","divided","deleteDocument","_component_More","_hoisted_43","title","_hoisted_44","innerHTML","preview","_hoisted_46","_hoisted_47","_component_Clock","formatDate","update_time","_hoisted_48","_component_el_tooltip","content","placement","circle","args","_hoisted_49","totalCount","_hoisted_50","_component_el_pagination","background","layout","total","page-size","pageSize","current-page","page","onCurrentChange","onPageChange","pager-count","disabled","createLoading","$_isDev","_hoisted_51","Math","ceil","_hoisted_52","_hoisted_53","_hoisted_54","viewAllDocuments","_hoisted_55","recentDocuments","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_component_el_dialog","newDocumentDialogVisible","width","footer","_hoisted_70","submitNewDocument","loading","_component_el_tabs","documentCreateType","_component_el_tab_pane","_hoisted_68","_component_el_form","model","newDocumentForm","label-width","rules","blankFormRules","ref","_component_el_form_item","prop","_hoisted_69","aiDocumentForm","aiFormRules","requirements","rows","shareDialogVisible","_hoisted_79","confirmShare","shareLoading","shareMode","selectedDocument","_hoisted_71","_component_el_radio_group","handleShareModeChange","creator","getCurrentUserId","_component_el_radio","existingSharedUsers","_hoisted_72","user","user_id","_hoisted_73","username","_hoisted_74","_component_el_tag","removeSharedUser","_hoisted_75","selectedUsers","number","multiple","popper-class","handleUserSelectionChange","availableUsers","_hoisted_76","_hoisted_77","selectedUsersWithPermissions","userPerm","_hoisted_78","getUsernameById","shareFormat","selectedChatUsers","availableChatUsers","deleteDialogVisible","_hoisted_81","confirmDelete","deleteLoading","_hoisted_80","categoryDialogVisible","_hoisted_82","_hoisted_83","_component_el_table","data","_component_el_table_column","default","scope","row","editCategory","deleteCategory","_component_el_divider","_hoisted_84","editingCategory","categoryFormRules","_component_el_color_picker","_hoisted_85","description","submitCategory","categoryLoading","resetCategoryForm","editDialogVisible","_hoisted_86","submitEditDocument","editLoading","editDocumentForm","editFormRules","category_id","components","Search","Plus","EditPen","Share","Folder","Close","More","Document","Clock","Upload","User","setup","router","useRouter","route","useRoute","proxy","getCurrentInstance","process","Date","now","grandTotalCount","hasMore","loadingMore","required","message","min","max","blankFormRef","aiFormRef","editFormRef","computed","categoryFormRef","forceUpdate","async","$forceUpdate","nextTick","forceRefresh","append","timestamp","filters","search","params","page_size","_t","getTime","Object","assign","console","log","res","getDocuments","newDocuments","currentViewCount","warning","warn","ElMessage","duration","setTimeout","Array","isArray","count","results","existingIds","map","uniqueNewDocs","filter","d","join","totalPages","Promise","resolve","error","fetchRecentDocuments","getRecentDocuments","fetchSharedDocuments","response","getSharedDocuments","fetchDocumentCategories","retryCount","getDocumentCategories","status","watch","_","debounce","dialog","document","querySelector","addEventListener","clearValidate","err","once","valid","validate","catch","createDocument","JSON","stringify","success","docId","push","then","navErr","categoryId","aiGenerateDocument","requirement","doc_type","_response$data","detail","String","event","stopPropagation","Number","updateData","updateDocument","reloadAllData","ElMessageBox","showCancelButton","confirmButtonText","cancelButtonText","closeOnClickModal","callback","action","exportToPdf","exportToWord","ElLoading","service","lock","getDocumentDetail","documentContent","close","docTitle","filename","tempContainer","createElement","className","body","appendChild","options","margin","image","quality","html2canvas","scale","useCORS","jsPDF","unit","format","orientation","setText","html2pdfModule","html2pdf","from","save","removeChild","contentContainer","msWordHtml","FileSaver","saveAs","blob","Blob","detailRes","sharedWithData","shared_with","permissions","item","email","permission","userId","existingUserIds","u","currentUserJson","localStorage","getItem","currentUserId","companyId","currentUser","parse","company_id","isCreator","usersRes","userApi","getCompanyUsers","find","val","finalPermissions","apiShareDocument","docResponse","currentDoc","documentFile","fileName","fileType","outputPdf","sessionsResponse","getChatSessions","chatSessions","userSessionMap","Map","existingSession","session","participants","hasCurrentUser","some","p","hasTargetUser","newSessionPromises","createChatSession","participant_ids","all","sendPromises","failedUsers","chatId","get","formData","FormData","file","File","request","url","method","headers","timeout","sendResults","successCount","totalAttempted","totalSelected","_selectedDocument$val","deletedDocId","deletedDocCategoryId","apiDeleteDocument","window","removeItem","c","currentRoute","replace","query","_refresh","refreshData","docSection","scrollIntoView","behavior","docCards","querySelectorAll","card","index","animationDelay","classList","remove","add","selectedCategory","resetFields","categoryData","updateDocumentCategory","createDocumentCategory","confirm","deleteDocumentCategory","dateString","date","toDateString","toLocaleTimeString","hour","minute","yesterday","setDate","getDate","weekDays","diffDays","round","getDay","toLocaleDateString","month","day","onActivated","分类数量","文档数量","最近文档","共享文档","总计数","provide","newVal","path","newPath","oldPath","startsWith","newPage","maxPage","oldPage","loadMoreDocuments","onMounted","refreshParam","fileInput","accept","display","files","loadingInstance","fullscreen","importWordDocument","click","userIdToRemove","userToRemove","__exports__","render","fails","intersection","aCallable","anObject","toIntegerOrInfinity","getIteratorDirect","INVALID_SIZE","$RangeError","RangeError","$TypeError","TypeError","SetRecord","intSize","prototype","it","obj","numSize","isSubsetOf","uncurryThisAccessor","createIteratorProxy","callWithSafeIterationClosing","IS_PURE","iteratorHelperWithoutClosingOnEarlyError","filterWithoutClosingOnEarlyError","IteratorProxy","predicate","counter","iterateSet","clone","keysIter","isSupersetOf","isDisjointFrom","getChatSession","sendTextMessage","message_type","sendFileMessage","sendImageMessage","sendKnowledgeMessage","downloadMessageFile","messageId","responseType","findOrCreateChat","findOrCreateChatWithUsers","userIds","Error","summarizeChat","sessionId","startDate","endDate","start_date","end_date","analyzeForCalendar","createCalendarEvent","eventData","getBuiltIn","createSetLike","createSetLikeWithInfinitySize","error2","Infinity","queryParams","limit","previous","_retry","fallbackParams","sharedUsers","shared_users","expandContent","polishText","grammarCheck","translateText","docQa","findWithoutClosingOnEarlyError","stop","IS_RECORD","INTERRUPTED"],"mappings":"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","file":"js/chunk-0ae3a023.1643ffa3.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar symmetricDifference = require('../internals/set-symmetric-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.symmetricDifference` method\n// https://tc39.es/ecma262/#sec-set.prototype.symmetricdifference\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('symmetricDifference') }, {\n  symmetricDifference: symmetricDifference\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar difference = require('../internals/set-difference');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('difference', function (result) {\n  return result.size === 0;\n});\n\n// `Set.prototype.difference` method\n// https://tc39.es/ecma262/#sec-set.prototype.difference\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  difference: difference\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar iterateSimple = require('../internals/iterate-simple');\nvar SetHelpers = require('../internals/set-helpers');\n\nvar Set = SetHelpers.Set;\nvar SetPrototype = SetHelpers.proto;\nvar forEach = uncurryThis(SetPrototype.forEach);\nvar keys = uncurryThis(SetPrototype.keys);\nvar next = keys(new Set()).next;\n\nmodule.exports = function (set, fn, interruptible) {\n  return interruptible ? iterateSimple({ iterator: keys(set), next: next }, fn) : forEach(set, fn);\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf\nmodule.exports = function isSupersetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) < otherRec.size) return false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (!has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=0&id=cac81e82&scoped=true&lang=css\"","'use strict';\nvar call = require('../internals/function-call');\n\nmodule.exports = function (record, fn, ITERATOR_INSTEAD_OF_RECORD) {\n  var iterator = ITERATOR_INSTEAD_OF_RECORD ? record : record.iterator;\n  var next = record.next;\n  var step, result;\n  while (!(step = call(next, iterator)).done) {\n    result = fn(step.value);\n    if (result !== undefined) return result;\n  }\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar size = require('../internals/set-size');\nvar iterate = require('../internals/set-iterate');\nvar getSetRecord = require('../internals/get-set-record');\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\nmodule.exports = function isSubsetOf(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) > otherRec.size) return false;\n  return iterate(O, function (e) {\n    if (!otherRec.includes(e)) return false;\n  }, true) !== false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar union = require('../internals/set-union');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\n// `Set.prototype.union` method\n// https://tc39.es/ecma262/#sec-set.prototype.union\n$({ target: 'Set', proto: true, real: true, forced: !setMethodAcceptSetLike('union') }, {\n  union: union\n});\n","<template>\n  <div class=\"smartdoc-home-container\">\n    <!-- 添加隐藏的刷新触发元素，用于强制组件刷新 -->\n    <div style=\"display: none;\">{{ refreshTrigger }}</div>\n    \n    <!-- 页面标题和操作区 -->\n    <div class=\"page-header\">\n      <div class=\"left-section\">\n        <h2 class=\"page-title\">智能文档</h2>\n        <p class=\"page-description\">创建、编辑和管理您的智能文档</p>\n        </div>\n      <div class=\"right-section\">\n        <div class=\"search-controls\">\n          <el-select \n            v-model=\"searchCategory\" \n            placeholder=\"选择分类\" \n            @change=\"selectCategory(searchCategory)\" \n            class=\"category-select\"\n          >\n            <el-option label=\"全部分类\" value=\"all\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id.toString()\"\n            />\n          </el-select>\n          \n          <el-input\n            placeholder=\"搜索文档...\"\n            v-model=\"searchQuery\"\n          class=\"search-input\"\n            clearable\n          >\n            <template #prefix>\n              <el-icon><Search /></el-icon>\n            </template>\n          </el-input>\n        </div>\n        \n        <el-button type=\"success\" @click=\"handleImportWord\" style=\"margin-right: 10px;\">\n          <el-icon><Upload /></el-icon> 导入Word\n        </el-button>\n        <el-button type=\"primary\" @click=\"createNewDocument\">\n          <el-icon><Plus /></el-icon> 新建文档\n        </el-button>\n          </div>\n        </div>\n\n    <!-- 文档概览统计卡片 -->\n    <div class=\"stats-cards\">\n      <el-card class=\"stat-card\" shadow=\"hover\" @click=\"selectCategory('all')\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon doc-icon\">\n                <el-icon><Document /></el-icon>\n              </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ totalDocuments }}</div>\n            <div class=\"stat-label\">全部文档</div>\n                </div>\n              </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon edit-icon\">\n            <el-icon><EditPen /></el-icon>\n            </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ recentEditCount }}</div>\n            <div class=\"stat-label\">近期编辑</div>\n          </div>\n        </div>\n      </el-card>\n      \n      <el-card class=\"stat-card\" shadow=\"hover\">\n        <div class=\"stat-content\">\n          <div class=\"stat-icon share-icon\">\n            <el-icon><Share /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-value\">{{ sharedDocuments.length }}</div>\n            <div class=\"stat-label\">共享文档</div>\n            </div>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 添加筛选活动状态提示栏 -->\n    <div v-if=\"searchCategory !== 'all'\" class=\"filter-status-bar\">\n      <div class=\"filter-bar-content\">\n        <div class=\"filter-title\">\n          <span>当前筛选: </span>\n          <span class=\"filter-category\" :style=\"{ backgroundColor: getSelectedCategoryColor() }\">\n            {{ getSelectedCategoryName() }}\n          </span>\n        </div>\n        <div class=\"filter-actions\">\n          <el-button type=\"primary\" link @click=\"resetCategoryFilter\">\n            <el-icon><Close /></el-icon> 清除筛选\n          </el-button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 文档分类区域 - 移至文档列表上方 -->\n    <div class=\"section category-section\">\n      <div class=\"section-header\">\n        <h3>文档分类</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"manageCategories\">管理分类</el-button>\n        </div>\n      </div>\n      \n      <div class=\"category-cards\">\n        <!-- 全部分类选项 -->\n        <div \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === 'all' }\"\n          @click=\"selectCategory('all')\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: '#409EFF' }\">\n            <el-icon><Document /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>全部文档</h4>\n            <div class=\"category-count\">{{ totalDocuments }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === 'all'\" class=\"category-selected-indicator\"></div>\n        </div>\n        \n        <!-- 分类卡片 -->\n        <div \n          v-for=\"category in documentCategories\" \n          :key=\"category.id\" \n          class=\"category-card\" \n          :class=\"{ 'category-active': searchCategory === category.id.toString() }\"\n          @click=\"selectCategory(category)\"\n        >\n          <div class=\"category-icon\" :style=\"{ backgroundColor: category.color }\">\n            <el-icon><Folder /></el-icon>\n          </div>\n          <div class=\"category-info\">\n            <h4>{{ category.name }}</h4>\n            <div class=\"category-count\">{{ category.document_count }} 个文档</div>\n          </div>\n          <div v-if=\"searchCategory === category.id.toString()\" class=\"category-selected-indicator\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加文档列表区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>我的文档</h3>\n        <div class=\"filter-controls\">\n          <el-button text @click=\"() => fetchDocuments(true)\">刷新</el-button>\n        </div>\n              </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in documents\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n              <!-- 添加共享状态标签 -->\n              <div v-if=\"doc.is_shared\" class=\"doc-shared-tag\">\n                <el-icon><User /></el-icon>\n                <span>已共享</span>\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 分页控制区 -->\n      <div v-if=\"totalCount > 0\" class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next, jumper\"\n          :total=\"totalCount\"\n          :page-size=\"pageSize\"\n          v-model:current-page=\"page\"\n          @current-change=\"onPageChange\"\n          :pager-count=\"5\"\n          :disabled=\"createLoading\"\n        />\n        <!-- 添加调试信息(仅开发环境显示) -->\n        <div v-if=\"$_isDev\" class=\"pagination-debug\">\n          <small>当前页: {{ page }} / 总页数: {{ Math.ceil(totalCount / pageSize) || 0 }} (共{{ totalCount }}条记录)</small>\n        </div>\n      </div>\n    </div>\n\n    <!-- 最近编辑文档区域 -->\n    <div class=\"section\">\n      <div class=\"section-header\">\n        <h3>最近编辑</h3>\n        <div class=\"section-actions\">\n          <el-button text @click=\"viewAllDocuments('recent')\">查看全部</el-button>\n        </div>\n      </div>\n      \n      <div class=\"document-cards\">\n        <el-card \n          v-for=\"doc in recentDocuments\" \n          :key=\"doc.id\" \n          class=\"doc-card\" \n          shadow=\"hover\"\n          @click=\"openDocument(doc)\"\n        >\n          <div class=\"doc-card-header\">\n            <div class=\"doc-info\">\n              <div class=\"doc-type-tag\">{{ doc.type }}</div>\n              <div v-if=\"doc.category\" \n                   class=\"doc-category-tag\" \n                   :style=\"{ backgroundColor: doc.category.color || '#67C23A' }\"\n              >\n                {{ doc.category.name }}\n              </div>\n              <!-- 添加共享状态标签 -->\n              <div v-if=\"doc.is_shared\" class=\"doc-shared-tag\">\n                <el-icon><User /></el-icon>\n                <span>已共享</span>\n              </div>\n            </div>\n            <div class=\"doc-menu btn-container\" @click.stop>\n              <el-dropdown trigger=\"click\" @click.stop>\n                <el-icon><More /></el-icon>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item @click.stop=\"openDocument(doc)\">打开</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"editDocument(doc, $event)\">编辑</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"exportDocument(doc)\">下载</el-dropdown-item>\n                    <el-dropdown-item @click.stop=\"shareDocument(doc)\">分享</el-dropdown-item>\n                    <el-dropdown-item divided @click.stop=\"deleteDocument(doc)\" type=\"danger\">删除</el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </div>\n          </div>\n          \n          <div class=\"card-content-area\">\n            <h4 class=\"doc-title\" :title=\"doc.title\">{{ doc.title }}</h4>\n            <div class=\"doc-preview\" v-html=\"doc.preview || '无预览内容'\"></div>\n          </div>\n          \n          <div class=\"doc-footer\">\n            <div class=\"doc-time\">\n              <el-icon><Clock /></el-icon>\n              <span>{{ formatDate(doc.update_time) }}</span>\n            </div>\n            <div class=\"doc-actions btn-container\">\n              <el-tooltip content=\"编辑\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"editDocument(doc, $event)\">\n                  <el-icon><EditPen /></el-icon>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip content=\"分享\" placement=\"top\">\n                <el-button link circle size=\"small\" @click.stop=\"shareDocument(doc)\">\n                  <el-icon><Share /></el-icon>\n                </el-button>\n              </el-tooltip>\n            </div>\n          </div>\n        </el-card>\n        \n        <!-- 创建新文档卡片 -->\n        <div class=\"doc-card new-doc-card\" @click=\"createNewDocument\">\n          <div class=\"new-doc-content\">\n            <el-icon><Plus /></el-icon>\n            <span>新建文档</span>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"recentDocuments.length === 0\" class=\"empty-state\">\n        <!-- 移除暂无最近编辑文档的显示 -->\n    </div>\n  </div>\n\n    <!-- 创建新文档对话框 -->\n  <el-dialog\n      v-model=\"newDocumentDialogVisible\"\n      title=\"新建智能文档\"\n      width=\"35%\"\n    >\n      <el-tabs v-model=\"documentCreateType\">\n        <el-tab-pane label=\"空白文档\" name=\"blank\" />\n        <el-tab-pane label=\"AI生成文档\" name=\"ai\" />\n      </el-tabs>\n\n      <div v-if=\"documentCreateType === 'blank'\">\n        <el-form\n          :model=\"newDocumentForm\"\n          label-width=\"80px\"\n          class=\"mt-4\"\n          :rules=\"blankFormRules\"\n          ref=\"blankFormRef\"\n        >\n          <el-form-item label=\"文档标题\" prop=\"title\">\n            <el-input v-model=\"newDocumentForm.title\" placeholder=\"请输入文档标题\" />\n          </el-form-item>\n          <el-form-item label=\"文档类型\">\n            <el-input v-model=\"newDocumentForm.type\" placeholder=\"请输入文档类型\" />\n            <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <div v-if=\"documentCreateType === 'ai'\">\n        <el-form\n          :model=\"aiDocumentForm\"\n          label-width=\"80px\"\n          class=\"mt-4\"\n          :rules=\"aiFormRules\"\n          ref=\"aiFormRef\"\n        >\n          <el-form-item label=\"文档主题\" prop=\"title\">\n            <el-input v-model=\"aiDocumentForm.title\" placeholder=\"简短描述文档主题，如：项目周报\" />\n          </el-form-item>\n          <el-form-item label=\"文档要求\" prop=\"requirements\">\n            <el-input\n              v-model=\"aiDocumentForm.requirements\"\n              type=\"textarea\"\n              :rows=\"3\"\n              placeholder=\"详细描述您需要的文档内容和要求\"\n            />\n            <div class=\"form-tip\">人工智能会根据您的描述生成文档内容</div>\n          </el-form-item>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"newDocumentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitNewDocument\" :loading=\"createLoading\">\n            创建\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分享文档对话框 -->\n    <el-dialog\n      v-model=\"shareDialogVisible\"\n      title=\"分享文档\"\n      width=\"30%\"\n      class=\"share-dialog\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您即将分享文档: <strong>{{ selectedDocument.title }}</strong></p>\n        <el-form label-width=\"120px\" class=\"mt-4\">\n          <el-form-item label=\"分享方式\">\n            <el-radio-group v-model=\"shareMode\" @change=\"handleShareModeChange\">\n              <el-radio v-if=\"selectedDocument.creator && selectedDocument.creator.id === getCurrentUserId()\" :label=\"'permission'\">授予权限</el-radio>\n              <el-radio :label=\"'chat'\">发送到聊天</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          \n          <!-- 权限分享模式 -->\n          <template v-if=\"shareMode === 'permission'\">\n            <el-form-item label=\"已分享用户\" v-if=\"existingSharedUsers.length > 0\">\n              <div class=\"user-permissions-list\">\n                <div v-for=\"user in existingSharedUsers\" :key=\"user.user_id\" class=\"user-permission-item\">\n                  <span class=\"user-name\">{{ user.username }}</span>\n                  <div class=\"permission-info\">\n                    <el-tag type=\"info\" size=\"small\">可编辑</el-tag>\n                    <el-button type=\"danger\" link @click=\"removeSharedUser(user.user_id)\" style=\"margin-left: 10px;\">移除</el-button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-tip\">已有 {{ existingSharedUsers.length }} 个用户拥有此文档的权限</div>\n            </el-form-item>\n            \n            <el-form-item label=\"添加用户\">\n              <el-select\n                v-model.number=\"selectedUsers\"\n                multiple\n                placeholder=\"请选择要添加的用户\"\n                style=\"width: 100%\"\n                popper-class=\"share-dialog-popper\"\n                @change=\"handleUserSelectionChange\"\n              >\n                <el-option\n                  v-for=\"user in availableUsers\"\n                  :key=\"user.id\"\n                  :label=\"user.username\"\n                  :value=\"user.id\"\n                />\n              </el-select>\n              <div class=\"form-tip\" v-if=\"availableUsers.length === 0\">没有可添加的用户</div>\n            </el-form-item>\n            \n            <template v-if=\"selectedUsers.length > 0\">\n              <el-form-item label=\"新增权限\">\n                <div class=\"user-permissions-list\">\n                  <div v-for=\"userPerm in selectedUsersWithPermissions\" :key=\"userPerm.user_id\" class=\"user-permission-item\">\n                    <span class=\"user-name\">{{ getUsernameById(userPerm.user_id) }}</span>\n                    <el-tag type=\"success\">可编辑</el-tag>\n                  </div>\n                </div>\n              </el-form-item>\n            </template>\n          </template>\n          \n          <!-- 聊天分享模式 -->\n          <template v-if=\"shareMode === 'chat'\">\n            <el-form-item label=\"文档格式\">\n              <el-radio-group v-model=\"shareFormat\">\n                <el-radio label=\"pdf\">PDF格式</el-radio>\n                <el-radio label=\"word\">Word格式</el-radio>\n              </el-radio-group>\n            </el-form-item>\n            \n            <el-form-item label=\"选择用户\">\n              <el-select\n                v-model=\"selectedChatUsers\"\n                multiple\n                placeholder=\"请选择接收用户\"\n                style=\"width: 100%\"\n                popper-class=\"share-dialog-popper\"\n              >\n                <el-option\n                  v-for=\"user in availableChatUsers\"\n                  :key=\"user.id\"\n                  :label=\"user.username\"\n                  :value=\"user.id\"\n                />\n              </el-select>\n              <div class=\"form-tip\">文档将发送到与选中用户的聊天会话中</div>\n            </el-form-item>\n          </template>\n        </el-form>\n      </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"shareDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"confirmShare\" :loading=\"shareLoading\">\n            {{ shareMode === 'permission' ? '确定' : '分享' }}\n          </el-button>\n        </span>\n    </template>\n  </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      v-model=\"deleteDialogVisible\"\n      title=\"删除文档\"\n      width=\"30%\"\n    >\n      <div v-if=\"selectedDocument\">\n        <p>您确定要删除文档 <strong>{{ selectedDocument.title }}</strong> 吗?</p>\n        <p class=\"warning-text\">此操作不可撤销!</p>\n  </div>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n          <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">\n            删除\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n    \n    <!-- 分类管理对话框 -->\n    <el-dialog\n      v-model=\"categoryDialogVisible\"\n      title=\"管理文档分类\"\n      width=\"40%\"\n    >\n      <div class=\"category-management\">\n        <div class=\"category-list\">\n          <h4>当前类型</h4>\n          <el-table :data=\"documentCategories\" style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"类型名称\" />\n            <el-table-column label=\"颜色\" width=\"120\">\n              <template #default=\"scope\">\n                <div class=\"color-preview\" :style=\"{ backgroundColor: scope.row.color }\"></div>\n                {{ scope.row.color }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"文档数\" width=\"100\">\n              <template #default=\"scope\">\n                {{ scope.row.document_count || 0 }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template #default=\"scope\">\n                <el-button type=\"primary\" link @click=\"editCategory(scope.row)\">编辑</el-button>\n                <el-button \n                  type=\"danger\" \n                  link \n                  @click=\"deleteCategory(scope.row)\"\n                  :disabled=\"scope.row.document_count > 0\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        \n        <el-divider />\n        \n        <div class=\"category-form\">\n          <h4>{{ editingCategory.id ? '编辑分类' : '新增分类' }}</h4>\n          <el-form \n            :model=\"editingCategory\" \n            :rules=\"categoryFormRules\" \n            label-width=\"80px\"\n            ref=\"categoryFormRef\"\n          >\n            <el-form-item label=\"分类名称\" prop=\"name\">\n              <el-input v-model=\"editingCategory.name\" placeholder=\"输入分类名称\" />\n            </el-form-item>\n            <el-form-item label=\"分类颜色\" prop=\"color\">\n              <el-color-picker v-model=\"editingCategory.color\" />\n              <span class=\"color-value\">{{ editingCategory.color }}</span>\n            </el-form-item>\n            <el-form-item label=\"描述\">\n              <el-input \n                v-model=\"editingCategory.description\" \n                type=\"textarea\" \n                :rows=\"3\" \n                placeholder=\"输入分类描述（可选）\" \n              />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"submitCategory\" :loading=\"categoryLoading\">\n                {{ editingCategory.id ? '更新' : '创建' }}\n              </el-button>\n              <el-button @click=\"resetCategoryForm\">重置</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 添加编辑文档的弹窗 -->\n    <el-dialog\n      v-model=\"editDialogVisible\"\n      title=\"编辑文档\"\n      width=\"35%\"\n    >\n      <el-form \n        :model=\"editDocumentForm\" \n        label-width=\"80px\" \n        class=\"mt-4\"\n        :rules=\"editFormRules\"\n        ref=\"editFormRef\"\n      >\n        <el-form-item label=\"文档标题\" prop=\"title\">\n          <el-input v-model=\"editDocumentForm.title\" placeholder=\"请输入文档标题\" />\n        </el-form-item>\n        <el-form-item label=\"文档类型\">\n          <el-input v-model=\"editDocumentForm.type\" placeholder=\"请输入文档类型\" />\n          <div class=\"form-tip\">如果未填写，默认为通用类型</div>\n        </el-form-item>\n        <el-form-item label=\"所属分类\">\n          <el-select v-model=\"editDocumentForm.category_id\" placeholder=\"选择文档分类\" style=\"width: 100%\">\n            <el-option label=\"无分类\" :value=\"null\" />\n            <el-option \n              v-for=\"category in documentCategories\" \n              :key=\"category.id\" \n              :label=\"category.name\" \n              :value=\"category.id\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitEditDocument\" :loading=\"editLoading\">\n            保存\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, nextTick, getCurrentInstance, provide, onActivated, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport { Search, Plus, EditPen, Share, Folder, Close, More, Document, Clock, Upload, User } from '@element-plus/icons-vue'\nimport _ from 'lodash'\nimport { \n  getDocuments,\n  getRecentDocuments,\n  getSharedDocuments,\n  getDocumentCategories,\n  createDocument,\n  deleteDocument as apiDeleteDocument,\n  shareDocument as apiShareDocument,\n  createDocumentCategory,\n  updateDocumentCategory,\n  deleteDocumentCategory,\n  aiGenerateDocument,\n  getDocumentDetail,\n  updateDocument,\n  importWordDocument\n} from '@/api/smartdoc'\nimport userApi from '@/api/user';\nimport { createChatSession, getChatSessions } from '@/api/chat';\nimport request from '@/utils/request';\n\nexport default {\n  name: 'SmartDocHome',\n  components: {\n    Search,\n    Plus,\n    EditPen,\n    Share,\n    Folder,\n    Close,\n    More,\n    Document,\n    Clock,\n    Upload,\n    User\n  },\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const { proxy } = getCurrentInstance() // 获取组件实例\n    \n    // 判断是否为开发环境\n    const $_isDev = process.env.NODE_ENV === 'development'\n    \n    // 刷新触发器，用于强制组件刷新\n    const refreshTrigger = ref(Date.now())\n    \n    // 状态数据\n    const documents = ref([])\n    const recentDocuments = ref([])\n    const sharedDocuments = ref([])\n    const documentCategories = ref([])\n    const searchQuery = ref('')\n    const searchCategory = ref('all')\n    const newDocumentDialogVisible = ref(false)\n    const shareDialogVisible = ref(false)\n    const deleteDialogVisible = ref(false)\n    const documentCreateType = ref('blank')\n    const selectedDocument = ref(null)\n    const selectedUsers = ref([])\n    const selectedUsersWithPermissions = ref([]) // 添加权限控制数组\n    const availableUsers = ref([])\n    const availableChatUsers = ref([]) // 添加专用于聊天的用户列表\n    const createLoading = ref(false)\n    const shareLoading = ref(false)\n    const deleteLoading = ref(false)\n    const existingSharedUsers = ref([])\n    \n    // 添加分享相关变量\n    const shareMode = ref('permission') // 分享方式：permission(授权) 或 chat(发送到聊天)\n    const shareFormat = ref('pdf') // 分享文档格式：pdf 或 word\n    const selectedChatUsers = ref([]) // 选择的聊天用户\n    \n    // 分页相关状态\n    const page = ref(1)\n    const pageSize = 12 // 每页显示12个文档（不包含\"新建\"卡片）\n    const totalCount = ref(0)\n    const grandTotalCount = ref(0) // 用于存储真实的文档总数\n    // 添加加载更多相关状态\n    const hasMore = ref(true)\n    const loadingMore = ref(false)\n    \n    // 添加编辑文档相关状态\n    const editDialogVisible = ref(false)\n    const editDocumentForm = ref({\n      id: null,\n      title: '',\n      type: '',\n      category_id: null\n    })\n    const editLoading = ref(false)\n    \n    // 表单数据\n    const newDocumentForm = ref({\n        title: '',\n        type: ''\n    })\n    \n    const aiDocumentForm = ref({\n        title: '',\n      requirements: ''\n    })\n    \n    // 表单校验规则\n    const blankFormRules = {\n        title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ]\n    }\n    \n    const aiFormRules = {\n        title: [\n        { required: true, message: '请输入文档主题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        requirements: [\n        { required: true, message: '请输入文档要求', trigger: 'blur' },\n        { min: 10, max: 500, message: '长度在 10 到 500 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    // 添加编辑表单验证规则\n    const editFormRules = {\n      title: [\n        { required: true, message: '请输入文档标题', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ]\n    }\n    \n    const blankFormRef = ref(null)\n    const aiFormRef = ref(null)\n    const editFormRef = ref(null)\n    \n    // 计算属性\n    const totalDocuments = computed(() => {\n      return grandTotalCount.value;\n    });\n    \n    const recentEditCount = computed(() => {\n      return recentDocuments.value.length || 0;\n    });\n    \n    // 分类管理相关状态\n    const categoryDialogVisible = ref(false)\n    const editingCategory = ref({\n      name: '',\n      color: '#409EFF',\n      description: '',\n    })\n    const categoryFormRef = ref(null)\n    const categoryLoading = ref(false)\n    const categoryFormRules = {\n      name: [\n        { required: true, message: '请输入类型名称', trigger: 'blur' },\n        { min: 2, max: 20, message: '长度在2到20个字符', trigger: 'blur' }\n      ],\n      color: [\n        { required: true, message: '请选择颜色', trigger: 'change' }\n      ]\n    }\n    \n    // 辅助方法：强制刷新视图\n    const forceUpdate = async () => {\n      // 创建临时数据，触发深度响应式更新\n      documents.value = [...documents.value];\n      recentDocuments.value = [...recentDocuments.value]; \n      sharedDocuments.value = [...sharedDocuments.value];\n      \n      // 使用Vue实例的$forceUpdate方法\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate();\n      }\n      \n      // 等待DOM更新\n      await nextTick();\n    };\n    \n    // 方法\n    const fetchDocuments = async (forceRefresh = false, append = false, timestamp = null) => {\n      if (forceRefresh) {\n        page.value = 1\n        hasMore.value = true\n      }\n      \n      // 只有在加载更多模式下才检查hasMore\n      if (append && !hasMore.value && !forceRefresh) {\n        console.log('没有更多文档，取消获取')\n        return\n      }\n      \n      if (!append) {\n        createLoading.value = true\n      } else {\n        loadingMore.value = true\n      }\n      \n      try {\n        // 构建过滤条件\n        const filters = {}\n        \n        // 添加分类过滤\n        if (searchCategory.value && searchCategory.value !== 'all') {\n          filters.category = searchCategory.value\n        }\n        \n        // 添加搜索查询\n        if (searchQuery.value) {\n          filters.search = searchQuery.value\n        }\n        \n        // API请求参数 - 使用与DRF兼容的page_size参数名\n        const params = {\n          page: page.value,\n          page_size: pageSize, // 将pageSize作为page_size参数传递，与后端REST framework参数保持一致\n          _t: timestamp || new Date().getTime() // 添加时间戳，确保不使用缓存\n        }\n        \n        // 合并过滤条件\n        Object.assign(params, filters)\n        \n        console.log(`获取文档列表，页码: ${page.value}，参数:`, params)\n        \n        const res = await getDocuments(params)\n        console.log('文档列表API响应:', res)\n        \n        let newDocuments = []\n        let currentViewCount = 0;\n        \n        // 处理API可能返回的警告信息\n        if (res && res.warning) {\n          console.warn('API返回警告:', res.warning)\n          ElMessage({\n            message: res.warning,\n            type: 'warning',\n            duration: 5000\n          })\n          // 如果是页码问题，重置当前页为1\n          if (res.warning.includes('页码') && res.warning.includes('无效或超出范围')) {\n            setTimeout(() => {\n              page.value = 1;\n            }, 0);\n          }\n        }\n        \n        // 处理不同格式的响应\n        if (res && res.data && Array.isArray(res.data)) {\n          // 标准格式响应\n          newDocuments = res.data\n          currentViewCount = res.total || res.count || 0\n        } else if (res && res.results && Array.isArray(res.results)) {\n          // Django REST格式响应\n          newDocuments = res.results\n          currentViewCount = res.count || 0\n        } else if (res && res.data && res.data.results && Array.isArray(res.data.results)) {\n          // 嵌套格式响应\n          newDocuments = res.data.results\n          currentViewCount = res.data.count || 0\n        } else {\n          console.warn('API返回的文档数据格式无效:', res)\n          documents.value = []\n          return\n        }\n          \n        // 更新用于分页的总数\n        totalCount.value = currentViewCount;\n\n        // 仅当没有筛选条件时，才更新\"全部文档\"的真实总数\n        if (!filters.category && !filters.search) {\n            grandTotalCount.value = currentViewCount;\n        }\n\n        // 如果是追加模式\n        if (append) {\n          // 检查并避免添加重复的文档\n          const existingIds = new Set(documents.value.map(doc => doc.id))\n          const uniqueNewDocs = newDocuments.filter(doc => !existingIds.has(doc.id))\n          \n          if (uniqueNewDocs.length > 0) {\n            documents.value = [...documents.value, ...uniqueNewDocs]\n            console.log(`追加了 ${uniqueNewDocs.length} 个新文档，当前共 ${documents.value.length} 个`)\n          } else {\n            console.log('没有新的文档被追加')\n            // 即使没有新文档，也可能是因为我们在不同的页码上获取了重复数据\n            hasMore.value = newDocuments.length > 0\n          }\n        } else {\n          // 非追加模式，直接替换\n          documents.value = newDocuments\n          console.log(`设置了 ${documents.value.length} 个文档`)\n        }\n        \n        console.log(`当前文档ID列表: [${documents.value.map(d => d.id).join(', ')}]`)\n        \n        // 计算总页数\n        const totalPages = Math.ceil(currentViewCount / pageSize);\n        console.log(`分页状态 - 当前页: ${page.value}, 总页数: ${totalPages}, 总文档数: ${currentViewCount}`);\n        \n        // 检查当前页是否超出范围\n        if (page.value > totalPages && totalPages > 0 && !append) {\n          console.warn(`当前页 ${page.value} 超出范围，自动修正为最后一页 ${totalPages}`);\n          \n          // 使用setTimeout避免触发watch事件\n          setTimeout(() => {\n            page.value = totalPages;\n          }, 0);\n          \n          return;\n        }\n        \n        // 更新是否有更多页标志\n        hasMore.value = page.value < totalPages;\n        \n        // 如果匹配的文档太少（比如低于一屏），并且有更多数据，自动加载更多\n        if (!append && documents.value.length < 8 && hasMore.value) {\n          console.log('文档数量较少，自动加载下一页')\n          // 延迟100ms避免请求过于频繁\n          await new Promise(resolve => setTimeout(resolve, 100));\n          await fetchDocuments(false, true, timestamp);\n        }\n          \n      } catch (error) {\n        console.error('获取文档列表失败', error)\n        documents.value = []\n        ElMessage.error('获取文档列表失败')\n      } finally {\n        if (!append) {\n          createLoading.value = false\n        } else {\n          loadingMore.value = false\n        }\n      }\n    }\n    \n    const fetchRecentDocuments = async (forceRefresh = false, timestamp = null) => {\n      console.log('开始获取最近文档...');\n      try {\n        // 准备参数，如果强制刷新添加时间戳\n        const params = forceRefresh ? { _t: timestamp || new Date().getTime() } : {};\n        \n        const res = await getRecentDocuments(params);\n        console.log('最近文档API响应:', res);\n        \n        if (res && res.data) {\n          // 完全替换数组而不是修改引用\n          recentDocuments.value = Array.isArray(res.data) ? [...res.data] : [];\n          console.log(`设置最近文档: ${recentDocuments.value.length}条记录`);\n        } else {\n          console.warn('API返回的最近文档数据无效:', res);\n          recentDocuments.value = [];\n        }\n      } catch (error) {\n        console.error('获取最近文档失败:', error);\n        ElMessage.error('获取最近文档失败');\n        recentDocuments.value = [];\n      }\n    }\n    \n    const fetchSharedDocuments = async (timestamp = null) => {\n      try {\n        const params = timestamp ? { _t: timestamp } : {};\n        const response = await getSharedDocuments(params)\n        sharedDocuments.value = response.data\n      } catch (error) {\n        console.error('获取共享文档失败', error)\n        ElMessage.error('获取共享文档失败')\n      }\n    }\n    \n    const fetchDocumentCategories = async (timestamp = null, retryCount = 0) => {\n      console.log('开始获取文档分类...');\n      try {\n        const params = timestamp ? { _t: timestamp } : {};\n        const res = await getDocumentCategories(params);\n        console.log('文档分类API响应:', res);\n        \n        if (res && res.data) {\n          documentCategories.value = res.data;\n          console.log(`设置文档分类: ${documentCategories.value.length}条记录, 数据:`, documentCategories.value);\n        } else {\n          console.warn('API返回的文档分类数据无效:', res);\n          documentCategories.value = [];\n          \n          // 如果返回空数据且未达到最大重试次数，尝试重试\n          if (documentCategories.value.length === 0 && retryCount < 2) {\n            console.log(`文档分类数据为空，${retryCount + 1}秒后重试...`);\n            setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n          }\n        }\n      } catch (error) {\n        console.error('获取文档分类失败:', error);\n        \n        // 如果是服务器错误且未达到最大重试次数，尝试重试\n        if (error.response && error.response.status >= 500 && retryCount < 2) {\n          console.log(`服务器错误，${retryCount + 1}秒后重试...`);\n          setTimeout(() => fetchDocumentCategories(timestamp, retryCount + 1), (retryCount + 1) * 1000);\n        } else {\n          ElMessage.error('获取文档分类失败，请刷新页面重试');\n          // 初始化空数组\n          documentCategories.value = [];\n        }\n      }\n    }\n    \n    // 监听搜索查询变化，实现实时搜索\n    watch(searchQuery, _.debounce(async () => {\n      // 重置分页\n      page.value = 1\n      hasMore.value = true\n      \n      // 清空现有文档列表，显示加载状态\n      documents.value = []\n      createLoading.value = true\n      \n      try {\n        // 获取新的搜索结果\n        await fetchDocuments(true)\n      } catch (error) {\n        console.error('搜索失败:', error)\n        ElMessage.error('搜索文档失败，请重试')\n      } finally {\n        createLoading.value = false\n      }\n    }, 300))\n    \n    const createNewDocument = () => {\n      // 重置表单\n      newDocumentForm.value = { title: '', type: '' }\n      aiDocumentForm.value = { title: '', requirements: '' }\n      documentCreateType.value = 'blank'\n      newDocumentDialogVisible.value = true\n      \n      // 监听对话框关闭事件，清理表单\n      nextTick(() => {\n        try {\n          const dialog = document.querySelector('.el-dialog');\n          if (dialog) {\n            dialog.addEventListener('closed', () => {\n              try {\n                if (blankFormRef.value) {\n                  blankFormRef.value.clearValidate();\n                }\n                if (aiFormRef.value) {\n                  aiFormRef.value.clearValidate();\n                }\n              } catch (err) {\n                console.error('Error clearing form validation:', err);\n              }\n            }, { once: true });\n          }\n        } catch (err) {\n          console.error('Error setting up dialog event listener:', err);\n        }\n      });\n    }\n    \n    const submitNewDocument = async () => {\n      if (documentCreateType.value === 'blank') {\n        if (!blankFormRef.value) {\n          console.warn('表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await blankFormRef.value.validate()\n            .catch(err => {\n              console.error('表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              console.log('开始创建文档:', {\n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用'\n              });\n              \n              const response = await createDocument({ \n                title: newDocumentForm.value.title,\n                type: newDocumentForm.value.type || '通用',\n                content: ''\n              });\n              \n              console.log('创建文档响应数据：', JSON.stringify(response));\n              \n              // 关闭对话框\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('文档创建成功');\n              \n              // 解析返回的文档ID\n              let docId = null;\n              if (response && response.data) {\n                if (response.data.id) {\n                  docId = response.data.id;\n                } else if (Array.isArray(response.data) && response.data.length > 0) {\n                  docId = response.data[0].id;\n                } else if (response.data.results && Array.isArray(response.data.results) && response.data.results.length > 0) {\n                  docId = response.data.results[0].id;\n                }\n              }\n              \n              // 等待对话框关闭完成后再执行跳转，避免DOM错误\n              setTimeout(() => {\n                if (docId) {\n                  console.log(`准备跳转到文档详情页，ID: ${docId}`);\n                  \n                  // 先刷新文档列表，确保数据是最新的\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                  \n                  // 然后再执行导航\n                  setTimeout(() => {\n                    router.push({\n                      name: 'SmartDocDetail',\n                      params: { id: docId }\n                    }).then(() => {\n                      createLoading.value = false;\n                    }).catch(err => {\n                      console.error('路由导航失败:', err);\n                      ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                      // 尝试路径跳转\n                      router.push(`/smartdoc/${docId}`).catch(navErr => {\n                        console.error('路径导航也失败:', navErr);\n                        ElMessage.error('路径跳转详情页也失败');\n                      });\n                      createLoading.value = false;\n                    });\n                  }, 300);\n                } else {\n                  console.warn('创建文档成功，但返回的数据格式不正确', response);\n                  // 刷新文档列表\n                  fetchDocuments();\n                  fetchRecentDocuments();\n                }\n              }, 100);\n            } catch (error) {\n              console.error('创建文档失败', error);\n              ElMessage.error('创建文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      } else if (documentCreateType.value === 'ai') {\n        if (!aiFormRef.value) {\n          console.warn('AI表单引用不存在');\n          return;\n        }\n        \n        try {\n          const valid = await aiFormRef.value.validate()\n            .catch(err => {\n              console.error('AI表单验证失败:', err);\n              return false;\n            });\n          \n          if (valid) {\n            createLoading.value = true;\n            try {\n              // 调用AI生成文档API\n              const categoryId = searchCategory.value !== 'all' ? searchCategory.value : null;\n              const response = await aiGenerateDocument({\n                title: aiDocumentForm.value.title,\n                requirement: aiDocumentForm.value.requirements,\n                category_id: categoryId,\n                doc_type: 'AI'\n              });\n              console.log('AI生成文档响应数据：', response);\n              // 检查超时\n              if (response && response.status === 504) {\n                ElMessage.error(response.data?.detail || 'AI生成超时，请简化需求或稍后重试');\n                createLoading.value = false;\n                return;\n              }\n              if (response && response.data && typeof response.data.detail === 'string' && response.data.detail.includes('超时')) {\n                ElMessage.error(response.data.detail);\n                createLoading.value = false;\n                return;\n              }\n              newDocumentDialogVisible.value = false;\n              ElMessage.success('AI生成文档成功');\n              let docId = null;\n              if (response && response.data && response.data.id) {\n                docId = response.data.id;\n              }\n              if (docId) {\n                // 跳转前打印日志\n                console.log('准备跳转到文档详情页，路由名: SmartDocDetail, id:', docId);\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: String(docId) }\n                }).then(() => {\n                  createLoading.value = false;\n                }).catch(err => {\n                  console.error('路由导航失败:', err);\n                  ElMessage.error('跳转文档详情页失败，请手动刷新页面');\n                  // 尝试路径跳转\n                  router.push(`/smartdoc/${docId}`).catch(navErr => {\n                    console.error('路径导航也失败:', navErr);\n                    ElMessage.error('路径跳转详情页也失败');\n                  });\n                  createLoading.value = false;\n                });\n                // 异步刷新数据\n                fetchDocuments();\n                fetchRecentDocuments();\n              } else {\n                fetchDocuments();\n                fetchRecentDocuments();\n                createLoading.value = false;\n              }\n            } catch (error) {\n              console.error('AI生成文档失败', error);\n              ElMessage.error('AI生成文档失败');\n            } finally {\n              createLoading.value = false;\n            }\n          }\n        } catch (error) {\n          console.error('提交AI表单时发生错误:', error);\n          ElMessage.error('表单提交失败');\n          createLoading.value = false;\n        }\n      }\n    }\n    \n    const openDocument = (doc) => {\n      router.push({ name: 'SmartDocDetail', params: { id: doc.id } })\n    }\n    \n    const editDocument = (doc, event) => {\n      // 阻止事件冒泡，防止触发卡片点击事件\n      if (event) {\n        event.stopPropagation();\n      }\n      \n      // 确保分类ID是数字类型\n      let categoryId = null;\n      if (doc.category && doc.category.id) {\n        categoryId = Number(doc.category.id);\n      }\n      \n      console.log('编辑文档:', doc.id, '当前分类:', categoryId);\n      \n      // 设置表单数据\n      editDocumentForm.value = {\n        id: doc.id,\n        title: doc.title,\n        type: doc.type || '',\n        category_id: categoryId\n      };\n      \n      // 显示编辑对话框\n      editDialogVisible.value = true;\n    };\n    \n    // 提交编辑文档\n    const submitEditDocument = async () => {\n      if (!editFormRef.value) return;\n      \n      try {\n        const valid = await editFormRef.value.validate();\n        \n        if (valid) {\n          editLoading.value = true;\n          \n          // 准备更新的数据\n          const updateData = {\n            title: editDocumentForm.value.title,\n            type: editDocumentForm.value.type || '通用',\n            category_id: editDocumentForm.value.category_id\n          };\n          \n          // 调用API更新文档\n          await updateDocument(editDocumentForm.value.id, updateData);\n          \n          ElMessage.success('文档更新成功');\n          editDialogVisible.value = false;\n          \n          // 强制刷新所有数据以确保视图同步\n          await reloadAllData();\n        }\n      } catch (error) {\n        console.error('更新文档失败', error);\n        ElMessage.error('更新文档失败');\n      } finally {\n        editLoading.value = false;\n      }\n    };\n    \n    const exportDocument = (doc) => {\n      ElMessageBox({\n        title: '导出文档',\n        message: '请选择导出格式',\n        showCancelButton: true,\n        confirmButtonText: '导出为PDF',\n        cancelButtonText: '导出为Word',\n        closeOnClickModal: true,\n        callback: (action) => {\n          if (action === 'confirm') {\n            exportToPdf(doc)\n          } else if (action === 'cancel') {\n            exportToWord(doc)\n          }\n        }\n      })\n    }\n    \n    // 导出为PDF\n    const exportToPdf = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      // 先获取文档详情内容\n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.pdf`\n        \n        // 创建临时容器用于导出\n        const tempContainer = document.createElement('div')\n        tempContainer.innerHTML = documentContent\n        tempContainer.className = 'temp-export-container'\n        document.body.appendChild(tempContainer)\n        \n        const options = {\n          margin: [15, 15, 15, 15],\n          filename: filename,\n          image: { type: 'jpeg', quality: 0.98 },\n          html2canvas: { scale: 2, useCORS: true },\n          jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n        }\n        \n        // 更新加载提示\n        loading.setText('正在生成PDF...')\n        \n        // 动态导入html2pdf.js\n        const html2pdfModule = await import('html2pdf.js')\n        const html2pdf = html2pdfModule.default\n        \n        await html2pdf().from(tempContainer).set(options).save()\n        \n        // 清理临时元素\n        document.body.removeChild(tempContainer)\n        \n        loading.close()\n        ElMessage.success('PDF导出成功')\n      } catch (error) {\n        console.error('PDF导出失败:', error)\n        loading.close()\n        ElMessage.error('PDF导出失败: ' + (error.message || '未知错误'))\n      }\n    }\n    \n    // 导出为Word（保留图片）\n    const exportToWord = async (doc) => {\n      if (!doc) {\n        ElMessage.error('没有可导出的文档')\n        return\n      }\n      \n      const loading = ElLoading.service({\n        lock: true,\n        text: '正在加载文档内容...',\n        background: 'rgba(255, 255, 255, 0.7)'\n      })\n      \n      try {\n        // 获取文档详情\n        const response = await getDocumentDetail(doc.id)\n        const documentContent = response.data.content\n        \n        if (!documentContent) {\n          loading.close()\n          ElMessage.error('文档内容为空，无法导出')\n          return\n        }\n        \n        const docTitle = doc.title || '未命名文档'\n        const filename = `${docTitle}.doc`\n        \n        // 创建一个临时文档容器处理内容\n        const contentContainer = document.createElement('div')\n        contentContainer.innerHTML = documentContent\n        \n        // 更新加载提示\n        loading.setText('正在生成Word文档...')\n        \n        // 创建微软Word兼容的HTML文档\n        const msWordHtml = `\n          <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                xmlns=\"http://www.w3.org/TR/REC-html40\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>${docTitle}</title>\n            <style>\n              body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n              img { max-width: 100%; height: auto; }\n              p { margin: 0; padding: 0; }\n              h1 { font-size: 18pt; }\n              h2 { font-size: 16pt; }\n              h3 { font-size: 14pt; }\n              table { border-collapse: collapse; width: 100%; }\n              td, th { border: 1px solid #000; padding: 5px; }\n            </style>\n          </head>\n          <body>\n            <h1>${docTitle}</h1>\n            ${contentContainer.innerHTML}\n          </body>\n          </html>\n        `\n        \n        // 使用file-saver保存文件\n        const FileSaver = await import('file-saver')\n        const saveAs = FileSaver.saveAs || FileSaver.default\n        const blob = new Blob([msWordHtml], { type: 'application/msword' })\n        saveAs(blob, filename)\n        \n        loading.close()\n        ElMessage.success('Word文档导出成功')\n      } catch (error) {\n        console.error('Word导出失败:', error)\n        loading.close()\n        ElMessage.error(`Word导出失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    const shareDocument = async (doc) => {\n      selectedDocument.value = doc\n      shareLoading.value = true\n      \n      try {\n        console.log('获取文档详情，ID:', doc.id);\n        // Fetch document details to get existing permissions\n        const detailRes = await getDocumentDetail(doc.id)\n        console.log('文档详情响应:', detailRes);\n        \n        // 尝试从不同可能的响应结构中提取shared_with数据\n        let sharedWithData = [];\n        if (detailRes && detailRes.data) {\n          if (detailRes.data.shared_with && Array.isArray(detailRes.data.shared_with)) {\n            sharedWithData = detailRes.data.shared_with;\n            console.log('从data.shared_with提取共享用户:', sharedWithData);\n          } else if (detailRes.data.permissions && Array.isArray(detailRes.data.permissions)) {\n            sharedWithData = detailRes.data.permissions;\n            console.log('从data.permissions提取共享用户:', sharedWithData);\n          } else if (detailRes.shared_with && Array.isArray(detailRes.shared_with)) {\n            sharedWithData = detailRes.shared_with;\n            console.log('从直接的shared_with提取共享用户:', sharedWithData);\n          }\n        }\n        \n        // 处理不同格式的用户数据\n        if (sharedWithData.length > 0) {\n          existingSharedUsers.value = sharedWithData.map(item => {\n            // 处理可能的不同数据结构\n            if (item.user && (item.user.id || item.user.user_id)) {\n              return {\n                user_id: item.user.id || item.user.user_id,\n                username: item.user.username || item.user.name || item.user.email || `用户${item.user.id}`,\n                permission: item.permission || 'edit'\n              };\n            } else if (item.user_id || item.userId) {\n              return {\n                user_id: item.user_id || item.userId,\n                username: item.username || item.name || item.email || `用户${item.user_id || item.userId}`,\n                permission: item.permission || 'edit'\n              };\n            }\n            // 默认情况，尝试使用item本身\n            return {\n              user_id: item.id || item.user_id || 0,\n              username: item.username || item.name || item.email || '未知用户',\n              permission: item.permission || 'edit'\n            };\n          });\n        } else {\n          console.log('没有找到已分享用户数据');\n          existingSharedUsers.value = [];\n        }\n        \n        console.log('处理后的已分享用户列表:', existingSharedUsers.value);\n        const existingUserIds = new Set(existingSharedUsers.value.map(u => u.user_id));\n        console.log('已分享用户ID集合:', Array.from(existingUserIds));\n        \n        // Get current user and company info\n        const currentUserJson = localStorage.getItem('user')\n        let currentUserId = null\n        let companyId = null\n        if (currentUserJson) {\n          const currentUser = JSON.parse(currentUserJson)\n          currentUserId = currentUser.id\n          companyId = currentUser.company_id\n          console.log('当前用户ID:', currentUserId, '公司ID:', companyId);\n        }\n        \n        const isCreator = doc.creator && currentUserId && doc.creator.id === currentUserId\n        shareMode.value = isCreator ? 'permission' : 'chat'\n        console.log('是否为创建者:', isCreator, '分享模式:', shareMode.value);\n        \n        // Fetch all company users\n        const usersRes = await userApi.getCompanyUsers()\n        console.log('公司用户列表响应:', usersRes);\n        if (usersRes.success && Array.isArray(usersRes.data)) {\n          // 权限模式下的用户列表（排除已有权限的用户）\n          availableUsers.value = usersRes.data\n            .filter(user => \n              user.id !== currentUserId && \n              (!companyId || user.company_id === companyId) &&\n              !existingUserIds.has(user.id) // 排除已有权限的用户\n            )\n            .map(user => ({\n              id: user.id,\n              username: user.name || user.username || user.email || `用户${user.id}`\n            }));\n          \n          // 聊天模式下的用户列表（包含所有用户，包括已有权限的用户）\n          availableChatUsers.value = usersRes.data\n            .filter(user => \n              user.id !== currentUserId && \n              (!companyId || user.company_id === companyId)\n              // 不排除已有权限的用户\n            )\n            .map(user => ({\n              id: user.id,\n              username: user.name || user.username || user.email || `用户${user.id}`\n            }));\n          \n          console.log('授权模式可选用户列表:', availableUsers.value);\n          console.log('聊天模式可选用户列表:', availableChatUsers.value);\n        } else {\n          console.warn('获取公司用户列表失败:', usersRes);\n          availableUsers.value = [];\n          availableChatUsers.value = [];\n        }\n      } catch (error) {\n        console.error('打开分享对话框失败:', error)\n        ElMessage.error('获取分享信息失败')\n        existingSharedUsers.value = []\n      } finally {\n        shareLoading.value = false\n        \n        // Reset variables for adding new users\n        shareFormat.value = 'pdf'\n        selectedUsers.value = []\n        selectedUsersWithPermissions.value = []\n        selectedChatUsers.value = []\n        \n        shareDialogVisible.value = true\n      }\n    }\n    \n    // 通过ID获取用户名\n    const getUsernameById = (userId) => {\n      const user = availableUsers.value.find(u => u.id === userId)\n      return user ? user.username : '未知用户'\n    }\n    \n    // 获取当前用户ID\n    const getCurrentUserId = () => {\n      try {\n        const currentUserJson = localStorage.getItem('user')\n        if (currentUserJson) {\n          const currentUser = JSON.parse(currentUserJson)\n          return currentUser.id\n        }\n        return null\n      } catch (error) {\n        console.error('获取当前用户ID失败:', error)\n        return null\n      }\n    }\n\n    // 处理用户选择变化\n    const handleUserSelectionChange = (val) => {\n      console.log('选择变化 - 原始值:', val);\n      console.log('选择变化 - selectedUsers:', selectedUsers.value);\n      console.log('选择变化 - 类型:', typeof selectedUsers.value, Array.isArray(selectedUsers.value));\n      \n      // 确保selectedUsers是数组\n      if (!Array.isArray(selectedUsers.value)) {\n        console.warn('selectedUsers不是数组，强制转换为数组');\n        selectedUsers.value = Array.isArray(val) ? val : [];\n      }\n      \n      // 更新权限控制数组\n      selectedUsersWithPermissions.value = selectedUsers.value.map(userId => {\n        console.log('处理用户ID:', userId, '类型:', typeof userId);\n        return {\n          user_id: userId,\n          permission: 'edit' // 默认为只读权限\n        };\n      });\n      \n      console.log('用户选择变化，已选择用户:', selectedUsers.value);\n      console.log('用户权限数组:', selectedUsersWithPermissions.value);\n    }\n\n    // 处理分享模式变化\n    const handleShareModeChange = () => {\n      console.log('分享模式变更为:', shareMode.value);\n      // 切换分享模式时清空之前选择的用户\n      if (shareMode.value === 'permission') {\n        // 切换到权限模式，清空聊天相关的选择\n        selectedChatUsers.value = [];\n        console.log('已清空聊天用户选择');\n      } else if (shareMode.value === 'chat') {\n        // 切换到聊天模式，清空权限相关的选择\n        selectedUsers.value = [];\n        selectedUsersWithPermissions.value = [];\n        console.log('已清空权限用户选择');\n      }\n    }\n    \n    const confirmShare = async () => {\n      // 权限分享方式\n      if (shareMode.value === 'permission') {\n        // 检查是否为文档创建者\n        const currentUserId = getCurrentUserId();\n        const isCreator = selectedDocument.value && selectedDocument.value.creator && \n                          currentUserId && selectedDocument.value.creator.id === currentUserId;\n        \n        if (!isCreator) {\n          ElMessage.warning('只有文档创建者才能授予权限')\n          return\n        }\n        \n        const finalPermissions = [\n          ...existingSharedUsers.value.map(u => ({ user_id: u.user_id, permission: 'edit' })),\n          ...selectedUsersWithPermissions.value\n        ];\n        \n        shareLoading.value = true\n        try {\n          await apiShareDocument(selectedDocument.value.id, finalPermissions)\n          ElMessage.success('权限更新成功')\n          shareDialogVisible.value = false\n        } catch (error) {\n          console.error('分享文档失败', error)\n          ElMessage.error('权限更新失败')\n        } finally {\n          shareLoading.value = false\n        }\n      } \n      // 聊天分享方式\n      else if (shareMode.value === 'chat') {\n        if (!selectedDocument.value || selectedChatUsers.value.length === 0) {\n          ElMessage.warning('请选择至少一个接收用户')\n          return\n        }\n        \n        shareLoading.value = true\n        try {\n          // 获取当前用户信息\n          const currentUserJson = localStorage.getItem('user')\n          let currentUserId = null\n          if (currentUserJson) {\n            const currentUser = JSON.parse(currentUserJson)\n            currentUserId = currentUser.id\n          }\n          \n          if (!currentUserId) {\n            ElMessage.error('无法获取当前用户信息')\n            shareLoading.value = false\n            return\n          }\n          \n          // 需要获取文档内容\n          const docResponse = await getDocumentDetail(selectedDocument.value.id);\n          const currentDoc = docResponse.data;\n          \n          if (!currentDoc || !currentDoc.content) {\n            ElMessage.error('无法获取文档内容')\n            shareLoading.value = false\n            return\n          }\n          \n          // 使用前端导出文件的方式获取文件\n          const loading = ElLoading.service({\n            lock: true,\n            text: `正在准备${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文件...`,\n            background: 'rgba(255, 255, 255, 0.7)'\n          });\n          \n          try {\n            // 准备文档内容\n            const docTitle = currentDoc.title || '未命名文档';\n            const documentContent = currentDoc.content;\n            \n            // 创建临时容器用于导出\n            const tempContainer = document.createElement('div');\n            tempContainer.innerHTML = documentContent;\n            tempContainer.className = 'temp-export-container';\n            document.body.appendChild(tempContainer);\n            \n            let documentFile = null;\n            let fileName = docTitle;\n            let fileType = '';\n            \n            if (shareFormat.value === 'pdf') {\n              fileName += '.pdf';\n              fileType = 'application/pdf';\n              \n              loading.setText('正在生成PDF文件...');\n              \n              // 动态导入html2pdf.js\n              const html2pdfModule = await import('html2pdf.js');\n              const html2pdf = html2pdfModule.default;\n              \n              const options = {\n                margin: [15, 15, 15, 15],\n                filename: fileName,\n                image: { type: 'jpeg', quality: 0.98 },\n                html2canvas: { scale: 2, useCORS: true },\n                jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n              };\n              \n              // 生成PDF并获取Blob\n              documentFile = await html2pdf().from(tempContainer).set(options).outputPdf('blob');\n            }\n            else {\n              fileName += '.doc';\n              fileType = 'application/msword';\n              \n              loading.setText('正在生成Word文件...');\n              \n              // 创建微软Word兼容的HTML文档\n              const msWordHtml = `\n                <html xmlns:o=\"urn:schemas-microsoft-com:office:office\" \n                      xmlns:w=\"urn:schemas-microsoft-com:office:word\" \n                      xmlns=\"http://www.w3.org/TR/REC-html40\">\n                <head>\n                  <meta charset=\"utf-8\">\n                  <title>${docTitle}</title>\n                  <style>\n                    body { font-family: SimSun, Arial, sans-serif; margin: 1cm; }\n                    img { max-width: 100%; height: auto; }\n                    p { margin: 0; padding: 0; }\n                    h1 { font-size: 18pt; }\n                    h2 { font-size: 16pt; }\n                    h3 { font-size: 14pt; }\n                    table { border-collapse: collapse; width: 100%; }\n                    td, th { border: 1px solid #000; padding: 5px; }\n                  </style>\n                </head>\n                <body>\n                  <h1>${docTitle}</h1>\n                  ${tempContainer.innerHTML}\n                </body>\n                </html>\n              `;\n              \n              // 创建Blob\n              documentFile = new Blob([msWordHtml], { type: fileType });\n            }\n            \n            // 清理临时元素\n            document.body.removeChild(tempContainer);\n            \n            // 先获取所有聊天会话列表，只获取一次\n            loading.setText('正在查找聊天会话...');\n            const sessionsResponse = await getChatSessions();\n            let chatSessions = [];\n            \n            // 处理不同格式的API返回结果\n            if (sessionsResponse && sessionsResponse.data && Array.isArray(sessionsResponse.data)) {\n              chatSessions = sessionsResponse.data;\n            } else if (sessionsResponse && sessionsResponse.results && Array.isArray(sessionsResponse.results)) {\n              chatSessions = sessionsResponse.results;\n            } else if (sessionsResponse && Array.isArray(sessionsResponse)) {\n              chatSessions = sessionsResponse;\n            }\n            \n            console.log(`获取到 ${chatSessions.length} 个会话`);\n            loading.setText('正在准备发送...');\n            \n            // 为每个用户准备会话ID，使用Map存储userId -> chatId的映射\n            const userSessionMap = new Map();\n            \n            // 先批量查找现有会话，减少重复检查\n            for (const userId of selectedChatUsers.value) {\n              // 查找是否有与该用户的会话\n              const existingSession = chatSessions.find(session => {\n                // 检查会话是否为双人会话\n                if (!session.participants || !Array.isArray(session.participants)) {\n                  return false;\n                }\n                \n                // 检查会话是否只有两个参与者\n                if (session.participants.length !== 2) {\n                  return false;\n                }\n                \n                // 检查会话参与者是否包含当前用户和目标用户\n                const hasCurrentUser = session.participants.some(p => \n                  (p.id === currentUserId) || (p.user && p.user.id === currentUserId)\n                );\n                \n                const hasTargetUser = session.participants.some(p => \n                  (p.id === userId) || (p.user && p.user.id === userId)\n                );\n                \n                return hasCurrentUser && hasTargetUser;\n              });\n              \n              if (existingSession) {\n                userSessionMap.set(userId, existingSession.id);\n                console.log(`用户${userId}有现有会话: ${existingSession.id}`);\n              }\n            }\n            \n            // 为没有会话的用户创建新会话\n            const newSessionPromises = [];\n            for (const userId of selectedChatUsers.value) {\n              if (!userSessionMap.has(userId)) {\n                console.log(`为用户${userId}创建新会话...`);\n                newSessionPromises.push(\n                  createChatSession({\n                    participant_ids: [currentUserId, userId],\n                    title: '文档分享'\n                  }).then(response => {\n                    if (response && response.data && response.data.id) {\n                      userSessionMap.set(userId, response.data.id);\n                      console.log(`为用户${userId}创建新会话成功: ${response.data.id}`);\n                    } else if (response && response.id) {\n                      userSessionMap.set(userId, response.id);\n                      console.log(`为用户${userId}创建新会话成功: ${response.id}`);\n                    } else {\n                      console.error('创建聊天会话失败，返回数据格式不正确:', response);\n                      return null;\n                    }\n                  }).catch(error => {\n                    console.error(`为用户${userId}创建会话失败:`, error);\n                    return null;\n                  })\n                );\n              }\n            }\n            \n            // 等待所有新会话创建完成\n            if (newSessionPromises.length > 0) {\n              loading.setText(`正在创建 ${newSessionPromises.length} 个新会话...`);\n              await Promise.all(newSessionPromises);\n            }\n            \n            // 准备发送文件\n            loading.setText('正在发送文件...');\n            const sendPromises = [];\n            const failedUsers = [];\n            \n            // 遍历用户发送文件\n            for (const userId of selectedChatUsers.value) {\n              const chatId = userSessionMap.get(userId);\n              if (!chatId) {\n                console.error(`未能找到或创建用户${userId}的会话`);\n                failedUsers.push(userId);\n                continue;\n              }\n              \n              console.log(`准备向会话 ${chatId} 发送文档...`);\n              \n              // 创建FormData对象，添加文件和相关信息\n              const formData = new FormData();\n              formData.append('chat', chatId);\n              formData.append('message_type', 'file');\n              formData.append('content', `分享了一个${shareFormat.value === 'pdf' ? 'PDF' : 'Word'}文档: ${docTitle}`);\n              \n              // 将文件Blob转换为File对象 - 为每个用户创建新的File对象\n              const file = new File([documentFile], fileName, { type: fileType });\n              formData.append('file', file);\n              \n              // 发送文件消息\n              sendPromises.push(\n                request({\n                  url: '/api/chat/messages/',\n                  method: 'post',\n                  data: formData,\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  },\n                  timeout: 30000 // 增加超时时间\n                }).then(response => {\n                  console.log(`向用户 ${userId} 发送文档成功:`, response);\n                  return { userId, success: true };\n                }).catch(error => {\n                  console.error(`向用户 ${userId} 发送文档失败:`, error);\n                  return { userId, success: false, error };\n                })\n              );\n            }\n            \n            // 等待所有发送操作完成\n            const sendResults = await Promise.all(sendPromises);\n            const successCount = sendResults.filter(result => result.success).length;\n            const totalAttempted = sendResults.length;\n            const totalSelected = selectedChatUsers.value.length;\n            \n            if (successCount > 0) {\n              if (successCount === totalSelected) {\n                ElMessage.success(`成功发送文档到所有 ${successCount} 个用户的聊天`);\n              } else {\n                ElMessage.warning(`部分发送成功: ${successCount}/${totalSelected} 个用户接收到文档`);\n              }\n              shareDialogVisible.value = false;\n            } else if (totalAttempted > 0) {\n              ElMessage.error('发送文档失败，请重试');\n            } else {\n              ElMessage.error('未能创建任何聊天会话，请重试');\n            }\n          } catch (error) {\n            console.error('生成文档文件失败:', error);\n            ElMessage.error('生成文档文件失败');\n          } finally {\n            loading.close();\n          }\n        } catch (error) {\n          console.error('分享文档到聊天失败:', error);\n          ElMessage.error('分享文档到聊天失败');\n        } finally {\n          shareLoading.value = false;\n        }\n      }\n    }\n    \n    const deleteDocument = (doc) => {\n      selectedDocument.value = doc\n      deleteDialogVisible.value = true\n    }\n    \n    const confirmDelete = async () => {\n      if (!selectedDocument.value) return\n      \n      deleteLoading.value = true\n      try {\n        // 记录要删除的文档ID和类别\n        const deletedDocId = selectedDocument.value.id;\n        const deletedDocCategoryId = selectedDocument.value.category?.id;\n        \n        // 先关闭对话框，提高用户体验\n        deleteDialogVisible.value = false;\n        \n        // 执行删除操作\n        await apiDeleteDocument(deletedDocId)\n        ElMessage.success('文档删除成功')\n        \n        // 强制清除选中的文档\n        selectedDocument.value = null;\n        \n        // 清除可能的缓存数据\n        if (window.localStorage) {\n          try {\n            // 移除可能存在的相关缓存\n            localStorage.removeItem(`doc_cache_${deletedDocId}`);\n            localStorage.removeItem(`recent_docs_cache`);\n            localStorage.removeItem(`doc_list_cache`);\n          } catch (e) {\n            console.error('清除本地缓存失败:', e);\n          }\n        }\n        \n        // 更新刷新触发器\n        refreshTrigger.value = Date.now();\n        \n        // 使用新数组替换原数组，确保Vue能检测到变化 \n        documents.value = [...documents.value.filter(doc => doc.id !== deletedDocId)];\n        recentDocuments.value = [...recentDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        sharedDocuments.value = [...sharedDocuments.value.filter(doc => doc.id !== deletedDocId)];\n        \n        // 强制更新视图\n        await forceUpdate();\n        \n        // 更新分类中的文档计数\n        if (deletedDocCategoryId) {\n          const category = documentCategories.value.find(c => c.id === deletedDocCategoryId);\n          if (category && category.document_count > 0) {\n            category.document_count--;\n          }\n        }\n        \n        // 等待DOM更新\n        await nextTick();\n        \n        // 重新导航到文档首页，确保状态全部刷新\n        if (router.currentRoute.value.name === 'SmartDocDetail') {\n          console.log('从详情页删除文档，重新导航到文档首页');\n          \n          // 先强制刷新数据，确保导航后数据是最新的\n          await reloadAllData();\n          \n          // 使用replace模式跳转，不留下历史记录，并添加强制刷新参数\n          router.replace({ \n            name: 'SmartDoc',\n            query: { _refresh: Date.now() } // 添加时间戳参数防止缓存\n          });\n        } else {\n          // 如果已经在文档首页，立即重载数据并强制刷新页面\n          await refreshData();\n        }\n      } catch (error) {\n        console.error('删除文档失败', error);\n        ElMessage.error('删除文档失败');\n        // 如果删除失败，关闭对话框\n        deleteDialogVisible.value = false;\n      } finally {\n        deleteLoading.value = false;\n      }\n    }\n    \n    const viewAllDocuments = (type) => {\n      if (type === 'recent') {\n        // 路由中没有SmartDocList，直接跳转到智能文档首页并滚动到文档列表\n        router.push({ name: 'SmartDoc' }).then(() => {\n          setTimeout(() => {\n            const docSection = document.querySelector('.section');\n            if (docSection) {\n              docSection.scrollIntoView({ behavior: 'smooth' });\n            }\n          }, 300);\n        });\n      }\n    }\n    \n    const selectCategory = (category) => {\n      console.log('选择分类:', category);\n      \n      // 处理不同类型的category参数\n      let categoryId;\n      if (category === 'all') {\n        categoryId = 'all';\n      } else if (typeof category === 'string') {\n        categoryId = category;\n      } else if (typeof category === 'object' && category !== null) {\n        categoryId = category.id.toString();\n      }\n      \n      console.log('处理后的分类ID:', categoryId);\n      \n      // 如果选择的分类与当前分类相同，则不做任何操作\n      if (categoryId === searchCategory.value) {\n        console.log('分类未变化，不重新加载');\n        return;\n      }\n      \n      // 设置新的分类\n      searchCategory.value = categoryId;\n      \n      // 添加动画效果\n      documents.value = [];\n      createLoading.value = true;\n      \n      // 重置分页和加载状态\n      page.value = 1;\n      hasMore.value = true;\n      \n      // 延迟获取，实现过渡效果\n      setTimeout(async () => {\n        try {\n          // 强制刷新文档列表\n          await fetchDocuments(true);\n        } catch (error) {\n          console.error('获取文档失败:', error);\n          ElMessage.error('获取文档列表失败，请刷新页面重试');\n        } finally {\n          createLoading.value = false;\n        }\n        \n        // 触发一个简单的动画效果，突出显示已筛选的文档\n        const docCards = document.querySelectorAll('.doc-card');\n        if (docCards && docCards.length > 0) {\n          docCards.forEach((card, index) => {\n            if (card) {\n              card.style.animationDelay = `${index * 50}ms`;\n              card.classList.remove('fadeIn');\n              setTimeout(() => {\n                if (card) {\n                  card.classList.add('fadeIn');\n                }\n              }, 10);\n            }\n          });\n        }\n      }, 300);\n    };\n\n    // 获取选中分类的颜色\n    const getSelectedCategoryColor = () => {\n      if (searchCategory.value === 'all') return '#409EFF';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.color || '#67C23A';\n    };\n\n    // 获取选中分类的名称\n    const getSelectedCategoryName = () => {\n      if (searchCategory.value === 'all') return '全部文档';\n      const selectedCategory = documentCategories.value.find(c => c.id.toString() === searchCategory.value);\n      return selectedCategory?.name || '未知分类';\n    };\n    \n    const manageCategories = () => {\n      categoryDialogVisible.value = true\n      resetCategoryForm()\n    }\n    \n    const editCategory = (category) => {\n      editingCategory.value = { ...category }\n    }\n    \n    const resetCategoryForm = () => {\n      editingCategory.value = {\n        id: '',\n        name: '',\n        color: '#409EFF',\n        description: ''\n      }\n      if (categoryFormRef.value) {\n        categoryFormRef.value.resetFields()\n      }\n    }\n    \n    const submitCategory = async () => {\n      if (!categoryFormRef.value) return\n      \n      await categoryFormRef.value.validate(async (valid) => {\n        if (valid) {\n          categoryLoading.value = true\n          try {\n            const categoryData = {\n              name: editingCategory.value.name,\n              color: editingCategory.value.color,\n              description: editingCategory.value.description || ''\n            }\n            \n            if (editingCategory.value.id) {\n              // 更新分类\n              await updateDocumentCategory(editingCategory.value.id, categoryData)\n              ElMessage.success('分类更新成功')\n            } else {\n              // 创建分类\n              await createDocumentCategory(categoryData)\n              ElMessage.success('分类创建成功')\n            }\n            \n            // 重新获取分类列表\n            fetchDocumentCategories()\n            resetCategoryForm()\n          } catch (error) {\n            console.error('保存分类失败:', error)\n            ElMessage.error('保存分类失败')\n          } finally {\n            categoryLoading.value = false\n          }\n        }\n      })\n    }\n    \n    const deleteCategory = (category) => {\n      if (category.document_count > 0) {\n        ElMessage.warning('该分类下有文档，无法删除')\n        return\n      }\n      \n      ElMessageBox.confirm(\n        `确定要删除分类\"${category.name}\"吗？`,\n        '删除分类',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          await deleteDocumentCategory(category.id)\n          ElMessage.success('分类删除成功')\n          fetchDocumentCategories()\n        } catch (error) {\n          console.error('删除分类失败:', error)\n          ElMessage.error('删除分类失败')\n        }\n      }).catch(() => {})\n    }\n    \n    const formatDate = (dateString) => {\n      const date = new Date(dateString)\n      const now = new Date()\n      \n      // 同一天显示时间\n      if (date.toDateString() === now.toDateString()) {\n        return date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })\n      }\n      \n      // 昨天\n      const yesterday = new Date(now)\n      yesterday.setDate(now.getDate() - 1)\n      if (date.toDateString() === yesterday.toDateString()) {\n        return '昨天'\n      }\n      \n      // 一周内显示星期\n      const weekDays = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n      const diffDays = Math.round((now - date) / (1000 * 60 * 60 * 24))\n      if (diffDays < 7) {\n        return weekDays[date.getDay()]\n      }\n      \n      // 其他情况显示日期\n      return date.toLocaleDateString('zh-CN', { month: 'numeric', day: 'numeric' })\n    }\n    \n    const resetCategoryFilter = () => {\n      searchCategory.value = 'all'\n      page.value = 1\n      fetchDocuments(true)\n    }\n    \n    // 添加页面激活钩子，确保从其他页面返回时重新获取数据\n    onActivated(() => {\n      console.log('SmartDoc组件被激活，重新获取数据');\n      reloadAllData();\n    });\n\n    // 页面激活后重新加载所有数据的函数\n    const reloadAllData = async () => {\n      page.value = 1\n      try {\n        console.log('重新加载所有文档数据...')\n        createLoading.value = true\n        \n        // 添加时间戳防止缓存\n        const timestamp = Date.now();\n        \n        // 清除本地缓存\n        try {\n          if (window.localStorage) {\n            // 清除文档相关的缓存\n            localStorage.removeItem('doc_list_cache');\n            localStorage.removeItem('recent_docs_cache');\n            localStorage.removeItem('doc_categories_cache');\n          }\n        } catch (e) {\n          console.error('清除缓存失败:', e);\n        }\n        \n        // 先获取分类，因为显示文档时需要分类信息\n        await fetchDocumentCategories(timestamp)\n        \n        // 然后并行获取其他数据，但不需要保存返回值\n        await Promise.all([\n          fetchDocuments(true, false, timestamp),\n          fetchRecentDocuments(true, timestamp),\n          fetchSharedDocuments(timestamp)\n        ])\n        \n        console.log('数据重新加载完成', {\n          分类数量: documentCategories.value.length,\n          文档数量: documents.value.length,\n          最近文档: recentDocuments.value.length,\n          共享文档: sharedDocuments.value.length,\n          总计数: totalCount.value,\n        })\n        \n        // 强制更新视图\n        await forceUpdate()\n        \n      } catch (error) {\n        console.error('数据重新加载失败:', error)\n        ElMessage.error('加载数据失败，请刷新页面')\n      } finally {\n        createLoading.value = false\n      }\n    }\n\n    // 提供重载函数给子组件或父组件使用\n    provide('reloadDocuments', reloadAllData);\n    \n    // 监听路由变化，强制刷新数据\n    watch(() => route.query._refresh, (newVal) => {\n      if (newVal) {\n        console.log('检测到路由刷新参数:', newVal);\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 监听路由参数，处理不同情况\n    watch(() => route.path, (newPath, oldPath) => {\n      console.log('路由变化:', oldPath, '->', newPath);\n      if (newPath === '/smartdoc' && oldPath && oldPath.startsWith('/smartdoc/')) {\n        // 从文档详情页返回文档列表页，强制刷新\n        console.log('从详情页返回列表页，强制刷新数据');\n        refreshTrigger.value = Date.now();\n        reloadAllData();\n      }\n    });\n\n    // 手动强制刷新方法\n    const refreshData = async () => {\n      page.value = 1\n      await reloadAllData()\n      if (proxy && proxy.$forceUpdate) {\n        proxy.$forceUpdate()\n      }\n    }\n\n    // 处理分页变化的方法 - 简单记录事件\n    const onPageChange = (newPage) => {\n      console.log(`分页点击事件 - 切换到页面: ${newPage}`);\n      \n      // 检查页码范围\n      const maxPage = Math.ceil(totalCount.value / pageSize);\n      if (newPage > maxPage && maxPage > 0) {\n        console.warn(`请求的页码 ${newPage} 超出最大页码 ${maxPage}，自动调整为最大页码`);\n        setTimeout(() => {\n          page.value = maxPage;\n        }, 0);\n        return;\n      }\n    }\n    \n    // 监听页码变化，加载对应页面数据\n    watch(() => page.value, async (newPage, oldPage) => {\n      console.log(`页码变化: ${oldPage} -> ${newPage}`);\n      \n      if (newPage === oldPage) return;\n      \n      // 检查页码范围\n      const maxPage = Math.ceil(totalCount.value / pageSize);\n      if (newPage > maxPage && maxPage > 0) {\n        console.warn(`页码 ${newPage} 超出最大页码 ${maxPage}，自动调整为最大页码`);\n        setTimeout(() => {\n          page.value = maxPage;\n        }, 0);\n        return;\n      }\n      \n      try {\n        // 显示加载状态\n        createLoading.value = true;\n        \n        // 重置hasMore标志，确保可以加载数据\n        hasMore.value = true;\n        \n        // 获取新页面数据\n        await fetchDocuments(false, false, Date.now());\n        \n        // 滚动到列表顶部\n        const docSection = document.querySelector('.section');\n        if (docSection) {\n          docSection.scrollIntoView({ behavior: 'smooth' });\n        }\n      } catch (error) {\n        console.error('页码变化加载失败:', error);\n        ElMessage.error('加载数据失败，请重试');\n        \n        // 如果是404错误，自动返回有效页码\n        if (error.response && error.response.status === 404) {\n          console.warn('页码不存在，返回第一页');\n          setTimeout(() => {\n            page.value = 1;\n          }, 0);\n        }\n      } finally {\n        createLoading.value = false;\n      }\n    });\n\n    // 添加加载更多文档的方法\n    const loadMoreDocuments = () => {\n      if (loadingMore.value || !hasMore.value) return\n      page.value++\n      fetchDocuments(false, true)\n    }\n\n    // 生命周期钩子\n    onMounted(() => {\n      console.log('SmartDoc组件mounted，加载数据');\n      \n      // 检查URL中是否有_refresh参数\n      const refreshParam = route.query._refresh;\n      if (refreshParam) {\n        console.log('检测到URL中的刷新参数:', refreshParam);\n        // 强制刷新，确保文档列表是最新的\n        refreshTrigger.value = Date.now();\n        // 设置一个超短延迟，确保DOM已经完全挂载\n        setTimeout(() => {\n          reloadAllData();\n        }, 10);\n      } else {\n        // 正常加载数据\n        reloadAllData();\n      }\n    })\n    \n    const handleImportWord = () => {\n      // 创建一个隐藏的文件上传input\n      const fileInput = document.createElement('input');\n      fileInput.type = 'file';\n      fileInput.accept = '.docx,.doc';\n      fileInput.style.display = 'none';\n      document.body.appendChild(fileInput);\n      \n      // 监听文件选择事件\n      fileInput.addEventListener('change', async (event) => {\n        if (event.target.files.length > 0) {\n          const file = event.target.files[0];\n          \n          // 显示加载中，使用全屏加载，禁止用户操作\n          const loadingInstance = ElLoading.service({\n            fullscreen: true,\n            text: '正在导入Word文档...',\n            background: 'rgba(255, 255, 255, 0.8)',\n            lock: true // 锁定屏幕，防止用户操作\n          });\n          \n          try {\n            // 创建FormData对象\n            const formData = new FormData();\n            formData.append('file', file);\n            \n            // 发送请求，调用API\n            const response = await importWordDocument(formData);\n            \n            if (response && response.id) {\n              // 先刷新文档首页\n              await reloadAllData();\n              \n              // 显示成功消息\n              ElMessage.success('Word文档导入成功');\n              \n              // 延迟一秒后跳转，确保用户看到刷新效果和成功提示\n              setTimeout(() => {\n                // 导入成功后跳转到文档详情页\n                router.push({\n                  name: 'SmartDocDetail',\n                  params: { id: response.id },\n                  query: { _refresh: Date.now() } // 添加刷新参数，确保详情页刷新\n                });\n              }, 1000);\n            } else {\n              ElMessage.error('导入失败：' + (response?.detail || '未知错误'));\n            }\n          } catch (error) {\n            console.error('导入Word文档出错:', error);\n            ElMessage.error('导入Word文档失败: ' + (error.message || '未知错误'));\n          } finally {\n            // 确保一定时间后关闭加载提示，防止界面卡死\n            setTimeout(() => {\n              loadingInstance.close();\n              document.body.removeChild(fileInput);\n            }, 500);\n          }\n        }\n      });\n      \n      // 触发文件选择对话框\n      fileInput.click();\n    }\n    \n    const removeSharedUser = (userIdToRemove) => {\n      console.log('尝试移除用户权限:', userIdToRemove);\n      const userToRemove = existingSharedUsers.value.find(u => u.user_id === userIdToRemove);\n      if (userToRemove) {\n        console.log('找到要移除权限的用户:', userToRemove);\n        // 将用户添加回可选列表\n        availableUsers.value.push({ \n          id: userToRemove.user_id, \n          username: userToRemove.username \n        });\n        \n        // 从已分享列表中移除\n        existingSharedUsers.value = existingSharedUsers.value.filter(u => u.user_id !== userIdToRemove);\n        console.log('移除后的已分享用户列表:', existingSharedUsers.value);\n        \n        // 显示提示\n        ElMessage({\n          message: `已移除用户 ${userToRemove.username} 的权限，点击分享按钮保存更改`,\n          type: 'warning'\n        });\n      } else {\n        console.warn('未找到要移除的用户:', userIdToRemove);\n      }\n    };\n    \n    return {\n      documents,\n      recentDocuments,\n      sharedDocuments,\n      documentCategories,\n      searchQuery,\n      searchCategory,\n      totalDocuments,\n      recentEditCount,\n      newDocumentDialogVisible,\n      shareDialogVisible,\n      deleteDialogVisible,\n      documentCreateType,\n      newDocumentForm,\n      aiDocumentForm,\n      blankFormRules,\n      aiFormRules,\n      blankFormRef,\n      aiFormRef,\n      selectedDocument,\n      selectedUsers,\n      selectedUsersWithPermissions,\n      availableUsers,\n      availableChatUsers,\n      createLoading,\n      shareLoading,\n      deleteLoading,\n      createNewDocument,\n      submitNewDocument,\n      openDocument,\n      editDocument,\n      submitEditDocument,\n      exportDocument,\n      shareDocument,\n      confirmShare,\n      deleteDocument,\n      confirmDelete,\n      viewAllDocuments,\n      formatDate,\n      categoryDialogVisible,\n      editingCategory,\n      categoryFormRef,\n      categoryLoading,\n      categoryFormRules,\n      editCategory,\n      resetCategoryForm,\n      submitCategory,\n      deleteCategory,\n      resetCategoryFilter,\n      selectCategory,\n      getSelectedCategoryColor,\n      getSelectedCategoryName,\n      manageCategories,\n      reloadAllData,\n      refreshData,\n      refreshTrigger,\n      hasMore,\n      loadingMore,\n      loadMoreDocuments,\n      exportToPdf,\n      exportToWord,\n      // 添加编辑对话框相关变量\n      editDialogVisible,\n      editDocumentForm,\n      editFormRef,\n      editLoading,\n      editFormRules,\n      // 添加分页处理方法\n      onPageChange,\n      page,\n      pageSize,\n      totalCount,\n      // 开发环境标志\n      $_isDev,\n      // 添加直接API调用函数\n      fetchDocuments,\n      // 添加分享方式相关变量\n      shareMode,\n      shareFormat,\n      selectedChatUsers,\n      handleImportWord,\n      getUsernameById,\n      handleUserSelectionChange,\n      handleShareModeChange,\n      getCurrentUserId,\n      existingSharedUsers,\n      removeSharedUser\n    }\n  }\n}\n</script>\n\n<style scoped>\n.smartdoc-home-container {\n  padding: 20px;\n  background-color: var(--el-bg-color-page);\n}\n\n/* 页面标题和操作区 */\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.page-description {\n  color: var(--el-text-color-secondary);\n  margin: 4px 0 0 0;\n}\n\n.right-section {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-controls {\n  display: flex;\n  gap: 16px;\n  align-items: center;\n}\n\n.search-input {\n  width: 240px;\n}\n\n/* 统计卡片 */\n.stats-cards {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n.stat-card {\n  flex: 1;\n  transition: all 0.3s;\n  background-color: var(--el-bg-color-overlay);\n  border-color: var(--el-border-color-lighter);\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n.stat-content {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n}\n\n.stat-icon {\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 16px;\n  font-size: 24px;\n  color: white;\n}\n\n.doc-icon {\n  background-color: #409EFF;\n}\n\n.edit-icon {\n  background-color: #67C23A;\n}\n\n.share-icon {\n  background-color: #E6A23C;\n}\n\n.stat-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 4px;\n  color: var(--el-text-color-primary);\n}\n\n.stat-label {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n}\n\n/* 区域通用样式 */\n.section {\n  margin-bottom: 32px;\n}\n\n/* 分类区域特殊样式 */\n.category-section {\n  margin-bottom: 16px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: #303133;\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.filter-tag {\n  background-color: #f0f2f5;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #606266;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n/* 文档卡片 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  transition: all 0.3s ease;\n  height: 230px; /* 设置固定高度 */\n  display: flex;\n  flex-direction: column;\n}\n\n.doc-card :deep(.el-card__body) {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 16px;\n  min-height: 0;\n}\n\n.doc-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--el-box-shadow-light);\n}\n\n/* 鼠标悬浮时显示操作按钮 */\n.doc-card:hover .doc-actions {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.doc-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n}\n\n.doc-info {\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.doc-type-tag {\n  font-size: 12px;\n  color: #606266;\n  background-color: #f5f7fa;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n}\n\n.doc-category-tag {\n  font-size: 12px;\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  display: inline-flex;\n  align-items: center;\n}\n\n/* 共享标签样式 */\n.doc-shared-tag {\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  color: #E6A23C;\n  background-color: #fdf6ec;\n  padding: 2px 8px;\n  border-radius: 4px;\n  white-space: nowrap;\n  border: 1px solid #f5dab1;\n}\n\n\n:deep([data-theme=\"dark\"]) .doc-shared-tag span,\n:deep(body.is-dark) .doc-shared-tag span,\n[data-theme=\"dark\"] .doc-shared-tag span,\nhtml[data-theme=\"dark\"] .doc-shared-tag span {\n  color: #000000 !important; \n  font-weight: 400; \n}\n\n.doc-title {\n  margin: 0 0 8px 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--el-text-color-primary);\n  line-height: 1.5;\n  height: calc(1.5em * 2); /* 固定两行高度 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n}\n\n.doc-preview {\n  font-size: 14px;\n  color: var(--el-text-color-secondary);\n  line-height: 1.6;\n  height: calc(1.6em * 3); /* 固定三行高度 */\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  word-break: break-all;\n  margin-bottom: 12px;\n}\n\n.doc-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 0 4px;\n  border-top: 1px solid var(--el-border-color-lighter);\n  margin-top: auto;\n  position: relative;\n  z-index: 2;\n}\n\n.doc-time {\n  font-size: 13px;\n  color: var(--el-text-color-secondary);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-weight: 500;\n}\n\n.doc-actions {\n  display: flex;\n  gap: 8px;\n  position: relative;\n  opacity: 0;\n  transform: translateY(10px);\n  transition: all 0.2s ease-in-out;\n}\n\n.new-doc-card {\n  border: 2px dashed var(--el-border-color);\n  background-color: var(--el-fill-color-light);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s;\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.new-doc-card:hover {\n  border-color: var(--el-color-primary);\n  color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.new-doc-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  color: var(--el-text-color-secondary);\n}\n\n.new-doc-content .el-icon {\n  font-size: 32px;\n}\n\n/* 分类卡片 */\n.category-cards {\n  display: flex;\n  gap: 16px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n}\n\n.category-card {\n  min-width: 180px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 8px;\n  padding: 12px 16px;\n  border: 2px solid transparent;\n  position: relative;\n  overflow: hidden;\n  background-color: var(--el-fill-color-light);\n}\n\n.category-card:hover {\n  transform: translateY(-4px);\n  box-shadow: var(--el-box-shadow-light);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-active {\n  transform: translateY(-2px);\n  box-shadow: var(--el-box-shadow-light);\n  border-color: var(--el-color-primary);\n  background-color: var(--el-color-primary-light-9);\n}\n\n.category-selected-indicator {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 3px;\n  background-color: var(--el-color-primary);\n  transition: all 0.3s;\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  color: white;\n  margin-right: 12px;\n  transition: all 0.3s;\n}\n\n.category-active .category-icon {\n  transform: scale(1.1);\n}\n\n.category-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.category-info h4 {\n  margin: 0 0 4px 0;\n  font-size: 15px;\n  font-weight: 500;\n  color: var(--el-text-color-primary);\n  transition: all 0.3s;\n}\n\n.category-active .category-info h4 {\n  color: var(--el-color-primary);\n  font-weight: 600;\n}\n\n.category-count {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n}\n\n.mt-4 {\n  margin-top: 16px;\n}\n\n.form-tip {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 4px;\n}\n\n.category-management {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.category-list {\n  margin-bottom: 20px;\n}\n\n.category-form {\n  margin-top: 20px;\n}\n\n.color-preview {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-right: 8px;\n  vertical-align: middle;\n}\n\n.color-value {\n  margin-left: 12px;\n  color: var(--el-text-color-regular);\n}\n\n.category-select {\n  width: 200px;\n}\n\n.doc-menu {\n  color: var(--el-text-color-secondary);\n  cursor: pointer;\n  position: relative;\n}\n\n/* 筛选状态栏样式 */\n.filter-status-bar {\n  background-color: var(--el-color-primary-light-9);\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n  animation: slideDown 0.3s ease-in-out;\n  box-shadow: var(--el-box-shadow-light);\n  border-left: 4px solid var(--el-color-primary);\n  position: relative;\n  overflow: hidden;\n}\n\n/* 确保深色模式下的筛选状态栏有足够的对比度 */\n:deep(.dark .filter-status-bar) {\n  background-color: var(--el-color-primary-dark-2);\n  border-left-color: var(--el-color-primary-light-3);\n}\n\n.filter-bar-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.filter-title {\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--el-text-color-primary);\n}\n\n.filter-category {\n  padding: 4px 10px;\n  border-radius: 4px;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.filter-actions {\n  display: flex;\n  align-items: center;\n}\n\n.section {\n  margin-bottom: 32px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.section-header h3 {\n  font-size: 18px;\n  font-weight: 600;\n  margin: 0;\n  color: var(--el-text-color-primary);\n}\n\n.section-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加动画 */\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.empty-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.loading-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n}\n\n.pagination-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 20;\n}\n\n.pagination-container :deep(.el-pagination) {\n  user-select: none;\n}\n\n.pagination-container :deep(.el-pagination button),\n.pagination-container :deep(.el-pagination .el-pager li) {\n  cursor: pointer !important;\n  z-index: 30;\n  position: relative;\n}\n\n.pagination-debug {\n  margin-top: 8px;\n  color: #909399;\n  font-size: 12px;\n  background-color: #f5f7fa;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n/* 添加以下CSS，确保按钮区域独立可点击 */\n.btn-container {\n  position: relative;\n  z-index: 5;\n}\n\n.doc-actions .el-button {\n  position: relative;\n  z-index: 5;\n}\n\n/* 确保下拉菜单显示在最上层 */\n:deep(.el-dropdown-menu) {\n  z-index: 3000 !important;\n}\n\n/* 调整卡片内容区域的点击行为 */\n.card-content-area {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  z-index: 1;\n  min-height: 0;\n}\n\n.filter-controls {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n/* 添加文档卡片的动画效果 */\n.document-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.doc-card {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.fadeIn {\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 临时导出容器样式 */\n.temp-export-container {\n  position: fixed;\n  top: -9999px;\n  left: -9999px;\n  width: 210mm; /* A4宽度 */\n  background: var(--el-bg-color);\n  padding: 20px;\n  z-index: -1;\n  font-family: SimSun, Arial, sans-serif;\n  font-size: 12pt;\n  line-height: 1.5;\n}\n\n.temp-export-container img {\n  max-width: 100%;\n  height: auto;\n}\n\n.user-permissions-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  margin-top: 8px;\n}\n\n.user-permission-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f9f9f9;\n  padding: 10px;\n  border-radius: 4px;\n  border: 1px solid #eaeaea;\n}\n\n.user-name {\n  min-width: 60px;\n  margin-right: 12px;\n  font-weight: 500;\n}\n\n.permission-info {\n  display: flex;\n  align-items: center;\n}\n\n/* 确保表单提示文本样式正确 */\n.form-tip {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 4px;\n}\n\n.dialog-tabs {\n  position: absolute;\n  top: 55px; /* Adjust this value to position the tabs correctly */\n  left: 20px;\n}\n</style> \n\n<style>\n/* --- 深色模式分享弹窗样式 --- */\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog {\n  background-color: #2c2c2c;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__header {\n  border-bottom: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__title {\n  color: #e0e0e0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-dialog__body {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog p {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-form-item__label {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__label {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__input .el-radio__inner {\n    background-color: transparent;\n    border-color: #8c8c8c;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-radio__input.is-checked .el-radio__inner {\n    border-color: var(--el-color-primary);\n    background-color: var(--el-color-primary);\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item {\n  background-color: #383838;\n  border-color: #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .user-name {\n  color: #e0e0e0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-tag {\n    background-color: #4f4f4f;\n    border-color: #6a6a6a;\n    color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .el-button--danger.is-link {\n  color: #ff7b7b;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .user-permission-item .el-button--danger.is-link:hover {\n  color: #ff5252;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .form-tip {\n  color: #a0a0a0;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-select .el-input__wrapper {\n  background-color: #383838;\n  box-shadow: none;\n  border: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog .el-select .el-input__inner {\n  color: #e0e0e0;\n}\n\n/* Select dropdown panel */\nhtml[data-theme=\"dark\"] .share-dialog-popper.el-popper {\n  background-color: #2c2c2c;\n  border: 1px solid #4f4f4f;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item {\n  color: #cccccc;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item.is-selected {\n  color: var(--el-color-primary);\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item.hover,\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-select-dropdown__item:hover {\n  background-color: #383838;\n}\n\nhtml[data-theme=\"dark\"] .share-dialog-popper .el-popper__arrow::before {\n  background: #2c2c2c;\n  border-right-color: #4f4f4f !important;\n  border-bottom-color: #4f4f4f !important;\n}\n</style>","import { render } from \"./Index.vue?vue&type=template&id=cac81e82&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=cac81e82&scoped=true&lang=css\"\nimport \"./Index.vue?vue&type=style&index=1&id=cac81e82&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\18083\\\\Desktop\\\\CCIT\\\\office\\\\smart-office\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cac81e82\"]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar intersection = require('../internals/set-intersection');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('intersection', function (result) {\n  return result.size === 2 && result.has(1) && result.has(2);\n}) || fails(function () {\n  // eslint-disable-next-line es/no-array-from, es/no-set, es/no-set-prototype-intersection -- testing\n  return String(Array.from(new Set([1, 2, 3]).intersection(new Set([3, 2])))) !== '3,2';\n});\n\n// `Set.prototype.intersection` method\n// https://tc39.es/ecma262/#sec-set.prototype.intersection\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  intersection: intersection\n});\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar call = require('../internals/function-call');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\nvar INVALID_SIZE = 'Invalid size';\nvar $RangeError = RangeError;\nvar $TypeError = TypeError;\nvar max = Math.max;\n\nvar SetRecord = function (set, intSize) {\n  this.set = set;\n  this.size = max(intSize, 0);\n  this.has = aCallable(set.has);\n  this.keys = aCallable(set.keys);\n};\n\nSetRecord.prototype = {\n  getIterator: function () {\n    return getIteratorDirect(anObject(call(this.keys, this.set)));\n  },\n  includes: function (it) {\n    return call(this.has, this.set, it);\n  }\n};\n\n// `GetSetRecord` abstract operation\n// https://tc39.es/proposal-set-methods/#sec-getsetrecord\nmodule.exports = function (obj) {\n  anObject(obj);\n  var numSize = +obj.size;\n  // NOTE: If size is undefined, then numSize will be NaN\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (numSize !== numSize) throw new $TypeError(INVALID_SIZE);\n  var intSize = toIntegerOrInfinity(numSize);\n  if (intSize < 0) throw new $RangeError(INVALID_SIZE);\n  return new SetRecord(obj, intSize);\n};\n","'use strict';\nvar SetHelpers = require('../internals/set-helpers');\nvar iterate = require('../internals/set-iterate');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\n\nmodule.exports = function (set) {\n  var result = new Set();\n  iterate(set, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isSubsetOf = require('../internals/set-is-subset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('isSubsetOf', function (result) {\n  return result;\n});\n\n// `Set.prototype.isSubsetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issubsetof\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isSubsetOf: isSubsetOf\n});\n","'use strict';\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar SetHelpers = require('../internals/set-helpers');\n\nmodule.exports = uncurryThisAccessor(SetHelpers.proto, 'size', 'get') || function (set) {\n  return set.size;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar IS_PURE = require('../internals/is-pure');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar filterWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('filter', TypeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var predicate = this.predicate;\n  var next = this.next;\n  var result, done, value;\n  while (true) {\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n    value = result.value;\n    if (callWithSafeIterationClosing(iterator, predicate, [value, this.counter++], true)) return value;\n  }\n});\n\n// `Iterator.prototype.filter` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.filter\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || filterWithoutClosingOnEarlyError }, {\n  filter: function filter(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (filterWithoutClosingOnEarlyError) return call(filterWithoutClosingOnEarlyError, this, predicate);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      predicate: predicate\n    });\n  }\n});\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar Set = SetHelpers.Set;\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\n\n// `Set.prototype.intersection` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function intersection(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = new Set();\n\n  if (size(O) > otherRec.size) {\n    iterateSimple(otherRec.getIterator(), function (e) {\n      if (has(O, e)) add(result, e);\n    });\n  } else {\n    iterateSet(O, function (e) {\n      if (otherRec.includes(e)) add(result, e);\n    });\n  }\n\n  return result;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar add = SetHelpers.add;\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.symmetricDifference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function symmetricDifference(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (e) {\n    if (has(O, e)) remove(result, e);\n    else add(result, e);\n  });\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isSupersetOf = require('../internals/set-is-superset-of');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('isSupersetOf', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isSupersetOf` method\n// https://tc39.es/ecma262/#sec-set.prototype.issupersetof\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isSupersetOf: isSupersetOf\n});\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar SetHelpers = require('../internals/set-helpers');\nvar clone = require('../internals/set-clone');\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\n\nvar has = SetHelpers.has;\nvar remove = SetHelpers.remove;\n\n// `Set.prototype.difference` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function difference(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  var result = clone(O);\n  if (size(O) <= otherRec.size) iterateSet(O, function (e) {\n    if (otherRec.includes(e)) remove(result, e);\n  });\n  else iterateSimple(otherRec.getIterator(), function (e) {\n    if (has(O, e)) remove(result, e);\n  });\n  return result;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar has = require('../internals/set-helpers').has;\nvar size = require('../internals/set-size');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSet = require('../internals/set-iterate');\nvar iterateSimple = require('../internals/iterate-simple');\nvar iteratorClose = require('../internals/iterator-close');\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom\nmodule.exports = function isDisjointFrom(other) {\n  var O = aSet(this);\n  var otherRec = getSetRecord(other);\n  if (size(O) <= otherRec.size) return iterateSet(O, function (e) {\n    if (otherRec.includes(e)) return false;\n  }, true) !== false;\n  var iterator = otherRec.getIterator();\n  return iterateSimple(iterator, function (e) {\n    if (has(O, e)) return iteratorClose(iterator, 'normal', false);\n  }) !== false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isDisjointFrom = require('../internals/set-is-disjoint-from');\nvar setMethodAcceptSetLike = require('../internals/set-method-accept-set-like');\n\nvar INCORRECT = !setMethodAcceptSetLike('isDisjointFrom', function (result) {\n  return !result;\n});\n\n// `Set.prototype.isDisjointFrom` method\n// https://tc39.es/ecma262/#sec-set.prototype.isdisjointfrom\n$({ target: 'Set', proto: true, real: true, forced: INCORRECT }, {\n  isDisjointFrom: isDisjointFrom\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Index.vue?vue&type=style&index=1&id=cac81e82&lang=css\"","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\n// eslint-disable-next-line es/no-set -- safe\nvar SetPrototype = Set.prototype;\n\nmodule.exports = {\n  // eslint-disable-next-line es/no-set -- safe\n  Set: Set,\n  add: uncurryThis(SetPrototype.add),\n  has: uncurryThis(SetPrototype.has),\n  remove: uncurryThis(SetPrototype['delete']),\n  proto: SetPrototype\n};\n","import request from '@/utils/request'\n\n/**\n * 获取聊天会话列表\n */\nexport function getChatSessions() {\n  return request({\n    url: '/api/chat/sessions/',\n    method: 'get'\n  })\n}\n\n/**\n * 获取聊天会话详情\n * @param {Number} id - 聊天会话ID\n */\nexport function getChatSession(id) {\n  return request({\n    url: `/api/chat/sessions/${id}/`,\n    method: 'get'\n  })\n}\n\n/**\n * 创建新的聊天会话\n * @param {Object} data - 聊天会话数据\n */\nexport function createChatSession(data) {\n  return request({\n    url: '/api/chat/sessions/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 发送文本消息\n * @param {Object} data - 消息数据\n */\nexport function sendTextMessage(data) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: {\n      ...data,\n      message_type: 'text'\n    }\n  })\n}\n\n/**\n * 发送文件消息\n * @param {Number} chatId - 聊天ID\n * @param {String} content - 消息内容\n * @param {File} file - 文件对象\n */\nexport function sendFileMessage(chatId, content, file) {\n  const formData = new FormData();\n  formData.append('chat', chatId);\n  formData.append('message_type', 'file');\n  formData.append('content', content);\n  formData.append('file', file);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData\n  })\n}\n\n/**\n * 发送图片消息\n * @param {Number} chatId - 聊天ID\n * @param {String} content - 消息内容\n * @param {File} image - 图片文件\n */\nexport function sendImageMessage(chatId, content, image) {\n  const formData = new FormData();\n  formData.append('chat', chatId);\n  formData.append('message_type', 'image');\n  formData.append('content', content);\n  formData.append('file', image);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData\n  })\n}\n\n/**\n * 发送知识库消息\n * @param {Object} data - 消息数据，包含chat和knowledge_id\n */\nexport function sendKnowledgeMessage(data) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: {\n      ...data,\n      message_type: 'knowledge',\n      content: '分享了一个知识库文件'\n    }\n  })\n}\n\n/**\n * 下载消息中的文件\n * @param {Number} messageId - 消息ID\n */\nexport function downloadMessageFile(messageId) {\n  return request({\n    url: `/api/chat/messages/${messageId}/download/`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\n/**\n * 发送文档消息 - 分享智能文档到聊天\n * @param {Object} data - 包含chat(聊天ID)、document_id(文档ID)、format(文档格式，如pdf/word)、title(文档标题)的对象\n */\nexport function sendDocumentMessage(data) {\n  // 创建FormData对象\n  const formData = new FormData();\n  \n  // 添加必要的字段\n  formData.append('chat', data.chat);\n  formData.append('message_type', 'file');\n  formData.append('document_id', data.document_id);\n  formData.append('format', data.format);\n  formData.append('title', data.title);\n  formData.append('content', `分享了一个${data.format === 'pdf' ? 'PDF' : 'Word'}文档`);\n  \n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n}\n\n/**\n * 向聊天添加参与者\n * @param {Number} chatId - 聊天会话ID\n * @param {Number} userId - 用户ID\n */\nexport function addChatParticipant(chatId, userId) {\n  return request({\n    url: `/api/chat/sessions/${chatId}/add_participant/`,\n    method: 'post',\n    data: {\n      user_id: userId\n    }\n  })\n}\n\n/**\n * 从聊天中移除参与者\n * @param {Number} chatId - 聊天会话ID\n * @param {Number} userId - 用户ID\n */\nexport function removeChatParticipant(chatId, userId) {\n  return request({\n    url: `/api/chat/sessions/${chatId}/remove_participant/`,\n    method: 'post',\n    data: {\n      user_id: userId\n    }\n  })\n}\n\n/**\n * 从聊天消息添加日历事件\n * @param {Number} messageId - 消息ID\n * @param {Object} data - 可选的更新日程数据\n * @param {Boolean} preview - 是否仅预览不创建事件\n */\nexport function addCalendarEvent(messageId, data, preview = false) {\n  let url = `/api/chat/messages/${messageId}/add_calendar_event/`\n  if (preview) {\n    url += '?preview=true'\n  }\n  \n  return request({\n    url: url,\n    method: 'post',\n    data\n  })\n}\n\n// 获取知识库列表\nexport function getKnowledgeList(params) {\n  return request({\n    url: '/api/knowledge/files/',\n    method: 'get',\n    params\n  })\n}\n\n// 查看文件内容 \nexport function deleteMessage(id) {\n  return request({\n    url: `/chat/messages/${id}/`,\n    method: 'delete'\n  })\n}\n\n// 新增：查找或创建一对一聊天\nexport function findOrCreateChat(userId) {\n  return request({\n    url: '/api/chat/find-or-create/',\n    method: 'post',\n    data: { user_id: userId }\n  })\n}\n\n/**\n * 根据用户ID列表查找或创建聊天会话\n * @param {Array<Number>} userIds - 用户ID数组\n * @returns {Promise}\n */\nexport async function findOrCreateChatWithUsers(userIds) {\n  if (!userIds || userIds.length === 0) {\n    throw new Error('No user IDs provided');\n  }\n\n  if (userIds.length === 1) {\n    // 处理单人聊天\n    return findOrCreateChat(userIds[0]);\n  } else {\n    // 处理多人聊天\n    return createChatSession({ participants: userIds });\n  }\n}\n\n/**\n * 清空所有聊天会话\n * @returns {Promise}\n */\nexport function clearAllChatSessions() {\n  return request({\n    url: '/api/chat/sessions/clear_all/',\n    method: 'post'\n  });\n}\n\n/**\n * 上传文件到会话中\n * @param {FormData} formData 包含文件和会话ID的表单数据\n * @returns {Promise}\n */\nexport function uploadFile(formData) {\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\nexport function getChatMessages(chatId, page = 1, pageSize = 20) {\n  return request({\n    url: `/api/chat/messages/`,\n    method: 'get',\n    params: {\n      chat: chatId,\n      page,\n      page_size: pageSize\n    }\n  });\n}\n\n// Summarize chat messages\nexport function summarizeChat(sessionId, startDate, endDate) {\n  return request({\n    url: `/api/chat/sessions/${sessionId}/summarize/`,\n    method: 'post',\n    data: {\n      start_date: startDate,\n      end_date: endDate\n    }\n  });\n}\n\nexport function createChatMessage(data) {\n  const formData = new FormData();\n  for (const key in data) {\n    if (data[key] !== null && data[key] !== undefined) {\n      if (key === 'file' && data[key] instanceof File) {\n        formData.append(key, data[key], data[key].name);\n      } else {\n        formData.append(key, data[key]);\n      }\n    }\n  }\n\n  return request({\n    url: '/api/chat/messages/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\n/**\n * Analyzes text content to extract calendar event information.\n * @param {String} content - The text content to analyze.\n */\nexport function analyzeForCalendar(content) {\n  return request({\n    url: '/api/chat/analyze-for-calendar/',\n    method: 'post',\n    data: { content }\n  });\n}\n\n/**\n * Creates a new calendar event.\n * @param {Object} eventData - The event data to create.\n */\nexport function createCalendarEvent(eventData) {\n  return request({\n    url: '/api/calendar/events/',\n    method: 'post',\n    data: eventData\n  });\n} ","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar createSetLike = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return false;\n    },\n    keys: function () {\n      return {\n        next: function () {\n          return { done: true };\n        }\n      };\n    }\n  };\n};\n\nvar createSetLikeWithInfinitySize = function (size) {\n  return {\n    size: size,\n    has: function () {\n      return true;\n    },\n    keys: function () {\n      throw new Error('e');\n    }\n  };\n};\n\nmodule.exports = function (name, callback) {\n  var Set = getBuiltIn('Set');\n  try {\n    new Set()[name](createSetLike(0));\n    try {\n      // late spec change, early WebKit ~ Safari 17 implementation does not pass it\n      // https://github.com/tc39/proposal-set-methods/pull/88\n      // also covered engines with\n      // https://bugs.webkit.org/show_bug.cgi?id=272679\n      new Set()[name](createSetLike(-1));\n      return false;\n    } catch (error2) {\n      if (!callback) return true;\n      // early V8 implementation bug\n      // https://issues.chromium.org/issues/351332634\n      try {\n        new Set()[name](createSetLikeWithInfinitySize(-Infinity));\n        return false;\n      } catch (error) {\n        var set = new Set();\n        set.add(1);\n        set.add(2);\n        return callback(set[name](createSetLikeWithInfinitySize(Infinity)));\n      }\n    }\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar has = require('../internals/set-helpers').has;\n\n// Perform ? RequireInternalSlot(M, [[SetData]])\nmodule.exports = function (it) {\n  has(it);\n  return it;\n};\n","'use strict';\nvar aSet = require('../internals/a-set');\nvar add = require('../internals/set-helpers').add;\nvar clone = require('../internals/set-clone');\nvar getSetRecord = require('../internals/get-set-record');\nvar iterateSimple = require('../internals/iterate-simple');\n\n// `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\nmodule.exports = function union(other) {\n  var O = aSet(this);\n  var keysIter = getSetRecord(other).getIterator();\n  var result = clone(O);\n  iterateSimple(keysIter, function (it) {\n    add(result, it);\n  });\n  return result;\n};\n","import request from '@/utils/request'\n\n/**\n * 获取所有文档列表\n * @param {Object} params - 查询参数\n * @returns {Promise} Promise对象\n */\nexport function getDocuments(params) {\n  console.log('调用getDocuments API, 参数:', params);\n  // 确保参数中包含分页信息，使用与Django REST Framework兼容的参数名\n  const queryParams = {\n    ...params,\n    page: params.page || 1,\n    page_size: params.limit || params.page_size || 10, // 默认使用后端配置的PAGE_SIZE=10\n  };\n  \n  // 如果同时存在limit和page_size，移除limit避免冲突\n  if (queryParams.limit && queryParams.page_size) {\n    delete queryParams.limit;\n  }\n  \n  console.log('处理后的参数:', queryParams);\n  \n  return request({\n    url: '/api/smartdoc/documents/',\n    method: 'get',\n    params: queryParams,\n    timeout: 60000 // 增加超时时间到60秒\n  }).then(response => {\n    console.log('getDocuments API响应:', response);\n    \n    // 检查是否有警告信息\n    if (response && response.warning) {\n      console.warn('API响应包含警告:', response.warning);\n    }\n    \n    // 标准化响应格式，确保总是返回一致的结构\n    if (response.results && Array.isArray(response.results)) {\n      // DRF标准分页格式\n      console.log(`DRF分页格式: 共${response.count || 0}条记录，当前页${queryParams.page}`);\n      return {\n        data: response.results,\n        count: response.count || 0,\n        total: response.count || 0,\n        next: response.next,\n        previous: response.previous,\n        warning: response.warning\n      };\n    } else if (response.data && Array.isArray(response.data)) {\n      // 已经处理过的数组格式\n      console.log(`数组格式: 共${response.data.length}条记录`);\n      return response;\n    } else if (response.data && response.data.results && Array.isArray(response.data.results)) {\n      // 嵌套的DRF分页格式\n      console.log(`嵌套DRF格式: 共${response.data.count || 0}条记录，当前页${queryParams.page}`);\n      return {\n        data: response.data.results,\n        count: response.data.count || 0,\n        total: response.data.count || 0,\n        next: response.data.next,\n        previous: response.data.previous,\n        warning: response.data.warning\n      };\n    } else {\n      // 未知格式，返回原始响应\n      console.warn('未知响应格式:', response);\n      return response;\n    }\n  }).catch(error => {\n    console.error('getDocuments API错误:', error);\n    \n    // 检查是否是404分页错误\n    if (error.response && error.response.status === 404 && queryParams.page > 1) {\n      console.warn(`页码${queryParams.page}不存在，自动尝试获取第1页`);\n      \n      // 如果是第一次自动重试，防止无限循环\n      if (!params._retry) {\n        // 修改为第1页重新请求\n        const fallbackParams = {\n          ...params,\n          page: 1,\n          _retry: true // 标记为重试请求\n        };\n        \n        return getDocuments(fallbackParams).then(response => {\n          // 添加警告信息\n          if (response) {\n            response.warning = `请求的页码 ${queryParams.page} 不存在，已返回第1页数据`;\n          }\n          return response;\n        });\n      } else {\n        // 防止多次重试导致循环\n        console.error('已经重试过一次，避免多次重试');\n        throw error;\n      }\n    }\n    \n    // 检查是否是网络错误或服务器错误\n    if (error.response && error.response.status >= 500) {\n      console.warn('服务器错误，可能需要重试');\n    } else if (!error.response) {\n      console.warn('网络错误，请检查网络连接');\n    }\n    \n    throw error;\n  });\n}\n\n/**\n * 获取最近编辑的文档\n * @param {Object} params - 查询参数\n * @returns {Promise} Promise对象\n */\nexport function getRecentDocuments(params) {\n  console.log('调用getRecentDocuments API, 参数:', params);\n  return request({\n    url: '/api/smartdoc/documents/recent/',\n    method: 'get',\n    params\n  }).then(response => {\n    console.log('getRecentDocuments API响应:', response);\n    return response;\n  }).catch(error => {\n    console.error('getRecentDocuments API错误:', error);\n    throw error;\n  });\n}\n\n/**\n * 获取共享文档\n * @param {Object} params - 查询参数\n * @returns {Promise} Promise对象\n */\nexport function getSharedDocuments(params) {\n  return request({\n    url: '/api/smartdoc/documents/shared/',\n    method: 'get',\n    params\n  })\n}\n\n/**\n * 获取单个文档详情\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象\n */\nexport function getDocumentDetail(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/`,\n    method: 'get',\n    timeout: 60000 // 增加超时时间到60秒，确保大文档可以完整加载\n  })\n}\n\n/**\n * 创建新文档\n * @param {Object} data - 文档数据\n * @returns {Promise} Promise对象\n */\nexport function createDocument(data) {\n  return request({\n    url: '/api/smartdoc/documents/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 更新文档\n * @param {number} id - 文档ID\n * @param {Object} data - 更新数据\n * @returns {Promise} Promise对象\n */\nexport function updateDocument(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n/**\n * 删除文档\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象\n */\nexport function deleteDocument(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/`,\n    method: 'delete'\n  })\n}\n\n/**\n * 分享文档\n * @param {number} id - 文档ID\n * @param {Array} sharedUsers - 用户信息数组，每个对象包含 user_id 和 permission\n * @returns {Promise} Promise对象\n */\nexport function shareDocument(id, sharedUsers) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/share/`,\n    method: 'post',\n    data: {\n      shared_users: sharedUsers\n    }\n  })\n}\n\n/**\n * 获取所有可分享用户列表\n * @returns {Promise} Promise对象\n */\nexport function getUsers() {\n  return request({\n    url: '/api/smartdoc/documents/users/',\n    method: 'get'\n  })\n}\n\n/**\n * 获取文档分类列表\n * @param {Object} params - 查询参数\n * @returns {Promise} Promise对象\n */\nexport function getDocumentCategories(params) {\n  console.log('调用getDocumentCategories API, 参数:', params);\n  return request({\n    url: '/api/smartdoc/categories/',\n    method: 'get',\n    params\n  }).then(response => {\n    console.log('getDocumentCategories API响应:', response);\n    return response;\n  }).catch(error => {\n    console.error('getDocumentCategories API错误:', error);\n    throw error;\n  });\n}\n\n/**\n * 创建文档分类\n * @param {Object} data - 分类数据\n * @returns {Promise} Promise对象\n */\nexport function createDocumentCategory(data) {\n  return request({\n    url: '/api/smartdoc/categories/',\n    method: 'post',\n    data\n  })\n}\n\n/**\n * 更新文档分类\n * @param {number} id - 分类ID\n * @param {Object} data - 更新数据\n * @returns {Promise} Promise对象\n */\nexport function updateDocumentCategory(id, data) {\n  return request({\n    url: `/api/smartdoc/categories/${id}/`,\n    method: 'put',\n    data\n  })\n}\n\n/**\n * 删除文档分类\n * @param {number} id - 分类ID\n * @returns {Promise} Promise对象\n */\nexport function deleteDocumentCategory(id) {\n  return request({\n    url: `/api/smartdoc/categories/${id}/`,\n    method: 'delete'\n  })\n}\n\n/**\n * 获取文档相关文档（上下文感知）\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象\n */\nexport function getRelatedDocuments(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/related_documents/`,\n    method: 'get'\n  })\n}\n\n/**\n * 生成文档相关文档（上下文感知）\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象\n */\nexport function generateRelatedDocuments(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/generate_related/`,\n    method: 'post'\n  })\n} \n\n/**\n * AI生成文档\n * @param {Object} data - {title, requirement, category_id, doc_type}\n * @returns {Promise} Promise对象，返回{id, title}\n */\nexport function aiGenerateDocument(data) {\n  return request({\n    url: '/api/smartdoc/ai_generate/',\n    method: 'post',\n    data,\n    timeout: 180000 // 3分钟，防止AI生成超时\n  })\n} \n\n/**\n * AI内容扩写\n * @param {number} id - 文档ID\n * @param {Object} data - 扩写参数，如{selection, length}\n * @returns {Promise} Promise对象\n */\nexport function expandContent(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/expand_content/`,\n    method: 'post',\n    data,\n    timeout: 120000 // 2分钟，防止AI生成超时\n  })\n}\n\n/**\n * AI文本润色\n * @param {number} id - 文档ID\n * @param {Object} data - 润色参数，如{selection, style}\n * @returns {Promise} Promise对象\n */\nexport function polishText(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/polish_text/`,\n    method: 'post',\n    data,\n    timeout: 120000 // 2分钟，防止AI生成超时\n  })\n}\n\n/**\n * AI语法纠错\n * @param {number} id - 文档ID\n * @param {Object} data - 纠错参数，如{selection}\n * @returns {Promise} Promise对象\n */\nexport function grammarCheck(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/grammar_check/`,\n    method: 'post',\n    data,\n    timeout: 120000 // 2分钟，防止AI生成超时\n  }).then(res => res.data)\n}\n\n/**\n * AI多语言翻译\n * @param {number} id - 文档ID\n * @param {Object} data - { selection, target_lang }\n * @returns {Promise} Promise对象\n */\nexport function translateText(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/translate/`,\n    method: 'post',\n    data,\n    timeout: 120000\n  }).then(res => res.data)\n}\n\n/**\n * 文档智能问答\n * @param {number} id - 文档ID\n * @param {Object} data - { question, context }\n * @returns {Promise} Promise对象\n */\nexport function docQa(id, data) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/qa/`,\n    method: 'post',\n    data,\n    timeout: 120000\n  }).then(res => res.data)\n}\n\n/**\n * 导出文档为PDF文件\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象，返回Blob\n */\nexport function exportDocumentAsPdf(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/export/pdf/`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\n/**\n * 导出文档为Word文件\n * @param {number} id - 文档ID\n * @returns {Promise} Promise对象，返回Blob\n */\nexport function exportDocumentAsWord(id) {\n  return request({\n    url: `/api/smartdoc/documents/${id}/export/word/`,\n    method: 'get',\n    responseType: 'blob'\n  })\n}\n\n/**\n * 导入Word文档\n * @param {FormData} formData - 包含Word文件的FormData对象\n * @returns {Promise} Promise对象\n */\nexport function importWordDocument(formData) {\n  return request({\n    url: '/api/smartdoc/documents/import/word/',\n    method: 'post',\n    data: formData,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    timeout: 60000 // 60秒超时\n  })\n} ","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n"],"sourceRoot":""}