{"version":3,"sources":["webpack:///./src/api/admin.js","webpack:///./src/views/admin/DepartmentManagement.vue?2791","webpack:///./src/views/admin/DepartmentManagement.vue","webpack:///./src/views/admin/DepartmentManagement.vue?5ee0"],"names":["api","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","getDashboardData","get","getDashboardAnalysis","chartTitle","chartData","post","chart_title","chart_data","getUsers","params","createUser","data","updateUser","id","patch","deleteUser","delete","getCompanies","createCompany","updateCompany","deleteCompany","getDepartments","createDepartment","updateDepartment","deleteDepartment","getSmartDocs","getSmartDocDetail","deleteSmartDoc","getContracts","getContractDetail","deleteContract","getContractTemplates","getContractTemplate","createContractTemplate","updateContractTemplate","deleteContractTemplate","getKnowledgeCategories","createKnowledgeCategory","updateKnowledgeCategory","deleteKnowledgeCategory","getKnowledgeBases","getKnowledgeBaseDetail","createKnowledgeBase","formData","FormData","key","undefined","append","updateKnowledgeBase","original_file","File","deleteKnowledgeBase","getKnowledgeBuildStatus","buildKnowledgeForCompanies","companyIds","company_ids","departments","ref","companies","companyUsers","loading","searchQuery","total","pagination","reactive","page","pageSize","isModalOpen","currentItem","itemForm","searchTimeout","fetchDepartments","async","value","search","page_size","response","adminApi","results","count","console","ElMessage","debouncedFetchDepartments","clearTimeout","setTimeout","fetchCompaniesForSelect","all","fetchUsersForCompany","companyId","company_id","onCompanyChange","manager","openModal","item","company","managerId","some","u","name","description","closeModal","_itemForm$value","resetFields","saveItem","validate","valid","payload","success","confirmDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","then","catch","info","handleSizeChange","val","handleCurrentChange","onMounted","__exports__"],"mappings":"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","file":"js/chunk-7ca9e3e2.b6115a09.js","sourcesContent":["import axios from 'axios';\n\n// 确保使用与 auth.js 中相同的 axios 实例或配置\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api/admin',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 添加请求拦截器以附加JWT令牌\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// 管理员相关API\nexport default {\n  // 获取仪表盘所有数据\n  getDashboardData() {\n    return api.get('/dashboard/');\n  },\n\n  // 获取仪表盘图表的AI分析\n  getDashboardAnalysis(chartTitle, chartData) {\n    return api.post('/dashboard/analysis/', {\n      chart_title: chartTitle,\n      chart_data: chartData,\n    });\n  },\n\n  // 获取用户列表 (支持分页和搜索)\n  getUsers(params) {\n    return api.get('/users/', { params });\n  },\n\n  // 创建新用户\n  createUser(data) {\n    return api.post('/users/', data);\n  },\n\n  // 更新用户信息\n  updateUser(id, data) {\n    return api.patch(`/users/${id}/`, data);\n  },\n\n  // 删除用户\n  deleteUser(id) {\n    return api.delete(`/users/${id}/`);\n  },\n\n  // 公司管理\n  getCompanies(params) {\n    return api.get('/companies/', { params });\n  },\n  createCompany(data) {\n    return api.post('/companies/', data);\n  },\n  updateCompany(id, data) {\n    return api.patch(`/companies/${id}/`, data);\n  },\n  deleteCompany(id) {\n    return api.delete(`/companies/${id}/`);\n  },\n\n  // 部门管理\n  getDepartments(params) {\n    return api.get('/departments/', { params });\n  },\n  createDepartment(data) {\n    return api.post('/departments/', data);\n  },\n  updateDepartment(id, data) {\n    return api.patch(`/departments/${id}/`, data);\n  },\n  deleteDepartment(id) {\n    return api.delete(`/departments/${id}/`);\n  },\n\n  // 获取智能文档\n  getSmartDocs(params) {\n    return api.get('/smart-docs/', { params });\n  },\n\n  // 获取智能文档详情\n  getSmartDocDetail(id) {\n    return api.get(`/smart-docs/${id}/`);\n  },\n\n  // 删除智能文档\n  deleteSmartDoc(id) {\n    return api.delete(`/smart-docs/${id}/`);\n  },\n\n  // 获取合同列表\n  getContracts(params) {\n    return api.get('/contracts/', { params });\n  },\n\n  // 获取合同详情\n  getContractDetail(id) {\n    return api.get(`/contracts/${id}/`);\n  },\n\n  // 删除合同\n  deleteContract(id) {\n    return api.delete(`/contracts/${id}/`);\n  },\n\n  // Contract Templates\n  getContractTemplates() {\n    return api.get('/contract-templates/');\n  },\n  getContractTemplate(id) {\n    return api.get(`/contract-templates/${id}/`);\n  },\n  createContractTemplate(data) {\n    return api.post('/contract-templates/', data);\n  },\n  updateContractTemplate(id, data) {\n    return api.patch(`/contract-templates/${id}/`, data);\n  },\n  deleteContractTemplate(id) {\n    return api.delete(`/contract-templates/${id}/`);\n  },\n\n  // Knowledge Base Categories\n  getKnowledgeCategories(params) {\n    return api.get('/knowledge-categories/', { params });\n  },\n  createKnowledgeCategory(data) {\n    return api.post('/knowledge-categories/', data);\n  },\n  updateKnowledgeCategory(id, data) {\n    return api.patch(`/knowledge-categories/${id}/`, data);\n  },\n  deleteKnowledgeCategory(id) {\n    return api.delete(`/knowledge-categories/${id}/`);\n  },\n\n  // Knowledge Base Articles\n  getKnowledgeBases(params) {\n    return api.get('/knowledge-bases/', { params });\n  },\n  getKnowledgeBaseDetail(id) {\n    return api.get(`/knowledge-bases/${id}/`);\n  },\n  createKnowledgeBase(data) {\n    const formData = new FormData();\n    for (const key in data) {\n      if (data[key] !== null && data[key] !== undefined) {\n        formData.append(key, data[key]);\n      }\n    }\n    return api.post('/knowledge-bases/', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n  },\n  updateKnowledgeBase(id, data) {\n    const formData = new FormData();\n    for (const key in data) {\n      // 避免将文件对象作为普通字段附加\n      if (key !== 'original_file' && data[key] !== null && data[key] !== undefined) {\n        formData.append(key, data[key]);\n      }\n    }\n    // 仅当存在新文件时才附加文件\n    if (data.original_file instanceof File) {\n      formData.append('original_file', data.original_file);\n    }\n    return api.patch(`/knowledge-bases/${id}/`, formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n  },\n  deleteKnowledgeBase(id) {\n    return api.delete(`/knowledge-bases/${id}/`);\n  },\n  \n  // Knowledge Base Building\n  getKnowledgeBuildStatus() {\n    return api.get('/knowledge/build/');\n  },\n  buildKnowledgeForCompanies(companyIds) {\n    return api.post('/knowledge/build/', { company_ids: companyIds });\n  },\n};","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DepartmentManagement.vue?vue&type=style&index=0&id=09b89ca8&scoped=true&lang=css\"","<template>\n  <div class=\"management-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <div class=\"header-left\">\n            <el-icon class=\"header-icon\"><Tickets /></el-icon>\n            <span>部门管理</span>\n          </div>\n          <div class=\"header-right\">\n            <el-input\n              v-model=\"searchQuery\"\n              placeholder=\"搜索部门...\"\n              clearable\n              @clear=\"fetchDepartments\"\n              @input=\"debouncedFetchDepartments\"\n              class=\"search-input\"\n            >\n              <template #append>\n                <el-button :icon=\"Search\" />\n              </template>\n            </el-input>\n            <el-button type=\"primary\" :icon=\"Plus\" @click=\"openModal()\">添加部门</el-button>\n          </div>\n        </div>\n      </template>\n      <div class=\"table-container\">\n        <el-table :data=\"departments\" v-loading=\"loading\" style=\"width: 100%\">\n          <el-table-column type=\"index\" label=\"序号\" width=\"60\" />\n          <el-table-column prop=\"name\" label=\"部门名称\" sortable />\n          <el-table-column prop=\"company_name\" label=\"所属公司\" sortable />\n          <el-table-column prop=\"manager_name\" label=\"部门主管\" sortable>\n             <template #default=\"scope\">\n                {{ scope.row.manager_name || '无' }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"description\" label=\"描述\" />\n          <el-table-column label=\"操作\" width=\"120\">\n            <template #default=\"scope\">\n              <el-button text type=\"primary\" size=\"small\" @click=\"openModal(scope.row)\">编辑</el-button>\n              <el-button text type=\"danger\" size=\"small\" @click=\"confirmDelete(scope.row)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n       <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"pagination.page\"\n          v-model:page-size=\"pagination.pageSize\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n\n     <!-- 添加/编辑模态框 -->\n      <el-dialog v-model=\"isModalOpen\" :title=\"currentItem.id ? '编辑部门' : '添加部门'\" width=\"500px\">\n        <el-form :model=\"currentItem\" ref=\"itemForm\" label-width=\"80px\">\n          <el-form-item label=\"部门名称\" prop=\"name\" :rules=\"[{ required: true, message: '请输入部门名称' }]\">\n            <el-input v-model=\"currentItem.name\" />\n          </el-form-item>\n          <el-form-item label=\"所属公司\" prop=\"company\" :rules=\"[{ required: true, message: '请选择公司' }]\">\n             <el-select v-model=\"currentItem.company\" placeholder=\"请选择\" @change=\"onCompanyChange\">\n              <el-option v-for=\"company in companies\" :key=\"company.id\" :label=\"company.name\" :value=\"company.id\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item v-if=\"currentItem.company\" label=\"部门主管\" prop=\"manager\">\n             <el-select v-model=\"currentItem.manager\" placeholder=\"请选择\" :disabled=\"!currentItem.company\" clearable>\n               <el-option label=\"-- 不指定 --\" :value=\"null\" />\n              <el-option \n                v-for=\"user in companyUsers\" \n                :key=\"user.id\" \n                :label=\"user.name || user.username\" \n                :value=\"user.id\"\n               />\n             </el-select>\n          </el-form-item>\n          <el-form-item label=\"描述\" prop=\"description\">\n            <el-input v-model=\"currentItem.description\" type=\"textarea\" />\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"closeModal\">取消</el-button>\n            <el-button type=\"primary\" @click=\"saveItem\">保存</el-button>\n          </span>\n        </template>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue';\nimport adminApi from '@/api/admin';\nimport { ElMessage, ElMessageBox, ElCard, ElIcon, ElInput, ElButton, ElTable, ElTableColumn, ElPagination, ElDialog, ElForm, ElFormItem, ElSelect, ElOption } from 'element-plus';\nimport { Tickets, Search, Plus } from '@element-plus/icons-vue';\n\nconst departments = ref([]);\nconst companies = ref([]);\nconst companyUsers = ref([]);\nconst loading = ref(true);\nconst searchQuery = ref('');\nconst total = ref(0);\nconst pagination = reactive({\n  page: 1,\n  pageSize: 10,\n});\nconst isModalOpen = ref(false);\nconst currentItem = ref({});\nconst itemForm = ref(null);\nlet searchTimeout = null;\n\nconst fetchDepartments = async () => {\n  loading.value = true;\n  try {\n    const params = { \n      search: searchQuery.value,\n      page: pagination.page,\n      page_size: pagination.pageSize,\n    };\n    const response = await adminApi.getDepartments(params);\n    departments.value = response.data.results;\n    total.value = response.data.count;\n  } catch (error) {\n    console.error(\"获取部门列表失败:\", error);\n    ElMessage.error('获取部门列表失败');\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst debouncedFetchDepartments = () => {\n  clearTimeout(searchTimeout);\n  searchTimeout = setTimeout(() => {\n    pagination.page = 1;\n    fetchDepartments();\n  }, 300);\n};\n    \nconst fetchCompaniesForSelect = async () => {\n  try {\n    const response = await adminApi.getCompanies({ all: 'true' });\n    companies.value = response.data;\n  } catch (error) {\n    console.error(\"获取公司列表失败:\", error);\n  }\n};\n\nconst fetchUsersForCompany = async (companyId) => {\n  if (!companyId) {\n    companyUsers.value = [];\n    return;\n  }\n  try {\n    const response = await adminApi.getUsers({ all: 'true', company_id: companyId });\n    companyUsers.value = response.data;\n  } catch (error) {\n    console.error(`获取公司 ${companyId} 的用户列表失败:`, error);\n    companyUsers.value = [];\n  }\n};\n    \nconst onCompanyChange = async (companyId) => {\n  currentItem.value.manager = null;\n  await fetchUsersForCompany(companyId);\n};\n\nconst openModal = async (item = {}) => {\n  await fetchCompaniesForSelect();\n  companyUsers.value = []; // Reset user list initially\n\n  if (item && item.id) {\n    currentItem.value = { ...item };\n    if (item.company) {\n      await fetchUsersForCompany(item.company);\n\n      const managerId = currentItem.value.manager;\n      // If manager is from a different company, reset it\n      if (managerId && !companyUsers.value.some(u => u.id === managerId)) {\n        currentItem.value.manager = null;\n      }\n    }\n  } else {\n    currentItem.value = {\n      name: '',\n      description: '',\n      company: null,\n      manager: null\n    };\n  }\n  isModalOpen.value = true;\n};\n\nconst closeModal = () => {\n  isModalOpen.value = false;\n  itemForm.value?.resetFields();\n  companyUsers.value = [];\n};\n\nconst saveItem = async () => {\n  if (!itemForm.value) return;\n  await itemForm.value.validate(async (valid) => {\n    if (valid) {\n      try {\n        const payload = { ...currentItem.value };\n        // Ensure manager is null, not empty string, if not selected\n        if (payload.manager === '') {\n            payload.manager = null;\n        }\n\n        if (payload.id) {\n          await adminApi.updateDepartment(payload.id, payload);\n        } else {\n          await adminApi.createDepartment(payload);\n        }\n        closeModal();\n        fetchDepartments();\n        ElMessage.success('部门信息保存成功！');\n      } catch (error) {\n        console.error(\"保存部门失败:\", error);\n        ElMessage.error('保存部门失败，请稍后重试');\n      }\n    }\n  });\n};\n\nconst confirmDelete = (item) => {\n  ElMessageBox.confirm(\n    `确定要删除部门【${item.name}】吗？这会将部门内的所有员工的部门重置为空。`,\n    '警告',\n    {\n      confirmButtonText: '确定删除',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }\n  ).then(async () => {\n    try {\n      await adminApi.deleteDepartment(item.id);\n      ElMessage.success('部门删除成功');\n      fetchDepartments();\n    } catch (error) {\n      ElMessage.error('删除失败，请稍后重试');\n      console.error(\"删除部门失败:\", error);\n    }\n  }).catch(() => {\n    ElMessage.info('已取消删除');\n  });\n};\n\nconst handleSizeChange = (val) => {\n  pagination.pageSize = val;\n  fetchDepartments();\n};\n\nconst handleCurrentChange = (val) => {\n  pagination.page = val;\n  fetchDepartments();\n};\n\nonMounted(fetchDepartments);\n</script>\n\n<style scoped>\n@import './shared-styles.css';\n\n.management-container {\n  padding: 20px;\n}\n</style> ","import script from \"./DepartmentManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DepartmentManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DepartmentManagement.vue?vue&type=style&index=0&id=09b89ca8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\18083\\\\Desktop\\\\CCIT\\\\office\\\\smart-office\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09b89ca8\"]])\n\nexport default __exports__"],"sourceRoot":""}